if("undefined"==typeof jQuery)throw new Error("Bootstrap's JavaScript requires jQuery");!function(){"use strict";var t=jQuery.fn.jquery.split(" ")[0].split(".");if(t[0]<2&&t[1]<9||1==t[0]&&9==t[1]&&t[2]<1)throw new Error("Bootstrap's JavaScript requires jQuery version 1.9.1 or higher")}(),function(o){"use strict";o.fn.emulateTransitionEnd=function(t){var e=!1,i=this;o(this).one("bsTransitionEnd",function(){e=!0});return setTimeout(function(){e||o(i).trigger(o.support.transition.end)},t),this},o(function(){o.support.transition=function(){var t,e=document.createElement("bootstrap"),i={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"};for(t in i)if(void 0!==e.style[t])return{end:i[t]};return!1}(),o.support.transition&&(o.event.special.bsTransitionEnd={bindType:o.support.transition.end,delegateType:o.support.transition.end,handle:function(t){return o(t.target).is(this)?t.handleObj.handler.apply(this,arguments):void 0}})})}(jQuery),function(s){"use strict";function a(t){s(t).on("click",e,this.close)}var e='[data-dismiss="alert"]';a.VERSION="3.3.4",a.TRANSITION_DURATION=150,a.prototype.close=function(t){function e(){n.detach().trigger("closed.bs.alert").remove()}var i=s(this),o=i.attr("data-target");o||(o=(o=i.attr("href"))&&o.replace(/.*(?=#[^\s]*$)/,""));var n=s(o);t&&t.preventDefault(),n.length||(n=i.closest(".alert")),n.trigger(t=s.Event("close.bs.alert")),t.isDefaultPrevented()||(n.removeClass("in"),s.support.transition&&n.hasClass("fade")?n.one("bsTransitionEnd",e).emulateTransitionEnd(a.TRANSITION_DURATION):e())};var t=s.fn.alert;s.fn.alert=function(i){return this.each(function(){var t=s(this),e=t.data("bs.alert");e||t.data("bs.alert",e=new a(this)),"string"==typeof i&&e[i].call(t)})},s.fn.alert.Constructor=a,s.fn.alert.noConflict=function(){return s.fn.alert=t,this},s(document).on("click.bs.alert.data-api",e,a.prototype.close)}(jQuery),function(s){"use strict";function i(o){return this.each(function(){var t=s(this),e=t.data("bs.button"),i="object"==typeof o&&o;e||t.data("bs.button",e=new n(this,i)),"toggle"==o?e.toggle():o&&e.setState(o)})}var n=function(t,e){this.$element=s(t),this.options=s.extend({},n.DEFAULTS,e),this.isLoading=!1};n.VERSION="3.3.4",n.DEFAULTS={loadingText:"loading..."},n.prototype.setState=function(t){var e="disabled",i=this.$element,o=i.is("input")?"val":"html",n=i.data();t+="Text",null==n.resetText&&i.data("resetText",i[o]()),setTimeout(s.proxy(function(){i[o](null==n[t]?this.options[t]:n[t]),"loadingText"==t?(this.isLoading=!0,i.addClass(e).attr(e,e)):this.isLoading&&(this.isLoading=!1,i.removeClass(e).removeAttr(e))},this),0)},n.prototype.toggle=function(){var t,e=!0,i=this.$element.closest('[data-toggle="buttons"]');i.length?("radio"==(t=this.$element.find("input")).prop("type")&&(t.prop("checked")&&this.$element.hasClass("active")?e=!1:i.find(".active").removeClass("active")),e&&t.prop("checked",!this.$element.hasClass("active")).trigger("change")):this.$element.attr("aria-pressed",!this.$element.hasClass("active")),e&&this.$element.toggleClass("active")};var t=s.fn.button;s.fn.button=i,s.fn.button.Constructor=n,s.fn.button.noConflict=function(){return s.fn.button=t,this},s(document).on("click.bs.button.data-api",'[data-toggle^="button"]',function(t){var e=s(t.target);e.hasClass("btn")||(e=e.closest(".btn")),i.call(e,"toggle"),t.preventDefault()}).on("focus.bs.button.data-api blur.bs.button.data-api",'[data-toggle^="button"]',function(t){s(t.target).closest(".btn").toggleClass("focus",/^focus(in)?$/.test(t.type))})}(jQuery),function(p){"use strict";function a(n){return this.each(function(){var t=p(this),e=t.data("bs.carousel"),i=p.extend({},c.DEFAULTS,t.data(),"object"==typeof n&&n),o="string"==typeof n?n:i.slide;e||t.data("bs.carousel",e=new c(this,i)),"number"==typeof n?e.to(n):o?e[o]():i.interval&&e.pause().cycle()})}function c(t,e){this.$element=p(t),this.$indicators=this.$element.find(".carousel-indicators"),this.options=e,this.paused=null,this.sliding=null,this.interval=null,this.$active=null,this.$items=null,this.options.keyboard&&this.$element.on("keydown.bs.carousel",p.proxy(this.keydown,this)),"hover"!=this.options.pause||"ontouchstart"in document.documentElement||this.$element.on("mouseenter.bs.carousel",p.proxy(this.pause,this)).on("mouseleave.bs.carousel",p.proxy(this.cycle,this))}c.VERSION="3.3.4",c.TRANSITION_DURATION=600,c.DEFAULTS={interval:5e3,pause:"hover",wrap:!0,keyboard:!0},c.prototype.keydown=function(t){if(!/input|textarea/i.test(t.target.tagName)){switch(t.which){case 37:this.prev();break;case 39:this.next();break;default:return}t.preventDefault()}},c.prototype.cycle=function(t){return t||(this.paused=!1),this.interval&&clearInterval(this.interval),this.options.interval&&!this.paused&&(this.interval=setInterval(p.proxy(this.next,this),this.options.interval)),this},c.prototype.getItemIndex=function(t){return this.$items=t.parent().children(".item"),this.$items.index(t||this.$active)},c.prototype.getItemForDirection=function(t,e){var i=this.getItemIndex(e);if(("prev"==t&&0===i||"next"==t&&i==this.$items.length-1)&&!this.options.wrap)return e;var o=(i+("prev"==t?-1:1))%this.$items.length;return this.$items.eq(o)},c.prototype.to=function(t){var e=this,i=this.getItemIndex(this.$active=this.$element.find(".item.active"));return t>this.$items.length-1||t<0?void 0:this.sliding?this.$element.one("slid.bs.carousel",function(){e.to(t)}):i==t?this.pause().cycle():this.slide(i<t?"next":"prev",this.$items.eq(t))},c.prototype.pause=function(t){return t||(this.paused=!0),this.$element.find(".next, .prev").length&&p.support.transition&&(this.$element.trigger(p.support.transition.end),this.cycle(!0)),this.interval=clearInterval(this.interval),this},c.prototype.next=function(){return this.sliding?void 0:this.slide("next")},c.prototype.prev=function(){return this.sliding?void 0:this.slide("prev")},c.prototype.slide=function(t,e){var i=this.$element.find(".item.active"),o=e||this.getItemForDirection(t,i),n=this.interval,s="next"==t?"left":"right",a=this;if(o.hasClass("active"))return this.sliding=!1;var r,l=o[0],h=p.Event("slide.bs.carousel",{relatedTarget:l,direction:s});if(this.$element.trigger(h),!h.isDefaultPrevented()){this.sliding=!0,n&&this.pause(),this.$indicators.length&&(this.$indicators.find(".active").removeClass("active"),(r=p(this.$indicators.children()[this.getItemIndex(o)]))&&r.addClass("active"));var d=p.Event("slid.bs.carousel",{relatedTarget:l,direction:s});return p.support.transition&&this.$element.hasClass("slide")?(o.addClass(t),o[0].offsetWidth,i.addClass(s),o.addClass(s),i.one("bsTransitionEnd",function(){o.removeClass([t,s].join(" ")).addClass("active"),i.removeClass(["active",s].join(" ")),a.sliding=!1,setTimeout(function(){a.$element.trigger(d)},0)}).emulateTransitionEnd(c.TRANSITION_DURATION)):(i.removeClass("active"),o.addClass("active"),this.sliding=!1,this.$element.trigger(d)),n&&this.cycle(),this}};var t=p.fn.carousel;p.fn.carousel=a,p.fn.carousel.Constructor=c,p.fn.carousel.noConflict=function(){return p.fn.carousel=t,this};function e(t){var e,i,o,n=p(this),s=p(n.attr("data-target")||(e=n.attr("href"))&&e.replace(/.*(?=#[^\s]+$)/,""));s.hasClass("carousel")&&(i=p.extend({},s.data(),n.data()),(o=n.attr("data-slide-to"))&&(i.interval=!1),a.call(s,i),o&&s.data("bs.carousel").to(o),t.preventDefault())}p(document).on("click.bs.carousel.data-api","[data-slide]",e).on("click.bs.carousel.data-api","[data-slide-to]",e),p(window).on("load",function(){p('[data-ride="carousel"]').each(function(){var t=p(this);a.call(t,t.data())})})}(jQuery),function(a){"use strict";function n(t){var e,i=t.attr("data-target")||(e=t.attr("href"))&&e.replace(/.*(?=#[^\s]+$)/,"");return a(i)}function r(o){return this.each(function(){var t=a(this),e=t.data("bs.collapse"),i=a.extend({},l.DEFAULTS,t.data(),"object"==typeof o&&o);!e&&i.toggle&&/show|hide/.test(o)&&(i.toggle=!1),e||t.data("bs.collapse",e=new l(this,i)),"string"==typeof o&&e[o]()})}var l=function(t,e){this.$element=a(t),this.options=a.extend({},l.DEFAULTS,e),this.$trigger=a('[data-toggle="collapse"][href="#'+t.id+'"],[data-toggle="collapse"][data-target="#'+t.id+'"]'),this.transitioning=null,this.options.parent?this.$parent=this.getParent():this.addAriaAndCollapsedClass(this.$element,this.$trigger),this.options.toggle&&this.toggle()};l.VERSION="3.3.4",l.TRANSITION_DURATION=350,l.DEFAULTS={toggle:!0},l.prototype.dimension=function(){return this.$element.hasClass("width")?"width":"height"},l.prototype.show=function(){if(!this.transitioning&&!this.$element.hasClass("in")){var t,e=this.$parent&&this.$parent.children(".panel").children(".in, .collapsing");if(!(e&&e.length&&((t=e.data("bs.collapse"))&&t.transitioning))){var i=a.Event("show.bs.collapse");if(this.$element.trigger(i),!i.isDefaultPrevented()){e&&e.length&&(r.call(e,"hide"),t||e.data("bs.collapse",null));var o=this.dimension();this.$element.removeClass("collapse").addClass("collapsing")[o](0).attr("aria-expanded",!0),this.$trigger.removeClass("collapsed").attr("aria-expanded",!0),this.transitioning=1;var n=function(){this.$element.removeClass("collapsing").addClass("collapse in")[o](""),this.transitioning=0,this.$element.trigger("shown.bs.collapse")};if(!a.support.transition)return n.call(this);var s=a.camelCase(["scroll",o].join("-"));this.$element.one("bsTransitionEnd",a.proxy(n,this)).emulateTransitionEnd(l.TRANSITION_DURATION)[o](this.$element[0][s])}}}},l.prototype.hide=function(){if(!this.transitioning&&this.$element.hasClass("in")){var t=a.Event("hide.bs.collapse");if(this.$element.trigger(t),!t.isDefaultPrevented()){var e=this.dimension();this.$element[e](this.$element[e]())[0].offsetHeight,this.$element.addClass("collapsing").removeClass("collapse in").attr("aria-expanded",!1),this.$trigger.addClass("collapsed").attr("aria-expanded",!1),this.transitioning=1;var i=function(){this.transitioning=0,this.$element.removeClass("collapsing").addClass("collapse").trigger("hidden.bs.collapse")};return a.support.transition?void this.$element[e](0).one("bsTransitionEnd",a.proxy(i,this)).emulateTransitionEnd(l.TRANSITION_DURATION):i.call(this)}}},l.prototype.toggle=function(){this[this.$element.hasClass("in")?"hide":"show"]()},l.prototype.getParent=function(){return a(this.options.parent).find('[data-toggle="collapse"][data-parent="'+this.options.parent+'"]').each(a.proxy(function(t,e){var i=a(e);this.addAriaAndCollapsedClass(n(i),i)},this)).end()},l.prototype.addAriaAndCollapsedClass=function(t,e){var i=t.hasClass("in");t.attr("aria-expanded",i),e.toggleClass("collapsed",!i).attr("aria-expanded",i)};var t=a.fn.collapse;a.fn.collapse=r,a.fn.collapse.Constructor=l,a.fn.collapse.noConflict=function(){return a.fn.collapse=t,this},a(document).on("click.bs.collapse.data-api",'[data-toggle="collapse"]',function(t){var e=a(this);e.attr("data-target")||t.preventDefault();var i=n(e),o=i.data("bs.collapse")?"toggle":e.data();r.call(i,o)})}(jQuery),function(r){"use strict";function s(o){o&&3===o.which||(r(".dropdown-backdrop").remove(),r(h).each(function(){var t=r(this),e=l(t),i={relatedTarget:this};e.hasClass("open")&&(e.trigger(o=r.Event("hide.bs.dropdown",i)),o.isDefaultPrevented()||(t.attr("aria-expanded","false"),e.removeClass("open").trigger("hidden.bs.dropdown",i)))}))}function l(t){var e=t.attr("data-target");e||(e=(e=t.attr("href"))&&/#[A-Za-z]/.test(e)&&e.replace(/.*(?=#[^\s]*$)/,""));var i=e&&r(e);return i&&i.length?i:t.parent()}function o(t){r(t).on("click.bs.dropdown",this.toggle)}var h='[data-toggle="dropdown"]';o.VERSION="3.3.4",o.prototype.toggle=function(t){var e=r(this);if(!e.is(".disabled, :disabled")){var i=l(e),o=i.hasClass("open");if(s(),!o){"ontouchstart"in document.documentElement&&!i.closest(".navbar-nav").length&&r('<div class="dropdown-backdrop"/>').insertAfter(r(this)).on("click",s);var n={relatedTarget:this};if(i.trigger(t=r.Event("show.bs.dropdown",n)),t.isDefaultPrevented())return;e.trigger("focus").attr("aria-expanded","true"),i.toggleClass("open").trigger("shown.bs.dropdown",n)}return!1}},o.prototype.keydown=function(t){if(/(38|40|27|32)/.test(t.which)&&!/input|textarea/i.test(t.target.tagName)){var e=r(this);if(t.preventDefault(),t.stopPropagation(),!e.is(".disabled, :disabled")){var i=l(e),o=i.hasClass("open");if(!o&&27!=t.which||o&&27==t.which)return 27==t.which&&i.find(h).trigger("focus"),e.trigger("click");var n,s=" li:not(.disabled):visible a",a=i.find('[role="menu"]'+s+', [role="listbox"]'+s);a.length&&(n=a.index(t.target),38==t.which&&0<n&&n--,40==t.which&&n<a.length-1&&n++,~n||(n=0),a.eq(n).trigger("focus"))}}};var t=r.fn.dropdown;r.fn.dropdown=function(i){return this.each(function(){var t=r(this),e=t.data("bs.dropdown");e||t.data("bs.dropdown",e=new o(this)),"string"==typeof i&&e[i].call(t)})},r.fn.dropdown.Constructor=o,r.fn.dropdown.noConflict=function(){return r.fn.dropdown=t,this},r(document).on("click.bs.dropdown.data-api",s).on("click.bs.dropdown.data-api",".dropdown form",function(t){t.stopPropagation()}).on("click.bs.dropdown.data-api",h,o.prototype.toggle).on("keydown.bs.dropdown.data-api",h,o.prototype.keydown).on("keydown.bs.dropdown.data-api",'[role="menu"]',o.prototype.keydown).on("keydown.bs.dropdown.data-api",'[role="listbox"]',o.prototype.keydown)}(jQuery),function(s){"use strict";function a(o,n){return this.each(function(){var t=s(this),e=t.data("bs.modal"),i=s.extend({},r.DEFAULTS,t.data(),"object"==typeof o&&o);e||t.data("bs.modal",e=new r(this,i)),"string"==typeof o?e[o](n):i.show&&e.show(n)})}function r(t,e){this.options=e,this.$body=s(document.body),this.$element=s(t),this.$dialog=this.$element.find(".modal-dialog"),this.$backdrop=null,this.isShown=null,this.originalBodyPad=null,this.scrollbarWidth=0,this.ignoreBackdropClick=!1,this.options.remote&&this.$element.find(".modal-content").load(this.options.remote,s.proxy(function(){this.$element.trigger("loaded.bs.modal")},this))}r.VERSION="3.3.4",r.TRANSITION_DURATION=300,r.BACKDROP_TRANSITION_DURATION=150,r.DEFAULTS={backdrop:!0,keyboard:!0,show:!0},r.prototype.toggle=function(t){return this.isShown?this.hide():this.show(t)},r.prototype.show=function(i){var o=this,t=s.Event("show.bs.modal",{relatedTarget:i});this.$element.trigger(t),this.isShown||t.isDefaultPrevented()||(this.isShown=!0,this.checkScrollbar(),this.setScrollbar(),this.$body.addClass("modal-open"),this.escape(),this.resize(),this.$element.on("click.dismiss.bs.modal",'[data-dismiss="modal"]',s.proxy(this.hide,this)),this.$dialog.on("mousedown.dismiss.bs.modal",function(){o.$element.one("mouseup.dismiss.bs.modal",function(t){s(t.target).is(o.$element)&&(o.ignoreBackdropClick=!0)})}),this.backdrop(function(){var t=s.support.transition&&o.$element.hasClass("fade");o.$element.parent().length||o.$element.appendTo(o.$body),o.$element.show().scrollTop(0),o.adjustDialog(),t&&o.$element[0].offsetWidth,o.$element.addClass("in").attr("aria-hidden",!1),o.enforceFocus();var e=s.Event("shown.bs.modal",{relatedTarget:i});t?o.$dialog.one("bsTransitionEnd",function(){o.$element.trigger("focus").trigger(e)}).emulateTransitionEnd(r.TRANSITION_DURATION):o.$element.trigger("focus").trigger(e)}))},r.prototype.hide=function(t){t&&t.preventDefault(),t=s.Event("hide.bs.modal"),this.$element.trigger(t),this.isShown&&!t.isDefaultPrevented()&&(this.isShown=!1,this.escape(),this.resize(),s(document).off("focusin.bs.modal"),this.$element.removeClass("in").attr("aria-hidden",!0).off("click.dismiss.bs.modal").off("mouseup.dismiss.bs.modal"),this.$dialog.off("mousedown.dismiss.bs.modal"),s.support.transition&&this.$element.hasClass("fade")?this.$element.one("bsTransitionEnd",s.proxy(this.hideModal,this)).emulateTransitionEnd(r.TRANSITION_DURATION):this.hideModal())},r.prototype.enforceFocus=function(){s(document).off("focusin.bs.modal").on("focusin.bs.modal",s.proxy(function(t){this.$element[0]===t.target||this.$element.has(t.target).length||this.$element.trigger("focus")},this))},r.prototype.escape=function(){this.isShown&&this.options.keyboard?this.$element.on("keydown.dismiss.bs.modal",s.proxy(function(t){27==t.which&&this.hide()},this)):this.isShown||this.$element.off("keydown.dismiss.bs.modal")},r.prototype.resize=function(){this.isShown?s(window).on("resize.bs.modal",s.proxy(this.handleUpdate,this)):s(window).off("resize.bs.modal")},r.prototype.hideModal=function(){var t=this;this.$element.hide(),this.backdrop(function(){t.$body.removeClass("modal-open"),t.resetAdjustments(),t.resetScrollbar(),t.$element.trigger("hidden.bs.modal")})},r.prototype.removeBackdrop=function(){this.$backdrop&&this.$backdrop.remove(),this.$backdrop=null},r.prototype.backdrop=function(t){var e,i=this,o=this.$element.hasClass("fade")?"fade":"";if(this.isShown&&this.options.backdrop){var n=s.support.transition&&o;if(this.$backdrop=s('<div class="modal-backdrop '+o+'" />').appendTo(this.$body),this.$element.on("click.dismiss.bs.modal",s.proxy(function(t){return this.ignoreBackdropClick?void(this.ignoreBackdropClick=!1):void(t.target===t.currentTarget&&("static"==this.options.backdrop?this.$element[0].focus():this.hide()))},this)),n&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass("in"),!t)return;n?this.$backdrop.one("bsTransitionEnd",t).emulateTransitionEnd(r.BACKDROP_TRANSITION_DURATION):t()}else{!this.isShown&&this.$backdrop?(this.$backdrop.removeClass("in"),e=function(){i.removeBackdrop(),t&&t()},s.support.transition&&this.$element.hasClass("fade")?this.$backdrop.one("bsTransitionEnd",e).emulateTransitionEnd(r.BACKDROP_TRANSITION_DURATION):e()):t&&t()}},r.prototype.handleUpdate=function(){this.adjustDialog()},r.prototype.adjustDialog=function(){var t=this.$element[0].scrollHeight>document.documentElement.clientHeight;this.$element.css({paddingLeft:!this.bodyIsOverflowing&&t?this.scrollbarWidth:"",paddingRight:this.bodyIsOverflowing&&!t?this.scrollbarWidth:""})},r.prototype.resetAdjustments=function(){this.$element.css({paddingLeft:"",paddingRight:""})},r.prototype.checkScrollbar=function(){var t,e=window.innerWidth;e||(e=(t=document.documentElement.getBoundingClientRect()).right-Math.abs(t.left)),this.bodyIsOverflowing=document.body.clientWidth<e,this.scrollbarWidth=this.measureScrollbar()},r.prototype.setScrollbar=function(){var t=parseInt(this.$body.css("padding-right")||0,10);this.originalBodyPad=document.body.style.paddingRight||"",this.bodyIsOverflowing&&this.$body.css("padding-right",t+this.scrollbarWidth)},r.prototype.resetScrollbar=function(){this.$body.css("padding-right",this.originalBodyPad)},r.prototype.measureScrollbar=function(){var t=document.createElement("div");t.className="modal-scrollbar-measure",this.$body.append(t);var e=t.offsetWidth-t.clientWidth;return this.$body[0].removeChild(t),e};var t=s.fn.modal;s.fn.modal=a,s.fn.modal.Constructor=r,s.fn.modal.noConflict=function(){return s.fn.modal=t,this},s(document).on("click.bs.modal.data-api",'[data-toggle="modal"]',function(t){var e=s(this),i=e.attr("href"),o=s(e.attr("data-target")||i&&i.replace(/.*(?=#[^\s]+$)/,"")),n=o.data("bs.modal")?"toggle":s.extend({remote:!/#/.test(i)&&i},o.data(),e.data());e.is("a")&&t.preventDefault(),o.one("show.bs.modal",function(t){t.isDefaultPrevented()||o.one("hidden.bs.modal",function(){e.is(":visible")&&e.trigger("focus")})}),a.call(o,n,this)})}(jQuery),function(m){"use strict";function v(t,e){this.type=null,this.options=null,this.enabled=null,this.timeout=null,this.hoverState=null,this.$element=null,this.init("tooltip",t,e)}v.VERSION="3.3.4",v.TRANSITION_DURATION=150,v.DEFAULTS={animation:!0,placement:"top",selector:!1,template:'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,container:!1,viewport:{selector:"body",padding:0}},v.prototype.init=function(t,e,i){if(this.enabled=!0,this.type=t,this.$element=m(e),this.options=this.getOptions(i),this.$viewport=this.options.viewport&&m(this.options.viewport.selector||this.options.viewport),this.$element[0]instanceof document.constructor&&!this.options.selector)throw new Error("`selector` option must be specified when initializing "+this.type+" on the window.document object!");for(var o=this.options.trigger.split(" "),n=o.length;n--;){var s,a,r=o[n];"click"==r?this.$element.on("click."+this.type,this.options.selector,m.proxy(this.toggle,this)):"manual"!=r&&(s="hover"==r?"mouseenter":"focusin",a="hover"==r?"mouseleave":"focusout",this.$element.on(s+"."+this.type,this.options.selector,m.proxy(this.enter,this)),this.$element.on(a+"."+this.type,this.options.selector,m.proxy(this.leave,this)))}this.options.selector?this._options=m.extend({},this.options,{trigger:"manual",selector:""}):this.fixTitle()},v.prototype.getDefaults=function(){return v.DEFAULTS},v.prototype.getOptions=function(t){return(t=m.extend({},this.getDefaults(),this.$element.data(),t)).delay&&"number"==typeof t.delay&&(t.delay={show:t.delay,hide:t.delay}),t},v.prototype.getDelegateOptions=function(){var i={},o=this.getDefaults();return this._options&&m.each(this._options,function(t,e){o[t]!=e&&(i[t]=e)}),i},v.prototype.enter=function(t){var e=t instanceof this.constructor?t:m(t.currentTarget).data("bs."+this.type);return e&&e.$tip&&e.$tip.is(":visible")?void(e.hoverState="in"):(e||(e=new this.constructor(t.currentTarget,this.getDelegateOptions()),m(t.currentTarget).data("bs."+this.type,e)),clearTimeout(e.timeout),e.hoverState="in",e.options.delay&&e.options.delay.show?void(e.timeout=setTimeout(function(){"in"==e.hoverState&&e.show()},e.options.delay.show)):e.show())},v.prototype.leave=function(t){var e=t instanceof this.constructor?t:m(t.currentTarget).data("bs."+this.type);return e||(e=new this.constructor(t.currentTarget,this.getDelegateOptions()),m(t.currentTarget).data("bs."+this.type,e)),clearTimeout(e.timeout),e.hoverState="out",e.options.delay&&e.options.delay.hide?void(e.timeout=setTimeout(function(){"out"==e.hoverState&&e.hide()},e.options.delay.hide)):e.hide()},v.prototype.show=function(){var t=m.Event("show.bs."+this.type);if(this.hasContent()&&this.enabled){this.$element.trigger(t);var e=m.contains(this.$element[0].ownerDocument.documentElement,this.$element[0]);if(t.isDefaultPrevented()||!e)return;var i=this,o=this.tip(),n=this.getUID(this.type);this.setContent(),o.attr("id",n),this.$element.attr("aria-describedby",n),this.options.animation&&o.addClass("fade");var s="function"==typeof this.options.placement?this.options.placement.call(this,o[0],this.$element[0]):this.options.placement,a=/\s?auto?\s?/i,r=a.test(s);r&&(s=s.replace(a,"")||"top"),o.detach().css({top:0,left:0,display:"block"}).addClass(s).data("bs."+this.type,this),this.options.container?o.appendTo(this.options.container):o.insertAfter(this.$element);var l,h,d,p=this.getPosition(),c=o[0].offsetWidth,f=o[0].offsetHeight;r&&(l=s,h=this.options.container?m(this.options.container):this.$element.parent(),d=this.getPosition(h),s="bottom"==s&&p.bottom+f>d.bottom?"top":"top"==s&&p.top-f<d.top?"bottom":"right"==s&&p.right+c>d.width?"left":"left"==s&&p.left-c<d.left?"right":s,o.removeClass(l).addClass(s));var u=this.getCalculatedOffset(s,p,c,f);this.applyPlacement(u,s);var g=function(){var t=i.hoverState;i.$element.trigger("shown.bs."+i.type),i.hoverState=null,"out"==t&&i.leave(i)};m.support.transition&&this.$tip.hasClass("fade")?o.one("bsTransitionEnd",g).emulateTransitionEnd(v.TRANSITION_DURATION):g()}},v.prototype.applyPlacement=function(t,e){var i=this.tip(),o=i[0].offsetWidth,n=i[0].offsetHeight,s=parseInt(i.css("margin-top"),10),a=parseInt(i.css("margin-left"),10);isNaN(s)&&(s=0),isNaN(a)&&(a=0),t.top=t.top+s,t.left=t.left+a,m.offset.setOffset(i[0],m.extend({using:function(t){i.css({top:Math.round(t.top),left:Math.round(t.left)})}},t),0),i.addClass("in");var r=i[0].offsetWidth,l=i[0].offsetHeight;"top"==e&&l!=n&&(t.top=t.top+n-l);var h=this.getViewportAdjustedDelta(e,t,r,l);h.left?t.left+=h.left:t.top+=h.top;var d=/top|bottom/.test(e),p=d?2*h.left-o+r:2*h.top-n+l,c=d?"offsetWidth":"offsetHeight";i.offset(t),this.replaceArrow(p,i[0][c],d)},v.prototype.replaceArrow=function(t,e,i){this.arrow().css(i?"left":"top",50*(1-t/e)+"%").css(i?"top":"left","")},v.prototype.setContent=function(){var t=this.tip(),e=this.getTitle();t.find(".tooltip-inner")[this.options.html?"html":"text"](e),t.removeClass("fade in top bottom left right")},v.prototype.hide=function(t){function e(){"in"!=i.hoverState&&o.detach(),i.$element.removeAttr("aria-describedby").trigger("hidden.bs."+i.type),t&&t()}var i=this,o=m(this.$tip),n=m.Event("hide.bs."+this.type);return this.$element.trigger(n),n.isDefaultPrevented()?void 0:(o.removeClass("in"),m.support.transition&&o.hasClass("fade")?o.one("bsTransitionEnd",e).emulateTransitionEnd(v.TRANSITION_DURATION):e(),this.hoverState=null,this)},v.prototype.fixTitle=function(){var t=this.$element;!t.attr("title")&&"string"==typeof t.attr("data-original-title")||t.attr("data-original-title",t.attr("title")||"").attr("title","")},v.prototype.hasContent=function(){return this.getTitle()},v.prototype.getPosition=function(t){var e=(t=t||this.$element)[0],i="BODY"==e.tagName,o=e.getBoundingClientRect();null==o.width&&(o=m.extend({},o,{width:o.right-o.left,height:o.bottom-o.top}));var n=i?{top:0,left:0}:t.offset(),s={scroll:i?document.documentElement.scrollTop||document.body.scrollTop:t.scrollTop()},a=i?{width:m(window).width(),height:m(window).height()}:null;return m.extend({},o,s,a,n)},v.prototype.getCalculatedOffset=function(t,e,i,o){return"bottom"==t?{top:e.top+e.height,left:e.left+e.width/2-i/2}:"top"==t?{top:e.top-o,left:e.left+e.width/2-i/2}:"left"==t?{top:e.top+e.height/2-o/2,left:e.left-i}:{top:e.top+e.height/2-o/2,left:e.left+e.width}},v.prototype.getViewportAdjustedDelta=function(t,e,i,o){var n={top:0,left:0};if(!this.$viewport)return n;var s,a,r,l,h=this.options.viewport&&this.options.viewport.padding||0,d=this.getPosition(this.$viewport);return/right|left/.test(t)?(s=e.top-h-d.scroll,a=e.top+h-d.scroll+o,s<d.top?n.top=d.top-s:a>d.top+d.height&&(n.top=d.top+d.height-a)):(r=e.left-h,l=e.left+h+i,r<d.left?n.left=d.left-r:l>d.width&&(n.left=d.left+d.width-l)),n},v.prototype.getTitle=function(){var t=this.$element,e=this.options;return t.attr("data-original-title")||("function"==typeof e.title?e.title.call(t[0]):e.title)},v.prototype.getUID=function(t){for(;t+=~~(1e6*Math.random()),document.getElementById(t););return t},v.prototype.tip=function(){return this.$tip=this.$tip||m(this.options.template)},v.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".tooltip-arrow")},v.prototype.enable=function(){this.enabled=!0},v.prototype.disable=function(){this.enabled=!1},v.prototype.toggleEnabled=function(){this.enabled=!this.enabled},v.prototype.toggle=function(t){var e=this;t&&((e=m(t.currentTarget).data("bs."+this.type))||(e=new this.constructor(t.currentTarget,this.getDelegateOptions()),m(t.currentTarget).data("bs."+this.type,e))),e.tip().hasClass("in")?e.leave(e):e.enter(e)},v.prototype.destroy=function(){var t=this;clearTimeout(this.timeout),this.hide(function(){t.$element.off("."+t.type).removeData("bs."+t.type)})};var t=m.fn.tooltip;m.fn.tooltip=function(o){return this.each(function(){var t=m(this),e=t.data("bs.tooltip"),i="object"==typeof o&&o;!e&&/destroy|hide/.test(o)||(e||t.data("bs.tooltip",e=new v(this,i)),"string"==typeof o&&e[o]())})},m.fn.tooltip.Constructor=v,m.fn.tooltip.noConflict=function(){return m.fn.tooltip=t,this}}(jQuery),function(n){"use strict";function s(t,e){this.init("popover",t,e)}if(!n.fn.tooltip)throw new Error("Popover requires tooltip.js");s.VERSION="3.3.4",s.DEFAULTS=n.extend({},n.fn.tooltip.Constructor.DEFAULTS,{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'}),((s.prototype=n.extend({},n.fn.tooltip.Constructor.prototype)).constructor=s).prototype.getDefaults=function(){return s.DEFAULTS},s.prototype.setContent=function(){var t=this.tip(),e=this.getTitle(),i=this.getContent();t.find(".popover-title")[this.options.html?"html":"text"](e),t.find(".popover-content").children().detach().end()[this.options.html?"string"==typeof i?"html":"append":"text"](i),t.removeClass("fade top bottom left right in"),t.find(".popover-title").html()||t.find(".popover-title").hide()},s.prototype.hasContent=function(){return this.getTitle()||this.getContent()},s.prototype.getContent=function(){var t=this.$element,e=this.options;return t.attr("data-content")||("function"==typeof e.content?e.content.call(t[0]):e.content)},s.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".arrow")};var t=n.fn.popover;n.fn.popover=function(o){return this.each(function(){var t=n(this),e=t.data("bs.popover"),i="object"==typeof o&&o;!e&&/destroy|hide/.test(o)||(e||t.data("bs.popover",e=new s(this,i)),"string"==typeof o&&e[o]())})},n.fn.popover.Constructor=s,n.fn.popover.noConflict=function(){return n.fn.popover=t,this}}(jQuery),function(s){"use strict";function n(t,e){this.$body=s(document.body),this.$scrollElement=s(s(t).is(document.body)?window:t),this.options=s.extend({},n.DEFAULTS,e),this.selector=(this.options.target||"")+" .nav li > a",this.offsets=[],this.targets=[],this.activeTarget=null,this.scrollHeight=0,this.$scrollElement.on("scroll.bs.scrollspy",s.proxy(this.process,this)),this.refresh(),this.process()}function e(o){return this.each(function(){var t=s(this),e=t.data("bs.scrollspy"),i="object"==typeof o&&o;e||t.data("bs.scrollspy",e=new n(this,i)),"string"==typeof o&&e[o]()})}n.VERSION="3.3.4",n.DEFAULTS={offset:10},n.prototype.getScrollHeight=function(){return this.$scrollElement[0].scrollHeight||Math.max(this.$body[0].scrollHeight,document.documentElement.scrollHeight)},n.prototype.refresh=function(){var t=this,o="offset",n=0;this.offsets=[],this.targets=[],this.scrollHeight=this.getScrollHeight(),s.isWindow(this.$scrollElement[0])||(o="position",n=this.$scrollElement.scrollTop()),this.$body.find(this.selector).map(function(){var t=s(this),e=t.data("target")||t.attr("href"),i=/^#./.test(e)&&s(e);return i&&i.length&&i.is(":visible")?[[i[o]().top+n,e]]:null}).sort(function(t,e){return t[0]-e[0]}).each(function(){t.offsets.push(this[0]),t.targets.push(this[1])})},n.prototype.process=function(){var t,e=this.$scrollElement.scrollTop()+this.options.offset,i=this.getScrollHeight(),o=this.options.offset+i-this.$scrollElement.height(),n=this.offsets,s=this.targets,a=this.activeTarget;if(this.scrollHeight!=i&&this.refresh(),o<=e)return a!=(t=s[s.length-1])&&this.activate(t);if(a&&e<n[0])return this.activeTarget=null,this.clear();for(t=n.length;t--;)a!=s[t]&&e>=n[t]&&(void 0===n[t+1]||e<n[t+1])&&this.activate(s[t])},n.prototype.activate=function(t){this.activeTarget=t,this.clear();var e=this.selector+'[data-target="'+t+'"],'+this.selector+'[href="'+t+'"]',i=s(e).parents("li").addClass("active");i.parent(".dropdown-menu").length&&(i=i.closest("li.dropdown").addClass("active")),i.trigger("activate.bs.scrollspy")},n.prototype.clear=function(){s(this.selector).parentsUntil(this.options.target,".active").removeClass("active")};var t=s.fn.scrollspy;s.fn.scrollspy=e,s.fn.scrollspy.Constructor=n,s.fn.scrollspy.noConflict=function(){return s.fn.scrollspy=t,this},s(window).on("load.bs.scrollspy.data-api",function(){s('[data-spy="scroll"]').each(function(){var t=s(this);e.call(t,t.data())})})}(jQuery),function(r){"use strict";function e(i){return this.each(function(){var t=r(this),e=t.data("bs.tab");e||t.data("bs.tab",e=new a(this)),"string"==typeof i&&e[i]()})}function a(t){this.element=r(t)}a.VERSION="3.3.4",a.TRANSITION_DURATION=150,a.prototype.show=function(){var t,e,i,o,n=this.element,s=n.closest("ul:not(.dropdown-menu)"),a=n.data("target");a||(a=(a=n.attr("href"))&&a.replace(/.*(?=#[^\s]*$)/,"")),n.parent("li").hasClass("active")||(t=s.find(".active:last a"),e=r.Event("hide.bs.tab",{relatedTarget:n[0]}),i=r.Event("show.bs.tab",{relatedTarget:t[0]}),t.trigger(e),n.trigger(i),i.isDefaultPrevented()||e.isDefaultPrevented()||(o=r(a),this.activate(n.closest("li"),s),this.activate(o,o.parent(),function(){t.trigger({type:"hidden.bs.tab",relatedTarget:n[0]}),n.trigger({type:"shown.bs.tab",relatedTarget:t[0]})})))},a.prototype.activate=function(t,e,i){function o(){n.removeClass("active").find("> .dropdown-menu > .active").removeClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!1),t.addClass("active").find('[data-toggle="tab"]').attr("aria-expanded",!0),s?(t[0].offsetWidth,t.addClass("in")):t.removeClass("fade"),t.parent(".dropdown-menu").length&&t.closest("li.dropdown").addClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!0),i&&i()}var n=e.find("> .active"),s=i&&r.support.transition&&(n.length&&n.hasClass("fade")||!!e.find("> .fade").length);n.length&&s?n.one("bsTransitionEnd",o).emulateTransitionEnd(a.TRANSITION_DURATION):o(),n.removeClass("in")};var t=r.fn.tab;r.fn.tab=e,r.fn.tab.Constructor=a,r.fn.tab.noConflict=function(){return r.fn.tab=t,this};function i(t){t.preventDefault(),e.call(r(this),"show")}r(document).on("click.bs.tab.data-api",'[data-toggle="tab"]',i).on("click.bs.tab.data-api",'[data-toggle="pill"]',i)}(jQuery),function(l){"use strict";function i(o){return this.each(function(){var t=l(this),e=t.data("bs.affix"),i="object"==typeof o&&o;e||t.data("bs.affix",e=new h(this,i)),"string"==typeof o&&e[o]()})}var h=function(t,e){this.options=l.extend({},h.DEFAULTS,e),this.$target=l(this.options.target).on("scroll.bs.affix.data-api",l.proxy(this.checkPosition,this)).on("click.bs.affix.data-api",l.proxy(this.checkPositionWithEventLoop,this)),this.$element=l(t),this.affixed=null,this.unpin=null,this.pinnedOffset=null,this.checkPosition()};h.VERSION="3.3.4",h.RESET="affix affix-top affix-bottom",h.DEFAULTS={offset:0,target:window},h.prototype.getState=function(t,e,i,o){var n=this.$target.scrollTop(),s=this.$element.offset(),a=this.$target.height();if(null!=i&&"top"==this.affixed)return n<i&&"top";if("bottom"==this.affixed)return null!=i?!(n+this.unpin<=s.top)&&"bottom":!(n+a<=t-o)&&"bottom";var r=null==this.affixed,l=r?n:s.top;return null!=i&&n<=i?"top":null!=o&&t-o<=l+(r?a:e)&&"bottom"},h.prototype.getPinnedOffset=function(){if(this.pinnedOffset)return this.pinnedOffset;this.$element.removeClass(h.RESET).addClass("affix");var t=this.$target.scrollTop(),e=this.$element.offset();return this.pinnedOffset=e.top-t},h.prototype.checkPositionWithEventLoop=function(){setTimeout(l.proxy(this.checkPosition,this),1)},h.prototype.checkPosition=function(){if(this.$element.is(":visible")){var t=this.$element.height(),e=this.options.offset,i=e.top,o=e.bottom,n=l(document.body).height();"object"!=typeof e&&(o=i=e),"function"==typeof i&&(i=e.top(this.$element)),"function"==typeof o&&(o=e.bottom(this.$element));var s=this.getState(n,t,i,o);if(this.affixed!=s){null!=this.unpin&&this.$element.css("top","");var a="affix"+(s?"-"+s:""),r=l.Event(a+".bs.affix");if(this.$element.trigger(r),r.isDefaultPrevented())return;this.affixed=s,this.unpin="bottom"==s?this.getPinnedOffset():null,this.$element.removeClass(h.RESET).addClass(a).trigger(a.replace("affix","affixed")+".bs.affix")}"bottom"==s&&this.$element.offset({top:n-t-o})}};var t=l.fn.affix;l.fn.affix=i,l.fn.affix.Constructor=h,l.fn.affix.noConflict=function(){return l.fn.affix=t,this},l(window).on("load",function(){l('[data-spy="affix"]').each(function(){var t=l(this),e=t.data();e.offset=e.offset||{},null!=e.offsetBottom&&(e.offset.bottom=e.offsetBottom),null!=e.offsetTop&&(e.offset.top=e.offsetTop),i.call(t,e)})})}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,

if("undefined"==typeof jQuery)throw new Error("Bootstrap's JavaScript requires jQuery");!function(){"use strict";var t=jQuery.fn.jquery.split(" ")[0].split(".");if(t[0]<2&&t[1]<9||1==t[0]&&9==t[1]&&t[2]<1)throw new Error("Bootstrap's JavaScript requires jQuery version 1.9.1 or higher")}(),function(s){"use strict";function a(t){s(t).on("click",e,this.close)}var e='[data-dismiss="alert"]';a.VERSION="3.3.4",a.TRANSITION_DURATION=150,a.prototype.close=function(t){function e(){n.detach().trigger("closed.bs.alert").remove()}var i=s(this),o=i.attr("data-target");o||(o=(o=i.attr("href"))&&o.replace(/.*(?=#[^\s]*$)/,""));var n=s(o);t&&t.preventDefault(),n.length||(n=i.closest(".alert")),n.trigger(t=s.Event("close.bs.alert")),t.isDefaultPrevented()||(n.removeClass("in"),s.support.transition&&n.hasClass("fade")?n.one("bsTransitionEnd",e).emulateTransitionEnd(a.TRANSITION_DURATION):e())};var t=s.fn.alert;s.fn.alert=function(i){return this.each(function(){var t=s(this),e=t.data("bs.alert");e||t.data("bs.alert",e=new a(this)),"string"==typeof i&&e[i].call(t)})},s.fn.alert.Constructor=a,s.fn.alert.noConflict=function(){return s.fn.alert=t,this},s(document).on("click.bs.alert.data-api",e,a.prototype.close)}(jQuery),function(s){"use strict";function i(o){return this.each(function(){var t=s(this),e=t.data("bs.button"),i="object"==typeof o&&o;e||t.data("bs.button",e=new n(this,i)),"toggle"==o?e.toggle():o&&e.setState(o)})}var n=function(t,e){this.$element=s(t),this.options=s.extend({},n.DEFAULTS,e),this.isLoading=!1};n.VERSION="3.3.4",n.DEFAULTS={loadingText:"loading..."},n.prototype.setState=function(t){var e="disabled",i=this.$element,o=i.is("input")?"val":"html",n=i.data();t+="Text",null==n.resetText&&i.data("resetText",i[o]()),setTimeout(s.proxy(function(){i[o](null==n[t]?this.options[t]:n[t]),"loadingText"==t?(this.isLoading=!0,i.addClass(e).attr(e,e)):this.isLoading&&(this.isLoading=!1,i.removeClass(e).removeAttr(e))},this),0)},n.prototype.toggle=function(){var t,e=!0,i=this.$element.closest('[data-toggle="buttons"]');i.length?("radio"==(t=this.$element.find("input")).prop("type")&&(t.prop("checked")&&this.$element.hasClass("active")?e=!1:i.find(".active").removeClass("active")),e&&t.prop("checked",!this.$element.hasClass("active")).trigger("change")):this.$element.attr("aria-pressed",!this.$element.hasClass("active")),e&&this.$element.toggleClass("active")};var t=s.fn.button;s.fn.button=i,s.fn.button.Constructor=n,s.fn.button.noConflict=function(){return s.fn.button=t,this},s(document).on("click.bs.button.data-api",'[data-toggle^="button"]',function(t){var e=s(t.target);e.hasClass("btn")||(e=e.closest(".btn")),i.call(e,"toggle"),t.preventDefault()}).on("focus.bs.button.data-api blur.bs.button.data-api",'[data-toggle^="button"]',function(t){s(t.target).closest(".btn").toggleClass("focus",/^focus(in)?$/.test(t.type))})}(jQuery),function(p){"use strict";function a(n){return this.each(function(){var t=p(this),e=t.data("bs.carousel"),i=p.extend({},c.DEFAULTS,t.data(),"object"==typeof n&&n),o="string"==typeof n?n:i.slide;e||t.data("bs.carousel",e=new c(this,i)),"number"==typeof n?e.to(n):o?e[o]():i.interval&&e.pause().cycle()})}function c(t,e){this.$element=p(t),this.$indicators=this.$element.find(".carousel-indicators"),this.options=e,this.paused=null,this.sliding=null,this.interval=null,this.$active=null,this.$items=null,this.options.keyboard&&this.$element.on("keydown.bs.carousel",p.proxy(this.keydown,this)),"hover"!=this.options.pause||"ontouchstart"in document.documentElement||this.$element.on("mouseenter.bs.carousel",p.proxy(this.pause,this)).on("mouseleave.bs.carousel",p.proxy(this.cycle,this))}c.VERSION="3.3.4",c.TRANSITION_DURATION=600,c.DEFAULTS={interval:5e3,pause:"hover",wrap:!0,keyboard:!0},c.prototype.keydown=function(t){if(!/input|textarea/i.test(t.target.tagName)){switch(t.which){case 37:this.prev();break;case 39:this.next();break;default:return}t.preventDefault()}},c.prototype.cycle=function(t){return t||(this.paused=!1),this.interval&&clearInterval(this.interval),this.options.interval&&!this.paused&&(this.interval=setInterval(p.proxy(this.next,this),this.options.interval)),this},c.prototype.getItemIndex=function(t){return this.$items=t.parent().children(".item"),this.$items.index(t||this.$active)},c.prototype.getItemForDirection=function(t,e){var i=this.getItemIndex(e);if(("prev"==t&&0===i||"next"==t&&i==this.$items.length-1)&&!this.options.wrap)return e;var o=(i+("prev"==t?-1:1))%this.$items.length;return this.$items.eq(o)},c.prototype.to=function(t){var e=this,i=this.getItemIndex(this.$active=this.$element.find(".item.active"));return t>this.$items.length-1||t<0?void 0:this.sliding?this.$element.one("slid.bs.carousel",function(){e.to(t)}):i==t?this.pause().cycle():this.slide(i<t?"next":"prev",this.$items.eq(t))},c.prototype.pause=function(t){return t||(this.paused=!0),this.$element.find(".next, .prev").length&&p.support.transition&&(this.$element.trigger(p.support.transition.end),this.cycle(!0)),this.interval=clearInterval(this.interval),this},c.prototype.next=function(){return this.sliding?void 0:this.slide("next")},c.prototype.prev=function(){return this.sliding?void 0:this.slide("prev")},c.prototype.slide=function(t,e){var i=this.$element.find(".item.active"),o=e||this.getItemForDirection(t,i),n=this.interval,s="next"==t?"left":"right",a=this;if(o.hasClass("active"))return this.sliding=!1;var r,l=o[0],h=p.Event("slide.bs.carousel",{relatedTarget:l,direction:s});if(this.$element.trigger(h),!h.isDefaultPrevented()){this.sliding=!0,n&&this.pause(),this.$indicators.length&&(this.$indicators.find(".active").removeClass("active"),(r=p(this.$indicators.children()[this.getItemIndex(o)]))&&r.addClass("active"));var d=p.Event("slid.bs.carousel",{relatedTarget:l,direction:s});return p.support.transition&&this.$element.hasClass("slide")?(o.addClass(t),o[0].offsetWidth,i.addClass(s),o.addClass(s),i.one("bsTransitionEnd",function(){o.removeClass([t,s].join(" ")).addClass("active"),i.removeClass(["active",s].join(" ")),a.sliding=!1,setTimeout(function(){a.$element.trigger(d)},0)}).emulateTransitionEnd(c.TRANSITION_DURATION)):(i.removeClass("active"),o.addClass("active"),this.sliding=!1,this.$element.trigger(d)),n&&this.cycle(),this}};var t=p.fn.carousel;p.fn.carousel=a,p.fn.carousel.Constructor=c,p.fn.carousel.noConflict=function(){return p.fn.carousel=t,this};function e(t){var e,i,o,n=p(this),s=p(n.attr("data-target")||(e=n.attr("href"))&&e.replace(/.*(?=#[^\s]+$)/,""));s.hasClass("carousel")&&(i=p.extend({},s.data(),n.data()),(o=n.attr("data-slide-to"))&&(i.interval=!1),a.call(s,i),o&&s.data("bs.carousel").to(o),t.preventDefault())}p(document).on("click.bs.carousel.data-api","[data-slide]",e).on("click.bs.carousel.data-api","[data-slide-to]",e),p(window).on("load",function(){p('[data-ride="carousel"]').each(function(){var t=p(this);a.call(t,t.data())})})}(jQuery),function(r){"use strict";function s(o){o&&3===o.which||(r(".dropdown-backdrop").remove(),r(h).each(function(){var t=r(this),e=l(t),i={relatedTarget:this};e.hasClass("open")&&(e.trigger(o=r.Event("hide.bs.dropdown",i)),o.isDefaultPrevented()||(t.attr("aria-expanded","false"),e.removeClass("open").trigger("hidden.bs.dropdown",i)))}))}function l(t){var e=t.attr("data-target");e||(e=(e=t.attr("href"))&&/#[A-Za-z]/.test(e)&&e.replace(/.*(?=#[^\s]*$)/,""));var i=e&&r(e);return i&&i.length?i:t.parent()}function o(t){r(t).on("click.bs.dropdown",this.toggle)}var h='[data-toggle="dropdown"]';o.VERSION="3.3.4",o.prototype.toggle=function(t){var e=r(this);if(!e.is(".disabled, :disabled")){var i=l(e),o=i.hasClass("open");if(s(),!o){"ontouchstart"in document.documentElement&&!i.closest(".navbar-nav").length&&r('<div class="dropdown-backdrop"/>').insertAfter(r(this)).on("click",s);var n={relatedTarget:this};if(i.trigger(t=r.Event("show.bs.dropdown",n)),t.isDefaultPrevented())return;e.trigger("focus").attr("aria-expanded","true"),i.toggleClass("open").trigger("shown.bs.dropdown",n)}return!1}},o.prototype.keydown=function(t){if(/(38|40|27|32)/.test(t.which)&&!/input|textarea/i.test(t.target.tagName)){var e=r(this);if(t.preventDefault(),t.stopPropagation(),!e.is(".disabled, :disabled")){var i=l(e),o=i.hasClass("open");if(!o&&27!=t.which||o&&27==t.which)return 27==t.which&&i.find(h).trigger("focus"),e.trigger("click");var n,s=" li:not(.disabled):visible a",a=i.find('[role="menu"]'+s+', [role="listbox"]'+s);a.length&&(n=a.index(t.target),38==t.which&&0<n&&n--,40==t.which&&n<a.length-1&&n++,~n||(n=0),a.eq(n).trigger("focus"))}}};var t=r.fn.dropdown;r.fn.dropdown=function(i){return this.each(function(){var t=r(this),e=t.data("bs.dropdown");e||t.data("bs.dropdown",e=new o(this)),"string"==typeof i&&e[i].call(t)})},r.fn.dropdown.Constructor=o,r.fn.dropdown.noConflict=function(){return r.fn.dropdown=t,this},r(document).on("click.bs.dropdown.data-api",s).on("click.bs.dropdown.data-api",".dropdown form",function(t){t.stopPropagation()}).on("click.bs.dropdown.data-api",h,o.prototype.toggle).on("keydown.bs.dropdown.data-api",h,o.prototype.keydown).on("keydown.bs.dropdown.data-api",'[role="menu"]',o.prototype.keydown).on("keydown.bs.dropdown.data-api",'[role="listbox"]',o.prototype.keydown)}(jQuery),function(s){"use strict";function a(o,n){return this.each(function(){var t=s(this),e=t.data("bs.modal"),i=s.extend({},r.DEFAULTS,t.data(),"object"==typeof o&&o);e||t.data("bs.modal",e=new r(this,i)),"string"==typeof o?e[o](n):i.show&&e.show(n)})}function r(t,e){this.options=e,this.$body=s(document.body),this.$element=s(t),this.$dialog=this.$element.find(".modal-dialog"),this.$backdrop=null,this.isShown=null,this.originalBodyPad=null,this.scrollbarWidth=0,this.ignoreBackdropClick=!1,this.options.remote&&this.$element.find(".modal-content").load(this.options.remote,s.proxy(function(){this.$element.trigger("loaded.bs.modal")},this))}r.VERSION="3.3.4",r.TRANSITION_DURATION=300,r.BACKDROP_TRANSITION_DURATION=150,r.DEFAULTS={backdrop:!0,keyboard:!0,show:!0},r.prototype.toggle=function(t){return this.isShown?this.hide():this.show(t)},r.prototype.show=function(i){var o=this,t=s.Event("show.bs.modal",{relatedTarget:i});this.$element.trigger(t),this.isShown||t.isDefaultPrevented()||(this.isShown=!0,this.checkScrollbar(),this.setScrollbar(),this.$body.addClass("modal-open"),this.escape(),this.resize(),this.$element.on("click.dismiss.bs.modal",'[data-dismiss="modal"]',s.proxy(this.hide,this)),this.$dialog.on("mousedown.dismiss.bs.modal",function(){o.$element.one("mouseup.dismiss.bs.modal",function(t){s(t.target).is(o.$element)&&(o.ignoreBackdropClick=!0)})}),this.backdrop(function(){var t=s.support.transition&&o.$element.hasClass("fade");o.$element.parent().length||o.$element.appendTo(o.$body),o.$element.show().scrollTop(0),o.adjustDialog(),t&&o.$element[0].offsetWidth,o.$element.addClass("in").attr("aria-hidden",!1),o.enforceFocus();var e=s.Event("shown.bs.modal",{relatedTarget:i});t?o.$dialog.one("bsTransitionEnd",function(){o.$element.trigger("focus").trigger(e)}).emulateTransitionEnd(r.TRANSITION_DURATION):o.$element.trigger("focus").trigger(e)}))},r.prototype.hide=function(t){t&&t.preventDefault(),t=s.Event("hide.bs.modal"),this.$element.trigger(t),this.isShown&&!t.isDefaultPrevented()&&(this.isShown=!1,this.escape(),this.resize(),s(document).off("focusin.bs.modal"),this.$element.removeClass("in").attr("aria-hidden",!0).off("click.dismiss.bs.modal").off("mouseup.dismiss.bs.modal"),this.$dialog.off("mousedown.dismiss.bs.modal"),s.support.transition&&this.$element.hasClass("fade")?this.$element.one("bsTransitionEnd",s.proxy(this.hideModal,this)).emulateTransitionEnd(r.TRANSITION_DURATION):this.hideModal())},r.prototype.enforceFocus=function(){s(document).off("focusin.bs.modal").on("focusin.bs.modal",s.proxy(function(t){this.$element[0]===t.target||this.$element.has(t.target).length||this.$element.trigger("focus")},this))},r.prototype.escape=function(){this.isShown&&this.options.keyboard?this.$element.on("keydown.dismiss.bs.modal",s.proxy(function(t){27==t.which&&this.hide()},this)):this.isShown||this.$element.off("keydown.dismiss.bs.modal")},r.prototype.resize=function(){this.isShown?s(window).on("resize.bs.modal",s.proxy(this.handleUpdate,this)):s(window).off("resize.bs.modal")},r.prototype.hideModal=function(){var t=this;this.$element.hide(),this.backdrop(function(){t.$body.removeClass("modal-open"),t.resetAdjustments(),t.resetScrollbar(),t.$element.trigger("hidden.bs.modal")})},r.prototype.removeBackdrop=function(){this.$backdrop&&this.$backdrop.remove(),this.$backdrop=null},r.prototype.backdrop=function(t){var e,i=this,o=this.$element.hasClass("fade")?"fade":"";if(this.isShown&&this.options.backdrop){var n=s.support.transition&&o;if(this.$backdrop=s('<div class="modal-backdrop '+o+'" />').appendTo(this.$body),this.$element.on("click.dismiss.bs.modal",s.proxy(function(t){return this.ignoreBackdropClick?void(this.ignoreBackdropClick=!1):void(t.target===t.currentTarget&&("static"==this.options.backdrop?this.$element[0].focus():this.hide()))},this)),n&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass("in"),!t)return;n?this.$backdrop.one("bsTransitionEnd",t).emulateTransitionEnd(r.BACKDROP_TRANSITION_DURATION):t()}else{!this.isShown&&this.$backdrop?(this.$backdrop.removeClass("in"),e=function(){i.removeBackdrop(),t&&t()},s.support.transition&&this.$element.hasClass("fade")?this.$backdrop.one("bsTransitionEnd",e).emulateTransitionEnd(r.BACKDROP_TRANSITION_DURATION):e()):t&&t()}},r.prototype.handleUpdate=function(){this.adjustDialog()},r.prototype.adjustDialog=function(){var t=this.$element[0].scrollHeight>document.documentElement.clientHeight;this.$element.css({paddingLeft:!this.bodyIsOverflowing&&t?this.scrollbarWidth:"",paddingRight:this.bodyIsOverflowing&&!t?this.scrollbarWidth:""})},r.prototype.resetAdjustments=function(){this.$element.css({paddingLeft:"",paddingRight:""})},r.prototype.checkScrollbar=function(){var t,e=window.innerWidth;e||(e=(t=document.documentElement.getBoundingClientRect()).right-Math.abs(t.left)),this.bodyIsOverflowing=document.body.clientWidth<e,this.scrollbarWidth=this.measureScrollbar()},r.prototype.setScrollbar=function(){var t=parseInt(this.$body.css("padding-right")||0,10);this.originalBodyPad=document.body.style.paddingRight||"",this.bodyIsOverflowing&&this.$body.css("padding-right",t+this.scrollbarWidth)},r.prototype.resetScrollbar=function(){this.$body.css("padding-right",this.originalBodyPad)},r.prototype.measureScrollbar=function(){var t=document.createElement("div");t.className="modal-scrollbar-measure",this.$body.append(t);var e=t.offsetWidth-t.clientWidth;return this.$body[0].removeChild(t),e};var t=s.fn.modal;s.fn.modal=a,s.fn.modal.Constructor=r,s.fn.modal.noConflict=function(){return s.fn.modal=t,this},s(document).on("click.bs.modal.data-api",'[data-toggle="modal"]',function(t){var e=s(this),i=e.attr("href"),o=s(e.attr("data-target")||i&&i.replace(/.*(?=#[^\s]+$)/,"")),n=o.data("bs.modal")?"toggle":s.extend({remote:!/#/.test(i)&&i},o.data(),e.data());e.is("a")&&t.preventDefault(),o.one("show.bs.modal",function(t){t.isDefaultPrevented()||o.one("hidden.bs.modal",function(){e.is(":visible")&&e.trigger("focus")})}),a.call(o,n,this)})}(jQuery),function(m){"use strict";function v(t,e){this.type=null,this.options=null,this.enabled=null,this.timeout=null,this.hoverState=null,this.$element=null,this.init("tooltip",t,e)}v.VERSION="3.3.4",v.TRANSITION_DURATION=150,v.DEFAULTS={animation:!0,placement:"top",selector:!1,template:'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,container:!1,viewport:{selector:"body",padding:0}},v.prototype.init=function(t,e,i){if(this.enabled=!0,this.type=t,this.$element=m(e),this.options=this.getOptions(i),this.$viewport=this.options.viewport&&m(this.options.viewport.selector||this.options.viewport),this.$element[0]instanceof document.constructor&&!this.options.selector)throw new Error("`selector` option must be specified when initializing "+this.type+" on the window.document object!");for(var o=this.options.trigger.split(" "),n=o.length;n--;){var s,a,r=o[n];"click"==r?this.$element.on("click."+this.type,this.options.selector,m.proxy(this.toggle,this)):"manual"!=r&&(s="hover"==r?"mouseenter":"focusin",a="hover"==r?"mouseleave":"focusout",this.$element.on(s+"."+this.type,this.options.selector,m.proxy(this.enter,this)),this.$element.on(a+"."+this.type,this.options.selector,m.proxy(this.leave,this)))}this.options.selector?this._options=m.extend({},this.options,{trigger:"manual",selector:""}):this.fixTitle()},v.prototype.getDefaults=function(){return v.DEFAULTS},v.prototype.getOptions=function(t){return(t=m.extend({},this.getDefaults(),this.$element.data(),t)).delay&&"number"==typeof t.delay&&(t.delay={show:t.delay,hide:t.delay}),t},v.prototype.getDelegateOptions=function(){var i={},o=this.getDefaults();return this._options&&m.each(this._options,function(t,e){o[t]!=e&&(i[t]=e)}),i},v.prototype.enter=function(t){var e=t instanceof this.constructor?t:m(t.currentTarget).data("bs."+this.type);return e&&e.$tip&&e.$tip.is(":visible")?void(e.hoverState="in"):(e||(e=new this.constructor(t.currentTarget,this.getDelegateOptions()),m(t.currentTarget).data("bs."+this.type,e)),clearTimeout(e.timeout),e.hoverState="in",e.options.delay&&e.options.delay.show?void(e.timeout=setTimeout(function(){"in"==e.hoverState&&e.show()},e.options.delay.show)):e.show())},v.prototype.leave=function(t){var e=t instanceof this.constructor?t:m(t.currentTarget).data("bs."+this.type);return e||(e=new this.constructor(t.currentTarget,this.getDelegateOptions()),m(t.currentTarget).data("bs."+this.type,e)),clearTimeout(e.timeout),e.hoverState="out",e.options.delay&&e.options.delay.hide?void(e.timeout=setTimeout(function(){"out"==e.hoverState&&e.hide()},e.options.delay.hide)):e.hide()},v.prototype.show=function(){var t=m.Event("show.bs."+this.type);if(this.hasContent()&&this.enabled){this.$element.trigger(t);var e=m.contains(this.$element[0].ownerDocument.documentElement,this.$element[0]);if(t.isDefaultPrevented()||!e)return;var i=this,o=this.tip(),n=this.getUID(this.type);this.setContent(),o.attr("id",n),this.$element.attr("aria-describedby",n),this.options.animation&&o.addClass("fade");var s="function"==typeof this.options.placement?this.options.placement.call(this,o[0],this.$element[0]):this.options.placement,a=/\s?auto?\s?/i,r=a.test(s);r&&(s=s.replace(a,"")||"top"),o.detach().css({top:0,left:0,display:"block"}).addClass(s).data("bs."+this.type,this),this.options.container?o.appendTo(this.options.container):o.insertAfter(this.$element);var l,h,d,p=this.getPosition(),c=o[0].offsetWidth,f=o[0].offsetHeight;r&&(l=s,h=this.options.container?m(this.options.container):this.$element.parent(),d=this.getPosition(h),s="bottom"==s&&p.bottom+f>d.bottom?"top":"top"==s&&p.top-f<d.top?"bottom":"right"==s&&p.right+c>d.width?"left":"left"==s&&p.left-c<d.left?"right":s,o.removeClass(l).addClass(s));var u=this.getCalculatedOffset(s,p,c,f);this.applyPlacement(u,s);var g=function(){var t=i.hoverState;i.$element.trigger("shown.bs."+i.type),i.hoverState=null,"out"==t&&i.leave(i)};m.support.transition&&this.$tip.hasClass("fade")?o.one("bsTransitionEnd",g).emulateTransitionEnd(v.TRANSITION_DURATION):g()}},v.prototype.applyPlacement=function(t,e){var i=this.tip(),o=i[0].offsetWidth,n=i[0].offsetHeight,s=parseInt(i.css("margin-top"),10),a=parseInt(i.css("margin-left"),10);isNaN(s)&&(s=0),isNaN(a)&&(a=0),t.top=t.top+s,t.left=t.left+a,m.offset.setOffset(i[0],m.extend({using:function(t){i.css({top:Math.round(t.top),left:Math.round(t.left)})}},t),0),i.addClass("in");var r=i[0].offsetWidth,l=i[0].offsetHeight;"top"==e&&l!=n&&(t.top=t.top+n-l);var h=this.getViewportAdjustedDelta(e,t,r,l);h.left?t.left+=h.left:t.top+=h.top;var d=/top|bottom/.test(e),p=d?2*h.left-o+r:2*h.top-n+l,c=d?"offsetWidth":"offsetHeight";i.offset(t),this.replaceArrow(p,i[0][c],d)},v.prototype.replaceArrow=function(t,e,i){this.arrow().css(i?"left":"top",50*(1-t/e)+"%").css(i?"top":"left","")},v.prototype.setContent=function(){var t=this.tip(),e=this.getTitle();t.find(".tooltip-inner")[this.options.html?"html":"text"](e),t.removeClass("fade in top bottom left right")},v.prototype.hide=function(t){function e(){"in"!=i.hoverState&&o.detach(),i.$element.removeAttr("aria-describedby").trigger("hidden.bs."+i.type),t&&t()}var i=this,o=m(this.$tip),n=m.Event("hide.bs."+this.type);return this.$element.trigger(n),n.isDefaultPrevented()?void 0:(o.removeClass("in"),m.support.transition&&o.hasClass("fade")?o.one("bsTransitionEnd",e).emulateTransitionEnd(v.TRANSITION_DURATION):e(),this.hoverState=null,this)},v.prototype.fixTitle=function(){var t=this.$element;!t.attr("title")&&"string"==typeof t.attr("data-original-title")||t.attr("data-original-title",t.attr("title")||"").attr("title","")},v.prototype.hasContent=function(){return this.getTitle()},v.prototype.getPosition=function(t){var e=(t=t||this.$element)[0],i="BODY"==e.tagName,o=e.getBoundingClientRect();null==o.width&&(o=m.extend({},o,{width:o.right-o.left,height:o.bottom-o.top}));var n=i?{top:0,left:0}:t.offset(),s={scroll:i?document.documentElement.scrollTop||document.body.scrollTop:t.scrollTop()},a=i?{width:m(window).width(),height:m(window).height()}:null;return m.extend({},o,s,a,n)},v.prototype.getCalculatedOffset=function(t,e,i,o){return"bottom"==t?{top:e.top+e.height,left:e.left+e.width/2-i/2}:"top"==t?{top:e.top-o,left:e.left+e.width/2-i/2}:"left"==t?{top:e.top+e.height/2-o/2,left:e.left-i}:{top:e.top+e.height/2-o/2,left:e.left+e.width}},v.prototype.getViewportAdjustedDelta=function(t,e,i,o){var n={top:0,left:0};if(!this.$viewport)return n;var s,a,r,l,h=this.options.viewport&&this.options.viewport.padding||0,d=this.getPosition(this.$viewport);return/right|left/.test(t)?(s=e.top-h-d.scroll,a=e.top+h-d.scroll+o,s<d.top?n.top=d.top-s:a>d.top+d.height&&(n.top=d.top+d.height-a)):(r=e.left-h,l=e.left+h+i,r<d.left?n.left=d.left-r:l>d.width&&(n.left=d.left+d.width-l)),n},v.prototype.getTitle=function(){var t=this.$element,e=this.options;return t.attr("data-original-title")||("function"==typeof e.title?e.title.call(t[0]):e.title)},v.prototype.getUID=function(t){for(;t+=~~(1e6*Math.random()),document.getElementById(t););return t},v.prototype.tip=function(){return this.$tip=this.$tip||m(this.options.template)},v.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".tooltip-arrow")},v.prototype.enable=function(){this.enabled=!0},v.prototype.disable=function(){this.enabled=!1},v.prototype.toggleEnabled=function(){this.enabled=!this.enabled},v.prototype.toggle=function(t){var e=this;t&&((e=m(t.currentTarget).data("bs."+this.type))||(e=new this.constructor(t.currentTarget,this.getDelegateOptions()),m(t.currentTarget).data("bs."+this.type,e))),e.tip().hasClass("in")?e.leave(e):e.enter(e)},v.prototype.destroy=function(){var t=this;clearTimeout(this.timeout),this.hide(function(){t.$element.off("."+t.type).removeData("bs."+t.type)})};var t=m.fn.tooltip;m.fn.tooltip=function(o){return this.each(function(){var t=m(this),e=t.data("bs.tooltip"),i="object"==typeof o&&o;!e&&/destroy|hide/.test(o)||(e||t.data("bs.tooltip",e=new v(this,i)),"string"==typeof o&&e[o]())})},m.fn.tooltip.Constructor=v,m.fn.tooltip.noConflict=function(){return m.fn.tooltip=t,this}}(jQuery),function(n){"use strict";function s(t,e){this.init("popover",t,e)}if(!n.fn.tooltip)throw new Error("Popover requires tooltip.js");s.VERSION="3.3.4",s.DEFAULTS=n.extend({},n.fn.tooltip.Constructor.DEFAULTS,{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'}),((s.prototype=n.extend({},n.fn.tooltip.Constructor.prototype)).constructor=s).prototype.getDefaults=function(){return s.DEFAULTS},s.prototype.setContent=function(){var t=this.tip(),e=this.getTitle(),i=this.getContent();t.find(".popover-title")[this.options.html?"html":"text"](e),t.find(".popover-content").children().detach().end()[this.options.html?"string"==typeof i?"html":"append":"text"](i),t.removeClass("fade top bottom left right in"),t.find(".popover-title").html()||t.find(".popover-title").hide()},s.prototype.hasContent=function(){return this.getTitle()||this.getContent()},s.prototype.getContent=function(){var t=this.$element,e=this.options;return t.attr("data-content")||("function"==typeof e.content?e.content.call(t[0]):e.content)},s.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".arrow")};var t=n.fn.popover;n.fn.popover=function(o){return this.each(function(){var t=n(this),e=t.data("bs.popover"),i="object"==typeof o&&o;!e&&/destroy|hide/.test(o)||(e||t.data("bs.popover",e=new s(this,i)),"string"==typeof o&&e[o]())})},n.fn.popover.Constructor=s,n.fn.popover.noConflict=function(){return n.fn.popover=t,this}}(jQuery),function(r){"use strict";function e(i){return this.each(function(){var t=r(this),e=t.data("bs.tab");e||t.data("bs.tab",e=new a(this)),"string"==typeof i&&e[i]()})}function a(t){this.element=r(t)}a.VERSION="3.3.4",a.TRANSITION_DURATION=150,a.prototype.show=function(){var t,e,i,o,n=this.element,s=n.closest("ul:not(.dropdown-menu)"),a=n.data("target");a||(a=(a=n.attr("href"))&&a.replace(/.*(?=#[^\s]*$)/,"")),n.parent("li").hasClass("active")||(t=s.find(".active:last a"),e=r.Event("hide.bs.tab",{relatedTarget:n[0]}),i=r.Event("show.bs.tab",{relatedTarget:t[0]}),t.trigger(e),n.trigger(i),i.isDefaultPrevented()||e.isDefaultPrevented()||(o=r(a),this.activate(n.closest("li"),s),this.activate(o,o.parent(),function(){t.trigger({type:"hidden.bs.tab",relatedTarget:n[0]}),n.trigger({type:"shown.bs.tab",relatedTarget:t[0]})})))},a.prototype.activate=function(t,e,i){function o(){n.removeClass("active").find("> .dropdown-menu > .active").removeClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!1),t.addClass("active").find('[data-toggle="tab"]').attr("aria-expanded",!0),s?(t[0].offsetWidth,t.addClass("in")):t.removeClass("fade"),t.parent(".dropdown-menu").length&&t.closest("li.dropdown").addClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!0),i&&i()}var n=e.find("> .active"),s=i&&r.support.transition&&(n.length&&n.hasClass("fade")||!!e.find("> .fade").length);n.length&&s?n.one("bsTransitionEnd",o).emulateTransitionEnd(a.TRANSITION_DURATION):o(),n.removeClass("in")};var t=r.fn.tab;r.fn.tab=e,r.fn.tab.Constructor=a,r.fn.tab.noConflict=function(){return r.fn.tab=t,this};function i(t){t.preventDefault(),e.call(r(this),"show")}r(document).on("click.bs.tab.data-api",'[data-toggle="tab"]',i).on("click.bs.tab.data-api",'[data-toggle="pill"]',i)}(jQuery),function(l){"use strict";function i(o){return this.each(function(){var t=l(this),e=t.data("bs.affix"),i="object"==typeof o&&o;e||t.data("bs.affix",e=new h(this,i)),"string"==typeof o&&e[o]()})}var h=function(t,e){this.options=l.extend({},h.DEFAULTS,e),this.$target=l(this.options.target).on("scroll.bs.affix.data-api",l.proxy(this.checkPosition,this)).on("click.bs.affix.data-api",l.proxy(this.checkPositionWithEventLoop,this)),this.$element=l(t),this.affixed=null,this.unpin=null,this.pinnedOffset=null,this.checkPosition()};h.VERSION="3.3.4",h.RESET="affix affix-top affix-bottom",h.DEFAULTS={offset:0,target:window},h.prototype.getState=function(t,e,i,o){var n=this.$target.scrollTop(),s=this.$element.offset(),a=this.$target.height();if(null!=i&&"top"==this.affixed)return n<i&&"top";if("bottom"==this.affixed)return null!=i?!(n+this.unpin<=s.top)&&"bottom":!(n+a<=t-o)&&"bottom";var r=null==this.affixed,l=r?n:s.top;return null!=i&&n<=i?"top":null!=o&&t-o<=l+(r?a:e)&&"bottom"},h.prototype.getPinnedOffset=function(){if(this.pinnedOffset)return this.pinnedOffset;this.$element.removeClass(h.RESET).addClass("affix");var t=this.$target.scrollTop(),e=this.$element.offset();return this.pinnedOffset=e.top-t},h.prototype.checkPositionWithEventLoop=function(){setTimeout(l.proxy(this.checkPosition,this),1)},h.prototype.checkPosition=function(){if(this.$element.is(":visible")){var t=this.$element.height(),e=this.options.offset,i=e.top,o=e.bottom,n=l(document.body).height();"object"!=typeof e&&(o=i=e),"function"==typeof i&&(i=e.top(this.$element)),"function"==typeof o&&(o=e.bottom(this.$element));var s=this.getState(n,t,i,o);if(this.affixed!=s){null!=this.unpin&&this.$element.css("top","");var a="affix"+(s?"-"+s:""),r=l.Event(a+".bs.affix");if(this.$element.trigger(r),r.isDefaultPrevented())return;this.affixed=s,this.unpin="bottom"==s?this.getPinnedOffset():null,this.$element.removeClass(h.RESET).addClass(a).trigger(a.replace("affix","affixed")+".bs.affix")}"bottom"==s&&this.$element.offset({top:n-t-o})}};var t=l.fn.affix;l.fn.affix=i,l.fn.affix.Constructor=h,l.fn.affix.noConflict=function(){return l.fn.affix=t,this},l(window).on("load",function(){l('[data-spy="affix"]').each(function(){var t=l(this),e=t.data();e.offset=e.offset||{},null!=e.offsetBottom&&(e.offset.bottom=e.offsetBottom),null!=e.offsetTop&&(e.offset.top=e.offsetTop),i.call(t,e)})})}(jQuery),function(a){"use strict";function n(t){var e,i=t.attr("data-target")||(e=t.attr("href"))&&e.replace(/.*(?=#[^\s]+$)/,"");return a(i)}function r(o){return this.each(function(){var t=a(this),e=t.data("bs.collapse"),i=a.extend({},l.DEFAULTS,t.data(),"object"==typeof o&&o);!e&&i.toggle&&/show|hide/.test(o)&&(i.toggle=!1),e||t.data("bs.collapse",e=new l(this,i)),"string"==typeof o&&e[o]()})}var l=function(t,e){this.$element=a(t),this.options=a.extend({},l.DEFAULTS,e),this.$trigger=a('[data-toggle="collapse"][href="#'+t.id+'"],[data-toggle="collapse"][data-target="#'+t.id+'"]'),this.transitioning=null,this.options.parent?this.$parent=this.getParent():this.addAriaAndCollapsedClass(this.$element,this.$trigger),this.options.toggle&&this.toggle()};l.VERSION="3.3.4",l.TRANSITION_DURATION=350,l.DEFAULTS={toggle:!0},l.prototype.dimension=function(){return this.$element.hasClass("width")?"width":"height"},l.prototype.show=function(){if(!this.transitioning&&!this.$element.hasClass("in")){var t,e=this.$parent&&this.$parent.children(".panel").children(".in, .collapsing");if(!(e&&e.length&&((t=e.data("bs.collapse"))&&t.transitioning))){var i=a.Event("show.bs.collapse");if(this.$element.trigger(i),!i.isDefaultPrevented()){e&&e.length&&(r.call(e,"hide"),t||e.data("bs.collapse",null));var o=this.dimension();this.$element.removeClass("collapse").addClass("collapsing")[o](0).attr("aria-expanded",!0),this.$trigger.removeClass("collapsed").attr("aria-expanded",!0),this.transitioning=1;var n=function(){this.$element.removeClass("collapsing").addClass("collapse in")[o](""),this.transitioning=0,this.$element.trigger("shown.bs.collapse")};if(!a.support.transition)return n.call(this);var s=a.camelCase(["scroll",o].join("-"));this.$element.one("bsTransitionEnd",a.proxy(n,this)).emulateTransitionEnd(l.TRANSITION_DURATION)[o](this.$element[0][s])}}}},l.prototype.hide=function(){if(!this.transitioning&&this.$element.hasClass("in")){var t=a.Event("hide.bs.collapse");if(this.$element.trigger(t),!t.isDefaultPrevented()){var e=this.dimension();this.$element[e](this.$element[e]())[0].offsetHeight,this.$element.addClass("collapsing").removeClass("collapse in").attr("aria-expanded",!1),this.$trigger.addClass("collapsed").attr("aria-expanded",!1),this.transitioning=1;var i=function(){this.transitioning=0,this.$element.removeClass("collapsing").addClass("collapse").trigger("hidden.bs.collapse")};return a.support.transition?void this.$element[e](0).one("bsTransitionEnd",a.proxy(i,this)).emulateTransitionEnd(l.TRANSITION_DURATION):i.call(this)}}},l.prototype.toggle=function(){this[this.$element.hasClass("in")?"hide":"show"]()},l.prototype.getParent=function(){return a(this.options.parent).find('[data-toggle="collapse"][data-parent="'+this.options.parent+'"]').each(a.proxy(function(t,e){var i=a(e);this.addAriaAndCollapsedClass(n(i),i)},this)).end()},l.prototype.addAriaAndCollapsedClass=function(t,e){var i=t.hasClass("in");t.attr("aria-expanded",i),e.toggleClass("collapsed",!i).attr("aria-expanded",i)};var t=a.fn.collapse;a.fn.collapse=r,a.fn.collapse.Constructor=l,a.fn.collapse.noConflict=function(){return a.fn.collapse=t,this},a(document).on("click.bs.collapse.data-api",'[data-toggle="collapse"]',function(t){var e=a(this);e.attr("data-target")||t.preventDefault();var i=n(e),o=i.data("bs.collapse")?"toggle":e.data();r.call(i,o)})}(jQuery),function(s){"use strict";function n(t,e){this.$body=s(document.body),this.$scrollElement=s(s(t).is(document.body)?window:t),this.options=s.extend({},n.DEFAULTS,e),this.selector=(this.options.target||"")+" .nav li > a",this.offsets=[],this.targets=[],this.activeTarget=null,this.scrollHeight=0,this.$scrollElement.on("scroll.bs.scrollspy",s.proxy(this.process,this)),this.refresh(),this.process()}function e(o){return this.each(function(){var t=s(this),e=t.data("bs.scrollspy"),i="object"==typeof o&&o;e||t.data("bs.scrollspy",e=new n(this,i)),"string"==typeof o&&e[o]()})}n.VERSION="3.3.4",n.DEFAULTS={offset:10},n.prototype.getScrollHeight=function(){return this.$scrollElement[0].scrollHeight||Math.max(this.$body[0].scrollHeight,document.documentElement.scrollHeight)},n.prototype.refresh=function(){var t=this,o="offset",n=0;this.offsets=[],this.targets=[],this.scrollHeight=this.getScrollHeight(),s.isWindow(this.$scrollElement[0])||(o="position",n=this.$scrollElement.scrollTop()),this.$body.find(this.selector).map(function(){var t=s(this),e=t.data("target")||t.attr("href"),i=/^#./.test(e)&&s(e);return i&&i.length&&i.is(":visible")?[[i[o]().top+n,e]]:null}).sort(function(t,e){return t[0]-e[0]}).each(function(){t.offsets.push(this[0]),t.targets.push(this[1])})},n.prototype.process=function(){var t,e=this.$scrollElement.scrollTop()+this.options.offset,i=this.getScrollHeight(),o=this.options.offset+i-this.$scrollElement.height(),n=this.offsets,s=this.targets,a=this.activeTarget;if(this.scrollHeight!=i&&this.refresh(),o<=e)return a!=(t=s[s.length-1])&&this.activate(t);if(a&&e<n[0])return this.activeTarget=null,this.clear();for(t=n.length;t--;)a!=s[t]&&e>=n[t]&&(void 0===n[t+1]||e<n[t+1])&&this.activate(s[t])},n.prototype.activate=function(t){this.activeTarget=t,this.clear();var e=this.selector+'[data-target="'+t+'"],'+this.selector+'[href="'+t+'"]',i=s(e).parents("li").addClass("active");i.parent(".dropdown-menu").length&&(i=i.closest("li.dropdown").addClass("active")),i.trigger("activate.bs.scrollspy")},n.prototype.clear=function(){s(this.selector).parentsUntil(this.options.target,".active").removeClass("active")};var t=s.fn.scrollspy;s.fn.scrollspy=e,s.fn.scrollspy.Constructor=n,s.fn.scrollspy.noConflict=function(){return s.fn.scrollspy=t,this},s(window).on("load.bs.scrollspy.data-api",function(){s('[data-spy="scroll"]').each(function(){var t=s(this);e.call(t,t.data())})})}(jQuery),function(o){"use strict";o.fn.emulateTransitionEnd=function(t){var e=!1,i=this;o(this).one("bsTransitionEnd",function(){e=!0});return setTimeout(function(){e||o(i).trigger(o.support.transition.end)},t),this},o(function(){o.support.transition=function(){var t,e=document.createElement("bootstrap"),i={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"};for(t in i)if(void 0!==e.style[t])return{end:i[t]};return!1}(),o.support.transition&&(o.event.special.bsTransitionEnd={bindType:o.support.transition.end,delegateType:o.support.transition.end,handle:function(t){return o(t.target).is(this)?t.handleObj.handler.apply(this,arguments):void 0}})})}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,

(function(){function e(){}function o(e,t){for(var n=e.length;n--;)if(e[n].listener===t)return n;return-1}function t(e){return function(){return this[e].apply(this,arguments)}}var n=e.prototype,i=this,r=i.EventEmitter;n.getListeners=function(e){var t,n,i=this._getEvents();if("object"==typeof e)for(n in t={},i)i.hasOwnProperty(n)&&e.test(n)&&(t[n]=i[n]);else t=i[e]||(i[e]=[]);return t},n.flattenListeners=function(e){for(var t=[],n=0;e.length>n;n+=1)t.push(e[n].listener);return t},n.getListenersAsObject=function(e){var t,n=this.getListeners(e);return n instanceof Array&&((t={})[e]=n),t||n},n.addListener=function(e,t){var n,i=this.getListenersAsObject(e),r="object"==typeof t;for(n in i)i.hasOwnProperty(n)&&-1===o(i[n],t)&&i[n].push(r?t:{listener:t,once:!1});return this},n.on=t("addListener"),n.addOnceListener=function(e,t){return this.addListener(e,{listener:t,once:!0})},n.once=t("addOnceListener"),n.defineEvent=function(e){return this.getListeners(e),this},n.defineEvents=function(e){for(var t=0;e.length>t;t+=1)this.defineEvent(e[t]);return this},n.removeListener=function(e,t){var n,i,r=this.getListenersAsObject(e);for(i in r)r.hasOwnProperty(i)&&(-1!==(n=o(r[i],t))&&r[i].splice(n,1));return this},n.off=t("removeListener"),n.addListeners=function(e,t){return this.manipulateListeners(!1,e,t)},n.removeListeners=function(e,t){return this.manipulateListeners(!0,e,t)},n.manipulateListeners=function(e,t,n){var i,r,o=e?this.removeListener:this.addListener,s=e?this.removeListeners:this.addListeners;if("object"!=typeof t||t instanceof RegExp)for(i=n.length;i--;)o.call(this,t,n[i]);else for(i in t)t.hasOwnProperty(i)&&(r=t[i])&&("function"==typeof r?o.call(this,i,r):s.call(this,i,r));return this},n.removeEvent=function(e){var t,n=typeof e,i=this._getEvents();if("string"==n)delete i[e];else if("object"==n)for(t in i)i.hasOwnProperty(t)&&e.test(t)&&delete i[t];else delete this._events;return this},n.removeAllListeners=t("removeEvent"),n.emitEvent=function(e,t){var n,i,r,o=this.getListenersAsObject(e);for(r in o)if(o.hasOwnProperty(r))for(i=o[r].length;i--;)!0===(n=o[r][i]).once&&this.removeListener(e,n.listener),n.listener.apply(this,t||[])===this._getOnceReturnValue()&&this.removeListener(e,n.listener);return this},n.trigger=t("emitEvent"),n.emit=function(e){var t=Array.prototype.slice.call(arguments,1);return this.emitEvent(e,t)},n.setOnceReturnValue=function(e){return this._onceReturnValue=e,this},n._getOnceReturnValue=function(){return!this.hasOwnProperty("_onceReturnValue")||this._onceReturnValue},n._getEvents=function(){return this._events||(this._events={})},e.noConflict=function(){return i.EventEmitter=r,e},"function"==typeof define&&define.amd?define("eventEmitter/EventEmitter",[],function(){return e}):"object"==typeof module&&module.exports?module.exports=e:this.EventEmitter=e}).call(this),function(n){function i(e){var t=n.event;return t.target=t.target||t.srcElement||e,t}var e=document.documentElement,t=function(){};e.addEventListener?t=function(e,t,n){e.addEventListener(t,n,!1)}:e.attachEvent&&(t=function(t,e,n){t[e+n]=n.handleEvent?function(){var e=i(t);n.handleEvent.call(n,e)}:function(){var e=i(t);n.call(t,e)},t.attachEvent("on"+e,t[e+n])});var r=function(){};e.removeEventListener?r=function(e,t,n){e.removeEventListener(t,n,!1)}:e.detachEvent&&(r=function(t,n,i){t.detachEvent("on"+n,t[n+i]);try{delete t[n+i]}catch(e){t[n+i]=void 0}});var o={bind:t,unbind:r};"function"==typeof define&&define.amd?define("eventie/eventie",o):n.eventie=o}(this),function(n,i){"function"==typeof define&&define.amd?define(["eventEmitter/EventEmitter","eventie/eventie"],function(e,t){return i(n,e,t)}):"object"==typeof exports?module.exports=i(n,require("wolfy87-eventemitter"),require("eventie")):n.imagesLoaded=i(n,n.EventEmitter,n.eventie)}(window,function(e,t,n){function r(e,t){for(var n in t)e[n]=t[n];return e}function o(e){var t,n=[];if(t=e,"[object Array]"===u.call(t))n=e;else if("number"==typeof e.length)for(var i=0,r=e.length;i<r;i++)n.push(e[i]);else n.push(e);return n}function s(e,t,n){if(!(this instanceof s))return new s(e,t);"string"==typeof e&&(e=document.querySelectorAll(e)),this.elements=o(e),this.options=r({},this.options),"function"==typeof t?n=t:r(this.options,t),n&&this.on("always",n),this.getImages(),f&&(this.jqDeferred=new f.Deferred);var i=this;setTimeout(function(){i.check()})}function i(e){this.img=e}function c(e){this.src=e,d[e]=this}var f=e.jQuery,h=e.console,a=void 0!==h,u=Object.prototype.toString;(s.prototype=new t).options={},s.prototype.getImages=function(){this.images=[];for(var e=0,t=this.elements.length;e<t;e++){var n=this.elements[e];"IMG"===n.nodeName&&this.addImage(n);var i=n.nodeType;if(i&&(1===i||9===i||11===i))for(var r=n.querySelectorAll("img"),o=0,s=r.length;o<s;o++){var c=r[o];this.addImage(c)}}},s.prototype.addImage=function(e){var t=new i(e);this.images.push(t)},s.prototype.check=function(){function e(e,t){return n.options.debug&&a&&h.log("confirm",e,t),n.progress(e),++i===r&&n.complete(),!0}var n=this,i=0,r=this.images.length;if(this.hasAnyBroken=!1,r)for(var t=0;t<r;t++){var o=this.images[t];o.on("confirm",e),o.check()}else this.complete()},s.prototype.progress=function(e){this.hasAnyBroken=this.hasAnyBroken||!e.isLoaded;var t=this;setTimeout(function(){t.emit("progress",t,e),t.jqDeferred&&t.jqDeferred.notify&&t.jqDeferred.notify(t,e)})},s.prototype.complete=function(){var t=this.hasAnyBroken?"fail":"done";this.isComplete=!0;var n=this;setTimeout(function(){var e;n.emit(t,n),n.emit("always",n),n.jqDeferred&&(e=n.hasAnyBroken?"reject":"resolve",n.jqDeferred[e](n))})},f&&(f.fn.imagesLoaded=function(e,t){return new s(this,e,t).jqDeferred.promise(f(this))}),(i.prototype=new t).check=function(){var n,e=d[this.img.src]||new c(this.img.src);e.isConfirmed?this.confirm(e.isLoaded,"cached was confirmed"):this.img.complete&&void 0!==this.img.naturalWidth?this.confirm(0!==this.img.naturalWidth,"naturalWidth"):(n=this,e.on("confirm",function(e,t){return n.confirm(e.isLoaded,t),!0}),e.check())},i.prototype.confirm=function(e,t){this.isLoaded=e,this.emit("confirm",this,t)};var d={};return(c.prototype=new t).check=function(){var e;this.isChecked||(e=new Image,n.bind(e,"load",this),n.bind(e,"error",this),e.src=this.src,this.isChecked=!0)},c.prototype.handleEvent=function(e){var t="on"+e.type;this[t]&&this[t](e)},c.prototype.onload=function(e){this.confirm(!0,"onload"),this.unbindProxyEvents(e)},c.prototype.onerror=function(e){this.confirm(!1,"onerror"),this.unbindProxyEvents(e)},c.prototype.confirm=function(e,t){this.isConfirmed=!0,this.isLoaded=e,this.emit("confirm",this,t)},c.prototype.unbindProxyEvents=function(e){n.unbind(e.target,"load",this),n.unbind(e.target,"error",this)},s});
//# sourceMappingURL=data:application/json;charset=utf8;base64,

!function(e,i){"function"==typeof define&&define.amd?define("jquery-bridget/jquery-bridget",["jquery"],function(t){return i(e,t)}):"object"==typeof module&&module.exports?module.exports=i(e,require("jquery")):e.jQueryBridget=i(e,e.jQuery)}(window,function(t,e){"use strict";function i(h,n,d){(d=d||e||t.jQuery)&&(n.prototype.option||(n.prototype.option=function(t){d.isPlainObject(t)&&(this.options=d.extend(!0,this.options,t))}),d.fn[h]=function(t){if("string"!=typeof t)return o=t,this.each(function(t,e){var i=d.data(e,h);i?(i.option(o),i._init()):(i=new n(e,o),d.data(e,h,i))}),this;var e,s,r,a,u,o,i=l.call(arguments,1);return r=i,u="$()."+h+'("'+(s=t)+'")',(e=this).each(function(t,e){var i,o,n=d.data(e,h);n?(i=n[s])&&"_"!=s.charAt(0)?(o=i.apply(n,r),a=void 0===a?o:a):c(u+" is not a valid method"):c(h+" not initialized. Cannot call methods, i.e. "+u)}),void 0!==a?a:e},o(d))}function o(t){!t||t&&t.bridget||(t.bridget=i)}var l=Array.prototype.slice,n=t.console,c=void 0===n?function(){}:function(t){n.error(t)};return o(e||t.jQuery),i}),function(t,e){"function"==typeof define&&define.amd?define("ev-emitter/ev-emitter",e):"object"==typeof module&&module.exports?module.exports=e():t.EvEmitter=e()}("undefined"!=typeof window?window:this,function(){function t(){}var e=t.prototype;return e.on=function(t,e){if(t&&e){var i=this._events=this._events||{},o=i[t]=i[t]||[];return-1==o.indexOf(e)&&o.push(e),this}},e.once=function(t,e){if(t&&e){this.on(t,e);var i=this._onceEvents=this._onceEvents||{};return(i[t]=i[t]||{})[e]=!0,this}},e.off=function(t,e){var i=this._events&&this._events[t];if(i&&i.length){var o=i.indexOf(e);return-1!=o&&i.splice(o,1),this}},e.emitEvent=function(t,e){var i=this._events&&this._events[t];if(i&&i.length){i=i.slice(0),e=e||[];for(var o=this._onceEvents&&this._onceEvents[t],n=0;n<i.length;n++){var s=i[n];o&&o[s]&&(this.off(t,s),delete o[s]),s.apply(this,e)}return this}},e.allOff=function(){delete this._events,delete this._onceEvents},t}),function(t,e){"use strict";"function"==typeof define&&define.amd?define("get-size/get-size",[],e):"object"==typeof module&&module.exports?module.exports=e():t.getSize=e()}(window,function(){"use strict";function I(t){var e=parseFloat(t);return-1==t.indexOf("%")&&!isNaN(e)&&e}function z(t){var e=getComputedStyle(t);return e||i("Style returned "+e+". Are you running this code in a hidden iframe on Firefox? See http://bit.ly/getsizebug1"),e}function x(t){if(L||(L=!0,(g=document.createElement("div")).style.width="200px",g.style.padding="1px 2px 3px 4px",g.style.borderStyle="solid",g.style.borderWidth="1px 2px 3px 4px",g.style.boxSizing="border-box",(v=document.body||document.documentElement).appendChild(g),_=z(g),x.isBoxSizeOuter=S=200==I(_.width),v.removeChild(g)),"string"==typeof t&&(t=document.querySelector(t)),t&&"object"==typeof t&&t.nodeType){var e=z(t);if("none"==e.display)return function(){for(var t={width:0,height:0,innerWidth:0,innerHeight:0,outerWidth:0,outerHeight:0},e=0;e<E;e++){t[b[e]]=0}return t}();var i={};i.width=t.offsetWidth,i.height=t.offsetHeight;for(var o=i.isBorderBox="border-box"==e.boxSizing,n=0;n<E;n++){var s=b[n],r=e[s],a=parseFloat(r);i[s]=isNaN(a)?0:a}var u=i.paddingLeft+i.paddingRight,h=i.paddingTop+i.paddingBottom,d=i.marginLeft+i.marginRight,l=i.marginTop+i.marginBottom,c=i.borderLeftWidth+i.borderRightWidth,m=i.borderTopWidth+i.borderBottomWidth,f=o&&S,p=I(e.width);!1!==p&&(i.width=p+(f?0:u+c));var y=I(e.height);return!1!==y&&(i.height=y+(f?0:h+m)),i.innerWidth=i.width-(u+c),i.innerHeight=i.height-(h+m),i.outerWidth=i.width+d,i.outerHeight=i.height+l,i}var g,v,_}var S,i="undefined"==typeof console?function(){}:function(t){console.error(t)},b=["paddingLeft","paddingRight","paddingTop","paddingBottom","marginLeft","marginRight","marginTop","marginBottom","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth"],E=b.length,L=!1;return x}),function(t,e){"use strict";"function"==typeof define&&define.amd?define("desandro-matches-selector/matches-selector",e):"object"==typeof module&&module.exports?module.exports=e():t.matchesSelector=e()}(window,function(){"use strict";var i=function(){var t=window.Element.prototype;if(t.matches)return"matches";if(t.matchesSelector)return"matchesSelector";for(var e=["webkit","moz","ms","o"],i=0;i<e.length;i++){var o=e[i]+"MatchesSelector";if(t[o])return o}}();return function(t,e){return t[i](e)}}),function(e,i){"function"==typeof define&&define.amd?define("fizzy-ui-utils/utils",["desandro-matches-selector/matches-selector"],function(t){return i(e,t)}):"object"==typeof module&&module.exports?module.exports=i(e,require("desandro-matches-selector")):e.fizzyUIUtils=i(e,e.matchesSelector)}(window,function(h,s){var d={extend:function(t,e){for(var i in e)t[i]=e[i];return t},modulo:function(t,e){return(t%e+e)%e},makeArray:function(t){var e=[];if(Array.isArray(t))e=t;else if(t&&"object"==typeof t&&"number"==typeof t.length)for(var i=0;i<t.length;i++)e.push(t[i]);else e.push(t);return e},removeFrom:function(t,e){var i=t.indexOf(e);-1!=i&&t.splice(i,1)},getParent:function(t,e){for(;t.parentNode&&t!=document.body;)if(t=t.parentNode,s(t,e))return t},getQueryElement:function(t){return"string"==typeof t?document.querySelector(t):t},handleEvent:function(t){var e="on"+t.type;this[e]&&this[e](t)},filterFindElements:function(t,o){t=d.makeArray(t);var n=[];return t.forEach(function(t){if(t instanceof HTMLElement){if(!o)return void n.push(t);s(t,o)&&n.push(t);for(var e=t.querySelectorAll(o),i=0;i<e.length;i++)n.push(e[i])}}),n},debounceMethod:function(t,e,o){var n=t.prototype[e],s=e+"Timeout";t.prototype[e]=function(){var t=this[s];t&&clearTimeout(t);var e=arguments,i=this;this[s]=setTimeout(function(){n.apply(i,e),delete i[s]},o||100)}},docReady:function(t){var e=document.readyState;"complete"==e||"interactive"==e?setTimeout(t):document.addEventListener("DOMContentLoaded",t)},toDashed:function(t){return t.replace(/(.)([A-Z])/g,function(t,e,i){return e+"-"+i}).toLowerCase()}},l=h.console;return d.htmlInit=function(a,u){d.docReady(function(){var t=d.toDashed(u),n="data-"+t,e=document.querySelectorAll("["+n+"]"),i=document.querySelectorAll(".js-"+t),o=d.makeArray(e).concat(d.makeArray(i)),s=n+"-options",r=h.jQuery;o.forEach(function(e){var t,i=e.getAttribute(n)||e.getAttribute(s);try{t=i&&JSON.parse(i)}catch(t){return void(l&&l.error("Error parsing "+n+" on "+e.className+": "+t))}var o=new a(e,t);r&&r.data(e,u,o)})})},d}),function(t,e){"function"==typeof define&&define.amd?define("outlayer/item",["ev-emitter/ev-emitter","get-size/get-size"],e):"object"==typeof module&&module.exports?module.exports=e(require("ev-emitter"),require("get-size")):(t.Outlayer={},t.Outlayer.Item=e(t.EvEmitter,t.getSize))}(window,function(t,e){"use strict";function i(t,e){t&&(this.element=t,this.layout=e,this.position={x:0,y:0},this._create())}var o=document.documentElement.style,n="string"==typeof o.transition?"transition":"WebkitTransition",s="string"==typeof o.transform?"transform":"WebkitTransform",r={WebkitTransition:"webkitTransitionEnd",transition:"transitionend"}[n],a={transform:s,transition:n,transitionDuration:n+"Duration",transitionProperty:n+"Property",transitionDelay:n+"Delay"},u=i.prototype=Object.create(t.prototype);u.constructor=i,u._create=function(){this._transn={ingProperties:{},clean:{},onEnd:{}},this.css({position:"absolute"})},u.handleEvent=function(t){var e="on"+t.type;this[e]&&this[e](t)},u.getSize=function(){this.size=e(this.element)},u.css=function(t){var e,i=this.element.style;for(e in t){i[a[e]||e]=t[e]}},u.getPosition=function(){var t=getComputedStyle(this.element),e=this.layout._getOption("originLeft"),i=this.layout._getOption("originTop"),o=t[e?"left":"right"],n=t[i?"top":"bottom"],s=this.layout.size,r=-1!=o.indexOf("%")?parseFloat(o)/100*s.width:parseInt(o,10),a=-1!=n.indexOf("%")?parseFloat(n)/100*s.height:parseInt(n,10),r=isNaN(r)?0:r,a=isNaN(a)?0:a;r-=e?s.paddingLeft:s.paddingRight,a-=i?s.paddingTop:s.paddingBottom,this.position.x=r,this.position.y=a},u.layoutPosition=function(){var t=this.layout.size,e={},i=this.layout._getOption("originLeft"),o=this.layout._getOption("originTop"),n=i?"paddingLeft":"paddingRight",s=i?"left":"right",r=i?"right":"left",a=this.position.x+t[n];e[s]=this.getXValue(a),e[r]="";var u=o?"paddingTop":"paddingBottom",h=o?"top":"bottom",d=o?"bottom":"top",l=this.position.y+t[u];e[h]=this.getYValue(l),e[d]="",this.css(e),this.emitEvent("layout",[this])},u.getXValue=function(t){var e=this.layout._getOption("horizontal");return this.layout.options.percentPosition&&!e?t/this.layout.size.width*100+"%":t+"px"},u.getYValue=function(t){var e=this.layout._getOption("horizontal");return this.layout.options.percentPosition&&e?t/this.layout.size.height*100+"%":t+"px"},u._transitionTo=function(t,e){this.getPosition();var i,o,n,s=this.position.x,r=this.position.y,a=parseInt(t,10),u=parseInt(e,10),h=a===this.position.x&&u===this.position.y;this.setPosition(t,e),!h||this.isTransitioning?(i=t-s,o=e-r,(n={}).transform=this.getTranslate(i,o),this.transition({to:n,onTransitionEnd:{transform:this.layoutPosition},isCleaning:!0})):this.layoutPosition()},u.getTranslate=function(t,e){return"translate3d("+(t=this.layout._getOption("originLeft")?t:-t)+"px, "+(e=this.layout._getOption("originTop")?e:-e)+"px, 0)"},u.goTo=function(t,e){this.setPosition(t,e),this.layoutPosition()},u.moveTo=u._transitionTo,u.setPosition=function(t,e){this.position.x=parseInt(t,10),this.position.y=parseInt(e,10)},u._nonTransition=function(t){for(var e in this.css(t.to),t.isCleaning&&this._removeStyles(t.to),t.onTransitionEnd)t.onTransitionEnd[e].call(this)},u.transition=function(t){if(parseFloat(this.layout.options.transitionDuration)){var e,i=this._transn;for(e in t.onTransitionEnd)i.onEnd[e]=t.onTransitionEnd[e];for(e in t.to)i.ingProperties[e]=!0,t.isCleaning&&(i.clean[e]=!0);t.from&&(this.css(t.from),this.element.offsetHeight),this.enableTransition(t.to),this.css(t.to),this.isTransitioning=!0}else this._nonTransition(t)};var h="opacity,"+s.replace(/([A-Z])/g,function(t){return"-"+t.toLowerCase()});u.enableTransition=function(){var t;this.isTransitioning||(t="number"==typeof(t=this.layout.options.transitionDuration)?t+"ms":t,this.css({transitionProperty:h,transitionDuration:t,transitionDelay:this.staggerDelay||0}),this.element.addEventListener(r,this,!1))},u.onwebkitTransitionEnd=function(t){this.ontransitionend(t)},u.onotransitionend=function(t){this.ontransitionend(t)};var d={"-webkit-transform":"transform"};u.ontransitionend=function(t){var e,i;t.target===this.element&&(e=this._transn,i=d[t.propertyName]||t.propertyName,delete e.ingProperties[i],function(t){for(var e in t)return;return 1}(e.ingProperties)&&this.disableTransition(),i in e.clean&&(this.element.style[t.propertyName]="",delete e.clean[i]),i in e.onEnd&&(e.onEnd[i].call(this),delete e.onEnd[i]),this.emitEvent("transitionEnd",[this]))},u.disableTransition=function(){this.removeTransitionStyles(),this.element.removeEventListener(r,this,!1),this.isTransitioning=!1},u._removeStyles=function(t){var e,i={};for(e in t)i[e]="";this.css(i)};var l={transitionProperty:"",transitionDuration:"",transitionDelay:""};return u.removeTransitionStyles=function(){this.css(l)},u.stagger=function(t){t=isNaN(t)?0:t,this.staggerDelay=t+"ms"},u.removeElem=function(){this.element.parentNode.removeChild(this.element),this.css({display:""}),this.emitEvent("remove",[this])},u.remove=function(){return n&&parseFloat(this.layout.options.transitionDuration)?(this.once("transitionEnd",function(){this.removeElem()}),void this.hide()):void this.removeElem()},u.reveal=function(){delete this.isHidden,this.css({display:""});var t=this.layout.options,e={};e[this.getHideRevealTransitionEndProperty("visibleStyle")]=this.onRevealTransitionEnd,this.transition({from:t.hiddenStyle,to:t.visibleStyle,isCleaning:!0,onTransitionEnd:e})},u.onRevealTransitionEnd=function(){this.isHidden||this.emitEvent("reveal")},u.getHideRevealTransitionEndProperty=function(t){var e,i=this.layout.options[t];if(i.opacity)return"opacity";for(e in i)return e},u.hide=function(){this.isHidden=!0,this.css({display:""});var t=this.layout.options,e={};e[this.getHideRevealTransitionEndProperty("hiddenStyle")]=this.onHideTransitionEnd,this.transition({from:t.visibleStyle,to:t.hiddenStyle,isCleaning:!0,onTransitionEnd:e})},u.onHideTransitionEnd=function(){this.isHidden&&(this.css({display:"none"}),this.emitEvent("hide"))},u.destroy=function(){this.css({position:"",left:"",right:"",top:"",bottom:"",transition:"",transform:""})},i}),function(n,s){"use strict";"function"==typeof define&&define.amd?define("outlayer/outlayer",["ev-emitter/ev-emitter","get-size/get-size","fizzy-ui-utils/utils","./item"],function(t,e,i,o){return s(n,t,e,i,o)}):"object"==typeof module&&module.exports?module.exports=s(n,require("ev-emitter"),require("get-size"),require("fizzy-ui-utils"),require("./item")):n.Outlayer=s(n,n.EvEmitter,n.getSize,n.fizzyUIUtils,n.Outlayer.Item)}(window,function(t,e,n,s,o){"use strict";function r(t,e){var i,o=s.getQueryElement(t);o?(this.element=o,h&&(this.$element=h(this.element)),this.options=s.extend({},this.constructor.defaults),this.option(e),i=++d,this.element.outlayerGUID=i,(l[i]=this)._create(),this._getOption("initLayout")&&this.layout()):u&&u.error("Bad element for "+this.constructor.namespace+": "+(o||t))}function a(t){function e(){t.apply(this,arguments)}return(e.prototype=Object.create(t.prototype)).constructor=e}function i(){}var u=t.console,h=t.jQuery,d=0,l={};r.namespace="outlayer",r.Item=o,r.defaults={containerStyle:{position:"relative"},initLayout:!0,originLeft:!0,originTop:!0,resize:!0,resizeContainer:!0,transitionDuration:"0.4s",hiddenStyle:{opacity:0,transform:"scale(0.001)"},visibleStyle:{opacity:1,transform:"scale(1)"}};var c=r.prototype;s.extend(c,e.prototype),c.option=function(t){s.extend(this.options,t)},c._getOption=function(t){var e=this.constructor.compatOptions[t];return e&&void 0!==this.options[e]?this.options[e]:this.options[t]},r.compatOptions={initLayout:"isInitLayout",horizontal:"isHorizontal",layoutInstant:"isLayoutInstant",originLeft:"isOriginLeft",originTop:"isOriginTop",resize:"isResizeBound",resizeContainer:"isResizingContainer"},c._create=function(){this.reloadItems(),this.stamps=[],this.stamp(this.options.stamp),s.extend(this.element.style,this.options.containerStyle),this._getOption("resize")&&this.bindResize()},c.reloadItems=function(){this.items=this._itemize(this.element.children)},c._itemize=function(t){for(var e=this._filterFindItemElements(t),i=this.constructor.Item,o=[],n=0;n<e.length;n++){var s=new i(e[n],this);o.push(s)}return o},c._filterFindItemElements=function(t){return s.filterFindElements(t,this.options.itemSelector)},c.getItemElements=function(){return this.items.map(function(t){return t.element})},c.layout=function(){this._resetLayout(),this._manageStamps();var t=this._getOption("layoutInstant"),e=void 0!==t?t:!this._isLayoutInited;this.layoutItems(this.items,e),this._isLayoutInited=!0},c._init=c.layout,c._resetLayout=function(){this.getSize()},c.getSize=function(){this.size=n(this.element)},c._getMeasurement=function(t,e){var i,o=this.options[t];o?("string"==typeof o?i=this.element.querySelector(o):o instanceof HTMLElement&&(i=o),this[t]=i?n(i)[e]:o):this[t]=0},c.layoutItems=function(t,e){t=this._getItemsForLayout(t),this._layoutItems(t,e),this._postLayout()},c._getItemsForLayout=function(t){return t.filter(function(t){return!t.isIgnored})},c._layoutItems=function(t,i){var o;this._emitCompleteOnItems("layout",t),t&&t.length&&(o=[],t.forEach(function(t){var e=this._getItemLayoutPosition(t);e.item=t,e.isInstant=i||t.isLayoutInstant,o.push(e)},this),this._processLayoutQueue(o))},c._getItemLayoutPosition=function(){return{x:0,y:0}},c._processLayoutQueue=function(t){this.updateStagger(),t.forEach(function(t,e){this._positionItem(t.item,t.x,t.y,t.isInstant,e)},this)},c.updateStagger=function(){var t=this.options.stagger;return null==t?void(this.stagger=0):(this.stagger=function(t){if("number"==typeof t)return t;var e=t.match(/(^\d*\.?\d*)(\w*)/),i=e&&e[1],o=e&&e[2];return i.length?parseFloat(i)*(m[o]||1):0}(t),this.stagger)},c._positionItem=function(t,e,i,o,n){o?t.goTo(e,i):(t.stagger(n*this.stagger),t.moveTo(e,i))},c._postLayout=function(){this.resizeContainer()},c.resizeContainer=function(){var t;!this._getOption("resizeContainer")||(t=this._getContainerSize())&&(this._setContainerMeasure(t.width,!0),this._setContainerMeasure(t.height,!1))},c._getContainerSize=i,c._setContainerMeasure=function(t,e){var i;void 0!==t&&((i=this.size).isBorderBox&&(t+=e?i.paddingLeft+i.paddingRight+i.borderLeftWidth+i.borderRightWidth:i.paddingBottom+i.paddingTop+i.borderTopWidth+i.borderBottomWidth),t=Math.max(t,0),this.element.style[e?"width":"height"]=t+"px")},c._emitCompleteOnItems=function(e,t){function i(){s.dispatchEvent(e+"Complete",null,[t])}function o(){++n==r&&i()}var n,s=this,r=t.length;t&&r?(n=0,t.forEach(function(t){t.once(e,o)})):i()},c.dispatchEvent=function(t,e,i){var o,n=e?[e].concat(i):i;this.emitEvent(t,n),h&&(this.$element=this.$element||h(this.element),e?((o=h.Event(e)).type=t,this.$element.trigger(o,i)):this.$element.trigger(t,i))},c.ignore=function(t){var e=this.getItem(t);e&&(e.isIgnored=!0)},c.unignore=function(t){var e=this.getItem(t);e&&delete e.isIgnored},c.stamp=function(t){(t=this._find(t))&&(this.stamps=this.stamps.concat(t),t.forEach(this.ignore,this))},c.unstamp=function(t){(t=this._find(t))&&t.forEach(function(t){s.removeFrom(this.stamps,t),this.unignore(t)},this)},c._find=function(t){if(t)return"string"==typeof t&&(t=this.element.querySelectorAll(t)),s.makeArray(t)},c._manageStamps=function(){this.stamps&&this.stamps.length&&(this._getBoundingRect(),this.stamps.forEach(this._manageStamp,this))},c._getBoundingRect=function(){var t=this.element.getBoundingClientRect(),e=this.size;this._boundingRect={left:t.left+e.paddingLeft+e.borderLeftWidth,top:t.top+e.paddingTop+e.borderTopWidth,right:t.right-(e.paddingRight+e.borderRightWidth),bottom:t.bottom-(e.paddingBottom+e.borderBottomWidth)}},c._manageStamp=i,c._getElementOffset=function(t){var e=t.getBoundingClientRect(),i=this._boundingRect,o=n(t);return{left:e.left-i.left-o.marginLeft,top:e.top-i.top-o.marginTop,right:i.right-e.right-o.marginRight,bottom:i.bottom-e.bottom-o.marginBottom}},c.handleEvent=s.handleEvent,c.bindResize=function(){t.addEventListener("resize",this),this.isResizeBound=!0},c.unbindResize=function(){t.removeEventListener("resize",this),this.isResizeBound=!1},c.onresize=function(){this.resize()},s.debounceMethod(r,"onresize",100),c.resize=function(){this.isResizeBound&&this.needsResizeLayout()&&this.layout()},c.needsResizeLayout=function(){var t=n(this.element);return this.size&&t&&t.innerWidth!==this.size.innerWidth},c.addItems=function(t){var e=this._itemize(t);return e.length&&(this.items=this.items.concat(e)),e},c.appended=function(t){var e=this.addItems(t);e.length&&(this.layoutItems(e,!0),this.reveal(e))},c.prepended=function(t){var e,i=this._itemize(t);i.length&&(e=this.items.slice(0),this.items=i.concat(e),this._resetLayout(),this._manageStamps(),this.layoutItems(i,!0),this.reveal(i),this.layoutItems(e))},c.reveal=function(t){var i;this._emitCompleteOnItems("reveal",t),t&&t.length&&(i=this.updateStagger(),t.forEach(function(t,e){t.stagger(e*i),t.reveal()}))},c.hide=function(t){var i;this._emitCompleteOnItems("hide",t),t&&t.length&&(i=this.updateStagger(),t.forEach(function(t,e){t.stagger(e*i),t.hide()}))},c.revealItemElements=function(t){var e=this.getItems(t);this.reveal(e)},c.hideItemElements=function(t){var e=this.getItems(t);this.hide(e)},c.getItem=function(t){for(var e=0;e<this.items.length;e++){var i=this.items[e];if(i.element==t)return i}},c.getItems=function(t){t=s.makeArray(t);var i=[];return t.forEach(function(t){var e=this.getItem(t);e&&i.push(e)},this),i},c.remove=function(t){var e=this.getItems(t);this._emitCompleteOnItems("remove",e),e&&e.length&&e.forEach(function(t){t.remove(),s.removeFrom(this.items,t)},this)},c.destroy=function(){var t=this.element.style;t.height="",t.position="",t.width="",this.items.forEach(function(t){t.destroy()}),this.unbindResize();var e=this.element.outlayerGUID;delete l[e],delete this.element.outlayerGUID,h&&h.removeData(this.element,this.constructor.namespace)},r.data=function(t){var e=(t=s.getQueryElement(t))&&t.outlayerGUID;return e&&l[e]},r.create=function(t,e){var i=a(r);return i.defaults=s.extend({},r.defaults),s.extend(i.defaults,e),i.compatOptions=s.extend({},r.compatOptions),i.namespace=t,i.data=r.data,i.Item=a(o),s.htmlInit(i,t),h&&h.bridget&&h.bridget(t,i),i};var m={ms:1,s:1e3};return r.Item=o,r}),function(t,e){"function"==typeof define&&define.amd?define("isotope-layout/js/item",["outlayer/outlayer"],e):"object"==typeof module&&module.exports?module.exports=e(require("outlayer")):(t.Isotope=t.Isotope||{},t.Isotope.Item=e(t.Outlayer))}(window,function(t){"use strict";function e(){t.Item.apply(this,arguments)}var i=e.prototype=Object.create(t.Item.prototype),o=i._create;i._create=function(){this.id=this.layout.itemGUID++,o.call(this),this.sortData={}},i.updateSortData=function(){if(!this.isIgnored){this.sortData.id=this.id,this.sortData["original-order"]=this.id,this.sortData.random=Math.random();var t,e=this.layout.options.getSortData,i=this.layout._sorters;for(t in e){var o=i[t];this.sortData[t]=o(this.element,this)}}};var n=i.destroy;return i.destroy=function(){n.apply(this,arguments),this.css({display:""})},e}),function(t,e){"function"==typeof define&&define.amd?define("isotope-layout/js/layout-mode",["get-size/get-size","outlayer/outlayer"],e):"object"==typeof module&&module.exports?module.exports=e(require("get-size"),require("outlayer")):(t.Isotope=t.Isotope||{},t.Isotope.LayoutMode=e(t.getSize,t.Outlayer))}(window,function(e,i){"use strict";function o(t){(this.isotope=t)&&(this.options=t.options[this.namespace],this.element=t.element,this.items=t.filteredItems,this.size=t.size)}var n=o.prototype;return["_resetLayout","_getItemLayoutPosition","_manageStamp","_getContainerSize","_getElementOffset","needsResizeLayout","_getOption"].forEach(function(t){n[t]=function(){return i.prototype[t].apply(this.isotope,arguments)}}),n.needsVerticalResizeLayout=function(){var t=e(this.isotope.element);return this.isotope.size&&t&&t.innerHeight!=this.isotope.size.innerHeight},n._getMeasurement=function(){this.isotope._getMeasurement.apply(this,arguments)},n.getColumnWidth=function(){this.getSegmentSize("column","Width")},n.getRowHeight=function(){this.getSegmentSize("row","Height")},n.getSegmentSize=function(t,e){var i,o=t+e,n="outer"+e;this._getMeasurement(o,n),this[o]||(i=this.getFirstItemSize(),this[o]=i&&i[n]||this.isotope.size["inner"+e])},n.getFirstItemSize=function(){var t=this.isotope.filteredItems[0];return t&&t.element&&e(t.element)},n.layout=function(){this.isotope.layout.apply(this.isotope,arguments)},n.getSize=function(){this.isotope.getSize(),this.size=this.isotope.size},o.modes={},o.create=function(t,e){function i(){o.apply(this,arguments)}return(i.prototype=Object.create(n)).constructor=i,e&&(i.options=e),o.modes[i.prototype.namespace=t]=i},o}),function(t,e){"function"==typeof define&&define.amd?define("masonry-layout/masonry",["outlayer/outlayer","get-size/get-size"],e):"object"==typeof module&&module.exports?module.exports=e(require("outlayer"),require("get-size")):t.Masonry=e(t.Outlayer,t.getSize)}(window,function(t,h){var e=t.create("masonry");e.compatOptions.fitWidth="isFitWidth";var i=e.prototype;return i._resetLayout=function(){this.getSize(),this._getMeasurement("columnWidth","outerWidth"),this._getMeasurement("gutter","outerWidth"),this.measureColumns(),this.colYs=[];for(var t=0;t<this.cols;t++)this.colYs.push(0);this.maxY=0,this.horizontalColIndex=0},i.measureColumns=function(){var t,e;this.getContainerWidth(),this.columnWidth||(e=(t=this.items[0])&&t.element,this.columnWidth=e&&h(e).outerWidth||this.containerWidth);var i=this.columnWidth+=this.gutter,o=this.containerWidth+this.gutter,n=o/i,s=i-o%i,n=Math[s&&s<1?"round":"floor"](n);this.cols=Math.max(n,1)},i.getContainerWidth=function(){var t=this._getOption("fitWidth")?this.element.parentNode:this.element,e=h(t);this.containerWidth=e&&e.innerWidth},i._getItemLayoutPosition=function(t){t.getSize();for(var e=t.size.outerWidth%this.columnWidth,i=Math[e&&e<1?"round":"ceil"](t.size.outerWidth/this.columnWidth),i=Math.min(i,this.cols),o=this[this.options.horizontalOrder?"_getHorizontalColPosition":"_getTopColPosition"](i,t),n={x:this.columnWidth*o.col,y:o.y},s=o.y+t.size.outerHeight,r=i+o.col,a=o.col;a<r;a++)this.colYs[a]=s;return n},i._getTopColPosition=function(t){var e=this._getTopColGroup(t),i=Math.min.apply(Math,e);return{col:e.indexOf(i),y:i}},i._getTopColGroup=function(t){if(t<2)return this.colYs;for(var e=[],i=this.cols+1-t,o=0;o<i;o++)e[o]=this._getColGroupY(o,t);return e},i._getColGroupY=function(t,e){if(e<2)return this.colYs[t];var i=this.colYs.slice(t,t+e);return Math.max.apply(Math,i)},i._getHorizontalColPosition=function(t,e){var i=this.horizontalColIndex%this.cols,i=1<t&&i+t>this.cols?0:i,o=e.size.outerWidth&&e.size.outerHeight;return this.horizontalColIndex=o?i+t:this.horizontalColIndex,{col:i,y:this._getColGroupY(i,t)}},i._manageStamp=function(t){var e=h(t),i=this._getElementOffset(t),o=this._getOption("originLeft")?i.left:i.right,n=o+e.outerWidth,s=Math.floor(o/this.columnWidth),s=Math.max(0,s),r=Math.floor(n/this.columnWidth);r-=n%this.columnWidth?0:1,r=Math.min(this.cols-1,r);for(var a=(this._getOption("originTop")?i.top:i.bottom)+e.outerHeight,u=s;u<=r;u++)this.colYs[u]=Math.max(a,this.colYs[u])},i._getContainerSize=function(){this.maxY=Math.max.apply(Math,this.colYs);var t={height:this.maxY};return this._getOption("fitWidth")&&(t.width=this._getContainerFitWidth()),t},i._getContainerFitWidth=function(){for(var t=0,e=this.cols;--e&&0===this.colYs[e];)t++;return(this.cols-t)*this.columnWidth-this.gutter},i.needsResizeLayout=function(){var t=this.containerWidth;return this.getContainerWidth(),t!=this.containerWidth},e}),function(t,e){"function"==typeof define&&define.amd?define("isotope-layout/js/layout-modes/masonry",["../layout-mode","masonry-layout/masonry"],e):"object"==typeof module&&module.exports?module.exports=e(require("../layout-mode"),require("masonry-layout")):e(t.Isotope.LayoutMode,t.Masonry)}(window,function(t,e){"use strict";var i,o=t.create("masonry"),n=o.prototype,s={_getElementOffset:!0,layout:!0,_getMeasurement:!0};for(i in e.prototype)s[i]||(n[i]=e.prototype[i]);var r=n.measureColumns;n.measureColumns=function(){this.items=this.isotope.filteredItems,r.call(this)};var a=n._getOption;return n._getOption=function(t){return"fitWidth"==t?void 0!==this.options.isFitWidth?this.options.isFitWidth:this.options.fitWidth:a.apply(this.isotope,arguments)},o}),function(t,e){"function"==typeof define&&define.amd?define("isotope-layout/js/layout-modes/fit-rows",["../layout-mode"],e):"object"==typeof exports?module.exports=e(require("../layout-mode")):e(t.Isotope.LayoutMode)}(window,function(t){"use strict";var e=t.create("fitRows"),i=e.prototype;return i._resetLayout=function(){this.x=0,this.y=0,this.maxY=0,this._getMeasurement("gutter","outerWidth")},i._getItemLayoutPosition=function(t){t.getSize();var e=t.size.outerWidth+this.gutter,i=this.isotope.size.innerWidth+this.gutter;0!==this.x&&e+this.x>i&&(this.x=0,this.y=this.maxY);var o={x:this.x,y:this.y};return this.maxY=Math.max(this.maxY,this.y+t.size.outerHeight),this.x+=e,o},i._getContainerSize=function(){return{height:this.maxY}},e}),function(t,e){"function"==typeof define&&define.amd?define("isotope-layout/js/layout-modes/vertical",["../layout-mode"],e):"object"==typeof module&&module.exports?module.exports=e(require("../layout-mode")):e(t.Isotope.LayoutMode)}(window,function(t){"use strict";var e=t.create("vertical",{horizontalAlignment:0}),i=e.prototype;return i._resetLayout=function(){this.y=0},i._getItemLayoutPosition=function(t){t.getSize();var e=(this.isotope.size.innerWidth-t.size.outerWidth)*this.options.horizontalAlignment,i=this.y;return this.y+=t.size.outerHeight,{x:e,y:i}},i._getContainerSize=function(){return{height:this.y}},e}),function(r,a){"function"==typeof define&&define.amd?define(["outlayer/outlayer","get-size/get-size","desandro-matches-selector/matches-selector","fizzy-ui-utils/utils","isotope-layout/js/item","isotope-layout/js/layout-mode","isotope-layout/js/layout-modes/masonry","isotope-layout/js/layout-modes/fit-rows","isotope-layout/js/layout-modes/vertical"],function(t,e,i,o,n,s){return a(r,t,0,i,o,n,s)}):"object"==typeof module&&module.exports?module.exports=a(r,require("outlayer"),require("get-size"),require("desandro-matches-selector"),require("fizzy-ui-utils"),require("isotope-layout/js/item"),require("isotope-layout/js/layout-mode"),require("isotope-layout/js/layout-modes/masonry"),require("isotope-layout/js/layout-modes/fit-rows"),require("isotope-layout/js/layout-modes/vertical")):r.Isotope=a(r,r.Outlayer,r.getSize,r.matchesSelector,r.fizzyUIUtils,r.Isotope.Item,r.Isotope.LayoutMode)}(window,function(t,i,e,o,s,n,r){var a=t.jQuery,h=String.prototype.trim?function(t){return t.trim()}:function(t){return t.replace(/^\s+|\s+$/g,"")},d=i.create("isotope",{layoutMode:"masonry",isJQueryFiltering:!0,sortAscending:!0});d.Item=n,d.LayoutMode=r;var u=d.prototype;u._create=function(){for(var t in this.itemGUID=0,this._sorters={},this._getSorters(),i.prototype._create.call(this),this.modes={},this.filteredItems=this.items,this.sortHistory=["original-order"],r.modes)this._initLayoutMode(t)},u.reloadItems=function(){this.itemGUID=0,i.prototype.reloadItems.call(this)},u._itemize=function(){for(var t=i.prototype._itemize.apply(this,arguments),e=0;e<t.length;e++){t[e].id=this.itemGUID++}return this._updateItemsSortData(t),t},u._initLayoutMode=function(t){var e=r.modes[t],i=this.options[t]||{};this.options[t]=e.options?s.extend(e.options,i):i,this.modes[t]=new e(this)},u.layout=function(){return!this._isLayoutInited&&this._getOption("initLayout")?void this.arrange():void this._layout()},u._layout=function(){var t=this._getIsInstant();this._resetLayout(),this._manageStamps(),this.layoutItems(this.filteredItems,t),this._isLayoutInited=!0},u.arrange=function(t){this.option(t),this._getIsInstant();var e=this._filter(this.items);this.filteredItems=e.matches,this._bindArrangeComplete(),this._isInstant?this._noTransition(this._hideReveal,[e]):this._hideReveal(e),this._sort(),this._layout()},u._init=u.arrange,u._hideReveal=function(t){this.reveal(t.needReveal),this.hide(t.needHide)},u._getIsInstant=function(){var t=this._getOption("layoutInstant"),e=void 0!==t?t:!this._isLayoutInited;return this._isInstant=e},u._bindArrangeComplete=function(){function t(){e&&i&&o&&n.dispatchEvent("arrangeComplete",null,[n.filteredItems])}var e,i,o,n=this;this.once("layoutComplete",function(){e=!0,t()}),this.once("hideComplete",function(){i=!0,t()}),this.once("revealComplete",function(){o=!0,t()})},u._filter=function(t){for(var e=(e=this.options.filter)||"*",i=[],o=[],n=[],s=this._getFilterTest(e),r=0;r<t.length;r++){var a,u=t[r];u.isIgnored||((a=s(u))&&i.push(u),a&&u.isHidden?o.push(u):a||u.isHidden||n.push(u))}return{matches:i,needReveal:o,needHide:n}},u._getFilterTest=function(e){return a&&this.options.isJQueryFiltering?function(t){return a(t.element).is(e)}:"function"==typeof e?function(t){return e(t.element)}:function(t){return o(t.element,e)}},u.updateSortData=function(t){var e=t?(t=s.makeArray(t),this.getItems(t)):this.items;this._getSorters(),this._updateItemsSortData(e)},u._getSorters=function(){var t,e=this.options.getSortData;for(t in e){var i=e[t];this._sorters[t]=l(i)}},u._updateItemsSortData=function(t){for(var e=t&&t.length,i=0;e&&i<e;i++){t[i].updateSortData()}};var l=function(t){if("string"!=typeof t)return t;var e,i,o=h(t).split(" "),n=o[0],s=n.match(/^\[(.+)\]$/),r=s&&s[1],a=(i=n,(e=r)?function(t){return t.getAttribute(e)}:function(t){var e=t.querySelector(i);return e&&e.textContent}),u=d.sortDataParsers[o[1]];return u?function(t){return t&&u(a(t))}:function(t){return t&&a(t)}};d.sortDataParsers={parseInt:function(t){return parseInt(t,10)},parseFloat:function(t){return parseFloat(t)}},u._sort=function(){var t,e,r,a;this.options.sortBy&&(t=s.makeArray(this.options.sortBy),this._getIsSameSortBy(t)||(this.sortHistory=t.concat(this.sortHistory)),r=this.sortHistory,a=this.options.sortAscending,e=function(t,e){for(var i=0;i<r.length;i++){var o=r[i],n=t.sortData[o],s=e.sortData[o];if(s<n||n<s)return(s<n?1:-1)*((void 0!==a[o]?a[o]:a)?1:-1)}return 0},this.filteredItems.sort(e))},u._getIsSameSortBy=function(t){for(var e=0;e<t.length;e++)if(t[e]!=this.sortHistory[e])return!1;return!0},u._mode=function(){var t=this.options.layoutMode,e=this.modes[t];if(!e)throw new Error("No layout mode: "+t);return e.options=this.options[t],e},u._resetLayout=function(){i.prototype._resetLayout.call(this),this._mode()._resetLayout()},u._getItemLayoutPosition=function(t){return this._mode()._getItemLayoutPosition(t)},u._manageStamp=function(t){this._mode()._manageStamp(t)},u._getContainerSize=function(){return this._mode()._getContainerSize()},u.needsResizeLayout=function(){return this._mode().needsResizeLayout()},u.appended=function(t){var e,i=this.addItems(t);i.length&&(e=this._filterRevealAdded(i),this.filteredItems=this.filteredItems.concat(e))},u.prepended=function(t){var e,i=this._itemize(t);i.length&&(this._resetLayout(),this._manageStamps(),e=this._filterRevealAdded(i),this.layoutItems(this.filteredItems),this.filteredItems=e.concat(this.filteredItems),this.items=i.concat(this.items))},u._filterRevealAdded=function(t){var e=this._filter(t);return this.hide(e.needHide),this.reveal(e.matches),this.layoutItems(e.matches,!0),e.matches},u.insert=function(t){var e=this.addItems(t);if(e.length){for(var i,o=e.length,n=0;n<o;n++)i=e[n],this.element.appendChild(i.element);var s=this._filter(e).matches;for(n=0;n<o;n++)e[n].isLayoutInstant=!0;for(this.arrange(),n=0;n<o;n++)delete e[n].isLayoutInstant;this.reveal(s)}};var c=u.remove;return u.remove=function(t){t=s.makeArray(t);var e=this.getItems(t);c.call(this,t);for(var i=e&&e.length,o=0;i&&o<i;o++){var n=e[o];s.removeFrom(this.filteredItems,n)}},u.shuffle=function(){for(var t=0;t<this.items.length;t++){this.items[t].sortData.random=Math.random()}this.options.sortBy="random",this._sort(),this._layout()},u._noTransition=function(t,e){var i=this.options.transitionDuration;this.options.transitionDuration=0;var o=t.apply(this,e);return this.options.transitionDuration=i,o},u.getFilteredItemElements=function(){return this.filteredItems.map(function(t){return t.element})},d});
//# sourceMappingURL=data:application/json;charset=utf8;base64,

!function(r){r.fn.cond=function(){for(var n,t,i,c,l=arguments,o=0;!t&&o<l.length;)t=l[o++],i=l[o++],t=r.isFunction(t)?t.call(this):t,c=i?t?i.call(this,t):n:t;return c!==n?c:this}}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoianF1ZXJ5LmJhLWNvbmQubWluLmpzIiwic291cmNlcyI6WyJqcXVlcnkuYmEtY29uZC5taW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIGNvbmQgLSB2MC4xIC0gNi8xMC8yMDA5XG4gKiBodHRwOi8vYmVuYWxtYW4uY29tL3Byb2plY3RzL2pxdWVyeS1jb25kLXBsdWdpbi9cbiAqIFxuICogQ29weXJpZ2h0IChjKSAyMDA5IFwiQ293Ym95XCIgQmVuIEFsbWFuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2VcbiAqIGh0dHA6Ly9iZW5hbG1hbi5jb20vYWJvdXQvbGljZW5zZS9cbiAqIFxuICogQmFzZWQgb24gc3VnZ2VzdGlvbnMgYW5kIHNhbXBsZSBjb2RlIGJ5IFN0ZXBoZW4gQmFuZCBhbmQgREJKREJKIGluIHRoZVxuICoganF1ZXJ5LWRldiBHb29nbGUgZ3JvdXA6IGh0dHA6Ly9iaXQubHkvanFiYTFcbiAqL1xuKGZ1bmN0aW9uKCQpeyQuZm4uY29uZD1mdW5jdGlvbigpe3ZhciBlLGE9YXJndW1lbnRzLGI9MCxmLGQsYzt3aGlsZSghZiYmYjxhLmxlbmd0aCl7Zj1hW2IrK107ZD1hW2IrK107Zj0kLmlzRnVuY3Rpb24oZik/Zi5jYWxsKHRoaXMpOmY7Yz0hZD9mOmY/ZC5jYWxsKHRoaXMsZik6ZX1yZXR1cm4gYyE9PWU/Yzp0aGlzfX0pKGpRdWVyeSk7Il0sIm5hbWVzIjpbIiQiLCJmbiIsImNvbmQiLCJlIiwiZiIsImQiLCJjIiwiYSIsImFyZ3VtZW50cyIsImIiLCJsZW5ndGgiLCJpc0Z1bmN0aW9uIiwiY2FsbCIsInRoaXMiLCJqUXVlcnkiXSwibWFwcGluZ3MiOiJDQVdBLFNBQVVBLEdBQUdBLEVBQUVDLEdBQUdDLEtBQUssV0FBdUMsSUFBNUIsSUFBSUMsRUFBa0JDLEVBQUVDLEVBQUVDLEVBQXBCQyxFQUFFQyxVQUFVQyxFQUFFLEdBQWVMLEdBQUdLLEVBQUVGLEVBQUVHLFFBQVFOLEVBQUVHLEVBQUVFLEtBQUtKLEVBQUVFLEVBQUVFLEtBQUtMLEVBQUVKLEVBQUVXLFdBQVdQLEdBQUdBLEVBQUVRLEtBQUtDLE1BQU1ULEVBQUVFLEVBQUdELEVBQUlELEVBQUVDLEVBQUVPLEtBQUtDLEtBQUtULEdBQUdELEVBQW5CQyxFQUFxQixPQUFPRSxJQUFJSCxFQUFFRyxFQUFFTyxNQUFoTCxDQUF3TEMifQ==

window.Modernizr=window.Modernizr||function(e){var t,i,r={},s=e.documentElement,n=e.createElement("modernizr"),o=n.style,a=" -webkit- -moz- -o- -ms- ".split(" "),l="http://www.w3.org/2000/svg",d={},h=[],g=h.slice,c={}.hasOwnProperty,u=void 0===c||void 0===c.call?function(t,e){return e in t&&void 0===t.constructor.prototype[e]}:function(t,e){return c.call(t,e)};for(i in Function.prototype.bind||(Function.prototype.bind=function(r){var s=this;if("function"!=typeof s)throw new TypeError;var n=g.call(arguments,1),o=function(){if(this instanceof o){function t(){}t.prototype=s.prototype;var e=new t,i=s.apply(e,n.concat(g.call(arguments)));return Object(i)===i?i:e}return s.apply(r,n.concat(g.call(arguments)))};return o}),d.inlinesvg=function(){var t=e.createElement("div");return t.innerHTML="<svg/>",(t.firstChild&&t.firstChild.namespaceURI)==l},d)u(d,i)&&(t=i.toLowerCase(),r[t]=d[i](),h.push((r[t]?"":"no-")+t));return r.addTest=function(t,e){if("object"==typeof t)for(var i in t)u(t,i)&&r.addTest(i,t[i]);else{if(t=t.toLowerCase(),void 0!==r[t])return r;e="function"==typeof e?e():e,"undefined"!=typeof enableClasses&&enableClasses&&(s.className+=" "+(e?"":"no-")+t),r[t]=e}return r},o.cssText="",r._version="2.8.3",r._prefixes=a,r}(this.document),Modernizr.addTest("cssfilters",function(){var t=document.createElement("div");return t.style.cssText=Modernizr._prefixes.join("filter:blur(2px); "),!!t.style.length&&(void 0===document.documentMode||9<document.documentMode)}),Modernizr.addTest("svgfilters",function(){var t=!1;try{t=2==SVGFEColorMatrixElement.SVG_FECOLORMATRIX_TYPE_SATURATE}catch(t){}return t}),function(d,a){function e(t,e){var i=((e=e||{}).classes||{}).fade||s.classes.fade;e.fade=e.fade||-1<t.className.indexOf(i),this.element=t,this.elementId=n++,this.settings=d.extend({},s,e),this._defaults=s,this._name=r,this.init()}var r="gray",s={fade:!1,classes:{fade:"grayscale-fade"}},n=0;d.extend(e.prototype,{init:function(){var t;!Modernizr.cssfilters&&Modernizr.inlinesvg&&Modernizr.svgfilters&&(t=d(this.element),(this.cssFilterDeprecated(t)||this.settings.fade)&&this.switchImage(t))},cssFilterDeprecated:function(t){return"none"===t.css("filter")},elementType:function(t){return"IMG"===t.prop("tagName")?"Img":"Bg"},pxToNumber:function(t){return parseInt(t.replace("px",""))},getComputedStyle:function(t){for(var e={},i={},r=0,s=(e=a.getComputedStyle(t,null)).length;r<s;r++){var n=e[r],o=e.getPropertyValue(n);i[n]=o}return i},extractUrl:function(t){return startRegex=/^url\(["']?/,endRegex=/["']?\)$/,t.replace(startRegex,"").replace(endRegex,"")},positionToNegativeMargin:function(t){var e=t.match(/^(-?\d+\S+)/)[0];return"margin:"+t.match(/\s(-?\d+\S+)$/)[0]+" 0 0 "+e},getBgSize:function(t,e){var i,r,s,n,o,a,l;return(l=new Image).src=t,"auto"!==e&&"cover"!==e&&"contain"!==e&&"inherit"!==e&&(i=d(this.element),r=l.width/l.height,s=parseInt((e.match(/^(\d+)px/)||[0,0])[1]),n=parseInt((e.match(/\s(\d+)px$/)||[0,0])[1]),o=i.height()*r,a=i.width()/r,s=s||o,n=n||a),s||n?{width:s,height:n}:{width:l.width,height:l.height}},getImgParams:function(t){var e={};e.styles=this.getComputedStyle(t[0]);var i={top:this.pxToNumber(e.styles["padding-top"]),right:this.pxToNumber(e.styles["padding-right"]),bottom:this.pxToNumber(e.styles["padding-bottom"]),left:this.pxToNumber(e.styles["padding-left"])},r={top:this.pxToNumber(e.styles["border-top-width"]),right:this.pxToNumber(e.styles["border-right-width"]),bottom:this.pxToNumber(e.styles["border-bottom-width"]),left:this.pxToNumber(e.styles["border-left-width"])};return e.image={width:this.pxToNumber(e.styles.width),height:this.pxToNumber(e.styles.height)},e.svg={url:t[0].src,padding:i,borderWidth:r,width:e.image.width+i.left+i.right+r.left+r.right,height:e.image.height+i.top+i.bottom+r.top+r.bottom,offset:""},e},getBgParams:function(t){var e={},i=this.extractUrl(t.css("background-image"));return bgSize=this.getBgSize(i,t.css("background-size")),offset=this.positionToNegativeMargin(t.css("background-position")),e.styles=this.getComputedStyle(t[0]),e.svg=d.extend({url:i},bgSize,{offset:offset}),e.image={width:e.svg.width,height:e.svg.height},e},setStyles:function(t,e,i,r){return e.display="inline-block",e.overflow=e["overflow-x"]=e["overflow-y"]="hidden",e["background-image"]='url("'+i.url+'")',e["background-size"]=r.width+"px "+r.height+"px","Img"===t&&(e["background-repeat"]="no-repeat",e["background-position"]=i.padding.left+"px "+i.padding.top+"px",e.width=i.width,e.height=i.height),delete e.filter,e},addSVGFilterOnce:function(){$body=d("body"),$body.data("plugin_gray_has_filter")||$body.data("plugin_gray_has_filter","true").append('<svg version="1.1" xmlns="http://www.w3.org/2000/svg" width="0" height="0" style="position:absolute"><defs><filter id="gray"><feColorMatrix type="saturate" values="0"/></filter></defs></svg>')},switchImage:function(t){var e=this.elementType(t),i=this["get"+e+"Params"](t),r=this.settings.fade?this.settings.classes.fade:"",s=t[0].alt?' aria-labelledby="gray-title-'+this.elementId+'"':"",n=t[0].alt?'<title id="gray-title-'+this.elementId+'">'+t[0].alt+"</title>":"",o=d('<div class="grayscale grayscale-replaced '+r+'"><svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 '+i.svg.width+" "+i.svg.height+'" width="'+i.svg.width+'" height="'+i.svg.height+'" style="'+i.svg.offset+'" role="img"'+s+">"+n+'<image filter="url(&quot;#gray&quot;)" x="0" y="0" width="'+i.image.width+'" height="'+i.image.height+'" preserveAspectRatio="none" xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="'+i.svg.url+'" /></svg></div>');i.styles=this.setStyles(e,i.styles,i.svg,i.image),o.css(i.styles),this.addSVGFilterOnce(),t.replaceWith(o)}}),d.fn[r]=function(t){return this.each(function(){d.data(this,"plugin_"+r)||d.data(this,"plugin_"+r,new e(this,t))}),this},d(a).on("load",function(){d(".grayscale:not(.grayscale-replaced)")[r]()})}(jQuery,window,document);
//# sourceMappingURL=data:application/json;charset=utf8;base64,

!function(e){"function"==typeof define&&define.amd?define(["jquery"],e):"object"==typeof exports?e(require("jquery")):e(window.jQuery||window.Zepto)}(function(d){function e(){}function u(e,t){g.ev.on(n+e+w,t)}function p(e,t,n,i){var o=document.createElement("div");return o.className="mfp-"+e,n&&(o.innerHTML=n),i?t&&t.appendChild(o):(o=d(o),t&&o.appendTo(t)),o}function f(e,t){g.ev.triggerHandler(n+e,t),g.st.callbacks&&(e=e.charAt(0).toLowerCase()+e.slice(1),g.st.callbacks[e]&&g.st.callbacks[e].apply(g,d.isArray(t)?t:[t]))}function m(e){return e===t&&g.currTemplate.closeBtn||(g.currTemplate.closeBtn=d(g.st.closeMarkup.replace("%title%",g.st.tClose)),t=e),g.currTemplate.closeBtn}function r(){d.magnificPopup.instance||((g=new e).init(),d.magnificPopup.instance=g)}var g,i,h,o,v,t,l="Close",c="BeforeClose",y="MarkupParse",C="Open",a="Change",n="mfp",w="."+n,b="mfp-ready",s="mfp-removing",I="mfp-prevent-close",x=!!window.jQuery,k=d(window);e.prototype={constructor:e,init:function(){var e=navigator.appVersion;g.isLowIE=g.isIE8=document.all&&!document.addEventListener,g.isAndroid=/android/gi.test(e),g.isIOS=/iphone|ipad|ipod/gi.test(e),g.supportsTransition=function(){var e=document.createElement("p").style,t=["ms","O","Moz","Webkit"];if(void 0!==e.transition)return!0;for(;t.length;)if(t.pop()+"Transition"in e)return!0;return!1}(),g.probablyMobile=g.isAndroid||g.isIOS||/(Opera Mini)|Kindle|webOS|BlackBerry|(Opera Mobi)|(Windows Phone)|IEMobile/i.test(navigator.userAgent),h=d(document),g.popupsCache={}},open:function(e){if(!1===e.isObj){g.items=e.items.toArray(),g.index=0;for(var t,n=e.items,i=0;i<n.length;i++)if((t=n[i]).parsed&&(t=t.el[0]),t===e.el[0]){g.index=i;break}}else g.items=d.isArray(e.items)?e.items:[e.items],g.index=e.index||0;if(!g.isOpen){g.types=[],v="",e.mainEl&&e.mainEl.length?g.ev=e.mainEl.eq(0):g.ev=h,e.key?(g.popupsCache[e.key]||(g.popupsCache[e.key]={}),g.currTemplate=g.popupsCache[e.key]):g.currTemplate={},g.st=d.extend(!0,{},d.magnificPopup.defaults,e),g.fixedContentPos="auto"===g.st.fixedContentPos?!g.probablyMobile:g.st.fixedContentPos,g.st.modal&&(g.st.closeOnContentClick=!1,g.st.closeOnBgClick=!1,g.st.showCloseBtn=!1,g.st.enableEscapeKey=!1),g.bgOverlay||(g.bgOverlay=p("bg").on("click"+w,function(){g.close()}),g.wrap=p("wrap").attr("tabindex",-1).on("click"+w,function(e){g._checkIfClose(e.target)&&g.close()}),g.container=p("container",g.wrap)),g.contentContainer=p("content"),g.st.preloader&&(g.preloader=p("preloader",g.container,g.st.tLoading));var o=d.magnificPopup.modules;for(i=0;i<o.length;i++){var r=(r=o[i]).charAt(0).toUpperCase()+r.slice(1);g["init"+r].call(g)}f("BeforeOpen"),g.st.showCloseBtn&&(g.st.closeBtnInside?(u(y,function(e,t,n,i){n.close_replaceWith=m(i.type)}),v+=" mfp-close-btn-in"):g.wrap.append(m())),g.st.alignTop&&(v+=" mfp-align-top"),g.fixedContentPos?g.wrap.css({overflow:g.st.overflowY,overflowX:"hidden",overflowY:g.st.overflowY}):g.wrap.css({top:k.scrollTop(),position:"absolute"}),!1!==g.st.fixedBgPos&&("auto"!==g.st.fixedBgPos||g.fixedContentPos)||g.bgOverlay.css({height:h.height(),position:"absolute"}),g.st.enableEscapeKey&&h.on("keyup"+w,function(e){27===e.keyCode&&g.close()}),k.on("resize"+w,function(){g.updateSize()}),g.st.closeOnContentClick||(v+=" mfp-auto-cursor"),v&&g.wrap.addClass(v);var a,s=g.wH=k.height(),l={};g.fixedContentPos&&(!g._hasScrollBar(s)||(a=g._getScrollbarSize())&&(l.marginRight=a)),g.fixedContentPos&&(g.isIE7?d("body, html").css("overflow","hidden"):l.overflow="hidden");var c=g.st.mainClass;return g.isIE7&&(c+=" mfp-ie7"),c&&g._addClassToMFP(c),g.updateItemHTML(),f("BuildControls"),d("html").css(l),g.bgOverlay.add(g.wrap).prependTo(g.st.prependTo||d(document.body)),g._lastFocusedEl=document.activeElement,setTimeout(function(){g.content?(g._addClassToMFP(b),g._setFocus()):g.bgOverlay.addClass(b),h.on("focusin"+w,g._onFocusIn)},16),g.isOpen=!0,g.updateSize(s),f(C),e}g.updateItemHTML()},close:function(){g.isOpen&&(f(c),g.isOpen=!1,g.st.removalDelay&&!g.isLowIE&&g.supportsTransition?(g._addClassToMFP(s),setTimeout(function(){g._close()},g.st.removalDelay)):g._close())},_close:function(){f(l);var e,t=s+" "+b+" ";g.bgOverlay.detach(),g.wrap.detach(),g.container.empty(),g.st.mainClass&&(t+=g.st.mainClass+" "),g._removeClassFromMFP(t),g.fixedContentPos&&(e={marginRight:""},g.isIE7?d("body, html").css("overflow",""):e.overflow="",d("html").css(e)),h.off("keyup.mfp focusin"+w),g.ev.off(w),g.wrap.attr("class","mfp-wrap").removeAttr("style"),g.bgOverlay.attr("class","mfp-bg"),g.container.attr("class","mfp-container"),!g.st.showCloseBtn||g.st.closeBtnInside&&!0!==g.currTemplate[g.currItem.type]||g.currTemplate.closeBtn&&g.currTemplate.closeBtn.detach(),g.st.autoFocusLast&&g._lastFocusedEl&&d(g._lastFocusedEl).focus(),g.currItem=null,g.content=null,g.currTemplate=null,g.prevHeight=0,f("AfterClose")},updateSize:function(e){var t,n;g.isIOS?(t=document.documentElement.clientWidth/window.innerWidth,n=window.innerHeight*t,g.wrap.css("height",n),g.wH=n):g.wH=e||k.height(),g.fixedContentPos||g.wrap.css("height",g.wH),f("Resize")},updateItemHTML:function(){var e=g.items[g.index];g.contentContainer.detach(),g.content&&g.content.detach(),e.parsed||(e=g.parseEl(g.index));var t,n=e.type;f("BeforeChange",[g.currItem?g.currItem.type:"",n]),g.currItem=e,g.currTemplate[n]||(t=!!g.st[n]&&g.st[n].markup,f("FirstMarkupParse",t),g.currTemplate[n]=!t||d(t)),o&&o!==e.type&&g.container.removeClass("mfp-"+o+"-holder");var i=g["get"+n.charAt(0).toUpperCase()+n.slice(1)](e,g.currTemplate[n]);g.appendContent(i,n),e.preloaded=!0,f(a,e),o=e.type,g.container.prepend(g.contentContainer),f("AfterChange")},appendContent:function(e,t){(g.content=e)?g.st.showCloseBtn&&g.st.closeBtnInside&&!0===g.currTemplate[t]?g.content.find(".mfp-close").length||g.content.append(m()):g.content=e:g.content="",f("BeforeAppend"),g.container.addClass("mfp-"+t+"-holder"),g.contentContainer.append(g.content)},parseEl:function(e){var t,n=g.items[e];if((n=n.tagName?{el:d(n)}:(t=n.type,{data:n,src:n.src})).el){for(var i=g.types,o=0;o<i.length;o++)if(n.el.hasClass("mfp-"+i[o])){t=i[o];break}n.src=n.el.attr("data-mfp-src"),n.src||(n.src=n.el.attr("href"))}return n.type=t||g.st.type||"inline",n.index=e,n.parsed=!0,g.items[e]=n,f("ElementParse",n),g.items[e]},addGroup:function(t,n){function e(e){e.mfpEl=this,g._openClick(e,t,n)}var i="click.magnificPopup";(n=n||{}).mainEl=t,n.items?(n.isObj=!0,t.off(i).on(i,e)):(n.isObj=!1,n.delegate?t.off(i).on(i,n.delegate,e):(n.items=t).off(i).on(i,e))},_openClick:function(e,t,n){if((void 0!==n.midClick?n.midClick:d.magnificPopup.defaults.midClick)||!(2===e.which||e.ctrlKey||e.metaKey||e.altKey||e.shiftKey)){var i=void 0!==n.disableOn?n.disableOn:d.magnificPopup.defaults.disableOn;if(i)if(d.isFunction(i)){if(!i.call(g))return!0}else if(k.width()<i)return!0;e.type&&(e.preventDefault(),g.isOpen&&e.stopPropagation()),n.el=d(e.mfpEl),n.delegate&&(n.items=t.find(n.delegate)),g.open(n)}},updateStatus:function(e,t){var n;g.preloader&&(i!==e&&g.container.removeClass("mfp-s-"+i),t||"loading"!==e||(t=g.st.tLoading),f("UpdateStatus",n={status:e,text:t}),e=n.status,t=n.text,g.preloader.html(t),g.preloader.find("a").on("click",function(e){e.stopImmediatePropagation()}),g.container.addClass("mfp-s-"+e),i=e)},_checkIfClose:function(e){if(!d(e).hasClass(I)){var t=g.st.closeOnContentClick,n=g.st.closeOnBgClick;if(t&&n)return!0;if(!g.content||d(e).hasClass("mfp-close")||g.preloader&&e===g.preloader[0])return!0;if(e===g.content[0]||d.contains(g.content[0],e)){if(t)return!0}else if(n&&d.contains(document,e))return!0;return!1}},_addClassToMFP:function(e){g.bgOverlay.addClass(e),g.wrap.addClass(e)},_removeClassFromMFP:function(e){this.bgOverlay.removeClass(e),g.wrap.removeClass(e)},_hasScrollBar:function(e){return(g.isIE7?h.height():document.body.scrollHeight)>(e||k.height())},_setFocus:function(){(g.st.focus?g.content.find(g.st.focus).eq(0):g.wrap).focus()},_onFocusIn:function(e){if(e.target!==g.wrap[0]&&!d.contains(g.wrap[0],e.target))return g._setFocus(),!1},_parseMarkup:function(o,e,t){var r;t.data&&(e=d.extend(t.data,e)),f(y,[o,e,t]),d.each(e,function(e,t){return void 0===t||!1===t||void(1<(r=e.split("_")).length?0<(n=o.find(w+"-"+r[0])).length&&("replaceWith"===(i=r[1])?n[0]!==t[0]&&n.replaceWith(t):"img"===i?n.is("img")?n.attr("src",t):n.replaceWith(d("<img>").attr("src",t).attr("class",n.attr("class"))):n.attr(r[1],t)):o.find(w+"-"+e).html(t));var n,i})},_getScrollbarSize:function(){var e;return void 0===g.scrollbarSize&&((e=document.createElement("div")).style.cssText="width: 99px; height: 99px; overflow: scroll; position: absolute; top: -9999px;",document.body.appendChild(e),g.scrollbarSize=e.offsetWidth-e.clientWidth,document.body.removeChild(e)),g.scrollbarSize}},d.magnificPopup={instance:null,proto:e.prototype,modules:[],open:function(e,t){return r(),(e=e?d.extend(!0,{},e):{}).isObj=!0,e.index=t||0,this.instance.open(e)},close:function(){return d.magnificPopup.instance&&d.magnificPopup.instance.close()},registerModule:function(e,t){t.options&&(d.magnificPopup.defaults[e]=t.options),d.extend(this.proto,t.proto),this.modules.push(e)},defaults:{disableOn:0,key:null,midClick:!1,mainClass:"",preloader:!0,focus:"",closeOnContentClick:!1,closeOnBgClick:!0,closeBtnInside:!0,showCloseBtn:!0,enableEscapeKey:!0,modal:!1,alignTop:!1,removalDelay:0,prependTo:null,fixedContentPos:"auto",fixedBgPos:"auto",overflowY:"auto",closeMarkup:'<button title="%title%" type="button" class="mfp-close">&#215;</button>',tClose:"Close (Esc)",tLoading:"Loading...",autoFocusLast:!0}},d.fn.magnificPopup=function(e){r();var t,n,i,o=d(this);return"string"==typeof e?"open"===e?(t=x?o.data("magnificPopup"):o[0].magnificPopup,n=parseInt(arguments[1],10)||0,i=t.items?t.items[n]:(i=o,t.delegate&&(i=i.find(t.delegate)),i.eq(n)),g._openClick({mfpEl:i},o,t)):g.isOpen&&g[e].apply(g,Array.prototype.slice.call(arguments,1)):(e=d.extend(!0,{},e),x?o.data("magnificPopup",e):o[0].magnificPopup=e,g.addGroup(o,e)),o};function T(){S&&(P.after(S.addClass(_)).detach(),S=null)}var _,P,S,E="inline";d.magnificPopup.registerModule(E,{options:{hiddenClass:"hide",markup:"",tNotFound:"Content not found"},proto:{initInline:function(){g.types.push(E),u(l+"."+E,function(){T()})},getInline:function(e,t){if(T(),e.src){var n,i=g.st.inline,o=d(e.src);return o.length?((n=o[0].parentNode)&&n.tagName&&(P||(_=i.hiddenClass,P=p(_),_="mfp-"+_),S=o.after(P).detach().removeClass(_)),g.updateStatus("ready")):(g.updateStatus("error",i.tNotFound),o=d("<div>")),e.inlineElement=o}return g.updateStatus("ready"),g._parseMarkup(t,{},e),t}}});function z(){M&&d(document.body).removeClass(M)}function O(){z(),g.req&&g.req.abort()}var M,B="ajax";d.magnificPopup.registerModule(B,{options:{settings:null,cursor:"mfp-ajax-cur",tError:'<a href="%url%">The content</a> could not be loaded.'},proto:{initAjax:function(){g.types.push(B),M=g.st.ajax.cursor,u(l+"."+B,O),u("BeforeChange."+B,O)},getAjax:function(o){M&&d(document.body).addClass(M),g.updateStatus("loading");var e=d.extend({url:o.src,success:function(e,t,n){var i={data:e,xhr:n};f("ParseAjax",i),g.appendContent(d(i.data),B),o.finished=!0,z(),g._setFocus(),setTimeout(function(){g.wrap.addClass(b)},16),g.updateStatus("ready"),f("AjaxContentAdded")},error:function(){z(),o.finished=o.loadError=!0,g.updateStatus("error",g.st.ajax.tError.replace("%url%",o.src))}},g.st.ajax.settings);return g.req=d.ajax(e),""}}});var L;d.magnificPopup.registerModule("image",{options:{markup:'<div class="mfp-figure"><div class="mfp-close"></div><figure><div class="mfp-img"></div><figcaption><div class="mfp-bottom-bar"><div class="mfp-title"></div><div class="mfp-counter"></div></div></figcaption></figure></div>',cursor:"mfp-zoom-out-cur",titleSrc:"title",verticalFit:!0,tError:'<a href="%url%">The image</a> could not be loaded.'},proto:{initImage:function(){var e=g.st.image,t=".image";g.types.push("image"),u(C+t,function(){"image"===g.currItem.type&&e.cursor&&d(document.body).addClass(e.cursor)}),u(l+t,function(){e.cursor&&d(document.body).removeClass(e.cursor),k.off("resize"+w)}),u("Resize"+t,g.resizeImage),g.isLowIE&&u("AfterChange",g.resizeImage)},resizeImage:function(){var e,t=g.currItem;t&&t.img&&g.st.image.verticalFit&&(e=0,g.isLowIE&&(e=parseInt(t.img.css("padding-top"),10)+parseInt(t.img.css("padding-bottom"),10)),t.img.css("max-height",g.wH-e))},_onImageHasSize:function(e){e.img&&(e.hasSize=!0,L&&clearInterval(L),e.isCheckingImgSize=!1,f("ImageHasSize",e),e.imgHidden&&(g.content&&g.content.removeClass("mfp-loading"),e.imgHidden=!1))},findImageSize:function(t){var n=0,i=t.img[0],o=function(e){L&&clearInterval(L),L=setInterval(function(){0<i.naturalWidth?g._onImageHasSize(t):(200<n&&clearInterval(L),3===++n?o(10):40===n?o(50):100===n&&o(500))},e)};o(1)},getImage:function(e,t){var n,i=0,o=function(){e&&(e.img[0].complete?(e.img.off(".mfploader"),e===g.currItem&&(g._onImageHasSize(e),g.updateStatus("ready")),e.hasSize=!0,e.loaded=!0,f("ImageLoadComplete")):++i<200?setTimeout(o,100):r())},r=function(){e&&(e.img.off(".mfploader"),e===g.currItem&&(g._onImageHasSize(e),g.updateStatus("error",a.tError.replace("%url%",e.src))),e.hasSize=!0,e.loaded=!0,e.loadError=!0)},a=g.st.image,s=t.find(".mfp-img");return s.length&&((n=document.createElement("img")).className="mfp-img",e.el&&e.el.find("img").length&&(n.alt=e.el.find("img").attr("alt")),e.img=d(n).on("load.mfploader",o).on("error.mfploader",r),n.src=e.src,s.is("img")&&(e.img=e.img.clone()),0<(n=e.img[0]).naturalWidth?e.hasSize=!0:n.width||(e.hasSize=!1)),g._parseMarkup(t,{title:function(e){if(e.data&&void 0!==e.data.title)return e.data.title;var t=g.st.image.titleSrc;if(t){if(d.isFunction(t))return t.call(g,e);if(e.el)return e.el.attr(t)||""}return""}(e),img_replaceWith:e.img},e),g.resizeImage(),e.hasSize?(L&&clearInterval(L),e.loadError?(t.addClass("mfp-loading"),g.updateStatus("error",a.tError.replace("%url%",e.src))):(t.removeClass("mfp-loading"),g.updateStatus("ready"))):(g.updateStatus("loading"),e.loading=!0,e.hasSize||(e.imgHidden=!0,t.addClass("mfp-loading"),g.findImageSize(e))),t}}});var H;d.magnificPopup.registerModule("zoom",{options:{enabled:!1,easing:"ease-in-out",duration:300,opener:function(e){return e.is("img")?e:e.find("img")}},proto:{initZoom:function(){var e,t,n,i,o,r,a=g.st.zoom,s=".zoom";a.enabled&&g.supportsTransition&&(t=a.duration,n=function(e){var t=e.clone().removeAttr("style").removeAttr("class").addClass("mfp-animated-image"),n="all "+a.duration/1e3+"s "+a.easing,i={position:"fixed",zIndex:9999,left:0,top:0,"-webkit-backface-visibility":"hidden"},o="transition";return i["-webkit-"+o]=i["-moz-"+o]=i["-o-"+o]=i[o]=n,t.css(i),t},i=function(){g.content.css("visibility","visible")},u("BuildControls"+s,function(){if(g._allowZoom()){if(clearTimeout(o),g.content.css("visibility","hidden"),!(e=g._getItemToZoom()))return void i();(r=n(e)).css(g._getOffset()),g.wrap.append(r),o=setTimeout(function(){r.css(g._getOffset(!0)),o=setTimeout(function(){i(),setTimeout(function(){r.remove(),e=r=null,f("ZoomAnimationEnded")},16)},t)},16)}}),u(c+s,function(){if(g._allowZoom()){if(clearTimeout(o),g.st.removalDelay=t,!e){if(!(e=g._getItemToZoom()))return;r=n(e)}r.css(g._getOffset(!0)),g.wrap.append(r),g.content.css("visibility","hidden"),setTimeout(function(){r.css(g._getOffset())},16)}}),u(l+s,function(){g._allowZoom()&&(i(),r&&r.remove(),e=null)}))},_allowZoom:function(){return"image"===g.currItem.type},_getItemToZoom:function(){return!!g.currItem.hasSize&&g.currItem.img},_getOffset:function(e){var t=e?g.currItem.img:g.st.zoom.opener(g.currItem.el||g.currItem),n=t.offset(),i=parseInt(t.css("padding-top"),10),o=parseInt(t.css("padding-bottom"),10);n.top-=d(window).scrollTop()-i;var r={width:t.width(),height:(x?t.innerHeight():t[0].offsetHeight)-o-i};return void 0===H&&(H=void 0!==document.createElement("p").style.MozTransform),H?r["-moz-transform"]=r.transform="translate("+n.left+"px,"+n.top+"px)":(r.left=n.left,r.top=n.top),r}}});function A(e){var t;!g.currTemplate[F]||(t=g.currTemplate[F].find("iframe")).length&&(e||(t[0].src="//about:blank"),g.isIE8&&t.css("display",e?"block":"none"))}var F="iframe";d.magnificPopup.registerModule(F,{options:{markup:'<div class="mfp-iframe-scaler"><div class="mfp-close"></div><iframe class="mfp-iframe" src="//about:blank" frameborder="0" allowfullscreen></iframe></div>',srcAction:"iframe_src",patterns:{youtube:{index:"youtube.com",id:"v=",src:"//www.youtube.com/embed/%id%?autoplay=1"},vimeo:{index:"vimeo.com/",id:"/",src:"//player.vimeo.com/video/%id%?autoplay=1"},gmaps:{index:"//maps.google.",src:"%id%&output=embed"}}},proto:{initIframe:function(){g.types.push(F),u("BeforeChange",function(e,t,n){t!==n&&(t===F?A():n===F&&A(!0))}),u(l+"."+F,function(){A()})},getIframe:function(e,t){var n=e.src,i=g.st.iframe;d.each(i.patterns,function(){if(-1<n.indexOf(this.index))return this.id&&(n="string"==typeof this.id?n.substr(n.lastIndexOf(this.id)+this.id.length,n.length):this.id.call(this,n)),n=this.src.replace("%id%",n),!1});var o={};return i.srcAction&&(o[i.srcAction]=n),g._parseMarkup(t,o,e),g.updateStatus("ready"),t}}});function j(e){var t=g.items.length;return t-1<e?e-t:e<0?t+e:e}function N(e,t,n){return e.replace(/%curr%/gi,t+1).replace(/%total%/gi,n)}d.magnificPopup.registerModule("gallery",{options:{enabled:!1,arrowMarkup:'<button title="%title%" type="button" class="mfp-arrow mfp-arrow-%dir%"></button>',preload:[0,2],navigateByImgClick:!0,arrows:!0,tPrev:"Previous (Left arrow key)",tNext:"Next (Right arrow key)",tCounter:"%curr% of %total%"},proto:{initGallery:function(){var r=g.st.gallery,e=".mfp-gallery";if(g.direction=!0,!r||!r.enabled)return!1;v+=" mfp-gallery",u(C+e,function(){r.navigateByImgClick&&g.wrap.on("click"+e,".mfp-img",function(){if(1<g.items.length)return g.next(),!1}),h.on("keydown"+e,function(e){37===e.keyCode?g.prev():39===e.keyCode&&g.next()})}),u("UpdateStatus"+e,function(e,t){t.text&&(t.text=N(t.text,g.currItem.index,g.items.length))}),u(y+e,function(e,t,n,i){var o=g.items.length;n.counter=1<o?N(r.tCounter,i.index,o):""}),u("BuildControls"+e,function(){var e,t,n;1<g.items.length&&r.arrows&&!g.arrowLeft&&(e=r.arrowMarkup,t=g.arrowLeft=d(e.replace(/%title%/gi,r.tPrev).replace(/%dir%/gi,"left")).addClass(I),n=g.arrowRight=d(e.replace(/%title%/gi,r.tNext).replace(/%dir%/gi,"right")).addClass(I),t.click(function(){g.prev()}),n.click(function(){g.next()}),g.container.append(t.add(n)))}),u(a+e,function(){g._preloadTimeout&&clearTimeout(g._preloadTimeout),g._preloadTimeout=setTimeout(function(){g.preloadNearbyImages(),g._preloadTimeout=null},16)}),u(l+e,function(){h.off(e),g.wrap.off("click"+e),g.arrowRight=g.arrowLeft=null})},next:function(){g.direction=!0,g.index=j(g.index+1),g.updateItemHTML()},prev:function(){g.direction=!1,g.index=j(g.index-1),g.updateItemHTML()},goTo:function(e){g.direction=e>=g.index,g.index=e,g.updateItemHTML()},preloadNearbyImages:function(){for(var e=g.st.gallery.preload,t=Math.min(e[0],g.items.length),n=Math.min(e[1],g.items.length),i=1;i<=(g.direction?n:t);i++)g._preloadItem(g.index+i);for(i=1;i<=(g.direction?t:n);i++)g._preloadItem(g.index-i)},_preloadItem:function(e){var t;e=j(e),g.items[e].preloaded||((t=g.items[e]).parsed||(t=g.parseEl(e)),f("LazyLoad",t),"image"===t.type&&(t.img=d('<img class="mfp-img" />').on("load.mfploader",function(){t.hasSize=!0}).on("error.mfploader",function(){t.hasSize=!0,t.loadError=!0,f("LazyLoadError",t)}).attr("src",t.src)),t.preloaded=!0)}}});var W="retina";d.magnificPopup.registerModule(W,{options:{replaceSrc:function(e){return e.src.replace(/\.\w+$/,function(e){return"@2x"+e})},ratio:1},proto:{initRetina:function(){var n,i;1<window.devicePixelRatio&&(n=g.st.retina,i=n.ratio,1<(i=isNaN(i)?i():i)&&(u("ImageHasSize."+W,function(e,t){t.img.css({"max-width":t.img[0].naturalWidth/i,width:"100%"})}),u("ElementParse."+W,function(e,t){t.src=n.replaceSrc(t,i)})))}}}),r()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,

!function(o,h,n){function i(t,i){this.elem=t,this.$elem=o(t),this.options=i,this.metadata=this.$elem.data("plugin-options"),this.$win=o(h),this.sections={},this.didScroll=!1,this.$doc=o(n),this.docHeight=this.$doc.height()}i.defaults=(i.prototype={defaults:{navItems:"a",currentClass:"current",changeHash:!1,easing:"swing",filter:"",scrollSpeed:750,scrollThreshold:.5,begin:!1,end:!1,scrollChange:!1},init:function(){return this.config=o.extend({},this.defaults,this.options,this.metadata),this.$nav=this.$elem.find(this.config.navItems),""!==this.config.filter&&(this.$nav=this.$nav.filter(this.config.filter)),this.$nav.on("click.onePageNav",o.proxy(this.handleClick,this)),this.getPositions(),this.bindInterval(),this.$win.on("resize.onePageNav",o.proxy(this.getPositions,this)),this},adjustNav:function(t,i){t.$elem.find("."+t.config.currentClass).removeClass(t.config.currentClass),i.addClass(t.config.currentClass)},bindInterval:function(){var t,i=this;i.$win.on("scroll.onePageNav",function(){i.didScroll=!0}),i.t=setInterval(function(){t=i.$doc.height(),i.didScroll&&(i.didScroll=!1,i.scrollChange()),t!==i.docHeight&&(i.docHeight=t,i.getPositions())},250)},getHash:function(t){return t.attr("href").split("#")[1]},getPositions:function(){var t,i,n,e=this;e.$nav.each(function(){t=e.getHash(o(this)),(n=o("#"+t)).length&&(i=n.offset().top,e.sections[t]=Math.round(i))})},getSection:function(t){var i,n=null,e=Math.round(this.$win.height()*this.config.scrollThreshold);for(i in this.sections)this.sections[i]-e<t&&(n=i);return n},handleClick:function(t){var i=this,n=o(t.currentTarget),e=n.parent(),s="#"+i.getHash(n);e.hasClass(i.config.currentClass)||(i.config.begin&&i.config.begin(),i.adjustNav(i,e),i.unbindInterval(),i.scrollTo(s,function(){i.config.changeHash&&(h.location.hash=s),i.bindInterval(),i.config.end&&i.config.end()})),t.preventDefault()},scrollChange:function(){var t,i=this.$win.scrollTop(),n=this.getSection(i);null!==n&&((t=this.$elem.find('a[href$="#'+n+'"]').parent()).hasClass(this.config.currentClass)||(this.adjustNav(this,t),this.config.scrollChange&&this.config.scrollChange(t)))},scrollTo:function(t,i){var n=o(t).offset().top,e=o(".main-menu").height();stickyTop=jQuery("#wpadminbar").length?jQuery(h).width()<765?46:32:0,jQuery(".top_strip_visible").length&&(stickyTop+=jQuery(".top_strip_visible").outerHeight()),e=e+stickyTop-1,o(h).width()<991?o("#wpadminbar").length&&"absolute"!=o("#wpadminbar").css("position")?n=n-o("#wpadminbar").outerHeight()+1:n+=1:("relative"===jQuery(".header").css("position")&&(jQuery(".top_strip_visible").length?n=n-o(".main-menu").height()-jQuery(".top_strip_visible").outerHeight():n-=o(".main-menu").height()),n-=e),o("html, body").animate({scrollTop:n},this.config.scrollSpeed,this.config.easing,i)},unbindInterval:function(){clearInterval(this.t),this.$win.unbind("scroll.onePageNav")}}).defaults,o.fn.onePageNav=function(t){return this.each(function(){new i(this,t).init()})}}(jQuery,window,document);
//# sourceMappingURL=data:application/json;charset=utf8;base64,

!function(){"use strict";var e=0,r={};function i(t){if(!t)throw new Error("No options passed to Waypoint constructor");if(!t.element)throw new Error("No element option passed to Waypoint constructor");if(!t.handler)throw new Error("No handler option passed to Waypoint constructor");this.key="waypoint-"+e,this.options=i.Adapter.extend({},i.defaults,t),this.element=this.options.element,this.adapter=new i.Adapter(this.element),this.callback=t.handler,this.axis=this.options.horizontal?"horizontal":"vertical",this.enabled=this.options.enabled,this.triggerPoint=null,this.group=i.Group.findOrCreate({name:this.options.group,axis:this.axis}),this.context=i.Context.findOrCreateByElement(this.options.context),i.offsetAliases[this.options.offset]&&(this.options.offset=i.offsetAliases[this.options.offset]),this.group.add(this),this.context.add(this),r[this.key]=this,e+=1}i.prototype.queueTrigger=function(t){this.group.queueTrigger(this,t)},i.prototype.trigger=function(t){this.enabled&&this.callback&&this.callback.apply(this,t)},i.prototype.destroy=function(){this.context.remove(this),this.group.remove(this),delete r[this.key]},i.prototype.disable=function(){return this.enabled=!1,this},i.prototype.enable=function(){return this.context.refresh(),this.enabled=!0,this},i.prototype.next=function(){return this.group.next(this)},i.prototype.previous=function(){return this.group.previous(this)},i.invokeAll=function(t){var e,i=[];for(e in r)i.push(r[e]);for(var o=0,n=i.length;o<n;o++)i[o][t]()},i.destroyAll=function(){i.invokeAll("destroy")},i.disableAll=function(){i.invokeAll("disable")},i.enableAll=function(){for(var t in i.Context.refreshAll(),r)r[t].enabled=!0;return this},i.refreshAll=function(){i.Context.refreshAll()},i.viewportHeight=function(){return window.innerHeight||document.documentElement.clientHeight},i.viewportWidth=function(){return document.documentElement.clientWidth},i.adapters=[],i.defaults={context:window,continuous:!0,enabled:!0,group:"default",horizontal:!1,offset:0},i.offsetAliases={"bottom-in-view":function(){return this.context.innerHeight()-this.adapter.outerHeight()},"right-in-view":function(){return this.context.innerWidth()-this.adapter.outerWidth()}},window.Waypoint=i}(),function(){"use strict";function e(t){window.setTimeout(t,1e3/60)}var i=0,o={},y=window.Waypoint,t=window.onload;function n(t){this.element=t,this.Adapter=y.Adapter,this.adapter=new this.Adapter(t),this.key="waypoint-context-"+i,this.didScroll=!1,this.didResize=!1,this.oldScroll={x:this.adapter.scrollLeft(),y:this.adapter.scrollTop()},this.waypoints={vertical:{},horizontal:{}},t.waypointContextKey=this.key,o[t.waypointContextKey]=this,i+=1,y.windowContext||(y.windowContext=!0,y.windowContext=new n(window)),this.createThrottledScrollHandler(),this.createThrottledResizeHandler()}n.prototype.add=function(t){var e=t.options.horizontal?"horizontal":"vertical";this.waypoints[e][t.key]=t,this.refresh()},n.prototype.checkEmpty=function(){var t=this.Adapter.isEmptyObject(this.waypoints.horizontal),e=this.Adapter.isEmptyObject(this.waypoints.vertical),i=this.element==this.element.window;t&&e&&!i&&(this.adapter.off(".waypoints"),delete o[this.key])},n.prototype.createThrottledResizeHandler=function(){var t=this;function e(){t.handleResize(),t.didResize=!1}this.adapter.on("resize.waypoints",function(){t.didResize||(t.didResize=!0,y.requestAnimationFrame(e))})},n.prototype.createThrottledScrollHandler=function(){var t=this;function e(){t.handleScroll(),t.didScroll=!1}this.adapter.on("scroll.waypoints",function(){t.didScroll&&!y.isTouch||(t.didScroll=!0,y.requestAnimationFrame(e))})},n.prototype.handleResize=function(){y.Context.refreshAll()},n.prototype.handleScroll=function(){var t,e,i={},o={horizontal:{newScroll:this.adapter.scrollLeft(),oldScroll:this.oldScroll.x,forward:"right",backward:"left"},vertical:{newScroll:this.adapter.scrollTop(),oldScroll:this.oldScroll.y,forward:"down",backward:"up"}};for(t in o){var n,r=o[t],s=r.newScroll>r.oldScroll?r.forward:r.backward;for(n in this.waypoints[t]){var a,l,h=this.waypoints[t][n];null!==h.triggerPoint&&(a=r.oldScroll<h.triggerPoint,l=r.newScroll>=h.triggerPoint,(a&&l||!a&&!l)&&(h.queueTrigger(s),i[h.group.id]=h.group))}}for(e in i)i[e].flushTriggers();this.oldScroll={x:o.horizontal.newScroll,y:o.vertical.newScroll}},n.prototype.innerHeight=function(){return this.element==this.element.window?y.viewportHeight():this.adapter.innerHeight()},n.prototype.remove=function(t){delete this.waypoints[t.axis][t.key],this.checkEmpty()},n.prototype.innerWidth=function(){return this.element==this.element.window?y.viewportWidth():this.adapter.innerWidth()},n.prototype.destroy=function(){var t,e=[];for(t in this.waypoints)for(var i in this.waypoints[t])e.push(this.waypoints[t][i]);for(var o=0,n=e.length;o<n;o++)e[o].destroy()},n.prototype.refresh=function(){var t,e,i=this.element==this.element.window,o=i?void 0:this.adapter.offset(),n={};for(e in this.handleScroll(),t={horizontal:{contextOffset:i?0:o.left,contextScroll:i?0:this.oldScroll.x,contextDimension:this.innerWidth(),oldScroll:this.oldScroll.x,forward:"right",backward:"left",offsetProp:"left"},vertical:{contextOffset:i?0:o.top,contextScroll:i?0:this.oldScroll.y,contextDimension:this.innerHeight(),oldScroll:this.oldScroll.y,forward:"down",backward:"up",offsetProp:"top"}}){var r,s=t[e];for(r in this.waypoints[e]){var a,l,h,p,c=this.waypoints[e][r],u=c.options.offset,d=c.triggerPoint,f=0,w=null==d;c.element!==c.element.window&&(f=c.adapter.offset()[s.offsetProp]),"function"==typeof u?u=u.apply(c):"string"==typeof u&&(u=parseFloat(u),-1<c.options.offset.indexOf("%")&&(u=Math.ceil(s.contextDimension*u/100))),a=s.contextScroll-s.contextOffset,c.triggerPoint=Math.floor(f+a-u),l=d<s.oldScroll,h=c.triggerPoint>=s.oldScroll,p=!l&&!h,!w&&(l&&h)?(c.queueTrigger(s.backward),n[c.group.id]=c.group):(!w&&p||w&&s.oldScroll>=c.triggerPoint)&&(c.queueTrigger(s.forward),n[c.group.id]=c.group)}}return y.requestAnimationFrame(function(){for(var t in n)n[t].flushTriggers()}),this},n.findOrCreateByElement=function(t){return n.findByElement(t)||new n(t)},n.refreshAll=function(){for(var t in o)o[t].refresh()},n.findByElement=function(t){return o[t.waypointContextKey]},window.onload=function(){t&&t(),n.refreshAll()},y.requestAnimationFrame=function(t){(window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||e).call(window,t)},y.Context=n}(),function(){"use strict";function s(t,e){return t.triggerPoint-e.triggerPoint}function a(t,e){return e.triggerPoint-t.triggerPoint}var e={vertical:{},horizontal:{}},i=window.Waypoint;function o(t){this.name=t.name,this.axis=t.axis,this.id=this.name+"-"+this.axis,this.waypoints=[],this.clearTriggerQueues(),e[this.axis][this.name]=this}o.prototype.add=function(t){this.waypoints.push(t)},o.prototype.clearTriggerQueues=function(){this.triggerQueues={up:[],down:[],left:[],right:[]}},o.prototype.flushTriggers=function(){for(var t in this.triggerQueues){var e=this.triggerQueues[t],i="up"===t||"left"===t;e.sort(i?a:s);for(var o=0,n=e.length;o<n;o+=1){var r=e[o];!r.options.continuous&&o!==e.length-1||r.trigger([t])}}this.clearTriggerQueues()},o.prototype.next=function(t){this.waypoints.sort(s);var e=i.Adapter.inArray(t,this.waypoints);return e===this.waypoints.length-1?null:this.waypoints[e+1]},o.prototype.previous=function(t){this.waypoints.sort(s);var e=i.Adapter.inArray(t,this.waypoints);return e?this.waypoints[e-1]:null},o.prototype.queueTrigger=function(t,e){this.triggerQueues[e].push(t)},o.prototype.remove=function(t){var e=i.Adapter.inArray(t,this.waypoints);-1<e&&this.waypoints.splice(e,1)},o.prototype.first=function(){return this.waypoints[0]},o.prototype.last=function(){return this.waypoints[this.waypoints.length-1]},o.findOrCreate=function(t){return e[t.axis][t.name]||new o(t)},i.Group=o}(),function(){"use strict";var i=window.jQuery,t=window.Waypoint;function o(t){this.$element=i(t)}i.each(["innerHeight","innerWidth","off","offset","on","outerHeight","outerWidth","scrollLeft","scrollTop"],function(t,e){o.prototype[e]=function(){var t=Array.prototype.slice.call(arguments);return this.$element[e].apply(this.$element,t)}}),i.each(["extend","inArray","isEmptyObject"],function(t,e){o[e]=i[e]}),t.adapters.push({name:"jquery",Adapter:o}),t.Adapter=o}(),function(){"use strict";var n=window.Waypoint;function t(o){return function(){var e=[],i=arguments[0];return o.isFunction(arguments[0])&&((i=o.extend({},arguments[1])).handler=arguments[0]),this.each(function(){var t=o.extend({},i,{element:this});"string"==typeof t.context&&(t.context=o(this).closest(t.context)[0]),e.push(new n(t))}),e}}window.jQuery&&(window.jQuery.fn.waypoint=t(window.jQuery)),window.Zepto&&(window.Zepto.fn.waypoint=t(window.Zepto))}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,

window.Modernizr=function(e,f,i){function t(e){h.cssText=e}function a(e,t){return typeof e===t}function c(e,t){for(var n in e){var r=e[n];if(!~(""+r).indexOf("-")&&h[r]!==i)return"pfx"!=t||r}return!1}function r(e,t,n){var r=e.charAt(0).toUpperCase()+e.slice(1),o=(e+" "+y.join(r+" ")+r).split(" ");return a(t,"string")||void 0===t?c(o,t):function(e,t,n){for(var r in e){var o=t[e[r]];if(o!==i)return!1===n?e[r]:a(o,"function")?o.bind(n||t):o}return!1}(o=(e+" "+g.join(r+" ")+r).split(" "),t,n)}function o(e,t,n,r){var o,i,a,c,s=f.createElement("div"),l=f.body,u=l||f.createElement("body");if(parseInt(n,10))for(;n--;)(a=f.createElement("div")).id=r?r[n]:p+(n+1),s.appendChild(a);return o=["&#173;",'<style id="s',p,'">',e,"</style>"].join(""),s.id=p,(l?s:u).innerHTML+=o,u.appendChild(s),l||(u.style.background="",u.style.overflow="hidden",c=d.style.overflow,d.style.overflow="hidden",d.appendChild(u)),i=t(s,e),l?s.parentNode.removeChild(s):(u.parentNode.removeChild(u),d.style.overflow=c),!!i}var n,s,l={},d=f.documentElement,p="modernizr",u=f.createElement(p),h=u.style,m=" -webkit- -moz- -o- -ms- ".split(" "),v="Webkit Moz O ms",y=v.split(" "),g=v.toLowerCase().split(" "),b={},E=[],j=E.slice,C={}.hasOwnProperty,w=void 0!==C&&void 0!==C.call?function(e,t){return C.call(e,t)}:function(e,t){return t in e&&void 0===e.constructor.prototype[t]};for(s in Function.prototype.bind||(Function.prototype.bind=function(r){var o=this;if("function"!=typeof o)throw new TypeError;var i=j.call(arguments,1),a=function(){if(this instanceof a){function e(){}e.prototype=o.prototype;var t=new e,n=o.apply(t,i.concat(j.call(arguments)));return Object(n)===n?n:t}return o.apply(r,i.concat(j.call(arguments)))};return a}),b.touch=function(){var t;return"ontouchstart"in e||e.DocumentTouch&&f instanceof DocumentTouch?t=!0:o(["@media (",m.join("touch-enabled),("),p,")","{#modernizr{top:9px;position:absolute}}"].join(""),function(e){t=9===e.offsetTop}),t},b.csstransforms3d=function(){var n=!!r("perspective");return n&&"webkitPerspective"in d.style&&o("@media (transform-3d),(-webkit-transform-3d){#modernizr{left:9px;position:absolute;height:3px;}}",function(e,t){n=9===e.offsetLeft&&3===e.offsetHeight}),n},b.csstransitions=function(){return r("transition")},b)w(b,s)&&(n=s.toLowerCase(),l[n]=b[s](),E.push((l[n]?"":"no-")+n));return l.addTest=function(e,t){if("object"==typeof e)for(var n in e)w(e,n)&&l.addTest(n,e[n]);else{if(e=e.toLowerCase(),l[e]!==i)return l;t="function"==typeof t?t():t,d.className+=" "+(t?"":"no-")+e,l[e]=t}return l},t(""),function(e,s){function l(){var e=h.elements;return"string"==typeof e?e.split(" "):e}function u(e){var t=c[e[r]];return t||(t={},a++,e[r]=a,c[a]=t),t}function f(e,t,n){return t=t||s,p?t.createElement(e):(r=(n=n||u(t)).cache[e]?n.cache[e].cloneNode():i.test(e)?(n.cache[e]=n.createElem(e)).cloneNode():n.createElem(e)).canHaveChildren&&!o.test(e)?n.frag.appendChild(r):r;var r}function t(e){var t,n,r,o,i,a,c=u(e=e||s);return!h.shivCSS||d||c.hasCSS||(c.hasCSS=(o="article,aside,figcaption,figure,footer,header,hgroup,nav,section{display:block}mark{background:#FF0;color:#000}",i=(r=e).createElement("p"),a=r.getElementsByTagName("head")[0]||r.documentElement,i.innerHTML="x<style>"+o+"</style>",!!a.insertBefore(i.lastChild,a.firstChild))),p||(t=e,(n=c).cache||(n.cache={},n.createElem=t.createElement,n.createFrag=t.createDocumentFragment,n.frag=n.createFrag()),t.createElement=function(e){return h.shivMethods?f(e,t,n):n.createElem(e)},t.createDocumentFragment=Function("h,f","return function(){var n=f.cloneNode(),c=n.createElement;h.shivMethods&&("+l().join().replace(/\w+/g,function(e){return n.createElem(e),n.frag.createElement(e),'c("'+e+'")'})+");return n}")(h,n.frag)),e}var d,p,n=e.html5||{},o=/^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i,i=/^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i,r="_html5shiv",a=0,c={};!function(){try{var e=s.createElement("a");e.innerHTML="<xyz></xyz>",d="hidden"in e,p=1==e.childNodes.length||function(){s.createElement("a");var e=s.createDocumentFragment();return void 0===e.cloneNode||void 0===e.createDocumentFragment||void 0===e.createElement}()}catch(e){p=d=!0}}();var h={elements:n.elements||"abbr article aside audio bdi canvas data datalist details figcaption figure footer header hgroup mark meter nav output progress section summary time video",shivCSS:!1!==n.shivCSS,supportsUnknownElements:p,shivMethods:!1!==n.shivMethods,type:"default",shivDocument:t,createElement:f,createDocumentFragment:function(e,t){if(e=e||s,p)return e.createDocumentFragment();for(var n=(t=t||u(e)).frag.cloneNode(),r=0,o=l(),i=o.length;r<i;r++)n.createElement(o[r]);return n}};e.html5=h,t(s)}(this,f),l._version="2.6.2",l._prefixes=m,l._domPrefixes=g,l._cssomPrefixes=y,l.testProp=function(e){return c([e])},l.testAllProps=r,l.testStyles=o,l.prefixed=function(e,t,n){return t?r(e,t,n):r(e,"pfx")},d.className=d.className.replace(/(^|\s)no-js(\s|$)/,"$1$2")+(" js "+E.join(" ")),l}(this,this.document),function(e,y){function f(e){return"[object Function]"==o.call(e)}function g(e){return"string"==typeof e}function d(){}function b(e){return!e||"loaded"==e||"complete"==e||"uninitialized"==e}function E(){var e=w.shift();x=1,e?e.t?j(function(){("c"==e.t?M.injectCss:M.injectJs)(e.s,0,e.a,e.x,e.e,1)},0):(e(),E()):x=0}function t(e,t,n,r,o){return x=0,t=t||"j",g(e)?(a="c"==t?F:T,c=e,s=t,l=this.i++,u=n,f=r,d=(d=o)||M.errorTimeout,p=y.createElement(a),m=h=0,v={t:s,s:c,e:u,a:f,x:d},1===k[c]&&(m=1,k[c]=[]),"object"==a?p.data=c:(p.src=c,p.type=a),p.width=p.height="0",p.onerror=p.onload=p.onreadystatechange=function(){i.call(this,m)},w.splice(l,0,v),"img"!=a&&(m||2===k[c]?(N.insertBefore(p,S?null:C),j(i,d)):k[c].push(p))):(w.splice(this.i++,0,e),1==w.length&&E()),this;function i(e){if(!h&&b(p.readyState)&&(v.r=h=1,x||E(),p.onload=p.onreadystatechange=null,e))for(var t in"img"!=a&&j(function(){N.removeChild(p)},50),k[c])k[c].hasOwnProperty(t)&&k[c][t].onload()}var a,c,s,l,u,f,d,p,h,m,v}function c(){var e=M;return e.loader={load:t,i:0},e}var n,r=y.documentElement,j=e.setTimeout,C=y.getElementsByTagName("script")[0],o={}.toString,w=[],x=0,i="MozAppearance"in r.style,S=i&&!!y.createRange().compareNode,N=S?r:C.parentNode,r=e.opera&&"[object Opera]"==o.call(e.opera),r=!!y.attachEvent&&!r,T=i?"object":r?"script":"img",F=r?"script":T,a=Array.isArray||function(e){return"[object Array]"==o.call(e)},s=[],k={},l={timeout:function(e,t){return t.length&&(e.timeout=t[0]),e}},M=function(e){function u(e,t,n,r,o){var i=function(e){for(var t,n,e=e.split("!"),r=s.length,o=e.pop(),i=e.length,o={url:o,origUrl:o,prefixes:e},a=0;a<i;a++)n=e[a].split("="),(t=l[n.shift()])&&(o=t(o,n));for(a=0;a<r;a++)o=s[a](o);return o}(e),a=i.autoCallback;i.url.split(".").pop().split("?").shift(),i.bypass||(t=t&&(f(t)?t:t[e]||t[r]||t[e.split("/").pop().split("?")[0]]),i.instead?i.instead(e,t,n,r,o):(k[i.url]?i.noexec=!0:k[i.url]=1,n.load(i.url,i.forceCSS||!i.forceJS&&"css"==i.url.split(".").pop().split("?").shift()?"c":void 0,i.noexec,i.attrs,i.timeout),(f(t)||f(a))&&n.load(function(){c(),t&&t(i.origUrl,o,r),a&&a(i.origUrl,o,r),k[i.url]=2})))}function t(e,t){function n(n,e){if(n){if(g(n))e||(c=function(){var e=[].slice.call(arguments);s.apply(this,e),l()}),u(n,c,t,0,i);else if(Object(n)===n)for(o in r=function(){var e,t=0;for(e in n)n.hasOwnProperty(e)&&t++;return t}(),n)n.hasOwnProperty(o)&&(e||--r||(f(c)?c=function(){var e=[].slice.call(arguments);s.apply(this,e),l()}:c[o]=function(t){return function(){var e=[].slice.call(arguments);t&&t.apply(this,e),l()}}(s[o])),u(n[o],c,t,o,i))}else e||l()}var r,o,i=!!e.test,a=e.load||e.both,c=e.callback||d,s=c,l=e.complete||d;n(i?e.yep:e.nope,!!a),a&&n(a)}var n,r,o=this.yepnope.loader;if(g(e))u(e,0,o,0);else if(a(e))for(n=0;n<e.length;n++)g(r=e[n])?u(r,0,o,0):a(r)?M(r):Object(r)===r&&t(r,o);else Object(e)===e&&t(e,o)};M.addPrefix=function(e,t){l[e]=t},M.addFilter=function(e){s.push(e)},M.errorTimeout=1e4,null==y.readyState&&y.addEventListener&&(y.readyState="loading",y.addEventListener("DOMContentLoaded",n=function(){y.removeEventListener("DOMContentLoaded",n,0),y.readyState="complete"},0)),e.yepnope=c(),e.yepnope.executeStack=E,e.yepnope.injectJs=function(e,t,n,r,o,i){var a,c,s=y.createElement("script"),r=r||M.errorTimeout;for(c in s.src=e,n)s.setAttribute(c,n[c]);t=i?E:t||d,s.onreadystatechange=s.onload=function(){!a&&b(s.readyState)&&(a=1,t(),s.onload=s.onreadystatechange=null)},j(function(){a||t(a=1)},r),o?s.onload():C.parentNode.insertBefore(s,C)},e.yepnope.injectCss=function(e,t,n,r,o,i){var a,r=y.createElement("link"),t=i?E:t||d;for(a in r.href=e,r.rel="stylesheet",r.type="text/css",n)r.setAttribute(a,n[a]);o||(C.parentNode.insertBefore(r,C),j(t,0))}}(this,document),Modernizr.load=function(){yepnope.apply(window,[].slice.call(arguments,0))};
//# sourceMappingURL=data:application/json;charset=utf8;base64,

(function(){"use strict";var y,t,e;function n(e){return void 0===this||Object.getPrototypeOf(this)!==n.prototype?new n(e):((y=this).tools=new t,y.isSupported()?(y.tools.extend(y.defaults,e||{}),m(y.defaults),y.store={elements:{},containers:[]},y.sequences={},y.history=[],y.uid=0,y.initialized=!1):"undefined"!=typeof console&&null!==console&&console.log("ScrollReveal is not supported in this browser."),y)}function m(e){var t=e.container;return t&&"string"==typeof t?e.container=window.document.querySelector(t):(t&&!y.tools.isNode(t)&&(console.log("ScrollReveal: Invalid container provided, using <html> instead."),e.container=null),null==t&&(e.container=window.document.documentElement),e.container)}function g(){return++y.uid}function p(e,t){var n=e.config;return"-webkit-transition: "+e.styles.computed.transition+"-webkit-transform "+n.duration/1e3+"s "+n.easing+" "+t/1e3+"s, opacity "+n.duration/1e3+"s "+n.easing+" "+t/1e3+"s; transition: "+e.styles.computed.transition+"transform "+n.duration/1e3+"s "+n.easing+" "+t/1e3+"s, opacity "+n.duration/1e3+"s "+n.easing+" "+t/1e3+"s; "}function w(e){var t=e.config,n=e.styles.transform;parseInt(t.distance)&&(n.initial+=" translate"+t.axis+"("+t.distance+")",n.target+=" translate"+t.axis+"(0)"),t.scale&&(n.initial+=" scale("+t.scale+")",n.target+=" scale(1)"),t.rotate.x&&(n.initial+=" rotateX("+t.rotate.x+"deg)",n.target+=" rotateX(0)"),t.rotate.y&&(n.initial+=" rotateY("+t.rotate.y+"deg)",n.target+=" rotateY(0)"),t.rotate.z&&(n.initial+=" rotateZ("+t.rotate.z+"deg)",n.target+=" rotateZ(0)"),n.initial+="; opacity: "+t.opacity+";",n.target+="; opacity: "+e.styles.computed.opacity+";"}function v(){if(y.isSupported()){i();for(var e=0;e<y.store.containers.length;e++)y.store.containers[e].addEventListener("scroll",a),y.store.containers[e].addEventListener("resize",a);y.initialized||(window.addEventListener("scroll",a),window.addEventListener("resize",a),y.initialized=!0)}return y}function a(){e(i)}function i(){var i,o,n,s,r;y.tools.forOwn(y.sequences,function(e){r=y.sequences[e],n=!1;for(var t=0;t<r.elemIds.length;t++)s=r.elemIds[t],c(y.store.elements[s])&&!n&&(n=!0);r.active=n}),y.tools.forOwn(y.store.elements,function(e){var t,n;o=y.store.elements[e],n=(t=o).config.useDelay,i="always"===n||"onload"===n&&!y.initialized||"once"===n&&!t.seen,function(e){if(e.sequence){var t=y.sequences[e.sequence.id];return t.active&&!t.blocked&&!e.revealing&&!e.disabled}return c(e)&&!e.revealing&&!e.disabled}(o)?(i?o.domEl.setAttribute("style",o.styles.inline+o.styles.transform.target+o.styles.transition.delayed):o.domEl.setAttribute("style",o.styles.inline+o.styles.transform.target+o.styles.transition.instant),l("reveal",o,i),o.revealing=!0,o.seen=!0,o.sequence&&function(e,t){var n=0,i=0,o=y.sequences[e.sequence.id];o.blocked=!0,t&&"onload"==e.config.useDelay&&(i=e.config.delay);e.sequence.timer&&(n=Math.abs(e.sequence.timer.started-new Date),window.clearTimeout(e.sequence.timer));e.sequence.timer={started:new Date},e.sequence.timer.clock=window.setTimeout(function(){o.blocked=!1,e.sequence.timer=null,a()},Math.abs(o.interval)+i-n)}(o,i)):function(e){if(e.sequence){return!y.sequences[e.sequence.id].active&&e.config.reset&&e.revealing&&!e.disabled}return!c(e)&&e.config.reset&&e.revealing&&!e.disabled}(o)&&(o.domEl.setAttribute("style",o.styles.inline+o.styles.transform.initial+o.styles.transition.instant),l("reset",o),o.revealing=!1)})}function l(e,t,n){var i=0,o=0,s="after";switch(e){case"reveal":o=t.config.duration,n&&(o+=t.config.delay),s+="Reveal";break;case"reset":o=t.config.duration,s+="Reset"}t.timer&&(i=Math.abs(t.timer.started-new Date),window.clearTimeout(t.timer.clock)),t.timer={started:new Date},t.timer.clock=window.setTimeout(function(){t.config[s](t.domEl),t.timer=null},o-i)}function b(e){for(var t=0,n=0,i=e.offsetHeight,o=e.offsetWidth;isNaN(e.offsetTop)||(t+=e.offsetTop),isNaN(e.offsetLeft)||(n+=e.offsetLeft),e=e.offsetParent;);return{top:t,left:n,height:i,width:o}}function c(e){var t,n,i,o,s,r,a,l,c,d=b(e.domEl),f={width:(t=e.config.container).clientWidth,height:t.clientHeight},u=function(e){if(e&&e!==window.document.documentElement){var t=b(e);return{x:e.scrollLeft+t.left,y:e.scrollTop+t.top}}return{x:window.pageXOffset,y:window.pageYOffset}}(e.config.container),y=e.config.viewFactor,m=d.height,g=d.width,p=d.top,w=d.left;return n=p+m*y,i=w+g*y,o=p+m-m*y,s=w+g-g*y,r=u.y+e.config.viewOffset.top,a=u.x+e.config.viewOffset.left,l=u.y-e.config.viewOffset.bottom+f.height,c=u.x-e.config.viewOffset.right+f.width,n<l&&r<o&&a<i&&s<c||"fixed"===window.getComputedStyle(e.domEl).position}function o(){}this.ScrollReveal=(n.prototype.defaults={origin:"bottom",distance:"20px",duration:2e3,delay:0,rotate:{x:0,y:0,z:0},opacity:0,scale:.9,easing:"cubic-bezier(0.6, 0.2, 0.1, 1)",container:null,mobile:!0,reset:!1,useDelay:"always",viewFactor:.2,viewOffset:{top:0,right:0,bottom:0,left:0},afterReveal:function(e){},afterReset:function(e){}},n.prototype.isSupported=function(){var e=document.documentElement.style;return"WebkitTransition"in e&&"WebkitTransform"in e||"transition"in e&&"transform"in e},n.prototype.reveal=function(e,t,n,i){var o,s,r,a,l=t&&t.container?m(t):y.defaults.container,c=y.tools.isNode(e)?[e]:Array.prototype.slice.call(l.querySelectorAll(e));if(!c.length)return console.log('ScrollReveal: reveal on "'+e+'" failed, no elements found.'),y;t&&"number"==typeof t&&(n=t,t={}),n&&"number"==typeof n&&(a=g(),r=y.sequences[a]={id:a,interval:n,elemIds:[],active:!1});for(var d,f,u=0;u<c.length;u++)(s=c[u].getAttribute("data-sr-id"))?o=y.store.elements[s]:(o={id:g(),domEl:c[u],seen:!1,revealing:!1}).domEl.setAttribute("data-sr-id",o.id),r&&(o.sequence={id:r.id,index:r.elemIds.length},r.elemIds.push(o.id)),function(e,t){e.config?e.config=y.tools.extendClone(e.config,t):e.config=y.tools.extendClone(y.defaults,t);"top"===e.config.origin||"bottom"===e.config.origin?e.config.axis="Y":e.config.axis="X";"top"!==e.config.origin&&"left"!==e.config.origin||(e.config.distance="-"+e.config.distance)}(o,t||{}),function(e){var t=window.getComputedStyle(e.domEl);e.styles||(e.styles={transition:{},transform:{},computed:{}},e.styles.inline=e.domEl.getAttribute("style")||"",e.styles.inline+="; visibility: visible; ",e.styles.computed.opacity=t.opacity,t.transition&&"all 0s ease 0s"!=t.transition?e.styles.computed.transition=t.transition+", ":e.styles.computed.transition="");e.styles.transition.instant=p(e,0),e.styles.transition.delayed=p(e,e.config.delay),e.styles.transform.initial=" -webkit-transform:",e.styles.transform.target=" -webkit-transform:",w(e),e.styles.transform.initial+="transform:",e.styles.transform.target+="transform:",w(e)}(o),function(e){var t=e.config.container;t&&-1==y.store.containers.indexOf(t)&&y.store.containers.push(e.config.container);y.store.elements[e.id]=e}(o),y.tools.isMobile()&&!o.config.mobile||!y.isSupported()?(o.domEl.setAttribute("style",o.styles.inline),o.disabled=!0):o.revealing||o.domEl.setAttribute("style",o.styles.inline+o.styles.transform.initial);return!i&&y.isSupported()&&(f={selector:e,config:t,interval:d},y.history.push(f),y.initTimeout&&window.clearTimeout(y.initTimeout),y.initTimeout=window.setTimeout(v,0)),y},n.prototype.sync=function(){if(y.history.length&&y.isSupported()){for(var e=0;e<y.history.length;e++){var t=y.history[e];y.reveal(t.selector,t.config,t.interval,!0)}v()}else console.log("ScrollReveal: sync failed, no reveals found.");return y},n),o.prototype.isObject=function(e){return null!==e&&"object"==typeof e&&e.constructor==Object},o.prototype.isNode=function(e){return"object"==typeof Node?e instanceof Node:e&&"object"==typeof e&&"number"==typeof e.nodeType&&"string"==typeof e.nodeName},o.prototype.forOwn=function(e,t){if(!this.isObject(e))throw new TypeError('Expected "object", but received "'+typeof e+'".');for(var n in e)e.hasOwnProperty(n)&&t(n)},o.prototype.extend=function(t,n){return this.forOwn(n,function(e){this.isObject(n[e])?(t[e]&&this.isObject(t[e])||(t[e]={}),this.extend(t[e],n[e])):t[e]=n[e]}.bind(this)),t},o.prototype.extendClone=function(e,t){return this.extend(this.extend({},e),t)},o.prototype.isMobile=function(){return/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)},t=o,e=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame}).call(this);
//# sourceMappingURL=data:application/json;charset=utf8;base64,

!function(){"use strict";var e=window.jQuery,i=window.Waypoint;function s(t){this.options=e.extend({},i.defaults,s.defaults,t),this.element=this.options.element,this.$element=e(this.element),this.createWrapper(),this.createWaypoint()}s.prototype.createWaypoint=function(){var s=this.options.handler;this.waypoint=new i(e.extend({},this.options,{element:this.wrapper,handler:e.proxy(function(t){var e=-1<this.options.direction.indexOf(t),i=e?this.$element.outerHeight(!0):"";this.$wrapper.height(i),this.$element.toggleClass(this.options.stuckClass,e),s&&s.call(this,t)},this)}))},s.prototype.createWrapper=function(){this.options.wrapper&&this.$element.wrap(this.options.wrapper),this.$wrapper=this.$element.parent(),this.wrapper=this.$wrapper[0]},s.prototype.destroy=function(){this.$element.parent()[0]===this.wrapper&&(this.waypoint.destroy(),this.$element.removeClass(this.options.stuckClass),this.options.wrapper&&this.$element.unwrap())},s.defaults={wrapper:'<div class="sticky-wrapper" />',stuckClass:"stuck",direction:"down right"},i.Sticky=s}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RpY2t5LmpzIiwic291cmNlcyI6WyJzdGlja3kuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG5XYXlwb2ludHMgU3RpY2t5IEVsZW1lbnQgU2hvcnRjdXQgLSA0LjAuMVxuQ29weXJpZ2h0IMKpIDIwMTEtMjAxNiBDYWxlYiBUcm91Z2h0b25cbkxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbmh0dHBzOi8vZ2l0aHViLmNvbS9pbWFrZXdlYnRoaW5ncy93YXlwb2ludHMvYmxvYi9tYXN0ZXIvbGljZW5zZXMudHh0XG4qL1xuKGZ1bmN0aW9uKCkge1xuICAndXNlIHN0cmljdCdcblxuICB2YXIgJCA9IHdpbmRvdy5qUXVlcnlcbiAgdmFyIFdheXBvaW50ID0gd2luZG93LldheXBvaW50XG5cbiAgLyogaHR0cDovL2ltYWtld2VidGhpbmdzLmNvbS93YXlwb2ludHMvc2hvcnRjdXRzL3N0aWNreS1lbGVtZW50cyAqL1xuICBmdW5jdGlvbiBTdGlja3kob3B0aW9ucykge1xuICAgIHRoaXMub3B0aW9ucyA9ICQuZXh0ZW5kKHt9LCBXYXlwb2ludC5kZWZhdWx0cywgU3RpY2t5LmRlZmF1bHRzLCBvcHRpb25zKVxuICAgIHRoaXMuZWxlbWVudCA9IHRoaXMub3B0aW9ucy5lbGVtZW50XG4gICAgdGhpcy4kZWxlbWVudCA9ICQodGhpcy5lbGVtZW50KVxuICAgIHRoaXMuY3JlYXRlV3JhcHBlcigpXG4gICAgdGhpcy5jcmVhdGVXYXlwb2ludCgpXG4gIH1cblxuICAvKiBQcml2YXRlICovXG4gIFN0aWNreS5wcm90b3R5cGUuY3JlYXRlV2F5cG9pbnQgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgb3JpZ2luYWxIYW5kbGVyID0gdGhpcy5vcHRpb25zLmhhbmRsZXJcblxuICAgIHRoaXMud2F5cG9pbnQgPSBuZXcgV2F5cG9pbnQoJC5leHRlbmQoe30sIHRoaXMub3B0aW9ucywge1xuICAgICAgZWxlbWVudDogdGhpcy53cmFwcGVyLFxuICAgICAgaGFuZGxlcjogJC5wcm94eShmdW5jdGlvbihkaXJlY3Rpb24pIHtcbiAgICAgICAgdmFyIHNob3VsZEJlU3R1Y2sgPSB0aGlzLm9wdGlvbnMuZGlyZWN0aW9uLmluZGV4T2YoZGlyZWN0aW9uKSA+IC0xXG4gICAgICAgIHZhciB3cmFwcGVySGVpZ2h0ID0gc2hvdWxkQmVTdHVjayA/IHRoaXMuJGVsZW1lbnQub3V0ZXJIZWlnaHQodHJ1ZSkgOiAnJ1xuXG4gICAgICAgIHRoaXMuJHdyYXBwZXIuaGVpZ2h0KHdyYXBwZXJIZWlnaHQpXG4gICAgICAgIHRoaXMuJGVsZW1lbnQudG9nZ2xlQ2xhc3ModGhpcy5vcHRpb25zLnN0dWNrQ2xhc3MsIHNob3VsZEJlU3R1Y2spXG5cbiAgICAgICAgaWYgKG9yaWdpbmFsSGFuZGxlcikge1xuICAgICAgICAgIG9yaWdpbmFsSGFuZGxlci5jYWxsKHRoaXMsIGRpcmVjdGlvbilcbiAgICAgICAgfVxuICAgICAgfSwgdGhpcylcbiAgICB9KSlcbiAgfVxuXG4gIC8qIFByaXZhdGUgKi9cbiAgU3RpY2t5LnByb3RvdHlwZS5jcmVhdGVXcmFwcGVyID0gZnVuY3Rpb24oKSB7XG4gICAgaWYgKHRoaXMub3B0aW9ucy53cmFwcGVyKSB7XG4gICAgICB0aGlzLiRlbGVtZW50LndyYXAodGhpcy5vcHRpb25zLndyYXBwZXIpXG4gICAgfVxuICAgIHRoaXMuJHdyYXBwZXIgPSB0aGlzLiRlbGVtZW50LnBhcmVudCgpXG4gICAgdGhpcy53cmFwcGVyID0gdGhpcy4kd3JhcHBlclswXVxuICB9XG5cbiAgLyogUHVibGljICovXG4gIFN0aWNreS5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uKCkge1xuICAgIGlmICh0aGlzLiRlbGVtZW50LnBhcmVudCgpWzBdID09PSB0aGlzLndyYXBwZXIpIHtcbiAgICAgIHRoaXMud2F5cG9pbnQuZGVzdHJveSgpXG4gICAgICB0aGlzLiRlbGVtZW50LnJlbW92ZUNsYXNzKHRoaXMub3B0aW9ucy5zdHVja0NsYXNzKVxuICAgICAgaWYgKHRoaXMub3B0aW9ucy53cmFwcGVyKSB7XG4gICAgICAgIHRoaXMuJGVsZW1lbnQudW53cmFwKClcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBTdGlja3kuZGVmYXVsdHMgPSB7XG4gICAgd3JhcHBlcjogJzxkaXYgY2xhc3M9XCJzdGlja3ktd3JhcHBlclwiIC8+JyxcbiAgICBzdHVja0NsYXNzOiAnc3R1Y2snLFxuICAgIGRpcmVjdGlvbjogJ2Rvd24gcmlnaHQnXG4gIH1cblxuICBXYXlwb2ludC5TdGlja3kgPSBTdGlja3lcbn0oKSlcbjsiXSwibmFtZXMiOlsiJCIsIndpbmRvdyIsImpRdWVyeSIsIldheXBvaW50IiwiU3RpY2t5Iiwib3B0aW9ucyIsInRoaXMiLCJleHRlbmQiLCJkZWZhdWx0cyIsImVsZW1lbnQiLCIkZWxlbWVudCIsImNyZWF0ZVdyYXBwZXIiLCJjcmVhdGVXYXlwb2ludCIsInByb3RvdHlwZSIsIm9yaWdpbmFsSGFuZGxlciIsImhhbmRsZXIiLCJ3YXlwb2ludCIsIndyYXBwZXIiLCJwcm94eSIsImRpcmVjdGlvbiIsInNob3VsZEJlU3R1Y2siLCJpbmRleE9mIiwid3JhcHBlckhlaWdodCIsIm91dGVySGVpZ2h0IiwiJHdyYXBwZXIiLCJoZWlnaHQiLCJ0b2dnbGVDbGFzcyIsInN0dWNrQ2xhc3MiLCJjYWxsIiwid3JhcCIsInBhcmVudCIsImRlc3Ryb3kiLCJyZW1vdmVDbGFzcyIsInVud3JhcCJdLCJtYXBwaW5ncyI6IkNBTUMsd0JBR0MsSUFBSUEsRUFBSUMsT0FBT0MsT0FDWEMsRUFBV0YsT0FBT0UsU0FHdEIsU0FBU0MsRUFBT0MsR0FDZEMsS0FBS0QsUUFBVUwsRUFBRU8sT0FBTyxHQUFJSixFQUFTSyxTQUFVSixFQUFPSSxTQUFVSCxHQUNoRUMsS0FBS0csUUFBVUgsS0FBS0QsUUFBUUksUUFDNUJILEtBQUtJLFNBQVdWLEVBQUVNLEtBQUtHLFNBQ3ZCSCxLQUFLSyxnQkFDTEwsS0FBS00saUJBSVBSLEVBQU9TLFVBQVVELGVBQWlCLFdBQ2hDLElBQUlFLEVBQWtCUixLQUFLRCxRQUFRVSxRQUVuQ1QsS0FBS1UsU0FBVyxJQUFJYixFQUFTSCxFQUFFTyxPQUFPLEdBQUlELEtBQUtELFFBQVMsQ0FDdERJLFFBQVNILEtBQUtXLFFBQ2RGLFFBQVNmLEVBQUVrQixNQUFNLFNBQVNDLEdBQ3hCLElBQUlDLEdBQTZELEVBQTdDZCxLQUFLRCxRQUFRYyxVQUFVRSxRQUFRRixHQUMvQ0csRUFBZ0JGLEVBQWdCZCxLQUFLSSxTQUFTYSxhQUFZLEdBQVEsR0FFdEVqQixLQUFLa0IsU0FBU0MsT0FBT0gsR0FDckJoQixLQUFLSSxTQUFTZ0IsWUFBWXBCLEtBQUtELFFBQVFzQixXQUFZUCxHQUUvQ04sR0FDRkEsRUFBZ0JjLEtBQUt0QixLQUFNYSxJQUU1QmIsVUFLUEYsRUFBT1MsVUFBVUYsY0FBZ0IsV0FDM0JMLEtBQUtELFFBQVFZLFNBQ2ZYLEtBQUtJLFNBQVNtQixLQUFLdkIsS0FBS0QsUUFBUVksU0FFbENYLEtBQUtrQixTQUFXbEIsS0FBS0ksU0FBU29CLFNBQzlCeEIsS0FBS1csUUFBVVgsS0FBS2tCLFNBQVMsSUFJL0JwQixFQUFPUyxVQUFVa0IsUUFBVSxXQUNyQnpCLEtBQUtJLFNBQVNvQixTQUFTLEtBQU94QixLQUFLVyxVQUNyQ1gsS0FBS1UsU0FBU2UsVUFDZHpCLEtBQUtJLFNBQVNzQixZQUFZMUIsS0FBS0QsUUFBUXNCLFlBQ25DckIsS0FBS0QsUUFBUVksU0FDZlgsS0FBS0ksU0FBU3VCLFdBS3BCN0IsRUFBT0ksU0FBVyxDQUNoQlMsUUFBUyxpQ0FDVFUsV0FBWSxRQUNaUixVQUFXLGNBR2JoQixFQUFTQyxPQUFTQSxFQTdEcEIifQ==

!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).Swiper=t()}(this,function(){"use strict";function s(e,t){for(var a=0;a<t.length;a++){var i=t[a];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function e(){return(e=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a,i=arguments[t];for(a in i)Object.prototype.hasOwnProperty.call(i,a)&&(e[a]=i[a])}return e}).apply(this,arguments)}function i(e){return null!==e&&"object"==typeof e&&"constructor"in e&&e.constructor===Object}function r(t,a){void 0===t&&(t={}),void 0===a&&(a={}),Object.keys(a).forEach(function(e){void 0===t[e]?t[e]=a[e]:i(a[e])&&i(t[e])&&0<Object.keys(a[e]).length&&r(t[e],a[e])})}var t={body:{},addEventListener:function(){},removeEventListener:function(){},activeElement:{blur:function(){},nodeName:""},querySelector:function(){return null},querySelectorAll:function(){return[]},getElementById:function(){return null},createEvent:function(){return{initEvent:function(){}}},createElement:function(){return{children:[],childNodes:[],style:{},setAttribute:function(){},getElementsByTagName:function(){return[]}}},createElementNS:function(){return{}},importNode:function(){return null},location:{hash:"",host:"",hostname:"",href:"",origin:"",pathname:"",protocol:"",search:""}};function E(){var e="undefined"!=typeof document?document:{};return r(e,t),e}var a={document:t,navigator:{userAgent:""},location:{hash:"",host:"",hostname:"",href:"",origin:"",pathname:"",protocol:"",search:""},history:{replaceState:function(){},pushState:function(){},go:function(){},back:function(){}},CustomEvent:function(){return this},addEventListener:function(){},removeEventListener:function(){},getComputedStyle:function(){return{getPropertyValue:function(){return""}}},Image:function(){},Date:function(){},screen:{},setTimeout:function(){},clearTimeout:function(){},matchMedia:function(){return{}},requestAnimationFrame:function(e){return"undefined"==typeof setTimeout?(e(),null):setTimeout(e,0)},cancelAnimationFrame:function(e){"undefined"!=typeof setTimeout&&clearTimeout(e)}};function ne(){var e="undefined"!=typeof window?window:{};return r(e,a),e}function n(e){return(n=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function o(e,t){return(o=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function l(e,t,a){return(l=function(){if("undefined"!=typeof Reflect&&Reflect.construct&&!Reflect.construct.sham){if("function"==typeof Proxy)return 1;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),1}catch(e){return}}}()?Reflect.construct:function(e,t,a){var i=[null];i.push.apply(i,t);var s=new(Function.bind.apply(e,i));return a&&o(s,a.prototype),s}).apply(null,arguments)}function d(e){var i="function"==typeof Map?new Map:void 0;return(d=function(e){if(null===e||(t=e,-1===Function.toString.call(t).indexOf("[native code]")))return e;var t;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==i){if(i.has(e))return i.get(e);i.set(e,a)}function a(){return l(e,arguments,n(this).constructor)}return a.prototype=Object.create(e.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}}),o(a,e)})(e)}var p=function(s){var e,t;function a(e){var t,a,i=s.call.apply(s,[this].concat(e))||this;return t=function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(i),a=t.__proto__,Object.defineProperty(t,"__proto__",{get:function(){return a},set:function(e){a.__proto__=e}}),i}return t=s,(e=a).prototype=Object.create(t.prototype),(e.prototype.constructor=e).__proto__=t,a}(d(Array));function u(e){void 0===e&&(e=[]);var t=[];return e.forEach(function(e){Array.isArray(e)?t.push.apply(t,u(e)):t.push(e)}),t}function c(e,t){return Array.prototype.filter.call(e,t)}function I(e,t){var a=ne(),i=E(),s=[];if(!t&&e instanceof p)return e;if(!e)return new p(s);if("string"==typeof e){var r=e.trim();if(0<=r.indexOf("<")&&0<=r.indexOf(">")){var n="div";0===r.indexOf("<li")&&(n="ul"),0===r.indexOf("<tr")&&(n="tbody"),0!==r.indexOf("<td")&&0!==r.indexOf("<th")||(n="tr"),0===r.indexOf("<tbody")&&(n="table"),0===r.indexOf("<option")&&(n="select");var o=i.createElement(n);o.innerHTML=r;for(var l=0;l<o.childNodes.length;l+=1)s.push(o.childNodes[l])}else s=function(e,t){if("string"!=typeof e)return[e];for(var a=[],i=t.querySelectorAll(e),s=0;s<i.length;s+=1)a.push(i[s]);return a}(e.trim(),t||i)}else if(e.nodeType||e===a||e===i)s.push(e);else if(Array.isArray(e)){if(e instanceof p)return e;s=e}return new p(function(e){for(var t=[],a=0;a<e.length;a+=1)-1===t.indexOf(e[a])&&t.push(e[a]);return t}(s))}I.fn=p.prototype;var h,f,v,m={addClass:function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];var i=u(t.map(function(e){return e.split(" ")}));return this.forEach(function(e){var t;(t=e.classList).add.apply(t,i)}),this},removeClass:function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];var i=u(t.map(function(e){return e.split(" ")}));return this.forEach(function(e){var t;(t=e.classList).remove.apply(t,i)}),this},hasClass:function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];var i=u(t.map(function(e){return e.split(" ")}));return 0<c(this,function(t){return 0<i.filter(function(e){return t.classList.contains(e)}).length}).length},toggleClass:function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];var i=u(t.map(function(e){return e.split(" ")}));this.forEach(function(t){i.forEach(function(e){t.classList.toggle(e)})})},attr:function(e,t){if(1===arguments.length&&"string"==typeof e)return this[0]?this[0].getAttribute(e):void 0;for(var a=0;a<this.length;a+=1)if(2===arguments.length)this[a].setAttribute(e,t);else for(var i in e)this[a][i]=e[i],this[a].setAttribute(i,e[i]);return this},removeAttr:function(e){for(var t=0;t<this.length;t+=1)this[t].removeAttribute(e);return this},transform:function(e){for(var t=0;t<this.length;t+=1)this[t].style.transform=e;return this},transition:function(e){for(var t=0;t<this.length;t+=1)this[t].style.transition="string"!=typeof e?e+"ms":e;return this},on:function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];var i=t[0],r=t[1],n=t[2],s=t[3];function o(e){var t=e.target;if(t){var a=e.target.dom7EventData||[];if(a.indexOf(e)<0&&a.unshift(e),I(t).is(r))n.apply(t,a);else for(var i=I(t).parents(),s=0;s<i.length;s+=1)I(i[s]).is(r)&&n.apply(i[s],a)}}function l(e){var t=e&&e.target&&e.target.dom7EventData||[];t.indexOf(e)<0&&t.unshift(e),n.apply(this,t)}"function"==typeof t[1]&&(i=t[0],n=t[1],s=t[2],r=void 0),s=s||!1;for(var d,p=i.split(" "),u=0;u<this.length;u+=1){var c=this[u];if(r)for(d=0;d<p.length;d+=1){var h=p[d];c.dom7LiveListeners||(c.dom7LiveListeners={}),c.dom7LiveListeners[h]||(c.dom7LiveListeners[h]=[]),c.dom7LiveListeners[h].push({listener:n,proxyListener:o}),c.addEventListener(h,o,s)}else for(d=0;d<p.length;d+=1){var v=p[d];c.dom7Listeners||(c.dom7Listeners={}),c.dom7Listeners[v]||(c.dom7Listeners[v]=[]),c.dom7Listeners[v].push({listener:n,proxyListener:l}),c.addEventListener(v,l,s)}}return this},off:function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];var i=t[0],s=t[1],r=t[2],n=t[3];"function"==typeof t[1]&&(i=t[0],r=t[1],n=t[2],s=void 0),n=n||!1;for(var o=i.split(" "),l=0;l<o.length;l+=1)for(var d=o[l],p=0;p<this.length;p+=1){var u=this[p],c=void 0;if(!s&&u.dom7Listeners?c=u.dom7Listeners[d]:s&&u.dom7LiveListeners&&(c=u.dom7LiveListeners[d]),c&&c.length)for(var h=c.length-1;0<=h;--h){var v=c[h];(!r||v.listener!==r)&&!(r&&v.listener&&v.listener.dom7proxy&&v.listener.dom7proxy===r)&&r||(u.removeEventListener(d,v.proxyListener,n),c.splice(h,1))}}return this},trigger:function(){for(var e=ne(),t=arguments.length,a=new Array(t),i=0;i<t;i++)a[i]=arguments[i];for(var s=a[0].split(" "),r=a[1],n=0;n<s.length;n+=1)for(var o=s[n],l=0;l<this.length;l+=1){var d,p=this[l];e.CustomEvent&&(d=new e.CustomEvent(o,{detail:r,bubbles:!0,cancelable:!0}),p.dom7EventData=a.filter(function(e,t){return 0<t}),p.dispatchEvent(d),p.dom7EventData=[],delete p.dom7EventData)}return this},transitionEnd:function(a){var i=this;return a&&i.on("transitionend",function e(t){t.target===this&&(a.call(this,t),i.off("transitionend",e))}),this},outerWidth:function(e){if(0<this.length){if(e){var t=this.styles();return this[0].offsetWidth+parseFloat(t.getPropertyValue("margin-right"))+parseFloat(t.getPropertyValue("margin-left"))}return this[0].offsetWidth}return null},outerHeight:function(e){if(0<this.length){if(e){var t=this.styles();return this[0].offsetHeight+parseFloat(t.getPropertyValue("margin-top"))+parseFloat(t.getPropertyValue("margin-bottom"))}return this[0].offsetHeight}return null},styles:function(){var e=ne();return this[0]?e.getComputedStyle(this[0],null):{}},offset:function(){if(0<this.length){var e=ne(),t=E(),a=this[0],i=a.getBoundingClientRect(),s=t.body,r=a.clientTop||s.clientTop||0,n=a.clientLeft||s.clientLeft||0,o=a===e?e.scrollY:a.scrollTop,l=a===e?e.scrollX:a.scrollLeft;return{top:i.top+o-r,left:i.left+l-n}}return null},css:function(e,t){var a,i=ne();if(1===arguments.length){if("string"!=typeof e){for(a=0;a<this.length;a+=1)for(var s in e)this[a].style[s]=e[s];return this}if(this[0])return i.getComputedStyle(this[0],null).getPropertyValue(e)}if(2!==arguments.length||"string"!=typeof e)return this;for(a=0;a<this.length;a+=1)this[a].style[e]=t;return this},each:function(a){return a&&this.forEach(function(e,t){a.apply(e,[e,t])}),this},html:function(e){if(void 0===e)return this[0]?this[0].innerHTML:null;for(var t=0;t<this.length;t+=1)this[t].innerHTML=e;return this},text:function(e){if(void 0===e)return this[0]?this[0].textContent.trim():null;for(var t=0;t<this.length;t+=1)this[t].textContent=e;return this},is:function(e){var t,a,i=ne(),s=E(),r=this[0];if(!r||void 0===e)return!1;if("string"==typeof e){if(r.matches)return r.matches(e);if(r.webkitMatchesSelector)return r.webkitMatchesSelector(e);if(r.msMatchesSelector)return r.msMatchesSelector(e);for(t=I(e),a=0;a<t.length;a+=1)if(t[a]===r)return!0;return!1}if(e===s)return r===s;if(e===i)return r===i;if(e.nodeType||e instanceof p){for(t=e.nodeType?[e]:e,a=0;a<t.length;a+=1)if(t[a]===r)return!0;return!1}return!1},index:function(){var e,t=this[0];if(t){for(e=0;null!==(t=t.previousSibling);)1===t.nodeType&&(e+=1);return e}},eq:function(e){if(void 0===e)return this;var t=this.length;if(t-1<e)return I([]);if(e<0){var a=t+e;return a<0?I([]):I([this[a]])}return I([this[e]])},append:function(){for(var e,t=E(),a=0;a<arguments.length;a+=1){e=a<0||arguments.length<=a?void 0:arguments[a];for(var i=0;i<this.length;i+=1)if("string"==typeof e){var s=t.createElement("div");for(s.innerHTML=e;s.firstChild;)this[i].appendChild(s.firstChild)}else if(e instanceof p)for(var r=0;r<e.length;r+=1)this[i].appendChild(e[r]);else this[i].appendChild(e)}return this},prepend:function(e){for(var t,a=E(),i=0;i<this.length;i+=1)if("string"==typeof e){var s=a.createElement("div");for(s.innerHTML=e,t=s.childNodes.length-1;0<=t;--t)this[i].insertBefore(s.childNodes[t],this[i].childNodes[0])}else if(e instanceof p)for(t=0;t<e.length;t+=1)this[i].insertBefore(e[t],this[i].childNodes[0]);else this[i].insertBefore(e,this[i].childNodes[0]);return this},next:function(e){return 0<this.length?e?this[0].nextElementSibling&&I(this[0].nextElementSibling).is(e)?I([this[0].nextElementSibling]):I([]):this[0].nextElementSibling?I([this[0].nextElementSibling]):I([]):I([])},nextAll:function(e){var t=[],a=this[0];if(!a)return I([]);for(;a.nextElementSibling;){var i=a.nextElementSibling;(!e||I(i).is(e))&&t.push(i),a=i}return I(t)},prev:function(e){if(0<this.length){var t=this[0];return e?t.previousElementSibling&&I(t.previousElementSibling).is(e)?I([t.previousElementSibling]):I([]):t.previousElementSibling?I([t.previousElementSibling]):I([])}return I([])},prevAll:function(e){var t=[],a=this[0];if(!a)return I([]);for(;a.previousElementSibling;){var i=a.previousElementSibling;(!e||I(i).is(e))&&t.push(i),a=i}return I(t)},parent:function(e){for(var t=[],a=0;a<this.length;a+=1)null===this[a].parentNode||e&&!I(this[a].parentNode).is(e)||t.push(this[a].parentNode);return I(t)},parents:function(e){for(var t=[],a=0;a<this.length;a+=1)for(var i=this[a].parentNode;i;)e&&!I(i).is(e)||t.push(i),i=i.parentNode;return I(t)},closest:function(e){var t=this;return void 0===e?I([]):(t.is(e)||(t=t.parents(e).eq(0)),t)},find:function(e){for(var t=[],a=0;a<this.length;a+=1)for(var i=this[a].querySelectorAll(e),s=0;s<i.length;s+=1)t.push(i[s]);return I(t)},children:function(e){for(var t=[],a=0;a<this.length;a+=1)for(var i=this[a].children,s=0;s<i.length;s+=1)e&&!I(i[s]).is(e)||t.push(i[s]);return I(t)},filter:function(e){return I(c(this,e))},remove:function(){for(var e=0;e<this.length;e+=1)this[e].parentNode&&this[e].parentNode.removeChild(this[e]);return this}};function A(e,t){return void 0===t&&(t=0),setTimeout(e,t)}function D(){return Date.now()}function g(e,t){void 0===t&&(t="x");var a,i,s,r=ne(),n=r.getComputedStyle(e,null);return r.WebKitCSSMatrix?(6<(i=n.transform||n.webkitTransform).split(",").length&&(i=i.split(", ").map(function(e){return e.replace(",",".")}).join(", ")),s=new r.WebKitCSSMatrix("none"===i?"":i)):a=(s=n.MozTransform||n.OTransform||n.MsTransform||n.msTransform||n.transform||n.getPropertyValue("transform").replace("translate(","matrix(1, 0, 0, 1,")).toString().split(","),"x"===t&&(i=r.WebKitCSSMatrix?s.m41:16===a.length?parseFloat(a[12]):parseFloat(a[4])),"y"===t&&(i=r.WebKitCSSMatrix?s.m42:16===a.length?parseFloat(a[13]):parseFloat(a[5])),i||0}function y(e){return"object"==typeof e&&null!==e&&e.constructor&&e.constructor===Object}function oe(e){for(var t=Object(arguments.length<=0?void 0:e),a=1;a<arguments.length;a+=1){var i=a<0||arguments.length<=a?void 0:arguments[a];if(null!=i)for(var s=Object.keys(Object(i)),r=0,n=s.length;r<n;r+=1){var o=s[r],l=Object.getOwnPropertyDescriptor(i,o);void 0!==l&&l.enumerable&&(y(t[o])&&y(i[o])?oe(t[o],i[o]):!y(t[o])&&y(i[o])?(t[o]={},oe(t[o],i[o])):t[o]=i[o])}}return t}function w(a,i){Object.keys(i).forEach(function(t){y(i[t])&&Object.keys(i[t]).forEach(function(e){"function"==typeof i[t][e]&&(i[t][e]=i[t][e].bind(a))}),a[t]=i[t]})}function b(){var a,e;return h||(a=ne(),e=E(),h={touch:!!("ontouchstart"in a||a.DocumentTouch&&e instanceof a.DocumentTouch),pointerEvents:!!a.PointerEvent&&"maxTouchPoints"in a.navigator&&0<=a.navigator.maxTouchPoints,observer:"MutationObserver"in a||"WebkitMutationObserver"in a,passiveListener:function(){var e=!1;try{var t=Object.defineProperty({},"passive",{get:function(){e=!0}});a.addEventListener("testPassiveListener",null,t)}catch(e){}return e}(),gestures:"ongesturestart"in a}),h}function x(e){var t,a,i,s,r,n,o,l,d,p,u,c,h,v,m;return void 0===e&&(e={}),f||(a=(void 0===(t=e)?{}:t).userAgent,i=b(),s=ne(),r=s.navigator.platform,n=a||s.navigator.userAgent,o={ios:!1,android:!1},l=s.screen.width,d=s.screen.height,p=n.match(/(Android);?[\s\/]+([\d.]+)?/),u=n.match(/(iPad).*OS\s([\d_]+)/),c=n.match(/(iPod)(.*OS\s([\d_]+))?/),h=!u&&n.match(/(iPhone\sOS|iOS)\s([\d_]+)/),v="Win32"===r,m="MacIntel"===r,!u&&m&&i.touch&&0<=["1024x1366","1366x1024","834x1194","1194x834","834x1112","1112x834","768x1024","1024x768"].indexOf(l+"x"+d)&&(u=(u=n.match(/(Version)\/([\d.]+)/))||[0,1,"13_0_0"],m=!1),p&&!v&&(o.os="android",o.android=!0),(u||h||c)&&(o.os="ios",o.ios=!0),f=o),f}function T(){var e,t;return v||(t=ne(),v={isEdge:!!t.navigator.userAgent.match(/Edge/g),isSafari:0<=(e=t.navigator.userAgent.toLowerCase()).indexOf("safari")&&e.indexOf("chrome")<0&&e.indexOf("android")<0,isWebView:/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(t.navigator.userAgent)}),v}Object.keys(m).forEach(function(e){I.fn[e]=m[e]});var C={name:"resize",create:function(){var e=this;oe(e,{resize:{resizeHandler:function(){e&&!e.destroyed&&e.initialized&&(e.emit("beforeResize"),e.emit("resize"))},orientationChangeHandler:function(){e&&!e.destroyed&&e.initialized&&e.emit("orientationchange")}}})},on:{init:function(e){var t=ne();t.addEventListener("resize",e.resize.resizeHandler),t.addEventListener("orientationchange",e.resize.orientationChangeHandler)},destroy:function(e){var t=ne();t.removeEventListener("resize",e.resize.resizeHandler),t.removeEventListener("orientationchange",e.resize.orientationChangeHandler)}}},S={attach:function(e,t){void 0===t&&(t={});var a=ne(),i=this,s=new(a.MutationObserver||a.WebkitMutationObserver)(function(e){var t;1!==e.length?(t=function(){i.emit("observerUpdate",e[0])},a.requestAnimationFrame?a.requestAnimationFrame(t):a.setTimeout(t,0)):i.emit("observerUpdate",e[0])});s.observe(e,{attributes:void 0===t.attributes||t.attributes,childList:void 0===t.childList||t.childList,characterData:void 0===t.characterData||t.characterData}),i.observer.observers.push(s)},init:function(){var e=this;if(e.support.observer&&e.params.observer){if(e.params.observeParents)for(var t=e.$el.parents(),a=0;a<t.length;a+=1)e.observer.attach(t[a]);e.observer.attach(e.$el[0],{childList:e.params.observeSlideChildren}),e.observer.attach(e.$wrapperEl[0],{attributes:!1})}},destroy:function(){this.observer.observers.forEach(function(e){e.disconnect()}),this.observer.observers=[]}},M={name:"observer",params:{observer:!1,observeParents:!1,observeSlideChildren:!1},create:function(){w(this,{observer:e(e({},S),{},{observers:[]})})},on:{init:function(e){e.observer.init()},destroy:function(e){e.observer.destroy()}}};function z(){var e,t,a,i=this,s=i.params,r=i.el;r&&0===r.offsetWidth||(s.breakpoints&&i.setBreakpoint(),e=i.allowSlideNext,t=i.allowSlidePrev,a=i.snapGrid,i.allowSlideNext=!0,i.allowSlidePrev=!0,i.updateSize(),i.updateSlides(),i.updateSlidesClasses(),("auto"===s.slidesPerView||1<s.slidesPerView)&&i.isEnd&&!i.isBeginning&&!i.params.centeredSlides?i.slideTo(i.slides.length-1,0,!1,!0):i.slideTo(i.activeIndex,0,!1,!0),i.autoplay&&i.autoplay.running&&i.autoplay.paused&&i.autoplay.run(),i.allowSlidePrev=t,i.allowSlideNext=e,i.params.watchOverflow&&a!==i.snapGrid&&i.checkOverflow())}var P=!1;function k(){}var $={init:!0,direction:"horizontal",touchEventsTarget:"container",initialSlide:0,speed:300,cssMode:!1,updateOnWindowResize:!0,width:null,height:null,preventInteractionOnTransition:!1,userAgent:null,url:null,edgeSwipeDetection:!1,edgeSwipeThreshold:20,freeMode:!1,freeModeMomentum:!0,freeModeMomentumRatio:1,freeModeMomentumBounce:!0,freeModeMomentumBounceRatio:1,freeModeMomentumVelocityRatio:1,freeModeSticky:!1,freeModeMinimumVelocity:.02,autoHeight:!1,setWrapperSize:!1,virtualTranslate:!1,effect:"slide",breakpoints:void 0,spaceBetween:0,slidesPerView:1,slidesPerColumn:1,slidesPerColumnFill:"column",slidesPerGroup:1,slidesPerGroupSkip:0,centeredSlides:!1,centeredSlidesBounds:!1,slidesOffsetBefore:0,slidesOffsetAfter:0,normalizeSlideIndex:!0,centerInsufficientSlides:!1,watchOverflow:!1,roundLengths:!1,touchRatio:1,touchAngle:45,simulateTouch:!0,shortSwipes:!0,longSwipes:!0,longSwipesRatio:.5,longSwipesMs:300,followFinger:!0,allowTouchMove:!0,threshold:0,touchMoveStopPropagation:!1,touchStartPreventDefault:!0,touchStartForcePreventDefault:!1,touchReleaseOnEdges:!1,uniqueNavElements:!0,resistance:!0,resistanceRatio:.85,watchSlidesProgress:!1,watchSlidesVisibility:!1,grabCursor:!1,preventClicks:!0,preventClicksPropagation:!0,slideToClickedSlide:!1,preloadImages:!0,updateOnImagesReady:!0,loop:!1,loopAdditionalSlides:0,loopedSlides:null,loopFillGroupWithBlank:!1,loopPreventsSlide:!0,allowSlidePrev:!0,allowSlideNext:!0,swipeHandler:null,noSwiping:!0,noSwipingClass:"swiper-no-swiping",noSwipingSelector:null,passiveListeners:!0,containerModifierClass:"swiper-container-",slideClass:"swiper-slide",slideBlankClass:"swiper-slide-invisible-blank",slideActiveClass:"swiper-slide-active",slideDuplicateActiveClass:"swiper-slide-duplicate-active",slideVisibleClass:"swiper-slide-visible",slideDuplicateClass:"swiper-slide-duplicate",slideNextClass:"swiper-slide-next",slideDuplicateNextClass:"swiper-slide-duplicate-next",slidePrevClass:"swiper-slide-prev",slideDuplicatePrevClass:"swiper-slide-duplicate-prev",wrapperClass:"swiper-wrapper",runCallbacksOnInit:!0,_emitClasses:!1},L={modular:{useParams:function(a){var i=this;i.modules&&Object.keys(i.modules).forEach(function(e){var t=i.modules[e];t.params&&oe(a,t.params)})},useModules:function(i){void 0===i&&(i={});var s=this;s.modules&&Object.keys(s.modules).forEach(function(e){var t=s.modules[e],a=i[e]||{};t.on&&s.on&&Object.keys(t.on).forEach(function(e){s.on(e,t.on[e])}),t.create&&t.create.bind(s)(a)})}},eventsEmitter:{on:function(e,t,a){var i=this;if("function"!=typeof t)return i;var s=a?"unshift":"push";return e.split(" ").forEach(function(e){i.eventsListeners[e]||(i.eventsListeners[e]=[]),i.eventsListeners[e][s](t)}),i},once:function(i,s,e){var r=this;if("function"!=typeof s)return r;function n(){r.off(i,n),n.__emitterProxy&&delete n.__emitterProxy;for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];s.apply(r,t)}return n.__emitterProxy=s,r.on(i,n,e)},onAny:function(e,t){if("function"!=typeof e)return this;var a=t?"unshift":"push";return this.eventsAnyListeners.indexOf(e)<0&&this.eventsAnyListeners[a](e),this},offAny:function(e){var t=this;if(!t.eventsAnyListeners)return t;var a=t.eventsAnyListeners.indexOf(e);return 0<=a&&t.eventsAnyListeners.splice(a,1),t},off:function(e,i){var s=this;return s.eventsListeners&&e.split(" ").forEach(function(a){void 0===i?s.eventsListeners[a]=[]:s.eventsListeners[a]&&s.eventsListeners[a].forEach(function(e,t){(e===i||e.__emitterProxy&&e.__emitterProxy===i)&&s.eventsListeners[a].splice(t,1)})}),s},emit:function(){var e,i,s,r=this;if(!r.eventsListeners)return r;for(var t=arguments.length,a=new Array(t),n=0;n<t;n++)a[n]=arguments[n];return s="string"==typeof a[0]||Array.isArray(a[0])?(e=a[0],i=a.slice(1,a.length),r):(e=a[0].events,i=a[0].data,a[0].context||r),i.unshift(s),(Array.isArray(e)?e:e.split(" ")).forEach(function(t){var a;r.eventsAnyListeners&&r.eventsAnyListeners.length&&r.eventsAnyListeners.forEach(function(e){e.apply(s,[t].concat(i))}),r.eventsListeners&&r.eventsListeners[t]&&(a=[],r.eventsListeners[t].forEach(function(e){a.push(e)}),a.forEach(function(e){e.apply(s,i)}))}),r}},update:{updateSize:function(){var e=this,t=e.$el,a=void 0!==e.params.width&&null!==e.params.width?e.params.width:t[0].clientWidth,i=void 0!==e.params.height&&null!==e.params.width?e.params.height:t[0].clientHeight;0===a&&e.isHorizontal()||0===i&&e.isVertical()||(a=a-parseInt(t.css("padding-left")||0,10)-parseInt(t.css("padding-right")||0,10),i=i-parseInt(t.css("padding-top")||0,10)-parseInt(t.css("padding-bottom")||0,10),Number.isNaN(a)&&(a=0),Number.isNaN(i)&&(i=0),oe(e,{width:a,height:i,size:e.isHorizontal()?a:i}))},updateSlides:function(){var e=this,t=ne(),a=e.params,i=e.$wrapperEl,s=e.size,r=e.rtlTranslate,n=e.wrongRTL,o=e.virtual&&a.virtual.enabled,l=o?e.virtual.slides.length:e.slides.length,d=i.children("."+e.params.slideClass),p=o?e.virtual.slides.length:d.length,u=[],c=[],h=[];function v(e,t){return!a.cssMode||t!==d.length-1}var m=a.slidesOffsetBefore;"function"==typeof m&&(m=a.slidesOffsetBefore.call(e));var f=a.slidesOffsetAfter;"function"==typeof f&&(f=a.slidesOffsetAfter.call(e));var g,y=e.snapGrid.length,w=e.snapGrid.length,b=a.spaceBetween,E=-m,x=0,T=0;if(void 0!==s){"string"==typeof b&&0<=b.indexOf("%")&&(b=parseFloat(b.replace("%",""))/100*s),e.virtualSize=-b,r?d.css({marginLeft:"",marginTop:""}):d.css({marginRight:"",marginBottom:""}),1<a.slidesPerColumn&&(g=Math.floor(p/a.slidesPerColumn)===p/e.params.slidesPerColumn?p:Math.ceil(p/a.slidesPerColumn)*a.slidesPerColumn,"auto"!==a.slidesPerView&&"row"===a.slidesPerColumnFill&&(g=Math.max(g,a.slidesPerView*a.slidesPerColumn)));for(var C,S,M,z,P,k=a.slidesPerColumn,$=g/k,L=Math.floor(p/a.slidesPerColumn),I=0;I<p;I+=1){_=0;var O,A,D,G,N,B,H,X,Y,V,F,R,W,q,j,_,U,K,Z,J,Q,ee,te=d.eq(I);1<a.slidesPerColumn&&(G=N=B=void 0,"row"===a.slidesPerColumnFill&&1<a.slidesPerGroup?(O=Math.floor(I/(a.slidesPerGroup*a.slidesPerColumn)),A=I-a.slidesPerColumn*a.slidesPerGroup*O,D=0===O?a.slidesPerGroup:Math.min(Math.ceil((p-O*k*a.slidesPerGroup)/k),a.slidesPerGroup),B=(N=A-(G=Math.floor(A/D))*D+O*a.slidesPerGroup)+G*g/k,te.css({"-webkit-box-ordinal-group":B,"-moz-box-ordinal-group":B,"-ms-flex-order":B,"-webkit-order":B,order:B})):"column"===a.slidesPerColumnFill?(G=I-(N=Math.floor(I/k))*k,(L<N||N===L&&G===k-1)&&k<=(G+=1)&&(G=0,N+=1)):N=I-(G=Math.floor(I/$))*$,te.css("margin-"+(e.isHorizontal()?"top":"left"),0!==G&&a.spaceBetween&&a.spaceBetween+"px")),"none"!==te.css("display")&&("auto"===a.slidesPerView?(H=t.getComputedStyle(te[0],null),X=te[0].style.transform,Y=te[0].style.webkitTransform,X&&(te[0].style.transform="none"),Y&&(te[0].style.webkitTransform="none"),_=a.roundLengths?e.isHorizontal()?te.outerWidth(!0):te.outerHeight(!0):e.isHorizontal()?(V=parseFloat(H.getPropertyValue("width")||0),F=parseFloat(H.getPropertyValue("padding-left")||0),R=parseFloat(H.getPropertyValue("padding-right")||0),W=parseFloat(H.getPropertyValue("margin-left")||0),q=parseFloat(H.getPropertyValue("margin-right")||0),(j=H.getPropertyValue("box-sizing"))&&"border-box"===j?V+W+q:V+F+R+W+q):(U=parseFloat(H.getPropertyValue("height")||0),K=parseFloat(H.getPropertyValue("padding-top")||0),Z=parseFloat(H.getPropertyValue("padding-bottom")||0),J=parseFloat(H.getPropertyValue("margin-top")||0),Q=parseFloat(H.getPropertyValue("margin-bottom")||0),(ee=H.getPropertyValue("box-sizing"))&&"border-box"===ee?U+J+Q:U+K+Z+J+Q),X&&(te[0].style.transform=X),Y&&(te[0].style.webkitTransform=Y),a.roundLengths&&(_=Math.floor(_))):(_=(s-(a.slidesPerView-1)*b)/a.slidesPerView,a.roundLengths&&(_=Math.floor(_)),d[I]&&(e.isHorizontal()?d[I].style.width=_+"px":d[I].style.height=_+"px")),d[I]&&(d[I].swiperSlideSize=_),h.push(_),a.centeredSlides?(E=E+_/2+x/2+b,0===x&&0!==I&&(E=E-s/2-b),0===I&&(E=E-s/2-b),Math.abs(E)<.001&&(E=0),a.roundLengths&&(E=Math.floor(E)),T%a.slidesPerGroup==0&&u.push(E),c.push(E)):(a.roundLengths&&(E=Math.floor(E)),(T-Math.min(e.params.slidesPerGroupSkip,T))%e.params.slidesPerGroup==0&&u.push(E),c.push(E),E=E+_+b),e.virtualSize+=_+b,x=_,T+=1)}if(e.virtualSize=Math.max(e.virtualSize,s)+f,r&&n&&("slide"===a.effect||"coverflow"===a.effect)&&i.css({width:e.virtualSize+a.spaceBetween+"px"}),a.setWrapperSize&&(e.isHorizontal()?i.css({width:e.virtualSize+a.spaceBetween+"px"}):i.css({height:e.virtualSize+a.spaceBetween+"px"})),1<a.slidesPerColumn&&(e.virtualSize=(_+a.spaceBetween)*g,e.virtualSize=Math.ceil(e.virtualSize/a.slidesPerColumn)-a.spaceBetween,e.isHorizontal()?i.css({width:e.virtualSize+a.spaceBetween+"px"}):i.css({height:e.virtualSize+a.spaceBetween+"px"}),a.centeredSlides)){C=[];for(var ae=0;ae<u.length;ae+=1){var ie=u[ae];a.roundLengths&&(ie=Math.floor(ie)),u[ae]<e.virtualSize+u[0]&&C.push(ie)}u=C}if(!a.centeredSlides){C=[];for(var se=0;se<u.length;se+=1){var re=u[se];a.roundLengths&&(re=Math.floor(re)),u[se]<=e.virtualSize-s&&C.push(re)}u=C,1<Math.floor(e.virtualSize-s)-Math.floor(u[u.length-1])&&u.push(e.virtualSize-s)}0===u.length&&(u=[0]),0!==a.spaceBetween&&(e.isHorizontal()?r?d.filter(v).css({marginLeft:b+"px"}):d.filter(v).css({marginRight:b+"px"}):d.filter(v).css({marginBottom:b+"px"})),a.centeredSlides&&a.centeredSlidesBounds&&(S=0,h.forEach(function(e){S+=e+(a.spaceBetween?a.spaceBetween:0)}),M=(S-=a.spaceBetween)-s,u=u.map(function(e){return e<0?-m:M<e?M+f:e})),a.centerInsufficientSlides&&(z=0,h.forEach(function(e){z+=e+(a.spaceBetween?a.spaceBetween:0)}),(z-=a.spaceBetween)<s&&(P=(s-z)/2,u.forEach(function(e,t){u[t]=e-P}),c.forEach(function(e,t){c[t]=e+P}))),oe(e,{slides:d,snapGrid:u,slidesGrid:c,slidesSizesGrid:h}),p!==l&&e.emit("slidesLengthChange"),u.length!==y&&(e.params.watchOverflow&&e.checkOverflow(),e.emit("snapGridLengthChange")),c.length!==w&&e.emit("slidesGridLengthChange"),(a.watchSlidesProgress||a.watchSlidesVisibility)&&e.updateSlidesOffset()}},updateAutoHeight:function(e){var t,a,i=this,s=[],r=0;if("number"==typeof e?i.setTransition(e):!0===e&&i.setTransition(i.params.speed),"auto"!==i.params.slidesPerView&&1<i.params.slidesPerView)if(i.params.centeredSlides)i.visibleSlides.each(function(e){s.push(e)});else for(t=0;t<Math.ceil(i.params.slidesPerView);t+=1){var n=i.activeIndex+t;if(n>i.slides.length)break;s.push(i.slides.eq(n)[0])}else s.push(i.slides.eq(i.activeIndex)[0]);for(t=0;t<s.length;t+=1){void 0!==s[t]&&(r=r<(a=s[t].offsetHeight)?a:r)}r&&i.$wrapperEl.css("height",r+"px")},updateSlidesOffset:function(){for(var e=this.slides,t=0;t<e.length;t+=1)e[t].swiperSlideOffset=this.isHorizontal()?e[t].offsetLeft:e[t].offsetTop},updateSlidesProgress:function(e){void 0===e&&(e=this&&this.translate||0);var t=this,a=t.params,i=t.slides,s=t.rtlTranslate;if(0!==i.length){void 0===i[0].swiperSlideOffset&&t.updateSlidesOffset();var r=s?e:-e;i.removeClass(a.slideVisibleClass),t.visibleSlidesIndexes=[],t.visibleSlides=[];for(var n=0;n<i.length;n+=1){var o,l,d=i[n],p=(r+(a.centeredSlides?t.minTranslate():0)-d.swiperSlideOffset)/(d.swiperSlideSize+a.spaceBetween);(a.watchSlidesVisibility||a.centeredSlides&&a.autoHeight)&&(l=(o=-(r-d.swiperSlideOffset))+t.slidesSizesGrid[n],(0<=o&&o<t.size-1||1<l&&l<=t.size||o<=0&&l>=t.size)&&(t.visibleSlides.push(d),t.visibleSlidesIndexes.push(n),i.eq(n).addClass(a.slideVisibleClass))),d.progress=s?-p:p}t.visibleSlides=I(t.visibleSlides)}},updateProgress:function(e){var t,a=this;void 0===e&&(t=a.rtlTranslate?-1:1,e=a&&a.translate&&a.translate*t||0);var i=a.params,s=a.maxTranslate()-a.minTranslate(),r=a.progress,n=a.isBeginning,o=n,l=d=a.isEnd,d=0==s?n=!(r=0):(n=(r=(e-a.minTranslate())/s)<=0,1<=r);oe(a,{progress:r,isBeginning:n,isEnd:d}),(i.watchSlidesProgress||i.watchSlidesVisibility||i.centeredSlides&&i.autoHeight)&&a.updateSlidesProgress(e),n&&!o&&a.emit("reachBeginning toEdge"),d&&!l&&a.emit("reachEnd toEdge"),(o&&!n||l&&!d)&&a.emit("fromEdge"),a.emit("progress",r)},updateSlidesClasses:function(){var e,t=this,a=t.slides,i=t.params,s=t.$wrapperEl,r=t.activeIndex,n=t.realIndex,o=t.virtual&&i.virtual.enabled;a.removeClass(i.slideActiveClass+" "+i.slideNextClass+" "+i.slidePrevClass+" "+i.slideDuplicateActiveClass+" "+i.slideDuplicateNextClass+" "+i.slideDuplicatePrevClass),(e=o?t.$wrapperEl.find("."+i.slideClass+'[data-swiper-slide-index="'+r+'"]'):a.eq(r)).addClass(i.slideActiveClass),i.loop&&(e.hasClass(i.slideDuplicateClass)?s.children("."+i.slideClass+":not(."+i.slideDuplicateClass+')[data-swiper-slide-index="'+n+'"]').addClass(i.slideDuplicateActiveClass):s.children("."+i.slideClass+"."+i.slideDuplicateClass+'[data-swiper-slide-index="'+n+'"]').addClass(i.slideDuplicateActiveClass));var l=e.nextAll("."+i.slideClass).eq(0).addClass(i.slideNextClass);i.loop&&0===l.length&&(l=a.eq(0)).addClass(i.slideNextClass);var d=e.prevAll("."+i.slideClass).eq(0).addClass(i.slidePrevClass);i.loop&&0===d.length&&(d=a.eq(-1)).addClass(i.slidePrevClass),i.loop&&(l.hasClass(i.slideDuplicateClass)?s.children("."+i.slideClass+":not(."+i.slideDuplicateClass+')[data-swiper-slide-index="'+l.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicateNextClass):s.children("."+i.slideClass+"."+i.slideDuplicateClass+'[data-swiper-slide-index="'+l.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicateNextClass),d.hasClass(i.slideDuplicateClass)?s.children("."+i.slideClass+":not(."+i.slideDuplicateClass+')[data-swiper-slide-index="'+d.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicatePrevClass):s.children("."+i.slideClass+"."+i.slideDuplicateClass+'[data-swiper-slide-index="'+d.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicatePrevClass)),t.emitSlidesClasses()},updateActiveIndex:function(e){var t,a,i,s=this,r=s.rtlTranslate?s.translate:-s.translate,n=s.slidesGrid,o=s.snapGrid,l=s.params,d=s.activeIndex,p=s.realIndex,u=s.snapIndex,c=e;if(void 0===c){for(var h=0;h<n.length;h+=1)void 0!==n[h+1]?r>=n[h]&&r<n[h+1]-(n[h+1]-n[h])/2?c=h:r>=n[h]&&r<n[h+1]&&(c=h+1):r>=n[h]&&(c=h);l.normalizeSlideIndex&&(c<0||void 0===c)&&(c=0)}(a=0<=o.indexOf(r)?o.indexOf(r):(t=Math.min(l.slidesPerGroupSkip,c))+Math.floor((c-t)/l.slidesPerGroup))>=o.length&&(a=o.length-1),c!==d?(i=parseInt(s.slides.eq(c).attr("data-swiper-slide-index")||c,10),oe(s,{snapIndex:a,realIndex:i,previousIndex:d,activeIndex:c}),s.emit("activeIndexChange"),s.emit("snapIndexChange"),p!==i&&s.emit("realIndexChange"),(s.initialized||s.params.runCallbacksOnInit)&&s.emit("slideChange")):a!==u&&(s.snapIndex=a,s.emit("snapIndexChange"))},updateClickedSlide:function(e){var t=this,a=t.params,i=I(e.target).closest("."+a.slideClass)[0],s=!1;if(i)for(var r=0;r<t.slides.length;r+=1)t.slides[r]===i&&(s=!0);if(!i||!s)return t.clickedSlide=void 0,void(t.clickedIndex=void 0);t.clickedSlide=i,t.virtual&&t.params.virtual.enabled?t.clickedIndex=parseInt(I(i).attr("data-swiper-slide-index"),10):t.clickedIndex=I(i).index(),a.slideToClickedSlide&&void 0!==t.clickedIndex&&t.clickedIndex!==t.activeIndex&&t.slideToClickedSlide()}},translate:{getTranslate:function(e){void 0===e&&(e=this.isHorizontal()?"x":"y");var t=this.params,a=this.rtlTranslate,i=this.translate,s=this.$wrapperEl;if(t.virtualTranslate)return a?-i:i;if(t.cssMode)return i;var r=g(s[0],e);return a&&(r=-r),r||0},setTranslate:function(e,t){var a=this,i=a.rtlTranslate,s=a.params,r=a.$wrapperEl,n=a.wrapperEl,o=a.progress,l=0,d=0;a.isHorizontal()?l=i?-e:e:d=e,s.roundLengths&&(l=Math.floor(l),d=Math.floor(d)),s.cssMode?n[a.isHorizontal()?"scrollLeft":"scrollTop"]=a.isHorizontal()?-l:-d:s.virtualTranslate||r.transform("translate3d("+l+"px, "+d+"px, 0px)"),a.previousTranslate=a.translate,a.translate=a.isHorizontal()?l:d;var p=a.maxTranslate()-a.minTranslate();(0==p?0:(e-a.minTranslate())/p)!==o&&a.updateProgress(e),a.emit("setTranslate",a.translate,t)},minTranslate:function(){return-this.snapGrid[0]},maxTranslate:function(){return-this.snapGrid[this.snapGrid.length-1]},translateTo:function(e,t,a,i,s){void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===a&&(a=!0),void 0===i&&(i=!0);var r=this,n=r.params,o=r.wrapperEl;if(r.animating&&n.preventInteractionOnTransition)return!1;var l=r.minTranslate(),d=r.maxTranslate(),p=i&&l<e?l:i&&e<d?d:e;if(r.updateProgress(p),n.cssMode){var u,c=r.isHorizontal();return 0!==t&&o.scrollTo?o.scrollTo(((u={})[c?"left":"top"]=-p,u.behavior="smooth",u)):o[c?"scrollLeft":"scrollTop"]=-p,!0}return 0===t?(r.setTransition(0),r.setTranslate(p),a&&(r.emit("beforeTransitionStart",t,s),r.emit("transitionEnd"))):(r.setTransition(t),r.setTranslate(p),a&&(r.emit("beforeTransitionStart",t,s),r.emit("transitionStart")),r.animating||(r.animating=!0,r.onTranslateToWrapperTransitionEnd||(r.onTranslateToWrapperTransitionEnd=function(e){r&&!r.destroyed&&e.target===this&&(r.$wrapperEl[0].removeEventListener("transitionend",r.onTranslateToWrapperTransitionEnd),r.$wrapperEl[0].removeEventListener("webkitTransitionEnd",r.onTranslateToWrapperTransitionEnd),r.onTranslateToWrapperTransitionEnd=null,delete r.onTranslateToWrapperTransitionEnd,a&&r.emit("transitionEnd"))}),r.$wrapperEl[0].addEventListener("transitionend",r.onTranslateToWrapperTransitionEnd),r.$wrapperEl[0].addEventListener("webkitTransitionEnd",r.onTranslateToWrapperTransitionEnd))),!0}},transition:{setTransition:function(e,t){this.params.cssMode||this.$wrapperEl.transition(e),this.emit("setTransition",e,t)},transitionStart:function(e,t){void 0===e&&(e=!0);var a=this,i=a.activeIndex,s=a.params,r=a.previousIndex;if(!s.cssMode){s.autoHeight&&a.updateAutoHeight();var n=(n=t)||(r<i?"next":i<r?"prev":"reset");if(a.emit("transitionStart"),e&&i!==r){if("reset"===n)return void a.emit("slideResetTransitionStart");a.emit("slideChangeTransitionStart"),"next"===n?a.emit("slideNextTransitionStart"):a.emit("slidePrevTransitionStart")}}},transitionEnd:function(e,t){void 0===e&&(e=!0);var a=this,i=a.activeIndex,s=a.previousIndex,r=a.params;if(a.animating=!1,!r.cssMode){a.setTransition(0);var n=(n=t)||(s<i?"next":i<s?"prev":"reset");if(a.emit("transitionEnd"),e&&i!==s){if("reset"===n)return void a.emit("slideResetTransitionEnd");a.emit("slideChangeTransitionEnd"),"next"===n?a.emit("slideNextTransitionEnd"):a.emit("slidePrevTransitionEnd")}}}},slide:{slideTo:function(e,t,a,i){void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===a&&(a=!0);var s=this,r=e;r<0&&(r=0);var n=s.params,o=s.snapGrid,l=s.slidesGrid,d=s.previousIndex,p=s.activeIndex,u=s.rtlTranslate,c=s.wrapperEl;if(s.animating&&n.preventInteractionOnTransition)return!1;var h=Math.min(s.params.slidesPerGroupSkip,r),v=h+Math.floor((r-h)/s.params.slidesPerGroup);v>=o.length&&(v=o.length-1),(p||n.initialSlide||0)===(d||0)&&a&&s.emit("beforeSlideChangeStart");var m,f=-o[v];if(s.updateProgress(f),n.normalizeSlideIndex)for(var g=0;g<l.length;g+=1)-Math.floor(100*f)>=Math.floor(100*l[g])&&(r=g);if(s.initialized&&r!==p){if(!s.allowSlideNext&&f<s.translate&&f<s.minTranslate())return!1;if(!s.allowSlidePrev&&f>s.translate&&f>s.maxTranslate()&&(p||0)!==r)return!1}if(m=p<r?"next":r<p?"prev":"reset",u&&-f===s.translate||!u&&f===s.translate)return s.updateActiveIndex(r),n.autoHeight&&s.updateAutoHeight(),s.updateSlidesClasses(),"slide"!==n.effect&&s.setTranslate(f),"reset"!==m&&(s.transitionStart(a,m),s.transitionEnd(a,m)),!1;if(n.cssMode){var y,w=s.isHorizontal(),b=-f;return u&&(b=c.scrollWidth-c.offsetWidth-b),0!==t&&c.scrollTo?c.scrollTo(((y={})[w?"left":"top"]=b,y.behavior="smooth",y)):c[w?"scrollLeft":"scrollTop"]=b,!0}return 0===t?(s.setTransition(0),s.setTranslate(f),s.updateActiveIndex(r),s.updateSlidesClasses(),s.emit("beforeTransitionStart",t,i),s.transitionStart(a,m),s.transitionEnd(a,m)):(s.setTransition(t),s.setTranslate(f),s.updateActiveIndex(r),s.updateSlidesClasses(),s.emit("beforeTransitionStart",t,i),s.transitionStart(a,m),s.animating||(s.animating=!0,s.onSlideToWrapperTransitionEnd||(s.onSlideToWrapperTransitionEnd=function(e){s&&!s.destroyed&&e.target===this&&(s.$wrapperEl[0].removeEventListener("transitionend",s.onSlideToWrapperTransitionEnd),s.$wrapperEl[0].removeEventListener("webkitTransitionEnd",s.onSlideToWrapperTransitionEnd),s.onSlideToWrapperTransitionEnd=null,delete s.onSlideToWrapperTransitionEnd,s.transitionEnd(a,m))}),s.$wrapperEl[0].addEventListener("transitionend",s.onSlideToWrapperTransitionEnd),s.$wrapperEl[0].addEventListener("webkitTransitionEnd",s.onSlideToWrapperTransitionEnd))),!0},slideToLoop:function(e,t,a,i){void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===a&&(a=!0);var s=e;return this.params.loop&&(s+=this.loopedSlides),this.slideTo(s,t,a,i)},slideNext:function(e,t,a){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var i=this,s=i.params,r=i.animating,n=i.activeIndex<s.slidesPerGroupSkip?1:s.slidesPerGroup;if(s.loop){if(r&&s.loopPreventsSlide)return!1;i.loopFix(),i._clientLeft=i.$wrapperEl[0].clientLeft}return i.slideTo(i.activeIndex+n,e,t,a)},slidePrev:function(e,t,a){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var i=this,s=i.params,r=i.animating,n=i.snapGrid,o=i.slidesGrid,l=i.rtlTranslate;if(s.loop){if(r&&s.loopPreventsSlide)return!1;i.loopFix(),i._clientLeft=i.$wrapperEl[0].clientLeft}function d(e){return e<0?-Math.floor(Math.abs(e)):Math.floor(e)}var p,u=d(l?i.translate:-i.translate),c=n.map(d),h=(n[c.indexOf(u)],n[c.indexOf(u)-1]);return void 0===h&&s.cssMode&&n.forEach(function(e){!h&&e<=u&&(h=e)}),void 0!==h&&(p=o.indexOf(h))<0&&(p=i.activeIndex-1),i.slideTo(p,e,t,a)},slideReset:function(e,t,a){return void 0===e&&(e=this.params.speed),void 0===t&&(t=!0),this.slideTo(this.activeIndex,e,t,a)},slideToClosest:function(e,t,a,i){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0),void 0===i&&(i=.5);var s,r,n=this,o=n.activeIndex,l=Math.min(n.params.slidesPerGroupSkip,o),d=l+Math.floor((o-l)/n.params.slidesPerGroup),p=n.rtlTranslate?n.translate:-n.translate;return p>=n.snapGrid[d]?(s=n.snapGrid[d],(n.snapGrid[d+1]-s)*i<p-s&&(o+=n.params.slidesPerGroup)):p-(r=n.snapGrid[d-1])<=(n.snapGrid[d]-r)*i&&(o-=n.params.slidesPerGroup),o=Math.max(o,0),o=Math.min(o,n.slidesGrid.length-1),n.slideTo(o,e,t,a)},slideToClickedSlide:function(){var e,t=this,a=t.params,i=t.$wrapperEl,s="auto"===a.slidesPerView?t.slidesPerViewDynamic():a.slidesPerView,r=t.clickedIndex;if(a.loop){if(t.animating)return;e=parseInt(I(t.clickedSlide).attr("data-swiper-slide-index"),10),a.centeredSlides?r<t.loopedSlides-s/2||r>t.slides.length-t.loopedSlides+s/2?(t.loopFix(),r=i.children("."+a.slideClass+'[data-swiper-slide-index="'+e+'"]:not(.'+a.slideDuplicateClass+")").eq(0).index(),A(function(){t.slideTo(r)})):t.slideTo(r):r>t.slides.length-s?(t.loopFix(),r=i.children("."+a.slideClass+'[data-swiper-slide-index="'+e+'"]:not(.'+a.slideDuplicateClass+")").eq(0).index(),A(function(){t.slideTo(r)})):t.slideTo(r)}else t.slideTo(r)}},loop:{loopCreate:function(){var i=this,e=E(),t=i.params,a=i.$wrapperEl;a.children("."+t.slideClass+"."+t.slideDuplicateClass).remove();var s=a.children("."+t.slideClass);if(t.loopFillGroupWithBlank){var r=t.slidesPerGroup-s.length%t.slidesPerGroup;if(r!==t.slidesPerGroup){for(var n=0;n<r;n+=1){var o=I(e.createElement("div")).addClass(t.slideClass+" "+t.slideBlankClass);a.append(o)}s=a.children("."+t.slideClass)}}"auto"!==t.slidesPerView||t.loopedSlides||(t.loopedSlides=s.length),i.loopedSlides=Math.ceil(parseFloat(t.loopedSlides||t.slidesPerView,10)),i.loopedSlides+=t.loopAdditionalSlides,i.loopedSlides>s.length&&(i.loopedSlides=s.length);var l=[],d=[];s.each(function(e,t){var a=I(e);t<i.loopedSlides&&d.push(e),t<s.length&&t>=s.length-i.loopedSlides&&l.push(e),a.attr("data-swiper-slide-index",t)});for(var p=0;p<d.length;p+=1)a.append(I(d[p].cloneNode(!0)).addClass(t.slideDuplicateClass));for(var u=l.length-1;0<=u;--u)a.prepend(I(l[u].cloneNode(!0)).addClass(t.slideDuplicateClass))},loopFix:function(){var e=this;e.emit("beforeLoopFix");var t=e.activeIndex,a=e.slides,i=e.loopedSlides,s=e.allowSlidePrev,r=e.allowSlideNext,n=e.snapGrid,o=e.rtlTranslate;e.allowSlidePrev=!0,e.allowSlideNext=!0;var l,d=-n[t]-e.getTranslate();t<i?(l=a.length-3*i+t,l+=i,e.slideTo(l,0,!1,!0)&&0!=d&&e.setTranslate((o?-e.translate:e.translate)-d)):t>=a.length-i&&(l=-a.length+t+i,l+=i,e.slideTo(l,0,!1,!0)&&0!=d&&e.setTranslate((o?-e.translate:e.translate)-d)),e.allowSlidePrev=s,e.allowSlideNext=r,e.emit("loopFix")},loopDestroy:function(){var e=this.$wrapperEl,t=this.params,a=this.slides;e.children("."+t.slideClass+"."+t.slideDuplicateClass+",."+t.slideClass+"."+t.slideBlankClass).remove(),a.removeAttr("data-swiper-slide-index")}},grabCursor:{setGrabCursor:function(e){var t,a=this;a.support.touch||!a.params.simulateTouch||a.params.watchOverflow&&a.isLocked||a.params.cssMode||((t=a.el).style.cursor="move",t.style.cursor=e?"-webkit-grabbing":"-webkit-grab",t.style.cursor=e?"-moz-grabbin":"-moz-grab",t.style.cursor=e?"grabbing":"grab")},unsetGrabCursor:function(){var e=this;e.support.touch||e.params.watchOverflow&&e.isLocked||e.params.cssMode||(e.el.style.cursor="")}},manipulation:{appendSlide:function(e){var t=this,a=t.$wrapperEl,i=t.params;if(i.loop&&t.loopDestroy(),"object"==typeof e&&"length"in e)for(var s=0;s<e.length;s+=1)e[s]&&a.append(e[s]);else a.append(e);i.loop&&t.loopCreate(),i.observer&&t.support.observer||t.update()},prependSlide:function(e){var t=this,a=t.params,i=t.$wrapperEl,s=t.activeIndex;a.loop&&t.loopDestroy();var r=s+1;if("object"==typeof e&&"length"in e){for(var n=0;n<e.length;n+=1)e[n]&&i.prepend(e[n]);r=s+e.length}else i.prepend(e);a.loop&&t.loopCreate(),a.observer&&t.support.observer||t.update(),t.slideTo(r,0,!1)},addSlide:function(e,t){var a=this,i=a.$wrapperEl,s=a.params,r=a.activeIndex;s.loop&&(r-=a.loopedSlides,a.loopDestroy(),a.slides=i.children("."+s.slideClass));var n=a.slides.length;if(e<=0)a.prependSlide(t);else if(n<=e)a.appendSlide(t);else{for(var o=e<r?r+1:r,l=[],d=n-1;e<=d;--d){var p=a.slides.eq(d);p.remove(),l.unshift(p)}if("object"==typeof t&&"length"in t){for(var u=0;u<t.length;u+=1)t[u]&&i.append(t[u]);o=e<r?r+t.length:r}else i.append(t);for(var c=0;c<l.length;c+=1)i.append(l[c]);s.loop&&a.loopCreate(),s.observer&&a.support.observer||a.update(),s.loop?a.slideTo(o+a.loopedSlides,0,!1):a.slideTo(o,0,!1)}},removeSlide:function(e){var t=this,a=t.params,i=t.$wrapperEl,s=t.activeIndex;a.loop&&(s-=t.loopedSlides,t.loopDestroy(),t.slides=i.children("."+a.slideClass));var r,n=s;if("object"==typeof e&&"length"in e){for(var o=0;o<e.length;o+=1)r=e[o],t.slides[r]&&t.slides.eq(r).remove(),r<n&&--n;n=Math.max(n,0)}else r=e,t.slides[r]&&t.slides.eq(r).remove(),r<n&&--n,n=Math.max(n,0);a.loop&&t.loopCreate(),a.observer&&t.support.observer||t.update(),a.loop?t.slideTo(n+t.loopedSlides,0,!1):t.slideTo(n,0,!1)},removeAllSlides:function(){for(var e=[],t=0;t<this.slides.length;t+=1)e.push(t);this.removeSlide(e)}},events:{attachEvents:function(){var e=this,t=E(),a=e.params,i=e.touchEvents,s=e.el,r=e.wrapperEl,n=e.device,o=e.support;e.onTouchStart=function(e){var t,a,i,s,r,n,o,l,d=this,p=E(),u=ne(),c=d.touchEventsData,h=d.params,v=d.touches;d.animating&&h.preventInteractionOnTransition||((t=e).originalEvent&&(t=t.originalEvent),a=I(t.target),"wrapper"===h.touchEventsTarget&&!a.closest(d.wrapperEl).length||(c.isTouchEvent="touchstart"===t.type,!c.isTouchEvent&&"which"in t&&3===t.which||!c.isTouchEvent&&"button"in t&&0<t.button||c.isTouched&&c.isMoved||(h.noSwiping&&a.closest(h.noSwipingSelector?h.noSwipingSelector:"."+h.noSwipingClass)[0]?d.allowClick=!0:h.swipeHandler&&!a.closest(h.swipeHandler)[0]||(v.currentX="touchstart"===t.type?t.targetTouches[0].pageX:t.pageX,v.currentY="touchstart"===t.type?t.targetTouches[0].pageY:t.pageY,i=v.currentX,s=v.currentY,r=h.edgeSwipeDetection||h.iOSEdgeSwipeDetection,n=h.edgeSwipeThreshold||h.iOSEdgeSwipeThreshold,r&&(i<=n||i>=u.screen.width-n)||(oe(c,{isTouched:!0,isMoved:!1,allowTouchCallbacks:!0,isScrolling:void 0,startMoving:void 0}),v.startX=i,v.startY=s,c.touchStartTime=D(),d.allowClick=!0,d.updateSize(),d.swipeDirection=void 0,0<h.threshold&&(c.allowThresholdMove=!1),"touchstart"!==t.type&&(o=!0,a.is(c.formElements)&&(o=!1),p.activeElement&&I(p.activeElement).is(c.formElements)&&p.activeElement!==a[0]&&p.activeElement.blur(),l=o&&d.allowTouchMove&&h.touchStartPreventDefault,(h.touchStartForcePreventDefault||l)&&t.preventDefault()),d.emit("touchStart",t))))))}.bind(e),e.onTouchMove=function(e){var t=E(),a=this,i=a.touchEventsData,s=a.params,r=a.touches,n=a.rtlTranslate,o=e;if(o.originalEvent&&(o=o.originalEvent),i.isTouched){if(!i.isTouchEvent||"touchmove"===o.type){var l="touchmove"===o.type&&o.targetTouches&&(o.targetTouches[0]||o.changedTouches[0]),d="touchmove"===o.type?l.pageX:o.pageX,p="touchmove"===o.type?l.pageY:o.pageY;if(o.preventedByNestedSwiper)return r.startX=d,void(r.startY=p);if(!a.allowTouchMove)return a.allowClick=!1,void(i.isTouched&&(oe(r,{startX:d,startY:p,currentX:d,currentY:p}),i.touchStartTime=D()));if(i.isTouchEvent&&s.touchReleaseOnEdges&&!s.loop)if(a.isVertical()){if(p<r.startY&&a.translate<=a.maxTranslate()||p>r.startY&&a.translate>=a.minTranslate())return i.isTouched=!1,void(i.isMoved=!1)}else if(d<r.startX&&a.translate<=a.maxTranslate()||d>r.startX&&a.translate>=a.minTranslate())return;if(i.isTouchEvent&&t.activeElement&&o.target===t.activeElement&&I(o.target).is(i.formElements))return i.isMoved=!0,void(a.allowClick=!1);if(i.allowTouchCallbacks&&a.emit("touchMove",o),!(o.targetTouches&&1<o.targetTouches.length)){r.currentX=d,r.currentY=p;var u,c=r.currentX-r.startX,h=r.currentY-r.startY;if(!(a.params.threshold&&Math.sqrt(Math.pow(c,2)+Math.pow(h,2))<a.params.threshold))if(void 0===i.isScrolling&&(a.isHorizontal()&&r.currentY===r.startY||a.isVertical()&&r.currentX===r.startX?i.isScrolling=!1:25<=c*c+h*h&&(u=180*Math.atan2(Math.abs(h),Math.abs(c))/Math.PI,i.isScrolling=a.isHorizontal()?u>s.touchAngle:90-u>s.touchAngle)),i.isScrolling&&a.emit("touchMoveOpposite",o),void 0===i.startMoving&&(r.currentX===r.startX&&r.currentY===r.startY||(i.startMoving=!0)),i.isScrolling)i.isTouched=!1;else if(i.startMoving){a.allowClick=!1,!s.cssMode&&o.cancelable&&o.preventDefault(),s.touchMoveStopPropagation&&!s.nested&&o.stopPropagation(),i.isMoved||(s.loop&&a.loopFix(),i.startTranslate=a.getTranslate(),a.setTransition(0),a.animating&&a.$wrapperEl.trigger("webkitTransitionEnd transitionend"),i.allowMomentumBounce=!1,!s.grabCursor||!0!==a.allowSlideNext&&!0!==a.allowSlidePrev||a.setGrabCursor(!0),a.emit("sliderFirstMove",o)),a.emit("sliderMove",o),i.isMoved=!0;var v=a.isHorizontal()?c:h;r.diff=v,v*=s.touchRatio,n&&(v=-v),a.swipeDirection=0<v?"prev":"next",i.currentTranslate=v+i.startTranslate;var m=!0,f=s.resistanceRatio;if(s.touchReleaseOnEdges&&(f=0),0<v&&i.currentTranslate>a.minTranslate()?(m=!1,s.resistance&&(i.currentTranslate=a.minTranslate()-1+Math.pow(-a.minTranslate()+i.startTranslate+v,f))):v<0&&i.currentTranslate<a.maxTranslate()&&(m=!1,s.resistance&&(i.currentTranslate=a.maxTranslate()+1-Math.pow(a.maxTranslate()-i.startTranslate-v,f))),m&&(o.preventedByNestedSwiper=!0),!a.allowSlideNext&&"next"===a.swipeDirection&&i.currentTranslate<i.startTranslate&&(i.currentTranslate=i.startTranslate),!a.allowSlidePrev&&"prev"===a.swipeDirection&&i.currentTranslate>i.startTranslate&&(i.currentTranslate=i.startTranslate),0<s.threshold){if(!(Math.abs(v)>s.threshold||i.allowThresholdMove))return void(i.currentTranslate=i.startTranslate);if(!i.allowThresholdMove)return i.allowThresholdMove=!0,r.startX=r.currentX,r.startY=r.currentY,i.currentTranslate=i.startTranslate,void(r.diff=a.isHorizontal()?r.currentX-r.startX:r.currentY-r.startY)}s.followFinger&&!s.cssMode&&((s.freeMode||s.watchSlidesProgress||s.watchSlidesVisibility)&&(a.updateActiveIndex(),a.updateSlidesClasses()),s.freeMode&&(0===i.velocities.length&&i.velocities.push({position:r[a.isHorizontal()?"startX":"startY"],time:i.touchStartTime}),i.velocities.push({position:r[a.isHorizontal()?"currentX":"currentY"],time:D()})),a.updateProgress(i.currentTranslate),a.setTranslate(i.currentTranslate))}}}}else i.startMoving&&i.isScrolling&&a.emit("touchMoveOpposite",o)}.bind(e),e.onTouchEnd=function(e){var t=this,a=t.touchEventsData,i=t.params,s=t.touches,r=t.rtlTranslate,n=t.$wrapperEl,o=t.slidesGrid,l=t.snapGrid,d=e;if(d.originalEvent&&(d=d.originalEvent),a.allowTouchCallbacks&&t.emit("touchEnd",d),a.allowTouchCallbacks=!1,!a.isTouched)return a.isMoved&&i.grabCursor&&t.setGrabCursor(!1),a.isMoved=!1,void(a.startMoving=!1);i.grabCursor&&a.isMoved&&a.isTouched&&(!0===t.allowSlideNext||!0===t.allowSlidePrev)&&t.setGrabCursor(!1);var p,u,c,h,v,m=D(),f=m-a.touchStartTime;if(t.allowClick&&(t.updateClickedSlide(d),t.emit("tap click",d),f<300&&m-a.lastClickTime<300&&t.emit("doubleTap doubleClick",d)),a.lastClickTime=D(),A(function(){t.destroyed||(t.allowClick=!0)}),!a.isTouched||!a.isMoved||!t.swipeDirection||0===s.diff||a.currentTranslate===a.startTranslate)return a.isTouched=!1,a.isMoved=!1,void(a.startMoving=!1);if(a.isTouched=!1,a.isMoved=!1,a.startMoving=!1,p=i.followFinger?r?t.translate:-t.translate:-a.currentTranslate,!i.cssMode)if(i.freeMode){if(p<-t.minTranslate())return void t.slideTo(t.activeIndex);if(p>-t.maxTranslate())return void(t.slides.length<l.length?t.slideTo(l.length-1):t.slideTo(t.slides.length-1));if(i.freeModeMomentum){1<a.velocities.length?(u=a.velocities.pop(),c=a.velocities.pop(),h=u.position-c.position,v=u.time-c.time,t.velocity=h/v,t.velocity/=2,Math.abs(t.velocity)<i.freeModeMinimumVelocity&&(t.velocity=0),(150<v||300<D()-u.time)&&(t.velocity=0)):t.velocity=0,t.velocity*=i.freeModeMomentumVelocityRatio,a.velocities.length=0;var g=1e3*i.freeModeMomentumRatio,y=t.velocity*g,w=t.translate+y;r&&(w=-w);var b,E,x,T,C=!1,S=20*Math.abs(t.velocity)*i.freeModeMomentumBounceRatio;if(w<t.maxTranslate())i.freeModeMomentumBounce?(w+t.maxTranslate()<-S&&(w=t.maxTranslate()-S),b=t.maxTranslate(),C=!0,a.allowMomentumBounce=!0):w=t.maxTranslate(),i.loop&&i.centeredSlides&&(E=!0);else if(w>t.minTranslate())i.freeModeMomentumBounce?(w-t.minTranslate()>S&&(w=t.minTranslate()+S),b=t.minTranslate(),C=!0,a.allowMomentumBounce=!0):w=t.minTranslate(),i.loop&&i.centeredSlides&&(E=!0);else if(i.freeModeSticky){for(var M,z=0;z<l.length;z+=1)if(l[z]>-w){M=z;break}w=-(w=Math.abs(l[M]-w)<Math.abs(l[M-1]-w)||"next"===t.swipeDirection?l[M]:l[M-1])}if(E&&t.once("transitionEnd",function(){t.loopFix()}),0!==t.velocity)g=r?Math.abs((-w-t.translate)/t.velocity):Math.abs((w-t.translate)/t.velocity),i.freeModeSticky&&(g=(x=Math.abs((r?-w:w)-t.translate))<(T=t.slidesSizesGrid[t.activeIndex])?i.speed:x<2*T?1.5*i.speed:2.5*i.speed);else if(i.freeModeSticky)return void t.slideToClosest();i.freeModeMomentumBounce&&C?(t.updateProgress(b),t.setTransition(g),t.setTranslate(w),t.transitionStart(!0,t.swipeDirection),t.animating=!0,n.transitionEnd(function(){t&&!t.destroyed&&a.allowMomentumBounce&&(t.emit("momentumBounce"),t.setTransition(i.speed),setTimeout(function(){t.setTranslate(b),n.transitionEnd(function(){t&&!t.destroyed&&t.transitionEnd()})},0))})):t.velocity?(t.updateProgress(w),t.setTransition(g),t.setTranslate(w),t.transitionStart(!0,t.swipeDirection),t.animating||(t.animating=!0,n.transitionEnd(function(){t&&!t.destroyed&&t.transitionEnd()}))):t.updateProgress(w),t.updateActiveIndex(),t.updateSlidesClasses()}else if(i.freeModeSticky)return void t.slideToClosest();(!i.freeModeMomentum||f>=i.longSwipesMs)&&(t.updateProgress(),t.updateActiveIndex(),t.updateSlidesClasses())}else{for(var P=0,k=t.slidesSizesGrid[0],$=0;$<o.length;$+=$<i.slidesPerGroupSkip?1:i.slidesPerGroup){var L=$<i.slidesPerGroupSkip-1?1:i.slidesPerGroup;void 0!==o[$+L]?p>=o[$]&&p<o[$+L]&&(k=o[(P=$)+L]-o[$]):p>=o[$]&&(P=$,k=o[o.length-1]-o[o.length-2])}var I=(p-o[P])/k,O=P<i.slidesPerGroupSkip-1?1:i.slidesPerGroup;if(f>i.longSwipesMs){if(!i.longSwipes)return void t.slideTo(t.activeIndex);"next"===t.swipeDirection&&(I>=i.longSwipesRatio?t.slideTo(P+O):t.slideTo(P)),"prev"===t.swipeDirection&&(I>1-i.longSwipesRatio?t.slideTo(P+O):t.slideTo(P))}else{if(!i.shortSwipes)return void t.slideTo(t.activeIndex);t.navigation&&(d.target===t.navigation.nextEl||d.target===t.navigation.prevEl)?d.target===t.navigation.nextEl?t.slideTo(P+O):t.slideTo(P):("next"===t.swipeDirection&&t.slideTo(P+O),"prev"===t.swipeDirection&&t.slideTo(P))}}}.bind(e),a.cssMode&&(e.onScroll=function(){var e=this,t=e.wrapperEl,a=e.rtlTranslate;e.previousTranslate=e.translate,e.isHorizontal()?e.translate=a?t.scrollWidth-t.offsetWidth-t.scrollLeft:-t.scrollLeft:e.translate=-t.scrollTop,-0===e.translate&&(e.translate=0),e.updateActiveIndex(),e.updateSlidesClasses();var i=e.maxTranslate()-e.minTranslate();(0==i?0:(e.translate-e.minTranslate())/i)!==e.progress&&e.updateProgress(a?-e.translate:e.translate),e.emit("setTranslate",e.translate,!1)}.bind(e)),e.onClick=function(e){this.allowClick||(this.params.preventClicks&&e.preventDefault(),this.params.preventClicksPropagation&&this.animating&&(e.stopPropagation(),e.stopImmediatePropagation()))}.bind(e);var l,d=!!a.nested;!o.touch&&o.pointerEvents?(s.addEventListener(i.start,e.onTouchStart,!1),t.addEventListener(i.move,e.onTouchMove,d),t.addEventListener(i.end,e.onTouchEnd,!1)):(o.touch&&(l=!("touchstart"!==i.start||!o.passiveListener||!a.passiveListeners)&&{passive:!0,capture:!1},s.addEventListener(i.start,e.onTouchStart,l),s.addEventListener(i.move,e.onTouchMove,o.passiveListener?{passive:!1,capture:d}:d),s.addEventListener(i.end,e.onTouchEnd,l),i.cancel&&s.addEventListener(i.cancel,e.onTouchEnd,l),P||(t.addEventListener("touchstart",k),P=!0)),(a.simulateTouch&&!n.ios&&!n.android||a.simulateTouch&&!o.touch&&n.ios)&&(s.addEventListener("mousedown",e.onTouchStart,!1),t.addEventListener("mousemove",e.onTouchMove,d),t.addEventListener("mouseup",e.onTouchEnd,!1))),(a.preventClicks||a.preventClicksPropagation)&&s.addEventListener("click",e.onClick,!0),a.cssMode&&r.addEventListener("scroll",e.onScroll),a.updateOnWindowResize?e.on(n.ios||n.android?"resize orientationchange observerUpdate":"resize observerUpdate",z,!0):e.on("observerUpdate",z,!0)},detachEvents:function(){var e,t=this,a=E(),i=t.params,s=t.touchEvents,r=t.el,n=t.wrapperEl,o=t.device,l=t.support,d=!!i.nested;!l.touch&&l.pointerEvents?(r.removeEventListener(s.start,t.onTouchStart,!1),a.removeEventListener(s.move,t.onTouchMove,d),a.removeEventListener(s.end,t.onTouchEnd,!1)):(l.touch&&(e=!("onTouchStart"!==s.start||!l.passiveListener||!i.passiveListeners)&&{passive:!0,capture:!1},r.removeEventListener(s.start,t.onTouchStart,e),r.removeEventListener(s.move,t.onTouchMove,d),r.removeEventListener(s.end,t.onTouchEnd,e),s.cancel&&r.removeEventListener(s.cancel,t.onTouchEnd,e)),(i.simulateTouch&&!o.ios&&!o.android||i.simulateTouch&&!l.touch&&o.ios)&&(r.removeEventListener("mousedown",t.onTouchStart,!1),a.removeEventListener("mousemove",t.onTouchMove,d),a.removeEventListener("mouseup",t.onTouchEnd,!1))),(i.preventClicks||i.preventClicksPropagation)&&r.removeEventListener("click",t.onClick,!0),i.cssMode&&n.removeEventListener("scroll",t.onScroll),t.off(o.ios||o.android?"resize orientationchange observerUpdate":"resize observerUpdate",z)}},breakpoints:{setBreakpoint:function(){var e,a,t,i,s,r,n,o=this,l=o.activeIndex,d=o.initialized,p=o.loopedSlides,u=void 0===p?0:p,c=o.params,h=o.$el,v=c.breakpoints;!v||v&&0===Object.keys(v).length||(e=o.getBreakpoint(v))&&o.currentBreakpoint!==e&&((a=e in v?v[e]:void 0)&&["slidesPerView","spaceBetween","slidesPerGroup","slidesPerGroupSkip","slidesPerColumn"].forEach(function(e){var t=a[e];void 0!==t&&(a[e]="slidesPerView"!==e||"AUTO"!==t&&"auto"!==t?"slidesPerView"===e?parseFloat(t):parseInt(t,10):"auto")}),t=a||o.originalParams,i=1<c.slidesPerColumn,s=1<t.slidesPerColumn,i&&!s?(h.removeClass(c.containerModifierClass+"multirow "+c.containerModifierClass+"multirow-column"),o.emitContainerClasses()):!i&&s&&(h.addClass(c.containerModifierClass+"multirow"),"column"===t.slidesPerColumnFill&&h.addClass(c.containerModifierClass+"multirow-column"),o.emitContainerClasses()),r=t.direction&&t.direction!==c.direction,n=c.loop&&(t.slidesPerView!==c.slidesPerView||r),r&&d&&o.changeDirection(),oe(o.params,t),oe(o,{allowTouchMove:o.params.allowTouchMove,allowSlideNext:o.params.allowSlideNext,allowSlidePrev:o.params.allowSlidePrev}),o.currentBreakpoint=e,o.emit("_beforeBreakpoint",t),n&&d&&(o.loopDestroy(),o.loopCreate(),o.updateSlides(),o.slideTo(l-u+o.loopedSlides,0,!1)),o.emit("breakpoint",t))},getBreakpoint:function(e){var a=ne();if(e){var t=!1,i=Object.keys(e).map(function(e){if("string"!=typeof e||0!==e.indexOf("@"))return{value:e,point:e};var t=parseFloat(e.substr(1));return{value:a.innerHeight*t,point:e}});i.sort(function(e,t){return parseInt(e.value,10)-parseInt(t.value,10)});for(var s=0;s<i.length;s+=1){var r=i[s],n=r.point;r.value<=a.innerWidth&&(t=n)}return t||"max"}}},checkOverflow:{checkOverflow:function(){var e=this,t=e.params,a=e.isLocked,i=0<e.slides.length&&t.slidesOffsetBefore+t.spaceBetween*(e.slides.length-1)+e.slides[0].offsetWidth*e.slides.length;t.slidesOffsetBefore&&t.slidesOffsetAfter&&i?e.isLocked=i<=e.size:e.isLocked=1===e.snapGrid.length,e.allowSlideNext=!e.isLocked,e.allowSlidePrev=!e.isLocked,a!==e.isLocked&&e.emit(e.isLocked?"lock":"unlock"),a&&a!==e.isLocked&&(e.isEnd=!1,e.navigation&&e.navigation.update())}},classes:{addClasses:function(){var e=this,t=e.classNames,a=e.params,i=e.rtl,s=e.$el,r=e.device,n=[];n.push("initialized"),n.push(a.direction),a.freeMode&&n.push("free-mode"),a.autoHeight&&n.push("autoheight"),i&&n.push("rtl"),1<a.slidesPerColumn&&(n.push("multirow"),"column"===a.slidesPerColumnFill&&n.push("multirow-column")),r.android&&n.push("android"),r.ios&&n.push("ios"),a.cssMode&&n.push("css-mode"),n.forEach(function(e){t.push(a.containerModifierClass+e)}),s.addClass(t.join(" ")),e.emitContainerClasses()},removeClasses:function(){var e=this.$el,t=this.classNames;e.removeClass(t.join(" ")),this.emitContainerClasses()}},images:{loadImage:function(e,t,a,i,s,r){var n,o=ne();function l(){r&&r()}!(I(e).parent("picture")[0]||e.complete&&s)&&t?((n=new o.Image).onload=l,n.onerror=l,i&&(n.sizes=i),a&&(n.srcset=a),t&&(n.src=t)):l()},preloadImages:function(){var e=this;function t(){null!=e&&e&&!e.destroyed&&(void 0!==e.imagesLoaded&&(e.imagesLoaded+=1),e.imagesLoaded===e.imagesToLoad.length&&(e.params.updateOnImagesReady&&e.update(),e.emit("imagesReady")))}e.imagesToLoad=e.$el.find("img");for(var a=0;a<e.imagesToLoad.length;a+=1){var i=e.imagesToLoad[a];e.loadImage(i,i.currentSrc||i.getAttribute("src"),i.srcset||i.getAttribute("srcset"),i.sizes||i.getAttribute("sizes"),!0,t)}}}},O={},G=function(){function c(){for(var s,e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];s=oe({},s=(s=1===t.length&&t[0].constructor&&t[0].constructor===Object?t[0]:(n=t[0],t[1]))||{}),n&&!s.el&&(s.el=n);var r=this;r.support=b(),r.device=x({userAgent:s.userAgent}),r.browser=T(),r.eventsListeners={},r.eventsAnyListeners=[],void 0===r.modules&&(r.modules={}),Object.keys(r.modules).forEach(function(e){var t=r.modules[e];if(t.params){var a=Object.keys(t.params)[0],i=t.params[a];if("object"!=typeof i||null===i)return;if(!(a in s&&"enabled"in i))return;!0===s[a]&&(s[a]={enabled:!0}),"object"!=typeof s[a]||"enabled"in s[a]||(s[a].enabled=!0),s[a]||(s[a]={enabled:!1})}});var i=oe({},$);r.useParams(i),r.params=oe({},i,O,s),r.originalParams=oe({},r.params),r.passedParams=oe({},s),r.params&&r.params.on&&Object.keys(r.params.on).forEach(function(e){r.on(e,r.params.on[e])}),r.params&&r.params.onAny&&r.onAny(r.params.onAny);var n,o,l,d,p=(r.$=I)(r.params.el);if(n=p[0]){if(1<p.length){var u=[];return p.each(function(e){var t=oe({},s,{el:e});u.push(new c(t))}),u}return n.swiper=r,n&&n.shadowRoot&&n.shadowRoot.querySelector?(o=I(n.shadowRoot.querySelector("."+r.params.wrapperClass))).children=function(e){return p.children(e)}:o=p.children("."+r.params.wrapperClass),oe(r,{$el:p,el:n,$wrapperEl:o,wrapperEl:o[0],classNames:[],slides:I(),slidesGrid:[],snapGrid:[],slidesSizesGrid:[],isHorizontal:function(){return"horizontal"===r.params.direction},isVertical:function(){return"vertical"===r.params.direction},rtl:"rtl"===n.dir.toLowerCase()||"rtl"===p.css("direction"),rtlTranslate:"horizontal"===r.params.direction&&("rtl"===n.dir.toLowerCase()||"rtl"===p.css("direction")),wrongRTL:"-webkit-box"===o.css("display"),activeIndex:0,realIndex:0,isBeginning:!0,isEnd:!1,translate:0,previousTranslate:0,progress:0,velocity:0,animating:!1,allowSlideNext:r.params.allowSlideNext,allowSlidePrev:r.params.allowSlidePrev,touchEvents:(l=["touchstart","touchmove","touchend","touchcancel"],d=["mousedown","mousemove","mouseup"],r.support.pointerEvents&&(d=["pointerdown","pointermove","pointerup"]),r.touchEventsTouch={start:l[0],move:l[1],end:l[2],cancel:l[3]},r.touchEventsDesktop={start:d[0],move:d[1],end:d[2]},r.support.touch||!r.params.simulateTouch?r.touchEventsTouch:r.touchEventsDesktop),touchEventsData:{isTouched:void 0,isMoved:void 0,allowTouchCallbacks:void 0,touchStartTime:void 0,isScrolling:void 0,currentTranslate:void 0,startTranslate:void 0,allowThresholdMove:void 0,formElements:"input, select, option, textarea, button, video, label",lastClickTime:D(),clickTimeout:void 0,velocities:[],allowMomentumBounce:void 0,isTouchEvent:void 0,startMoving:void 0},allowClick:!0,allowTouchMove:r.params.allowTouchMove,touches:{startX:0,startY:0,currentX:0,currentY:0,diff:0},imagesToLoad:[],imagesLoaded:0}),r.useModules(),r.emit("_swiper"),r.params.init&&r.init(),r}}var e,t,a,i=c.prototype;return i.emitContainerClasses=function(){var e,t=this;t.params._emitClasses&&t.el&&(e=t.el.className.split(" ").filter(function(e){return 0===e.indexOf("swiper-container")||0===e.indexOf(t.params.containerModifierClass)}),t.emit("_containerClasses",e.join(" ")))},i.emitSlidesClasses=function(){var a=this;a.params._emitClasses&&a.el&&a.slides.each(function(e){var t=e.className.split(" ").filter(function(e){return 0===e.indexOf("swiper-slide")||0===e.indexOf(a.params.slideClass)});a.emit("_slideClass",e,t.join(" "))})},i.slidesPerViewDynamic=function(){var e=this,t=e.params,a=e.slides,i=e.slidesGrid,s=e.size,r=e.activeIndex,n=1;if(t.centeredSlides){for(var o,l=a[r].swiperSlideSize,d=r+1;d<a.length;d+=1)a[d]&&!o&&(n+=1,s<(l+=a[d].swiperSlideSize)&&(o=!0));for(var p=r-1;0<=p;--p)a[p]&&!o&&(n+=1,s<(l+=a[p].swiperSlideSize)&&(o=!0))}else for(var u=r+1;u<a.length;u+=1)i[u]-i[r]<s&&(n+=1);return n},i.update=function(){var e,t,a=this;function i(){var e=a.rtlTranslate?-1*a.translate:a.translate,t=Math.min(Math.max(e,a.maxTranslate()),a.minTranslate());a.setTranslate(t),a.updateActiveIndex(),a.updateSlidesClasses()}a&&!a.destroyed&&(e=a.snapGrid,(t=a.params).breakpoints&&a.setBreakpoint(),a.updateSize(),a.updateSlides(),a.updateProgress(),a.updateSlidesClasses(),a.params.freeMode?(i(),a.params.autoHeight&&a.updateAutoHeight()):(("auto"===a.params.slidesPerView||1<a.params.slidesPerView)&&a.isEnd&&!a.params.centeredSlides?a.slideTo(a.slides.length-1,0,!1,!0):a.slideTo(a.activeIndex,0,!1,!0))||i(),t.watchOverflow&&e!==a.snapGrid&&a.checkOverflow(),a.emit("update"))},i.changeDirection=function(t,e){void 0===e&&(e=!0);var a=this,i=a.params.direction;return(t=t||("horizontal"===i?"vertical":"horizontal"))===i||"horizontal"!==t&&"vertical"!==t||(a.$el.removeClass(""+a.params.containerModifierClass+i).addClass(""+a.params.containerModifierClass+t),a.emitContainerClasses(),a.params.direction=t,a.slides.each(function(e){"vertical"===t?e.style.width="":e.style.height=""}),a.emit("changeDirection"),e&&a.update()),a},i.init=function(){var e=this;e.initialized||(e.emit("beforeInit"),e.params.breakpoints&&e.setBreakpoint(),e.addClasses(),e.params.loop&&e.loopCreate(),e.updateSize(),e.updateSlides(),e.params.watchOverflow&&e.checkOverflow(),e.params.grabCursor&&e.setGrabCursor(),e.params.preloadImages&&e.preloadImages(),e.params.loop?e.slideTo(e.params.initialSlide+e.loopedSlides,0,e.params.runCallbacksOnInit):e.slideTo(e.params.initialSlide,0,e.params.runCallbacksOnInit),e.attachEvents(),e.initialized=!0,e.emit("init"))},i.destroy=function(e,t){void 0===e&&(e=!0),void 0===t&&(t=!0);var a,i=this,s=i.params,r=i.$el,n=i.$wrapperEl,o=i.slides;return void 0===i.params||i.destroyed||(i.emit("beforeDestroy"),i.initialized=!1,i.detachEvents(),s.loop&&i.loopDestroy(),t&&(i.removeClasses(),r.removeAttr("style"),n.removeAttr("style"),o&&o.length&&o.removeClass([s.slideVisibleClass,s.slideActiveClass,s.slideNextClass,s.slidePrevClass].join(" ")).removeAttr("style").removeAttr("data-swiper-slide-index")),i.emit("destroy"),Object.keys(i.eventsListeners).forEach(function(e){i.off(e)}),!1!==e&&(i.$el[0].swiper=null,a=i,Object.keys(a).forEach(function(e){try{a[e]=null}catch(e){}try{delete a[e]}catch(e){}})),i.destroyed=!0),null},c.extendDefaults=function(e){oe(O,e)},c.installModule=function(e){c.prototype.modules||(c.prototype.modules={});var t=e.name||Object.keys(c.prototype.modules).length+"_"+D();c.prototype.modules[t]=e},c.use=function(e){return Array.isArray(e)?e.forEach(function(e){return c.installModule(e)}):c.installModule(e),c},e=c,a=[{key:"extendedDefaults",get:function(){return O}},{key:"defaults",get:function(){return $}}],(t=null)&&s(e.prototype,t),a&&s(e,a),c}();Object.keys(L).forEach(function(t){Object.keys(L[t]).forEach(function(e){G.prototype[e]=L[t][e]})}),G.use([C,M]);var N={update:function(e){var t=this,a=t.params,i=a.slidesPerView,s=a.slidesPerGroup,r=a.centeredSlides,n=t.params.virtual,o=n.addSlidesBefore,l=n.addSlidesAfter,d=t.virtual,p=d.from,u=d.to,c=d.slides,h=d.slidesGrid,v=d.renderSlide,m=d.offset;t.updateActiveIndex();var f,g=t.activeIndex||0,y=t.rtlTranslate?"right":t.isHorizontal()?"left":"top",w=r?(f=Math.floor(i/2)+s+l,Math.floor(i/2)+s+o):(f=i+(s-1)+l,s+o),b=Math.max((g||0)-w,0),E=Math.min((g||0)+f,c.length-1),x=(t.slidesGrid[b]||0)-(t.slidesGrid[0]||0);function T(){t.updateSlides(),t.updateProgress(),t.updateSlidesClasses(),t.lazy&&t.params.lazy.enabled&&t.lazy.load()}if(oe(t.virtual,{from:b,to:E,offset:x,slidesGrid:t.slidesGrid}),p===b&&u===E&&!e)return t.slidesGrid!==h&&x!==m&&t.slides.css(y,x+"px"),void t.updateProgress();if(t.params.virtual.renderExternal)return t.params.virtual.renderExternal.call(t,{offset:x,from:b,to:E,slides:function(){for(var e=[],t=b;t<=E;t+=1)e.push(c[t]);return e}()}),void(t.params.virtual.renderExternalUpdate&&T());var C=[],S=[];if(e)t.$wrapperEl.find("."+t.params.slideClass).remove();else for(var M=p;M<=u;M+=1)(M<b||E<M)&&t.$wrapperEl.find("."+t.params.slideClass+'[data-swiper-slide-index="'+M+'"]').remove();for(var z=0;z<c.length;z+=1)b<=z&&z<=E&&(void 0===u||e?S.push(z):(u<z&&S.push(z),z<p&&C.push(z)));S.forEach(function(e){t.$wrapperEl.append(v(c[e],e))}),C.sort(function(e,t){return t-e}).forEach(function(e){t.$wrapperEl.prepend(v(c[e],e))}),t.$wrapperEl.children(".swiper-slide").css(y,x+"px"),T()},renderSlide:function(e,t){var a=this,i=a.params.virtual;if(i.cache&&a.virtual.cache[t])return a.virtual.cache[t];var s=i.renderSlide?I(i.renderSlide.call(a,e,t)):I('<div class="'+a.params.slideClass+'" data-swiper-slide-index="'+t+'">'+e+"</div>");return s.attr("data-swiper-slide-index")||s.attr("data-swiper-slide-index",t),i.cache&&(a.virtual.cache[t]=s),s},appendSlide:function(e){if("object"==typeof e&&"length"in e)for(var t=0;t<e.length;t+=1)e[t]&&this.virtual.slides.push(e[t]);else this.virtual.slides.push(e);this.virtual.update(!0)},prependSlide:function(e){var i,s,t=this,a=t.activeIndex,r=a+1,n=1;if(Array.isArray(e)){for(var o=0;o<e.length;o+=1)e[o]&&t.virtual.slides.unshift(e[o]);r=a+e.length,n=e.length}else t.virtual.slides.unshift(e);t.params.virtual.cache&&(i=t.virtual.cache,s={},Object.keys(i).forEach(function(e){var t=i[e],a=t.attr("data-swiper-slide-index");a&&t.attr("data-swiper-slide-index",parseInt(a,10)+1),s[parseInt(e,10)+n]=t}),t.virtual.cache=s),t.virtual.update(!0),t.slideTo(r,0)},removeSlide:function(e){var t=this;if(null!=e){var a=t.activeIndex;if(Array.isArray(e))for(var i=e.length-1;0<=i;--i)t.virtual.slides.splice(e[i],1),t.params.virtual.cache&&delete t.virtual.cache[e[i]],e[i]<a&&--a,a=Math.max(a,0);else t.virtual.slides.splice(e,1),t.params.virtual.cache&&delete t.virtual.cache[e],e<a&&--a,a=Math.max(a,0);t.virtual.update(!0),t.slideTo(a,0)}},removeAllSlides:function(){var e=this;e.virtual.slides=[],e.params.virtual.cache&&(e.virtual.cache={}),e.virtual.update(!0),e.slideTo(0,0)}},B={name:"virtual",params:{virtual:{enabled:!1,slides:[],cache:!0,renderSlide:null,renderExternal:null,renderExternalUpdate:!0,addSlidesBefore:0,addSlidesAfter:0}},create:function(){w(this,{virtual:e(e({},N),{},{slides:this.params.virtual.slides,cache:{}})})},on:{beforeInit:function(e){var t;e.params.virtual.enabled&&(e.classNames.push(e.params.containerModifierClass+"virtual"),t={watchSlidesProgress:!0},oe(e.params,t),oe(e.originalParams,t),e.params.initialSlide||e.virtual.update())},setTranslate:function(e){e.params.virtual.enabled&&e.virtual.update()}}},H={handle:function(e){var t=this,a=ne(),i=E(),s=t.rtlTranslate,r=e;r.originalEvent&&(r=r.originalEvent);var n=r.keyCode||r.charCode,o=t.params.keyboard.pageUpDown,l=o&&33===n,d=o&&34===n,p=37===n,u=39===n,c=38===n,h=40===n;if(!t.allowSlideNext&&(t.isHorizontal()&&u||t.isVertical()&&h||d))return!1;if(!t.allowSlidePrev&&(t.isHorizontal()&&p||t.isVertical()&&c||l))return!1;if(!(r.shiftKey||r.altKey||r.ctrlKey||r.metaKey||i.activeElement&&i.activeElement.nodeName&&("input"===i.activeElement.nodeName.toLowerCase()||"textarea"===i.activeElement.nodeName.toLowerCase()))){if(t.params.keyboard.onlyInViewport&&(l||d||p||u||c||h)){var v=!1;if(0<t.$el.parents("."+t.params.slideClass).length&&0===t.$el.parents("."+t.params.slideActiveClass).length)return;var m=a.innerWidth,f=a.innerHeight,g=t.$el.offset();s&&(g.left-=t.$el[0].scrollLeft);for(var y=[[g.left,g.top],[g.left+t.width,g.top],[g.left,g.top+t.height],[g.left+t.width,g.top+t.height]],w=0;w<y.length;w+=1){var b=y[w];0<=b[0]&&b[0]<=m&&0<=b[1]&&b[1]<=f&&(v=!0)}if(!v)return}t.isHorizontal()?((l||d||p||u)&&(r.preventDefault?r.preventDefault():r.returnValue=!1),((d||u)&&!s||(l||p)&&s)&&t.slideNext(),((l||p)&&!s||(d||u)&&s)&&t.slidePrev()):((l||d||c||h)&&(r.preventDefault?r.preventDefault():r.returnValue=!1),(d||h)&&t.slideNext(),(l||c)&&t.slidePrev()),t.emit("keyPress",n)}},enable:function(){var e=E();this.keyboard.enabled||(I(e).on("keydown",this.keyboard.handle),this.keyboard.enabled=!0)},disable:function(){var e=E();this.keyboard.enabled&&(I(e).off("keydown",this.keyboard.handle),this.keyboard.enabled=!1)}},X={name:"keyboard",params:{keyboard:{enabled:!1,onlyInViewport:!0,pageUpDown:!0}},create:function(){w(this,{keyboard:e({enabled:!1},H)})},on:{init:function(e){e.params.keyboard.enabled&&e.keyboard.enable()},destroy:function(e){e.keyboard.enabled&&e.keyboard.disable()}}};var Y={lastScrollTime:D(),lastEventBeforeSnap:void 0,recentWheelEvents:[],event:function(){var e,t,a,i;return-1<ne().navigator.userAgent.indexOf("firefox")?"DOMMouseScroll":(t=E(),(i=(a="onwheel")in t)||((e=t.createElement("div")).setAttribute(a,"return;"),i="function"==typeof e[a]),!i&&t.implementation&&t.implementation.hasFeature&&!0!==t.implementation.hasFeature("","")&&(i=t.implementation.hasFeature("Events.wheel","3.0")),i?"wheel":"mousewheel")},normalize:function(e){var t=0,a=0,i=0,s=0;return"detail"in e&&(a=e.detail),"wheelDelta"in e&&(a=-e.wheelDelta/120),"wheelDeltaY"in e&&(a=-e.wheelDeltaY/120),"wheelDeltaX"in e&&(t=-e.wheelDeltaX/120),"axis"in e&&e.axis===e.HORIZONTAL_AXIS&&(t=a,a=0),i=10*t,s=10*a,"deltaY"in e&&(s=e.deltaY),"deltaX"in e&&(i=e.deltaX),e.shiftKey&&!i&&(i=s,s=0),(i||s)&&e.deltaMode&&(1===e.deltaMode?(i*=40,s*=40):(i*=800,s*=800)),i&&!t&&(t=i<1?-1:1),s&&!a&&(a=s<1?-1:1),{spinX:t,spinY:a,pixelX:i,pixelY:s}},handleMouseEnter:function(){this.mouseEntered=!0},handleMouseLeave:function(){this.mouseEntered=!1},handle:function(e){var t=e,a=this,i=a.params.mousewheel;a.params.cssMode&&t.preventDefault();var s=a.$el;if("container"!==a.params.mousewheel.eventsTarget&&(s=I(a.params.mousewheel.eventsTarget)),!a.mouseEntered&&!s[0].contains(t.target)&&!i.releaseOnEdges)return!0;t.originalEvent&&(t=t.originalEvent);var r=0,n=a.rtlTranslate?-1:1,o=Y.normalize(t);if(i.forceToAxis)if(a.isHorizontal()){if(!(Math.abs(o.pixelX)>Math.abs(o.pixelY)))return!0;r=-o.pixelX*n}else{if(!(Math.abs(o.pixelY)>Math.abs(o.pixelX)))return!0;r=-o.pixelY}else r=Math.abs(o.pixelX)>Math.abs(o.pixelY)?-o.pixelX*n:-o.pixelY;if(0===r)return!0;if(i.invert&&(r=-r),a.params.freeMode){var l={time:D(),delta:Math.abs(r),direction:Math.sign(r)},d=a.mousewheel.lastEventBeforeSnap,p=d&&l.time<d.time+500&&l.delta<=d.delta&&l.direction===d.direction;if(!p){a.mousewheel.lastEventBeforeSnap=void 0,a.params.loop&&a.loopFix();var u,c,h,v,m=a.getTranslate()+r*i.sensitivity,f=a.isBeginning,g=a.isEnd;if(m>=a.minTranslate()&&(m=a.minTranslate()),m<=a.maxTranslate()&&(m=a.maxTranslate()),a.setTransition(0),a.setTranslate(m),a.updateProgress(),a.updateActiveIndex(),a.updateSlidesClasses(),(!f&&a.isBeginning||!g&&a.isEnd)&&a.updateSlidesClasses(),a.params.freeModeSticky&&(clearTimeout(a.mousewheel.timeout),a.mousewheel.timeout=void 0,15<=(u=a.mousewheel.recentWheelEvents).length&&u.shift(),c=u.length?u[u.length-1]:void 0,h=u[0],u.push(l),c&&(l.delta>c.delta||l.direction!==c.direction)?u.splice(0):15<=u.length&&l.time-h.time<500&&1<=h.delta-l.delta&&l.delta<=6&&(v=0<r?.8:.2,a.mousewheel.lastEventBeforeSnap=l,u.splice(0),a.mousewheel.timeout=A(function(){a.slideToClosest(a.params.speed,!0,void 0,v)},0)),a.mousewheel.timeout||(a.mousewheel.timeout=A(function(){a.mousewheel.lastEventBeforeSnap=l,u.splice(0),a.slideToClosest(a.params.speed,!0,void 0,.5)},500))),p||a.emit("scroll",t),a.params.autoplay&&a.params.autoplayDisableOnInteraction&&a.autoplay.stop(),m===a.minTranslate()||m===a.maxTranslate())return!0}}else{var y={time:D(),delta:Math.abs(r),direction:Math.sign(r),raw:e},w=a.mousewheel.recentWheelEvents;2<=w.length&&w.shift();var b=w.length?w[w.length-1]:void 0;if(w.push(y),(!b||y.direction!==b.direction||y.delta>b.delta||y.time>b.time+150)&&a.mousewheel.animateSlider(y),a.mousewheel.releaseScroll(y))return!0}return t.preventDefault?t.preventDefault():t.returnValue=!1,!1},animateSlider:function(e){var t=this,a=ne();return!(this.params.mousewheel.thresholdDelta&&e.delta<this.params.mousewheel.thresholdDelta)&&(!(this.params.mousewheel.thresholdTime&&D()-t.mousewheel.lastScrollTime<this.params.mousewheel.thresholdTime)&&(6<=e.delta&&D()-t.mousewheel.lastScrollTime<60||(e.direction<0?t.isEnd&&!t.params.loop||t.animating||(t.slideNext(),t.emit("scroll",e.raw)):t.isBeginning&&!t.params.loop||t.animating||(t.slidePrev(),t.emit("scroll",e.raw)),t.mousewheel.lastScrollTime=(new a.Date).getTime(),!1)))},releaseScroll:function(e){var t=this,a=t.params.mousewheel;if(e.direction<0){if(t.isEnd&&!t.params.loop&&a.releaseOnEdges)return!0}else if(t.isBeginning&&!t.params.loop&&a.releaseOnEdges)return!0;return!1},enable:function(){var e=this,t=Y.event();if(e.params.cssMode)return e.wrapperEl.removeEventListener(t,e.mousewheel.handle),!0;if(!t)return!1;if(e.mousewheel.enabled)return!1;var a=e.$el;return"container"!==e.params.mousewheel.eventsTarget&&(a=I(e.params.mousewheel.eventsTarget)),a.on("mouseenter",e.mousewheel.handleMouseEnter),a.on("mouseleave",e.mousewheel.handleMouseLeave),a.on(t,e.mousewheel.handle),e.mousewheel.enabled=!0},disable:function(){var e=this,t=Y.event();if(e.params.cssMode)return e.wrapperEl.addEventListener(t,e.mousewheel.handle),!0;if(!t)return!1;if(!e.mousewheel.enabled)return!1;var a=e.$el;return"container"!==e.params.mousewheel.eventsTarget&&(a=I(e.params.mousewheel.eventsTarget)),a.off(t,e.mousewheel.handle),!(e.mousewheel.enabled=!1)}},V={update:function(){var e,t,a,i=this,s=i.params.navigation;i.params.loop||(t=(e=i.navigation).$nextEl,(a=e.$prevEl)&&0<a.length&&(i.isBeginning?a.addClass(s.disabledClass):a.removeClass(s.disabledClass),a[i.params.watchOverflow&&i.isLocked?"addClass":"removeClass"](s.lockClass)),t&&0<t.length&&(i.isEnd?t.addClass(s.disabledClass):t.removeClass(s.disabledClass),t[i.params.watchOverflow&&i.isLocked?"addClass":"removeClass"](s.lockClass)))},onPrevClick:function(e){e.preventDefault(),this.isBeginning&&!this.params.loop||this.slidePrev()},onNextClick:function(e){e.preventDefault(),this.isEnd&&!this.params.loop||this.slideNext()},init:function(){var e,t,a=this,i=a.params.navigation;(i.nextEl||i.prevEl)&&(i.nextEl&&(e=I(i.nextEl),a.params.uniqueNavElements&&"string"==typeof i.nextEl&&1<e.length&&1===a.$el.find(i.nextEl).length&&(e=a.$el.find(i.nextEl))),i.prevEl&&(t=I(i.prevEl),a.params.uniqueNavElements&&"string"==typeof i.prevEl&&1<t.length&&1===a.$el.find(i.prevEl).length&&(t=a.$el.find(i.prevEl))),e&&0<e.length&&e.on("click",a.navigation.onNextClick),t&&0<t.length&&t.on("click",a.navigation.onPrevClick),oe(a.navigation,{$nextEl:e,nextEl:e&&e[0],$prevEl:t,prevEl:t&&t[0]}))},destroy:function(){var e=this,t=e.navigation,a=t.$nextEl,i=t.$prevEl;a&&a.length&&(a.off("click",e.navigation.onNextClick),a.removeClass(e.params.navigation.disabledClass)),i&&i.length&&(i.off("click",e.navigation.onPrevClick),i.removeClass(e.params.navigation.disabledClass))}},F={update:function(){var e=this,t=e.rtl,i=e.params.pagination;if(i.el&&e.pagination.el&&e.pagination.$el&&0!==e.pagination.$el.length){var s,a,r,n,o,l=e.virtual&&e.params.virtual.enabled?e.virtual.slides.length:e.slides.length,d=e.pagination.$el,p=e.params.loop?Math.ceil((l-2*e.loopedSlides)/e.params.slidesPerGroup):e.snapGrid.length;if(e.params.loop?((s=Math.ceil((e.activeIndex-e.loopedSlides)/e.params.slidesPerGroup))>l-1-2*e.loopedSlides&&(s-=l-2*e.loopedSlides),p-1<s&&(s-=p),s<0&&"bullets"!==e.params.paginationType&&(s=p+s)):s=void 0!==e.snapIndex?e.snapIndex:e.activeIndex||0,"bullets"===i.type&&e.pagination.bullets&&0<e.pagination.bullets.length){var u,c,h,v,m,f,g=e.pagination.bullets;if(i.dynamicBullets&&(e.pagination.bulletSize=g.eq(0)[e.isHorizontal()?"outerWidth":"outerHeight"](!0),d.css(e.isHorizontal()?"width":"height",e.pagination.bulletSize*(i.dynamicMainBullets+4)+"px"),1<i.dynamicMainBullets&&void 0!==e.previousIndex&&(e.pagination.dynamicBulletIndex+=s-e.previousIndex,e.pagination.dynamicBulletIndex>i.dynamicMainBullets-1?e.pagination.dynamicBulletIndex=i.dynamicMainBullets-1:e.pagination.dynamicBulletIndex<0&&(e.pagination.dynamicBulletIndex=0)),u=s-e.pagination.dynamicBulletIndex,h=((c=u+(Math.min(g.length,i.dynamicMainBullets)-1))+u)/2),g.removeClass(i.bulletActiveClass+" "+i.bulletActiveClass+"-next "+i.bulletActiveClass+"-next-next "+i.bulletActiveClass+"-prev "+i.bulletActiveClass+"-prev-prev "+i.bulletActiveClass+"-main"),1<d.length)g.each(function(e){var t=I(e),a=t.index();a===s&&t.addClass(i.bulletActiveClass),i.dynamicBullets&&(u<=a&&a<=c&&t.addClass(i.bulletActiveClass+"-main"),a===u&&t.prev().addClass(i.bulletActiveClass+"-prev").prev().addClass(i.bulletActiveClass+"-prev-prev"),a===c&&t.next().addClass(i.bulletActiveClass+"-next").next().addClass(i.bulletActiveClass+"-next-next"))});else{var y=g.eq(s),w=y.index();if(y.addClass(i.bulletActiveClass),i.dynamicBullets){for(var b=g.eq(u),E=g.eq(c),x=u;x<=c;x+=1)g.eq(x).addClass(i.bulletActiveClass+"-main");if(e.params.loop)if(w>=g.length-i.dynamicMainBullets){for(var T=i.dynamicMainBullets;0<=T;--T)g.eq(g.length-T).addClass(i.bulletActiveClass+"-main");g.eq(g.length-i.dynamicMainBullets-1).addClass(i.bulletActiveClass+"-prev")}else b.prev().addClass(i.bulletActiveClass+"-prev").prev().addClass(i.bulletActiveClass+"-prev-prev"),E.next().addClass(i.bulletActiveClass+"-next").next().addClass(i.bulletActiveClass+"-next-next");else b.prev().addClass(i.bulletActiveClass+"-prev").prev().addClass(i.bulletActiveClass+"-prev-prev"),E.next().addClass(i.bulletActiveClass+"-next").next().addClass(i.bulletActiveClass+"-next-next")}}i.dynamicBullets&&(v=Math.min(g.length,i.dynamicMainBullets+4),m=(e.pagination.bulletSize*v-e.pagination.bulletSize)/2-h*e.pagination.bulletSize,f=t?"right":"left",g.css(e.isHorizontal()?f:"top",m+"px"))}"fraction"===i.type&&(d.find("."+i.currentClass).text(i.formatFractionCurrent(s+1)),d.find("."+i.totalClass).text(i.formatFractionTotal(p))),"progressbar"===i.type&&(a=i.progressbarOpposite?e.isHorizontal()?"vertical":"horizontal":e.isHorizontal()?"horizontal":"vertical",r=(s+1)/p,o=n=1,"horizontal"===a?n=r:o=r,d.find("."+i.progressbarFillClass).transform("translate3d(0,0,0) scaleX("+n+") scaleY("+o+")").transition(e.params.speed)),"custom"===i.type&&i.renderCustom?(d.html(i.renderCustom(e,s+1,p)),e.emit("paginationRender",d[0])):e.emit("paginationUpdate",d[0]),d[e.params.watchOverflow&&e.isLocked?"addClass":"removeClass"](i.lockClass)}},render:function(){var e=this,t=e.params.pagination;if(t.el&&e.pagination.el&&e.pagination.$el&&0!==e.pagination.$el.length){var a=e.virtual&&e.params.virtual.enabled?e.virtual.slides.length:e.slides.length,i=e.pagination.$el,s="";if("bullets"===t.type){for(var r=e.params.loop?Math.ceil((a-2*e.loopedSlides)/e.params.slidesPerGroup):e.snapGrid.length,n=0;n<r;n+=1)t.renderBullet?s+=t.renderBullet.call(e,n,t.bulletClass):s+="<"+t.bulletElement+' class="'+t.bulletClass+'"></'+t.bulletElement+">";i.html(s),e.pagination.bullets=i.find("."+t.bulletClass)}"fraction"===t.type&&(s=t.renderFraction?t.renderFraction.call(e,t.currentClass,t.totalClass):'<span class="'+t.currentClass+'"></span> / <span class="'+t.totalClass+'"></span>',i.html(s)),"progressbar"===t.type&&(s=t.renderProgressbar?t.renderProgressbar.call(e,t.progressbarFillClass):'<span class="'+t.progressbarFillClass+'"></span>',i.html(s)),"custom"!==t.type&&e.emit("paginationRender",e.pagination.$el[0])}},init:function(){var e,a=this,t=a.params.pagination;!t.el||0!==(e=I(t.el)).length&&(a.params.uniqueNavElements&&"string"==typeof t.el&&1<e.length&&(e=a.$el.find(t.el)),"bullets"===t.type&&t.clickable&&e.addClass(t.clickableClass),e.addClass(t.modifierClass+t.type),"bullets"===t.type&&t.dynamicBullets&&(e.addClass(""+t.modifierClass+t.type+"-dynamic"),a.pagination.dynamicBulletIndex=0,t.dynamicMainBullets<1&&(t.dynamicMainBullets=1)),"progressbar"===t.type&&t.progressbarOpposite&&e.addClass(t.progressbarOppositeClass),t.clickable&&e.on("click","."+t.bulletClass,function(e){e.preventDefault();var t=I(this).index()*a.params.slidesPerGroup;a.params.loop&&(t+=a.loopedSlides),a.slideTo(t)}),oe(a.pagination,{$el:e,el:e[0]}))},destroy:function(){var e,t=this,a=t.params.pagination;a.el&&t.pagination.el&&t.pagination.$el&&0!==t.pagination.$el.length&&((e=t.pagination.$el).removeClass(a.hiddenClass),e.removeClass(a.modifierClass+a.type),t.pagination.bullets&&t.pagination.bullets.removeClass(a.bulletActiveClass),a.clickable&&e.off("click","."+a.bulletClass))}},R={setTranslate:function(){var e,t,a,i,s,r,n,o,l,d,p=this;p.params.scrollbar.el&&p.scrollbar.el&&(e=p.scrollbar,t=p.rtlTranslate,a=p.progress,i=e.dragSize,s=e.trackSize,r=e.$dragEl,n=e.$el,o=p.params.scrollbar,d=(s-(l=i))*a,t?0<(d=-d)?(l=i-d,d=0):s<-d+i&&(l=s+d):d<0?(l=i+d,d=0):s<d+i&&(l=s-d),p.isHorizontal()?(r.transform("translate3d("+d+"px, 0, 0)"),r[0].style.width=l+"px"):(r.transform("translate3d(0px, "+d+"px, 0)"),r[0].style.height=l+"px"),o.hide&&(clearTimeout(p.scrollbar.timeout),n[0].style.opacity=1,p.scrollbar.timeout=setTimeout(function(){n[0].style.opacity=0,n.transition(400)},1e3)))},setTransition:function(e){this.params.scrollbar.el&&this.scrollbar.el&&this.scrollbar.$dragEl.transition(e)},updateSize:function(){var e,t,a,i,s,r,n,o=this;o.params.scrollbar.el&&o.scrollbar.el&&(t=(e=o.scrollbar).$dragEl,a=e.$el,t[0].style.width="",t[0].style.height="",i=o.isHorizontal()?a[0].offsetWidth:a[0].offsetHeight,r=(s=o.size/o.virtualSize)*(i/o.size),n="auto"===o.params.scrollbar.dragSize?i*s:parseInt(o.params.scrollbar.dragSize,10),o.isHorizontal()?t[0].style.width=n+"px":t[0].style.height=n+"px",a[0].style.display=1<=s?"none":"",o.params.scrollbar.hide&&(a[0].style.opacity=0),oe(e,{trackSize:i,divider:s,moveDivider:r,dragSize:n}),e.$el[o.params.watchOverflow&&o.isLocked?"addClass":"removeClass"](o.params.scrollbar.lockClass))},getPointerPosition:function(e){return this.isHorizontal()?"touchstart"===e.type||"touchmove"===e.type?e.targetTouches[0].clientX:e.clientX:"touchstart"===e.type||"touchmove"===e.type?e.targetTouches[0].clientY:e.clientY},setDragPosition:function(e){var t=this,a=t.scrollbar,i=t.rtlTranslate,s=a.$el,r=a.dragSize,n=a.trackSize,o=a.dragStartPos,l=(a.getPointerPosition(e)-s.offset()[t.isHorizontal()?"left":"top"]-(null!==o?o:r/2))/(n-r);l=Math.max(Math.min(l,1),0),i&&(l=1-l);var d=t.minTranslate()+(t.maxTranslate()-t.minTranslate())*l;t.updateProgress(d),t.setTranslate(d),t.updateActiveIndex(),t.updateSlidesClasses()},onDragStart:function(e){var t=this,a=t.params.scrollbar,i=t.scrollbar,s=t.$wrapperEl,r=i.$el,n=i.$dragEl;t.scrollbar.isTouched=!0,t.scrollbar.dragStartPos=e.target===n[0]||e.target===n?i.getPointerPosition(e)-e.target.getBoundingClientRect()[t.isHorizontal()?"left":"top"]:null,e.preventDefault(),e.stopPropagation(),s.transition(100),n.transition(100),i.setDragPosition(e),clearTimeout(t.scrollbar.dragTimeout),r.transition(0),a.hide&&r.css("opacity",1),t.params.cssMode&&t.$wrapperEl.css("scroll-snap-type","none"),t.emit("scrollbarDragStart",e)},onDragMove:function(e){var t=this.scrollbar,a=this.$wrapperEl,i=t.$el,s=t.$dragEl;this.scrollbar.isTouched&&(e.preventDefault?e.preventDefault():e.returnValue=!1,t.setDragPosition(e),a.transition(0),i.transition(0),s.transition(0),this.emit("scrollbarDragMove",e))},onDragEnd:function(e){var t=this,a=t.params.scrollbar,i=t.scrollbar,s=t.$wrapperEl,r=i.$el;t.scrollbar.isTouched&&(t.scrollbar.isTouched=!1,t.params.cssMode&&(t.$wrapperEl.css("scroll-snap-type",""),s.transition("")),a.hide&&(clearTimeout(t.scrollbar.dragTimeout),t.scrollbar.dragTimeout=A(function(){r.css("opacity",0),r.transition(400)},1e3)),t.emit("scrollbarDragEnd",e),a.snapOnRelease&&t.slideToClosest())},enableDraggable:function(){var e,t,a,i,s,r,n,o,l,d=this;d.params.scrollbar.el&&(e=E(),t=d.scrollbar,a=d.touchEventsTouch,i=d.touchEventsDesktop,s=d.params,r=d.support,n=t.$el[0],o=!(!r.passiveListener||!s.passiveListeners)&&{passive:!1,capture:!1},l=!(!r.passiveListener||!s.passiveListeners)&&{passive:!0,capture:!1},r.touch?(n.addEventListener(a.start,d.scrollbar.onDragStart,o),n.addEventListener(a.move,d.scrollbar.onDragMove,o),n.addEventListener(a.end,d.scrollbar.onDragEnd,l)):(n.addEventListener(i.start,d.scrollbar.onDragStart,o),e.addEventListener(i.move,d.scrollbar.onDragMove,o),e.addEventListener(i.end,d.scrollbar.onDragEnd,l)))},disableDraggable:function(){var e,t,a,i,s,r,n,o,l,d=this;d.params.scrollbar.el&&(e=E(),t=d.scrollbar,a=d.touchEventsTouch,i=d.touchEventsDesktop,s=d.params,r=d.support,n=t.$el[0],o=!(!r.passiveListener||!s.passiveListeners)&&{passive:!1,capture:!1},l=!(!r.passiveListener||!s.passiveListeners)&&{passive:!0,capture:!1},r.touch?(n.removeEventListener(a.start,d.scrollbar.onDragStart,o),n.removeEventListener(a.move,d.scrollbar.onDragMove,o),n.removeEventListener(a.end,d.scrollbar.onDragEnd,l)):(n.removeEventListener(i.start,d.scrollbar.onDragStart,o),e.removeEventListener(i.move,d.scrollbar.onDragMove,o),e.removeEventListener(i.end,d.scrollbar.onDragEnd,l)))},init:function(){var e,t,a,i,s,r=this;r.params.scrollbar.el&&(e=r.scrollbar,t=r.$el,i=I((a=r.params.scrollbar).el),r.params.uniqueNavElements&&"string"==typeof a.el&&1<i.length&&1===t.find(a.el).length&&(i=t.find(a.el)),0===(s=i.find("."+r.params.scrollbar.dragClass)).length&&(s=I('<div class="'+r.params.scrollbar.dragClass+'"></div>'),i.append(s)),oe(e,{$el:i,el:i[0],$dragEl:s,dragEl:s[0]}),a.draggable&&e.enableDraggable())},destroy:function(){this.scrollbar.disableDraggable()}},W={setTransform:function(e,t){var a,i,s=this.rtl,r=I(e),n=s?-1:1,o=r.attr("data-swiper-parallax")||"0",l=r.attr("data-swiper-parallax-x"),d=r.attr("data-swiper-parallax-y"),p=r.attr("data-swiper-parallax-scale"),u=r.attr("data-swiper-parallax-opacity");l||d?(l=l||"0",d=d||"0"):this.isHorizontal()?(l=o,d="0"):(d=o,l="0"),l=0<=l.indexOf("%")?parseInt(l,10)*t*n+"%":l*t*n+"px",d=0<=d.indexOf("%")?parseInt(d,10)*t+"%":d*t+"px",null!=u&&(a=u-(u-1)*(1-Math.abs(t)),r[0].style.opacity=a),null==p?r.transform("translate3d("+l+", "+d+", 0px)"):(i=p-(p-1)*(1-Math.abs(t)),r.transform("translate3d("+l+", "+d+", 0px) scale("+i+")"))},setTranslate:function(){var i=this,e=i.$el,t=i.slides,s=i.progress,r=i.snapGrid;e.children("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each(function(e){i.parallax.setTransform(e,s)}),t.each(function(e,t){var a=e.progress;1<i.params.slidesPerGroup&&"auto"!==i.params.slidesPerView&&(a+=Math.ceil(t/2)-s*(r.length-1)),a=Math.min(Math.max(a,-1),1),I(e).find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each(function(e){i.parallax.setTransform(e,a)})})},setTransition:function(i){void 0===i&&(i=this.params.speed);this.$el.find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each(function(e){var t=I(e),a=parseInt(t.attr("data-swiper-parallax-duration"),10)||i;0===i&&(a=0),t.transition(a)})}},q={getDistanceBetweenTouches:function(e){if(e.targetTouches.length<2)return 1;var t=e.targetTouches[0].pageX,a=e.targetTouches[0].pageY,i=e.targetTouches[1].pageX,s=e.targetTouches[1].pageY;return Math.sqrt(Math.pow(i-t,2)+Math.pow(s-a,2))},onGestureStart:function(e){var t=this,a=t.support,i=t.params.zoom,s=t.zoom,r=s.gesture;if(s.fakeGestureTouched=!1,s.fakeGestureMoved=!1,!a.gestures){if("touchstart"!==e.type||"touchstart"===e.type&&e.targetTouches.length<2)return;s.fakeGestureTouched=!0,r.scaleStart=q.getDistanceBetweenTouches(e)}r.$slideEl&&r.$slideEl.length||(r.$slideEl=I(e.target).closest("."+t.params.slideClass),0===r.$slideEl.length&&(r.$slideEl=t.slides.eq(t.activeIndex)),r.$imageEl=r.$slideEl.find("img, svg, canvas, picture, .swiper-zoom-target"),r.$imageWrapEl=r.$imageEl.parent("."+i.containerClass),r.maxRatio=r.$imageWrapEl.attr("data-swiper-zoom")||i.maxRatio,0!==r.$imageWrapEl.length)?(r.$imageEl&&r.$imageEl.transition(0),t.zoom.isScaling=!0):r.$imageEl=void 0},onGestureChange:function(e){var t=this.support,a=this.params.zoom,i=this.zoom,s=i.gesture;if(!t.gestures){if("touchmove"!==e.type||"touchmove"===e.type&&e.targetTouches.length<2)return;i.fakeGestureMoved=!0,s.scaleMove=q.getDistanceBetweenTouches(e)}s.$imageEl&&0!==s.$imageEl.length?(t.gestures?i.scale=e.scale*i.currentScale:i.scale=s.scaleMove/s.scaleStart*i.currentScale,i.scale>s.maxRatio&&(i.scale=s.maxRatio-1+Math.pow(i.scale-s.maxRatio+1,.5)),i.scale<a.minRatio&&(i.scale=a.minRatio+1-Math.pow(a.minRatio-i.scale+1,.5)),s.$imageEl.transform("translate3d(0,0,0) scale("+i.scale+")")):"gesturechange"===e.type&&i.onGestureStart(e)},onGestureEnd:function(e){var t=this,a=t.device,i=t.support,s=t.params.zoom,r=t.zoom,n=r.gesture;if(!i.gestures){if(!r.fakeGestureTouched||!r.fakeGestureMoved)return;if("touchend"!==e.type||"touchend"===e.type&&e.changedTouches.length<2&&!a.android)return;r.fakeGestureTouched=!1,r.fakeGestureMoved=!1}n.$imageEl&&0!==n.$imageEl.length&&(r.scale=Math.max(Math.min(r.scale,n.maxRatio),s.minRatio),n.$imageEl.transition(t.params.speed).transform("translate3d(0,0,0) scale("+r.scale+")"),r.currentScale=r.scale,r.isScaling=!1,1===r.scale&&(n.$slideEl=void 0))},onTouchStart:function(e){var t=this.device,a=this.zoom,i=a.gesture,s=a.image;i.$imageEl&&0!==i.$imageEl.length&&(s.isTouched||(t.android&&e.cancelable&&e.preventDefault(),s.isTouched=!0,s.touchesStart.x="touchstart"===e.type?e.targetTouches[0].pageX:e.pageX,s.touchesStart.y="touchstart"===e.type?e.targetTouches[0].pageY:e.pageY))},onTouchMove:function(e){var t=this,a=t.zoom,i=a.gesture,s=a.image,r=a.velocity;if(i.$imageEl&&0!==i.$imageEl.length&&(t.allowClick=!1,s.isTouched&&i.$slideEl)){s.isMoved||(s.width=i.$imageEl[0].offsetWidth,s.height=i.$imageEl[0].offsetHeight,s.startX=g(i.$imageWrapEl[0],"x")||0,s.startY=g(i.$imageWrapEl[0],"y")||0,i.slideWidth=i.$slideEl[0].offsetWidth,i.slideHeight=i.$slideEl[0].offsetHeight,i.$imageWrapEl.transition(0),t.rtl&&(s.startX=-s.startX,s.startY=-s.startY));var n=s.width*a.scale,o=s.height*a.scale;if(!(n<i.slideWidth&&o<i.slideHeight)){if(s.minX=Math.min(i.slideWidth/2-n/2,0),s.maxX=-s.minX,s.minY=Math.min(i.slideHeight/2-o/2,0),s.maxY=-s.minY,s.touchesCurrent.x="touchmove"===e.type?e.targetTouches[0].pageX:e.pageX,s.touchesCurrent.y="touchmove"===e.type?e.targetTouches[0].pageY:e.pageY,!s.isMoved&&!a.isScaling){if(t.isHorizontal()&&(Math.floor(s.minX)===Math.floor(s.startX)&&s.touchesCurrent.x<s.touchesStart.x||Math.floor(s.maxX)===Math.floor(s.startX)&&s.touchesCurrent.x>s.touchesStart.x))return void(s.isTouched=!1);if(!t.isHorizontal()&&(Math.floor(s.minY)===Math.floor(s.startY)&&s.touchesCurrent.y<s.touchesStart.y||Math.floor(s.maxY)===Math.floor(s.startY)&&s.touchesCurrent.y>s.touchesStart.y))return void(s.isTouched=!1)}e.cancelable&&e.preventDefault(),e.stopPropagation(),s.isMoved=!0,s.currentX=s.touchesCurrent.x-s.touchesStart.x+s.startX,s.currentY=s.touchesCurrent.y-s.touchesStart.y+s.startY,s.currentX<s.minX&&(s.currentX=s.minX+1-Math.pow(s.minX-s.currentX+1,.8)),s.currentX>s.maxX&&(s.currentX=s.maxX-1+Math.pow(s.currentX-s.maxX+1,.8)),s.currentY<s.minY&&(s.currentY=s.minY+1-Math.pow(s.minY-s.currentY+1,.8)),s.currentY>s.maxY&&(s.currentY=s.maxY-1+Math.pow(s.currentY-s.maxY+1,.8)),r.prevPositionX||(r.prevPositionX=s.touchesCurrent.x),r.prevPositionY||(r.prevPositionY=s.touchesCurrent.y),r.prevTime||(r.prevTime=Date.now()),r.x=(s.touchesCurrent.x-r.prevPositionX)/(Date.now()-r.prevTime)/2,r.y=(s.touchesCurrent.y-r.prevPositionY)/(Date.now()-r.prevTime)/2,Math.abs(s.touchesCurrent.x-r.prevPositionX)<2&&(r.x=0),Math.abs(s.touchesCurrent.y-r.prevPositionY)<2&&(r.y=0),r.prevPositionX=s.touchesCurrent.x,r.prevPositionY=s.touchesCurrent.y,r.prevTime=Date.now(),i.$imageWrapEl.transform("translate3d("+s.currentX+"px, "+s.currentY+"px,0)")}}},onTouchEnd:function(){var e=this.zoom,t=e.gesture,a=e.image,i=e.velocity;if(t.$imageEl&&0!==t.$imageEl.length){if(!a.isTouched||!a.isMoved)return a.isTouched=!1,void(a.isMoved=!1);a.isTouched=!1,a.isMoved=!1;var s=300,r=300,n=i.x*s,o=a.currentX+n,l=i.y*r,d=a.currentY+l;0!==i.x&&(s=Math.abs((o-a.currentX)/i.x)),0!==i.y&&(r=Math.abs((d-a.currentY)/i.y));var p=Math.max(s,r);a.currentX=o,a.currentY=d;var u=a.width*e.scale,c=a.height*e.scale;a.minX=Math.min(t.slideWidth/2-u/2,0),a.maxX=-a.minX,a.minY=Math.min(t.slideHeight/2-c/2,0),a.maxY=-a.minY,a.currentX=Math.max(Math.min(a.currentX,a.maxX),a.minX),a.currentY=Math.max(Math.min(a.currentY,a.maxY),a.minY),t.$imageWrapEl.transition(p).transform("translate3d("+a.currentX+"px, "+a.currentY+"px,0)")}},onTransitionEnd:function(){var e=this.zoom,t=e.gesture;t.$slideEl&&this.previousIndex!==this.activeIndex&&(t.$imageEl&&t.$imageEl.transform("translate3d(0,0,0) scale(1)"),t.$imageWrapEl&&t.$imageWrapEl.transform("translate3d(0,0,0)"),e.scale=1,e.currentScale=1,t.$slideEl=void 0,t.$imageEl=void 0,t.$imageWrapEl=void 0)},toggle:function(e){var t=this.zoom;t.scale&&1!==t.scale?t.out():t.in(e)},in:function(e){var t,a,i,s,r,n,o,l,d,p,u,c,h,v,m,f,g=this,y=g.zoom,w=g.params.zoom,b=y.gesture,E=y.image;b.$slideEl||(g.params.virtual&&g.params.virtual.enabled&&g.virtual?b.$slideEl=g.$wrapperEl.children("."+g.params.slideActiveClass):b.$slideEl=g.slides.eq(g.activeIndex),b.$imageEl=b.$slideEl.find("img, svg, canvas, picture, .swiper-zoom-target"),b.$imageWrapEl=b.$imageEl.parent("."+w.containerClass)),b.$imageEl&&0!==b.$imageEl.length&&(b.$slideEl.addClass(""+w.zoomedSlideClass),a=void 0===E.touchesStart.x&&e?(t="touchend"===e.type?e.changedTouches[0].pageX:e.pageX,"touchend"===e.type?e.changedTouches[0].pageY:e.pageY):(t=E.touchesStart.x,E.touchesStart.y),y.scale=b.$imageWrapEl.attr("data-swiper-zoom")||w.maxRatio,y.currentScale=b.$imageWrapEl.attr("data-swiper-zoom")||w.maxRatio,e?(m=b.$slideEl[0].offsetWidth,f=b.$slideEl[0].offsetHeight,i=b.$slideEl.offset().left+m/2-t,s=b.$slideEl.offset().top+f/2-a,o=b.$imageEl[0].offsetWidth,l=b.$imageEl[0].offsetHeight,d=o*y.scale,p=l*y.scale,h=-(u=Math.min(m/2-d/2,0)),v=-(c=Math.min(f/2-p/2,0)),(r=i*y.scale)<u&&(r=u),h<r&&(r=h),(n=s*y.scale)<c&&(n=c),v<n&&(n=v)):n=r=0,b.$imageWrapEl.transition(300).transform("translate3d("+r+"px, "+n+"px,0)"),b.$imageEl.transition(300).transform("translate3d(0,0,0) scale("+y.scale+")"))},out:function(){var e=this,t=e.zoom,a=e.params.zoom,i=t.gesture;i.$slideEl||(e.params.virtual&&e.params.virtual.enabled&&e.virtual?i.$slideEl=e.$wrapperEl.children("."+e.params.slideActiveClass):i.$slideEl=e.slides.eq(e.activeIndex),i.$imageEl=i.$slideEl.find("img, svg, canvas, picture, .swiper-zoom-target"),i.$imageWrapEl=i.$imageEl.parent("."+a.containerClass)),i.$imageEl&&0!==i.$imageEl.length&&(t.scale=1,t.currentScale=1,i.$imageWrapEl.transition(300).transform("translate3d(0,0,0)"),i.$imageEl.transition(300).transform("translate3d(0,0,0) scale(1)"),i.$slideEl.removeClass(""+a.zoomedSlideClass),i.$slideEl=void 0)},toggleGestures:function(e){var t=this.zoom,a=t.slideSelector,i=t.passiveListener;this.$wrapperEl[e]("gesturestart",a,t.onGestureStart,i),this.$wrapperEl[e]("gesturechange",a,t.onGestureChange,i),this.$wrapperEl[e]("gestureend",a,t.onGestureEnd,i)},enableGestures:function(){this.zoom.gesturesEnabled||(this.zoom.gesturesEnabled=!0,this.zoom.toggleGestures("on"))},disableGestures:function(){this.zoom.gesturesEnabled&&(this.zoom.gesturesEnabled=!1,this.zoom.toggleGestures("off"))},enable:function(){var e,t,a,i=this,s=i.support,r=i.zoom;r.enabled||(r.enabled=!0,e=!("touchstart"!==i.touchEvents.start||!s.passiveListener||!i.params.passiveListeners)&&{passive:!0,capture:!1},t=!s.passiveListener||{passive:!1,capture:!0},a="."+i.params.slideClass,i.zoom.passiveListener=e,i.zoom.slideSelector=a,s.gestures?(i.$wrapperEl.on(i.touchEvents.start,i.zoom.enableGestures,e),i.$wrapperEl.on(i.touchEvents.end,i.zoom.disableGestures,e)):"touchstart"===i.touchEvents.start&&(i.$wrapperEl.on(i.touchEvents.start,a,r.onGestureStart,e),i.$wrapperEl.on(i.touchEvents.move,a,r.onGestureChange,t),i.$wrapperEl.on(i.touchEvents.end,a,r.onGestureEnd,e),i.touchEvents.cancel&&i.$wrapperEl.on(i.touchEvents.cancel,a,r.onGestureEnd,e)),i.$wrapperEl.on(i.touchEvents.move,"."+i.params.zoom.containerClass,r.onTouchMove,t))},disable:function(){var e,t,a,i,s=this,r=s.zoom;r.enabled&&(e=s.support,s.zoom.enabled=!1,t=!("touchstart"!==s.touchEvents.start||!e.passiveListener||!s.params.passiveListeners)&&{passive:!0,capture:!1},a=!e.passiveListener||{passive:!1,capture:!0},i="."+s.params.slideClass,e.gestures?(s.$wrapperEl.off(s.touchEvents.start,s.zoom.enableGestures,t),s.$wrapperEl.off(s.touchEvents.end,s.zoom.disableGestures,t)):"touchstart"===s.touchEvents.start&&(s.$wrapperEl.off(s.touchEvents.start,i,r.onGestureStart,t),s.$wrapperEl.off(s.touchEvents.move,i,r.onGestureChange,a),s.$wrapperEl.off(s.touchEvents.end,i,r.onGestureEnd,t),s.touchEvents.cancel&&s.$wrapperEl.off(s.touchEvents.cancel,i,r.onGestureEnd,t)),s.$wrapperEl.off(s.touchEvents.move,"."+s.params.zoom.containerClass,r.onTouchMove,a))}},j={loadInSlide:function(e,d){void 0===d&&(d=!0);var p,t,u=this,c=u.params.lazy;void 0!==e&&0!==u.slides.length&&(t=(p=u.virtual&&u.params.virtual.enabled?u.$wrapperEl.children("."+u.params.slideClass+'[data-swiper-slide-index="'+e+'"]'):u.slides.eq(e)).find("."+c.elementClass+":not(."+c.loadedClass+"):not(."+c.loadingClass+")"),!p.hasClass(c.elementClass)||p.hasClass(c.loadedClass)||p.hasClass(c.loadingClass)||t.push(p[0]),0!==t.length&&t.each(function(e){var i=I(e);i.addClass(c.loadingClass);var s=i.attr("data-background"),r=i.attr("data-src"),n=i.attr("data-srcset"),o=i.attr("data-sizes"),l=i.parent("picture");u.loadImage(i[0],r||s,n,o,!1,function(){var e,t,a;null==u||!u||u&&!u.params||u.destroyed||(s?(i.css("background-image",'url("'+s+'")'),i.removeAttr("data-background")):(n&&(i.attr("srcset",n),i.removeAttr("data-srcset")),o&&(i.attr("sizes",o),i.removeAttr("data-sizes")),l.length&&l.children("source").each(function(e){var t=I(e);t.attr("data-srcset")&&(t.attr("srcset",t.attr("data-srcset")),t.removeAttr("data-srcset"))}),r&&(i.attr("src",r),i.removeAttr("data-src"))),i.addClass(c.loadedClass).removeClass(c.loadingClass),p.find("."+c.preloaderClass).remove(),u.params.loop&&d&&(e=p.attr("data-swiper-slide-index"),p.hasClass(u.params.slideDuplicateClass)?(t=u.$wrapperEl.children('[data-swiper-slide-index="'+e+'"]:not(.'+u.params.slideDuplicateClass+")"),u.lazy.loadInSlide(t.index(),!1)):(a=u.$wrapperEl.children("."+u.params.slideDuplicateClass+'[data-swiper-slide-index="'+e+'"]'),u.lazy.loadInSlide(a.index(),!1))),u.emit("lazyImageReady",p[0],i[0]),u.params.autoHeight&&u.updateAutoHeight())}),u.emit("lazyImageLoad",p[0],i[0])}))},load:function(){var a=this,t=a.$wrapperEl,i=a.params,s=a.slides,e=a.activeIndex,r=a.virtual&&i.virtual.enabled,n=i.lazy,o=i.slidesPerView;function l(e){if(r){if(t.children("."+i.slideClass+'[data-swiper-slide-index="'+e+'"]').length)return 1}else if(s[e])return 1}function d(e){return r?I(e).attr("data-swiper-slide-index"):I(e).index()}if("auto"===o&&(o=0),a.lazy.initialImageLoaded||(a.lazy.initialImageLoaded=!0),a.params.watchSlidesVisibility)t.children("."+i.slideVisibleClass).each(function(e){var t=r?I(e).attr("data-swiper-slide-index"):I(e).index();a.lazy.loadInSlide(t)});else if(1<o)for(var p=e;p<e+o;p+=1)l(p)&&a.lazy.loadInSlide(p);else a.lazy.loadInSlide(e);if(n.loadPrevNext)if(1<o||n.loadPrevNextAmount&&1<n.loadPrevNextAmount){for(var u=n.loadPrevNextAmount,c=o,h=Math.min(e+c+Math.max(u,c),s.length),v=Math.max(e-Math.max(c,u),0),m=e+o;m<h;m+=1)l(m)&&a.lazy.loadInSlide(m);for(var f=v;f<e;f+=1)l(f)&&a.lazy.loadInSlide(f)}else{var g=t.children("."+i.slideNextClass);0<g.length&&a.lazy.loadInSlide(d(g));var y=t.children("."+i.slidePrevClass);0<y.length&&a.lazy.loadInSlide(d(y))}}},_={LinearSpline:function(e,t){var a,i,s,r,n,o=function(e,t){for(i=-1,a=e.length;1<a-i;)e[s=a+i>>1]<=t?i=s:a=s;return a};return this.x=e,this.y=t,this.lastIndex=e.length-1,this.interpolate=function(e){return e?(n=o(this.x,e),r=n-1,(e-this.x[r])*(this.y[n]-this.y[r])/(this.x[n]-this.x[r])+this.y[r]):0},this},getInterpolateFunction:function(e){var t=this;t.controller.spline||(t.controller.spline=t.params.loop?new _.LinearSpline(t.slidesGrid,e.slidesGrid):new _.LinearSpline(t.snapGrid,e.snapGrid))},setTranslate:function(e,t){var a,i,s=this,r=s.controller.control,n=s.constructor;function o(e){var t=s.rtlTranslate?-s.translate:s.translate;"slide"===s.params.controller.by&&(s.controller.getInterpolateFunction(e),i=-s.controller.spline.interpolate(-t)),i&&"container"!==s.params.controller.by||(a=(e.maxTranslate()-e.minTranslate())/(s.maxTranslate()-s.minTranslate()),i=(t-s.minTranslate())*a+e.minTranslate()),s.params.controller.inverse&&(i=e.maxTranslate()-i),e.updateProgress(i),e.setTranslate(i,s),e.updateActiveIndex(),e.updateSlidesClasses()}if(Array.isArray(r))for(var l=0;l<r.length;l+=1)r[l]!==t&&r[l]instanceof n&&o(r[l]);else r instanceof n&&t!==r&&o(r)},setTransition:function(t,e){var a,i=this,s=i.constructor,r=i.controller.control;function n(e){e.setTransition(t,i),0!==t&&(e.transitionStart(),e.params.autoHeight&&A(function(){e.updateAutoHeight()}),e.$wrapperEl.transitionEnd(function(){r&&(e.params.loop&&"slide"===i.params.controller.by&&e.loopFix(),e.transitionEnd())}))}if(Array.isArray(r))for(a=0;a<r.length;a+=1)r[a]!==e&&r[a]instanceof s&&n(r[a]);else r instanceof s&&e!==r&&n(r)}},U={getRandomNumber:function(e){void 0===e&&(e=16);return"x".repeat(e).replace(/x/g,function(){return Math.round(16*Math.random()).toString(16)})},makeElFocusable:function(e){return e.attr("tabIndex","0"),e},makeElNotFocusable:function(e){return e.attr("tabIndex","-1"),e},addElRole:function(e,t){return e.attr("role",t),e},addElRoleDescription:function(e,t){return e.attr("aria-role-description",t),e},addElControls:function(e,t){return e.attr("aria-controls",t),e},addElLabel:function(e,t){return e.attr("aria-label",t),e},addElId:function(e,t){return e.attr("id",t),e},addElLive:function(e,t){return e.attr("aria-live",t),e},disableEl:function(e){return e.attr("aria-disabled",!0),e},enableEl:function(e){return e.attr("aria-disabled",!1),e},onEnterKey:function(e){var t,a=this,i=a.params.a11y;13===e.keyCode&&(t=I(e.target),a.navigation&&a.navigation.$nextEl&&t.is(a.navigation.$nextEl)&&(a.isEnd&&!a.params.loop||a.slideNext(),a.isEnd?a.a11y.notify(i.lastSlideMessage):a.a11y.notify(i.nextSlideMessage)),a.navigation&&a.navigation.$prevEl&&t.is(a.navigation.$prevEl)&&(a.isBeginning&&!a.params.loop||a.slidePrev(),a.isBeginning?a.a11y.notify(i.firstSlideMessage):a.a11y.notify(i.prevSlideMessage)),a.pagination&&t.is("."+a.params.pagination.bulletClass)&&t[0].click())},notify:function(e){var t=this.a11y.liveRegion;0!==t.length&&(t.html(""),t.html(e))},updateNavigation:function(){var e,t,a,i=this;!i.params.loop&&i.navigation&&(t=(e=i.navigation).$nextEl,(a=e.$prevEl)&&0<a.length&&(i.isBeginning?(i.a11y.disableEl(a),i.a11y.makeElNotFocusable(a)):(i.a11y.enableEl(a),i.a11y.makeElFocusable(a))),t&&0<t.length&&(i.isEnd?(i.a11y.disableEl(t),i.a11y.makeElNotFocusable(t)):(i.a11y.enableEl(t),i.a11y.makeElFocusable(t))))},updatePagination:function(){var a=this,i=a.params.a11y;a.pagination&&a.params.pagination.clickable&&a.pagination.bullets&&a.pagination.bullets.length&&a.pagination.bullets.each(function(e){var t=I(e);a.a11y.makeElFocusable(t),a.params.pagination.renderBullet||(a.a11y.addElRole(t,"button"),a.a11y.addElLabel(t,i.paginationBulletMessage.replace(/\{\{index\}\}/,t.index()+1)))})},init:function(){var a=this,e=a.params.a11y;a.$el.append(a.a11y.liveRegion);var t=a.$el;e.containerRoleDescriptionMessage&&a.a11y.addElRoleDescription(t,e.containerRoleDescriptionMessage),e.containerMessage&&a.a11y.addElLabel(t,e.containerMessage);var i,s,r,n=a.$wrapperEl,o=n.attr("id")||"swiper-wrapper-"+a.a11y.getRandomNumber(16);a.a11y.addElId(n,o),i=a.params.autoplay&&a.params.autoplay.enabled?"off":"polite",a.a11y.addElLive(n,i),e.itemRoleDescriptionMessage&&a.a11y.addElRoleDescription(I(a.slides),e.itemRoleDescriptionMessage),a.a11y.addElRole(I(a.slides),"group"),a.slides.each(function(e){var t=I(e);a.a11y.addElLabel(t,t.index()+1+" / "+a.slides.length)}),a.navigation&&a.navigation.$nextEl&&(s=a.navigation.$nextEl),a.navigation&&a.navigation.$prevEl&&(r=a.navigation.$prevEl),s&&(a.a11y.makeElFocusable(s),"BUTTON"!==s[0].tagName&&(a.a11y.addElRole(s,"button"),s.on("keydown",a.a11y.onEnterKey)),a.a11y.addElLabel(s,e.nextSlideMessage),a.a11y.addElControls(s,o)),r&&(a.a11y.makeElFocusable(r),"BUTTON"!==r[0].tagName&&(a.a11y.addElRole(r,"button"),r.on("keydown",a.a11y.onEnterKey)),a.a11y.addElLabel(r,e.prevSlideMessage),a.a11y.addElControls(r,o)),a.pagination&&a.params.pagination.clickable&&a.pagination.bullets&&a.pagination.bullets.length&&a.pagination.$el.on("keydown","."+a.params.pagination.bulletClass,a.a11y.onEnterKey)},destroy:function(){var e,t,a=this;a.a11y.liveRegion&&0<a.a11y.liveRegion.length&&a.a11y.liveRegion.remove(),a.navigation&&a.navigation.$nextEl&&(e=a.navigation.$nextEl),a.navigation&&a.navigation.$prevEl&&(t=a.navigation.$prevEl),e&&e.off("keydown",a.a11y.onEnterKey),t&&t.off("keydown",a.a11y.onEnterKey),a.pagination&&a.params.pagination.clickable&&a.pagination.bullets&&a.pagination.bullets.length&&a.pagination.$el.off("keydown","."+a.params.pagination.bulletClass,a.a11y.onEnterKey)}},K={init:function(){var e=this,t=ne();if(e.params.history){if(!t.history||!t.history.pushState)return e.params.history.enabled=!1,void(e.params.hashNavigation.enabled=!0);var a=e.history;a.initialized=!0,a.paths=K.getPathValues(e.params.url),(a.paths.key||a.paths.value)&&(a.scrollToSlide(0,a.paths.value,e.params.runCallbacksOnInit),e.params.history.replaceState||t.addEventListener("popstate",e.history.setHistoryPopState))}},destroy:function(){var e=ne();this.params.history.replaceState||e.removeEventListener("popstate",this.history.setHistoryPopState)},setHistoryPopState:function(){var e=this;e.history.paths=K.getPathValues(e.params.url),e.history.scrollToSlide(e.params.speed,e.history.paths.value,!1)},getPathValues:function(e){var t=ne(),a=e?new URL(e):t.location,i=a.pathname.slice(1).split("/").filter(function(e){return""!==e}),s=i.length;return{key:i[s-2],value:i[s-1]}},setHistory:function(e,t){var a,i,s,r,n=this,o=ne();n.history.initialized&&n.params.history.enabled&&(a=n.params.url?new URL(n.params.url):o.location,i=n.slides.eq(t),s=K.slugify(i.attr("data-history")),a.pathname.includes(e)||(s=e+"/"+s),(r=o.history.state)&&r.value===s||(n.params.history.replaceState?o.history.replaceState({value:s},null,s):o.history.pushState({value:s},null,s)))},slugify:function(e){return e.toString().replace(/\s+/g,"-").replace(/[^\w-]+/g,"").replace(/--+/g,"-").replace(/^-+/,"").replace(/-+$/,"")},scrollToSlide:function(e,t,a){var i=this;if(t)for(var s=0,r=i.slides.length;s<r;s+=1){var n,o=i.slides.eq(s);K.slugify(o.attr("data-history"))!==t||o.hasClass(i.params.slideDuplicateClass)||(n=o.index(),i.slideTo(n,e,a))}else i.slideTo(0,e,a)}},Z={onHashCange:function(){var e=this,t=E();e.emit("hashChange");var a=t.location.hash.replace("#","");if(a!==e.slides.eq(e.activeIndex).attr("data-hash")){var i=e.$wrapperEl.children("."+e.params.slideClass+'[data-hash="'+a+'"]').index();if(void 0===i)return;e.slideTo(i)}},setHash:function(){var e,t,a=this,i=ne(),s=E();a.hashNavigation.initialized&&a.params.hashNavigation.enabled&&(a.params.hashNavigation.replaceState&&i.history&&i.history.replaceState?i.history.replaceState(null,null,"#"+a.slides.eq(a.activeIndex).attr("data-hash")||""):(t=(e=a.slides.eq(a.activeIndex)).attr("data-hash")||e.attr("data-history"),s.location.hash=t||""),a.emit("hashSet"))},init:function(){var e=this,t=E(),a=ne();if(!(!e.params.hashNavigation.enabled||e.params.history&&e.params.history.enabled)){e.hashNavigation.initialized=!0;var i=t.location.hash.replace("#","");if(i)for(var s=0,r=e.slides.length;s<r;s+=1){var n,o=e.slides.eq(s);(o.attr("data-hash")||o.attr("data-history"))!==i||o.hasClass(e.params.slideDuplicateClass)||(n=o.index(),e.slideTo(n,0,e.params.runCallbacksOnInit,!0))}e.params.hashNavigation.watchState&&I(a).on("hashchange",e.hashNavigation.onHashCange)}},destroy:function(){var e=ne();this.params.hashNavigation.watchState&&I(e).off("hashchange",this.hashNavigation.onHashCange)}},J={run:function(){var e=this,t=e.slides.eq(e.activeIndex),a=e.params.autoplay.delay;t.attr("data-swiper-autoplay")&&(a=t.attr("data-swiper-autoplay")||e.params.autoplay.delay),clearTimeout(e.autoplay.timeout),e.autoplay.timeout=A(function(){e.params.autoplay.reverseDirection?e.params.loop?(e.loopFix(),e.slidePrev(e.params.speed,!0,!0),e.emit("autoplay")):e.isBeginning?e.params.autoplay.stopOnLastSlide?e.autoplay.stop():(e.slideTo(e.slides.length-1,e.params.speed,!0,!0),e.emit("autoplay")):(e.slidePrev(e.params.speed,!0,!0),e.emit("autoplay")):e.params.loop?(e.loopFix(),e.slideNext(e.params.speed,!0,!0),e.emit("autoplay")):e.isEnd?e.params.autoplay.stopOnLastSlide?e.autoplay.stop():(e.slideTo(0,e.params.speed,!0,!0),e.emit("autoplay")):(e.slideNext(e.params.speed,!0,!0),e.emit("autoplay")),e.params.cssMode&&e.autoplay.running&&e.autoplay.run()},a)},start:function(){var e=this;return void 0===e.autoplay.timeout&&(!e.autoplay.running&&(e.autoplay.running=!0,e.emit("autoplayStart"),e.autoplay.run(),!0))},stop:function(){var e=this;return!!e.autoplay.running&&(void 0!==e.autoplay.timeout&&(e.autoplay.timeout&&(clearTimeout(e.autoplay.timeout),e.autoplay.timeout=void 0),e.autoplay.running=!1,e.emit("autoplayStop"),!0))},pause:function(e){var t=this;t.autoplay.running&&(t.autoplay.paused||(t.autoplay.timeout&&clearTimeout(t.autoplay.timeout),t.autoplay.paused=!0,0!==e&&t.params.autoplay.waitForTransition?(t.$wrapperEl[0].addEventListener("transitionend",t.autoplay.onTransitionEnd),t.$wrapperEl[0].addEventListener("webkitTransitionEnd",t.autoplay.onTransitionEnd)):(t.autoplay.paused=!1,t.autoplay.run())))},onVisibilityChange:function(){var e=this,t=E();"hidden"===t.visibilityState&&e.autoplay.running&&e.autoplay.pause(),"visible"===t.visibilityState&&e.autoplay.paused&&(e.autoplay.run(),e.autoplay.paused=!1)},onTransitionEnd:function(e){var t=this;t&&!t.destroyed&&t.$wrapperEl&&e.target===t.$wrapperEl[0]&&(t.$wrapperEl[0].removeEventListener("transitionend",t.autoplay.onTransitionEnd),t.$wrapperEl[0].removeEventListener("webkitTransitionEnd",t.autoplay.onTransitionEnd),t.autoplay.paused=!1,t.autoplay.running?t.autoplay.run():t.autoplay.stop())}},Q={setTranslate:function(){for(var e=this,t=e.slides,a=0;a<t.length;a+=1){var i=e.slides.eq(a),s=-i[0].swiperSlideOffset;e.params.virtualTranslate||(s-=e.translate);var r=0;e.isHorizontal()||(r=s,s=0);var n=e.params.fadeEffect.crossFade?Math.max(1-Math.abs(i[0].progress),0):1+Math.min(Math.max(i[0].progress,-1),0);i.css({opacity:n}).transform("translate3d("+s+"px, "+r+"px, 0px)")}},setTransition:function(e){var a,i=this,t=i.slides,s=i.$wrapperEl;t.transition(e),i.params.virtualTranslate&&0!==e&&(a=!1,t.transitionEnd(function(){if(!a&&i&&!i.destroyed){a=!0,i.animating=!1;for(var e=["webkitTransitionEnd","transitionend"],t=0;t<e.length;t+=1)s.trigger(e[t])}}))}},ee={setTranslate:function(){var e,t=this,a=t.$el,i=t.$wrapperEl,s=t.slides,r=t.width,n=t.height,o=t.rtlTranslate,l=t.size,d=t.browser,p=t.params.cubeEffect,u=t.isHorizontal(),c=t.virtual&&t.params.virtual.enabled,h=0;p.shadow&&(u?(0===(e=i.find(".swiper-cube-shadow")).length&&(e=I('<div class="swiper-cube-shadow"></div>'),i.append(e)),e.css({height:r+"px"})):0===(e=a.find(".swiper-cube-shadow")).length&&(e=I('<div class="swiper-cube-shadow"></div>'),a.append(e)));for(var v,m,f,g,y,w=0;w<s.length;w+=1){var b=s.eq(w),E=w;c&&(E=parseInt(b.attr("data-swiper-slide-index"),10));var x=90*E,T=Math.floor(x/360);o&&(x=-x,T=Math.floor(-x/360));var C=Math.max(Math.min(b[0].progress,1),-1),S=0,M=0,z=0;E%4==0?(S=4*-T*l,z=0):(E-1)%4==0?(S=0,z=4*-T*l):(E-2)%4==0?(S=l+4*T*l,z=l):(E-3)%4==0&&(S=-l,z=3*l+4*l*T),o&&(S=-S),u||(M=S,S=0);var P,k,$="rotateX("+(u?0:-x)+"deg) rotateY("+(u?x:0)+"deg) translate3d("+S+"px, "+M+"px, "+z+"px)";C<=1&&-1<C&&(h=o?90*-E-90*C:90*E+90*C),b.transform($),p.slideShadows&&(P=u?b.find(".swiper-slide-shadow-left"):b.find(".swiper-slide-shadow-top"),k=u?b.find(".swiper-slide-shadow-right"):b.find(".swiper-slide-shadow-bottom"),0===P.length&&(P=I('<div class="swiper-slide-shadow-'+(u?"left":"top")+'"></div>'),b.append(P)),0===k.length&&(k=I('<div class="swiper-slide-shadow-'+(u?"right":"bottom")+'"></div>'),b.append(k)),P.length&&(P[0].style.opacity=Math.max(-C,0)),k.length&&(k[0].style.opacity=Math.max(C,0)))}i.css({"-webkit-transform-origin":"50% 50% -"+l/2+"px","-moz-transform-origin":"50% 50% -"+l/2+"px","-ms-transform-origin":"50% 50% -"+l/2+"px","transform-origin":"50% 50% -"+l/2+"px"}),p.shadow&&(u?e.transform("translate3d(0px, "+(r/2+p.shadowOffset)+"px, "+-r/2+"px) rotateX(90deg) rotateZ(0deg) scale("+p.shadowScale+")"):(v=Math.abs(h)-90*Math.floor(Math.abs(h)/90),m=1.5-(Math.sin(2*v*Math.PI/360)/2+Math.cos(2*v*Math.PI/360)/2),f=p.shadowScale,g=p.shadowScale/m,y=p.shadowOffset,e.transform("scale3d("+f+", 1, "+g+") translate3d(0px, "+(n/2+y)+"px, "+-n/2/g+"px) rotateX(-90deg)")));var L=d.isSafari||d.isWebView?-l/2:0;i.transform("translate3d(0px,0,"+L+"px) rotateX("+(t.isHorizontal()?0:h)+"deg) rotateY("+(t.isHorizontal()?-h:0)+"deg)")},setTransition:function(e){var t=this.$el;this.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e),this.params.cubeEffect.shadow&&!this.isHorizontal()&&t.find(".swiper-cube-shadow").transition(e)}},te={setTranslate:function(){for(var e=this,t=e.slides,a=e.rtlTranslate,i=0;i<t.length;i+=1){var s=t.eq(i),r=s[0].progress;e.params.flipEffect.limitRotation&&(r=Math.max(Math.min(s[0].progress,1),-1));var n,o,l=-180*r,d=0,p=-s[0].swiperSlideOffset,u=0;e.isHorizontal()?a&&(l=-l):(u=p,d=-l,l=p=0),s[0].style.zIndex=-Math.abs(Math.round(r))+t.length,e.params.flipEffect.slideShadows&&(n=e.isHorizontal()?s.find(".swiper-slide-shadow-left"):s.find(".swiper-slide-shadow-top"),o=e.isHorizontal()?s.find(".swiper-slide-shadow-right"):s.find(".swiper-slide-shadow-bottom"),0===n.length&&(n=I('<div class="swiper-slide-shadow-'+(e.isHorizontal()?"left":"top")+'"></div>'),s.append(n)),0===o.length&&(o=I('<div class="swiper-slide-shadow-'+(e.isHorizontal()?"right":"bottom")+'"></div>'),s.append(o)),n.length&&(n[0].style.opacity=Math.max(-r,0)),o.length&&(o[0].style.opacity=Math.max(r,0))),s.transform("translate3d("+p+"px, "+u+"px, 0px) rotateX("+d+"deg) rotateY("+l+"deg)")}},setTransition:function(e){var a,i=this,t=i.slides,s=i.activeIndex,r=i.$wrapperEl;t.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e),i.params.virtualTranslate&&0!==e&&(a=!1,t.eq(s).transitionEnd(function(){if(!a&&i&&!i.destroyed){a=!0,i.animating=!1;for(var e=["webkitTransitionEnd","transitionend"],t=0;t<e.length;t+=1)r.trigger(e[t])}}))}},ae={setTranslate:function(){for(var e=this,t=e.width,a=e.height,i=e.slides,s=e.slidesSizesGrid,r=e.params.coverflowEffect,n=e.isHorizontal(),o=e.translate,l=n?t/2-o:a/2-o,d=n?r.rotate:-r.rotate,p=r.depth,u=0,c=i.length;u<c;u+=1){var h=i.eq(u),v=s[u],m=(l-h[0].swiperSlideOffset-v/2)/v*r.modifier,f=n?d*m:0,g=n?0:d*m,y=-p*Math.abs(m),w=r.stretch;"string"==typeof w&&-1!==w.indexOf("%")&&(w=parseFloat(r.stretch)/100*v);var b=n?0:w*m,E=n?w*m:0,x=1-(1-r.scale)*Math.abs(m);Math.abs(E)<.001&&(E=0),Math.abs(b)<.001&&(b=0),Math.abs(y)<.001&&(y=0),Math.abs(f)<.001&&(f=0),Math.abs(g)<.001&&(g=0),Math.abs(x)<.001&&(x=0);var T,C,S="translate3d("+E+"px,"+b+"px,"+y+"px)  rotateX("+g+"deg) rotateY("+f+"deg) scale("+x+")";h.transform(S),h[0].style.zIndex=1-Math.abs(Math.round(m)),r.slideShadows&&(T=n?h.find(".swiper-slide-shadow-left"):h.find(".swiper-slide-shadow-top"),C=n?h.find(".swiper-slide-shadow-right"):h.find(".swiper-slide-shadow-bottom"),0===T.length&&(T=I('<div class="swiper-slide-shadow-'+(n?"left":"top")+'"></div>'),h.append(T)),0===C.length&&(C=I('<div class="swiper-slide-shadow-'+(n?"right":"bottom")+'"></div>'),h.append(C)),T.length&&(T[0].style.opacity=0<m?m:0),C.length&&(C[0].style.opacity=0<-m?-m:0))}},setTransition:function(e){this.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e)}},ie={init:function(){var e=this,t=e.params.thumbs;if(e.thumbs.initialized)return!1;e.thumbs.initialized=!0;var a=e.constructor;return t.swiper instanceof a?(e.thumbs.swiper=t.swiper,oe(e.thumbs.swiper.originalParams,{watchSlidesProgress:!0,slideToClickedSlide:!1}),oe(e.thumbs.swiper.params,{watchSlidesProgress:!0,slideToClickedSlide:!1})):y(t.swiper)&&(e.thumbs.swiper=new a(oe({},t.swiper,{watchSlidesVisibility:!0,watchSlidesProgress:!0,slideToClickedSlide:!1})),e.thumbs.swiperCreated=!0),e.thumbs.swiper.$el.addClass(e.params.thumbs.thumbsContainerClass),e.thumbs.swiper.on("tap",e.thumbs.onThumbClick),!0},onThumbClick:function(){var e,t,a,i,s,r,n=this,o=n.thumbs.swiper;o&&(e=o.clickedIndex,(t=o.clickedSlide)&&I(t).hasClass(n.params.thumbs.slideThumbActiveClass)||null!=e&&(r=o.params.loop?parseInt(I(o.clickedSlide).attr("data-swiper-slide-index"),10):e,n.params.loop&&(a=n.activeIndex,n.slides.eq(a).hasClass(n.params.slideDuplicateClass)&&(n.loopFix(),n._clientLeft=n.$wrapperEl[0].clientLeft,a=n.activeIndex),i=n.slides.eq(a).prevAll('[data-swiper-slide-index="'+r+'"]').eq(0).index(),s=n.slides.eq(a).nextAll('[data-swiper-slide-index="'+r+'"]').eq(0).index(),r=void 0===i||void 0!==s&&s-a<a-i?s:i),n.slideTo(r)))},update:function(e){var t=this,a=t.thumbs.swiper;if(a){var i,s,r,n,o,l="auto"===a.params.slidesPerView?a.slidesPerViewDynamic():a.params.slidesPerView,d=t.params.thumbs.autoScrollOffset,p=d&&!a.params.loop;t.realIndex===a.realIndex&&!p||(i=a.activeIndex,o=a.params.loop?(a.slides.eq(i).hasClass(a.params.slideDuplicateClass)&&(a.loopFix(),a._clientLeft=a.$wrapperEl[0].clientLeft,i=a.activeIndex),s=a.slides.eq(i).prevAll('[data-swiper-slide-index="'+t.realIndex+'"]').eq(0).index(),r=a.slides.eq(i).nextAll('[data-swiper-slide-index="'+t.realIndex+'"]').eq(0).index(),n=void 0===s?r:void 0===r?s:r-i==i-s?i:r-i<i-s?r:s,t.activeIndex>t.previousIndex?"next":"prev"):(n=t.realIndex)>t.previousIndex?"next":"prev",p&&(n+="next"===o?d:-1*d),a.visibleSlidesIndexes&&a.visibleSlidesIndexes.indexOf(n)<0&&(a.params.centeredSlides?n=i<n?n-Math.floor(l/2)+1:n+Math.floor(l/2)-1:i<n&&(n=n-l+1),a.slideTo(n,e?0:void 0)));var u=1,c=t.params.thumbs.slideThumbActiveClass;if(1<t.params.slidesPerView&&!t.params.centeredSlides&&(u=t.params.slidesPerView),t.params.thumbs.multipleActiveThumbs||(u=1),u=Math.floor(u),a.slides.removeClass(c),a.params.loop||a.params.virtual&&a.params.virtual.enabled)for(var h=0;h<u;h+=1)a.$wrapperEl.children('[data-swiper-slide-index="'+(t.realIndex+h)+'"]').addClass(c);else for(var v=0;v<u;v+=1)a.slides.eq(t.realIndex+v).addClass(c)}}},se=[B,X,{name:"mousewheel",params:{mousewheel:{enabled:!1,releaseOnEdges:!1,invert:!1,forceToAxis:!1,sensitivity:1,eventsTarget:"container",thresholdDelta:null,thresholdTime:null}},create:function(){w(this,{mousewheel:{enabled:!1,lastScrollTime:D(),lastEventBeforeSnap:void 0,recentWheelEvents:[],enable:Y.enable,disable:Y.disable,handle:Y.handle,handleMouseEnter:Y.handleMouseEnter,handleMouseLeave:Y.handleMouseLeave,animateSlider:Y.animateSlider,releaseScroll:Y.releaseScroll}})},on:{init:function(e){!e.params.mousewheel.enabled&&e.params.cssMode&&e.mousewheel.disable(),e.params.mousewheel.enabled&&e.mousewheel.enable()},destroy:function(e){e.params.cssMode&&e.mousewheel.enable(),e.mousewheel.enabled&&e.mousewheel.disable()}}},{name:"navigation",params:{navigation:{nextEl:null,prevEl:null,hideOnClick:!1,disabledClass:"swiper-button-disabled",hiddenClass:"swiper-button-hidden",lockClass:"swiper-button-lock"}},create:function(){w(this,{navigation:e({},V)})},on:{init:function(e){e.navigation.init(),e.navigation.update()},toEdge:function(e){e.navigation.update()},fromEdge:function(e){e.navigation.update()},destroy:function(e){e.navigation.destroy()},click:function(e,t){var a,i=e.navigation,s=i.$nextEl,r=i.$prevEl;!e.params.navigation.hideOnClick||I(t.target).is(r)||I(t.target).is(s)||(s?a=s.hasClass(e.params.navigation.hiddenClass):r&&(a=r.hasClass(e.params.navigation.hiddenClass)),!0===a?e.emit("navigationShow"):e.emit("navigationHide"),s&&s.toggleClass(e.params.navigation.hiddenClass),r&&r.toggleClass(e.params.navigation.hiddenClass))}}},{name:"pagination",params:{pagination:{el:null,bulletElement:"span",clickable:!1,hideOnClick:!1,renderBullet:null,renderProgressbar:null,renderFraction:null,renderCustom:null,progressbarOpposite:!1,type:"bullets",dynamicBullets:!1,dynamicMainBullets:1,formatFractionCurrent:function(e){return e},formatFractionTotal:function(e){return e},bulletClass:"swiper-pagination-bullet",bulletActiveClass:"swiper-pagination-bullet-active",modifierClass:"swiper-pagination-",currentClass:"swiper-pagination-current",totalClass:"swiper-pagination-total",hiddenClass:"swiper-pagination-hidden",progressbarFillClass:"swiper-pagination-progressbar-fill",progressbarOppositeClass:"swiper-pagination-progressbar-opposite",clickableClass:"swiper-pagination-clickable",lockClass:"swiper-pagination-lock"}},create:function(){w(this,{pagination:e({dynamicBulletIndex:0},F)})},on:{init:function(e){e.pagination.init(),e.pagination.render(),e.pagination.update()},activeIndexChange:function(e){(e.params.loop||void 0===e.snapIndex)&&e.pagination.update()},snapIndexChange:function(e){e.params.loop||e.pagination.update()},slidesLengthChange:function(e){e.params.loop&&(e.pagination.render(),e.pagination.update())},snapGridLengthChange:function(e){e.params.loop||(e.pagination.render(),e.pagination.update())},destroy:function(e){e.pagination.destroy()},click:function(e,t){e.params.pagination.el&&e.params.pagination.hideOnClick&&0<e.pagination.$el.length&&!I(t.target).hasClass(e.params.pagination.bulletClass)&&(!0===e.pagination.$el.hasClass(e.params.pagination.hiddenClass)?e.emit("paginationShow"):e.emit("paginationHide"),e.pagination.$el.toggleClass(e.params.pagination.hiddenClass))}}},{name:"scrollbar",params:{scrollbar:{el:null,dragSize:"auto",hide:!1,draggable:!1,snapOnRelease:!0,lockClass:"swiper-scrollbar-lock",dragClass:"swiper-scrollbar-drag"}},create:function(){w(this,{scrollbar:e({isTouched:!1,timeout:null,dragTimeout:null},R)})},on:{init:function(e){e.scrollbar.init(),e.scrollbar.updateSize(),e.scrollbar.setTranslate()},update:function(e){e.scrollbar.updateSize()},resize:function(e){e.scrollbar.updateSize()},observerUpdate:function(e){e.scrollbar.updateSize()},setTranslate:function(e){e.scrollbar.setTranslate()},setTransition:function(e,t){e.scrollbar.setTransition(t)},destroy:function(e){e.scrollbar.destroy()}}},{name:"parallax",params:{parallax:{enabled:!1}},create:function(){w(this,{parallax:e({},W)})},on:{beforeInit:function(e){e.params.parallax.enabled&&(e.params.watchSlidesProgress=!0,e.originalParams.watchSlidesProgress=!0)},init:function(e){e.params.parallax.enabled&&e.parallax.setTranslate()},setTranslate:function(e){e.params.parallax.enabled&&e.parallax.setTranslate()},setTransition:function(e,t){e.params.parallax.enabled&&e.parallax.setTransition(t)}}},{name:"zoom",params:{zoom:{enabled:!1,maxRatio:3,minRatio:1,toggle:!0,containerClass:"swiper-zoom-container",zoomedSlideClass:"swiper-slide-zoomed"}},create:function(){var i=this;w(i,{zoom:e({enabled:!1,scale:1,currentScale:1,isScaling:!1,gesture:{$slideEl:void 0,slideWidth:void 0,slideHeight:void 0,$imageEl:void 0,$imageWrapEl:void 0,maxRatio:3},image:{isTouched:void 0,isMoved:void 0,currentX:void 0,currentY:void 0,minX:void 0,minY:void 0,maxX:void 0,maxY:void 0,width:void 0,height:void 0,startX:void 0,startY:void 0,touchesStart:{},touchesCurrent:{}},velocity:{x:void 0,y:void 0,prevPositionX:void 0,prevPositionY:void 0,prevTime:void 0}},q)});var s=1;Object.defineProperty(i.zoom,"scale",{get:function(){return s},set:function(e){var t,a;s!==e&&(t=i.zoom.gesture.$imageEl?i.zoom.gesture.$imageEl[0]:void 0,a=i.zoom.gesture.$slideEl?i.zoom.gesture.$slideEl[0]:void 0,i.emit("zoomChange",e,t,a)),s=e}})},on:{init:function(e){e.params.zoom.enabled&&e.zoom.enable()},destroy:function(e){e.zoom.disable()},touchStart:function(e,t){e.zoom.enabled&&e.zoom.onTouchStart(t)},touchEnd:function(e,t){e.zoom.enabled&&e.zoom.onTouchEnd(t)},doubleTap:function(e,t){e.params.zoom.enabled&&e.zoom.enabled&&e.params.zoom.toggle&&e.zoom.toggle(t)},transitionEnd:function(e){e.zoom.enabled&&e.params.zoom.enabled&&e.zoom.onTransitionEnd()},slideChange:function(e){e.zoom.enabled&&e.params.zoom.enabled&&e.params.cssMode&&e.zoom.onTransitionEnd()}}},{name:"lazy",params:{lazy:{enabled:!1,loadPrevNext:!1,loadPrevNextAmount:1,loadOnTransitionStart:!1,elementClass:"swiper-lazy",loadingClass:"swiper-lazy-loading",loadedClass:"swiper-lazy-loaded",preloaderClass:"swiper-lazy-preloader"}},create:function(){w(this,{lazy:e({initialImageLoaded:!1},j)})},on:{beforeInit:function(e){e.params.lazy.enabled&&e.params.preloadImages&&(e.params.preloadImages=!1)},init:function(e){e.params.lazy.enabled&&!e.params.loop&&0===e.params.initialSlide&&e.lazy.load()},scroll:function(e){e.params.freeMode&&!e.params.freeModeSticky&&e.lazy.load()},resize:function(e){e.params.lazy.enabled&&e.lazy.load()},scrollbarDragMove:function(e){e.params.lazy.enabled&&e.lazy.load()},transitionStart:function(e){e.params.lazy.enabled&&(!e.params.lazy.loadOnTransitionStart&&(e.params.lazy.loadOnTransitionStart||e.lazy.initialImageLoaded)||e.lazy.load())},transitionEnd:function(e){e.params.lazy.enabled&&!e.params.lazy.loadOnTransitionStart&&e.lazy.load()},slideChange:function(e){e.params.lazy.enabled&&e.params.cssMode&&e.lazy.load()}}},{name:"controller",params:{controller:{control:void 0,inverse:!1,by:"slide"}},create:function(){w(this,{controller:e({control:this.params.controller.control},_)})},on:{update:function(e){e.controller.control&&e.controller.spline&&(e.controller.spline=void 0,delete e.controller.spline)},resize:function(e){e.controller.control&&e.controller.spline&&(e.controller.spline=void 0,delete e.controller.spline)},observerUpdate:function(e){e.controller.control&&e.controller.spline&&(e.controller.spline=void 0,delete e.controller.spline)},setTranslate:function(e,t,a){e.controller.control&&e.controller.setTranslate(t,a)},setTransition:function(e,t,a){e.controller.control&&e.controller.setTransition(t,a)}}},{name:"a11y",params:{a11y:{enabled:!0,notificationClass:"swiper-notification",prevSlideMessage:"Previous slide",nextSlideMessage:"Next slide",firstSlideMessage:"This is the first slide",lastSlideMessage:"This is the last slide",paginationBulletMessage:"Go to slide {{index}}",containerMessage:null,containerRoleDescriptionMessage:null,itemRoleDescriptionMessage:null}},create:function(){w(this,{a11y:e(e({},U),{},{liveRegion:I('<span class="'+this.params.a11y.notificationClass+'" aria-live="assertive" aria-atomic="true"></span>')})})},on:{init:function(e){e.params.a11y.enabled&&(e.a11y.init(),e.a11y.updateNavigation())},toEdge:function(e){e.params.a11y.enabled&&e.a11y.updateNavigation()},fromEdge:function(e){e.params.a11y.enabled&&e.a11y.updateNavigation()},paginationUpdate:function(e){e.params.a11y.enabled&&e.a11y.updatePagination()},destroy:function(e){e.params.a11y.enabled&&e.a11y.destroy()}}},{name:"history",params:{history:{enabled:!1,replaceState:!1,key:"slides"}},create:function(){w(this,{history:e({},K)})},on:{init:function(e){e.params.history.enabled&&e.history.init()},destroy:function(e){e.params.history.enabled&&e.history.destroy()},transitionEnd:function(e){e.history.initialized&&e.history.setHistory(e.params.history.key,e.activeIndex)},slideChange:function(e){e.history.initialized&&e.params.cssMode&&e.history.setHistory(e.params.history.key,e.activeIndex)}}},{name:"hash-navigation",params:{hashNavigation:{enabled:!1,replaceState:!1,watchState:!1}},create:function(){w(this,{hashNavigation:e({initialized:!1},Z)})},on:{init:function(e){e.params.hashNavigation.enabled&&e.hashNavigation.init()},destroy:function(e){e.params.hashNavigation.enabled&&e.hashNavigation.destroy()},transitionEnd:function(e){e.hashNavigation.initialized&&e.hashNavigation.setHash()},slideChange:function(e){e.hashNavigation.initialized&&e.params.cssMode&&e.hashNavigation.setHash()}}},{name:"autoplay",params:{autoplay:{enabled:!1,delay:3e3,waitForTransition:!0,disableOnInteraction:!0,stopOnLastSlide:!1,reverseDirection:!1}},create:function(){w(this,{autoplay:e(e({},J),{},{running:!1,paused:!1})})},on:{init:function(e){e.params.autoplay.enabled&&(e.autoplay.start(),E().addEventListener("visibilitychange",e.autoplay.onVisibilityChange))},beforeTransitionStart:function(e,t,a){e.autoplay.running&&(a||!e.params.autoplay.disableOnInteraction?e.autoplay.pause(t):e.autoplay.stop())},sliderFirstMove:function(e){e.autoplay.running&&(e.params.autoplay.disableOnInteraction?e.autoplay.stop():e.autoplay.pause())},touchEnd:function(e){e.params.cssMode&&e.autoplay.paused&&!e.params.autoplay.disableOnInteraction&&e.autoplay.run()},destroy:function(e){e.autoplay.running&&e.autoplay.stop(),E().removeEventListener("visibilitychange",e.autoplay.onVisibilityChange)}}},{name:"effect-fade",params:{fadeEffect:{crossFade:!1}},create:function(){w(this,{fadeEffect:e({},Q)})},on:{beforeInit:function(e){var t;"fade"===e.params.effect&&(e.classNames.push(e.params.containerModifierClass+"fade"),t={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,spaceBetween:0,virtualTranslate:!0},oe(e.params,t),oe(e.originalParams,t))},setTranslate:function(e){"fade"===e.params.effect&&e.fadeEffect.setTranslate()},setTransition:function(e,t){"fade"===e.params.effect&&e.fadeEffect.setTransition(t)}}},{name:"effect-cube",params:{cubeEffect:{slideShadows:!0,shadow:!0,shadowOffset:20,shadowScale:.94}},create:function(){w(this,{cubeEffect:e({},ee)})},on:{beforeInit:function(e){var t;"cube"===e.params.effect&&(e.classNames.push(e.params.containerModifierClass+"cube"),e.classNames.push(e.params.containerModifierClass+"3d"),t={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,resistanceRatio:0,spaceBetween:0,centeredSlides:!1,virtualTranslate:!0},oe(e.params,t),oe(e.originalParams,t))},setTranslate:function(e){"cube"===e.params.effect&&e.cubeEffect.setTranslate()},setTransition:function(e,t){"cube"===e.params.effect&&e.cubeEffect.setTransition(t)}}},{name:"effect-flip",params:{flipEffect:{slideShadows:!0,limitRotation:!0}},create:function(){w(this,{flipEffect:e({},te)})},on:{beforeInit:function(e){var t;"flip"===e.params.effect&&(e.classNames.push(e.params.containerModifierClass+"flip"),e.classNames.push(e.params.containerModifierClass+"3d"),t={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,spaceBetween:0,virtualTranslate:!0},oe(e.params,t),oe(e.originalParams,t))},setTranslate:function(e){"flip"===e.params.effect&&e.flipEffect.setTranslate()},setTransition:function(e,t){"flip"===e.params.effect&&e.flipEffect.setTransition(t)}}},{name:"effect-coverflow",params:{coverflowEffect:{rotate:50,stretch:0,depth:100,scale:1,modifier:1,slideShadows:!0}},create:function(){w(this,{coverflowEffect:e({},ae)})},on:{beforeInit:function(e){"coverflow"===e.params.effect&&(e.classNames.push(e.params.containerModifierClass+"coverflow"),e.classNames.push(e.params.containerModifierClass+"3d"),e.params.watchSlidesProgress=!0,e.originalParams.watchSlidesProgress=!0)},setTranslate:function(e){"coverflow"===e.params.effect&&e.coverflowEffect.setTranslate()},setTransition:function(e,t){"coverflow"===e.params.effect&&e.coverflowEffect.setTransition(t)}}},{name:"thumbs",params:{thumbs:{swiper:null,multipleActiveThumbs:!0,autoScrollOffset:0,slideThumbActiveClass:"swiper-slide-thumb-active",thumbsContainerClass:"swiper-container-thumbs"}},create:function(){w(this,{thumbs:e({swiper:null,initialized:!1},ie)})},on:{beforeInit:function(e){var t=e.params.thumbs;t&&t.swiper&&(e.thumbs.init(),e.thumbs.update(!0))},slideChange:function(e){e.thumbs.swiper&&e.thumbs.update()},update:function(e){e.thumbs.swiper&&e.thumbs.update()},resize:function(e){e.thumbs.swiper&&e.thumbs.update()},observerUpdate:function(e){e.thumbs.swiper&&e.thumbs.update()},setTransition:function(e,t){var a=e.thumbs.swiper;a&&a.setTransition(t)},beforeDestroy:function(e){var t=e.thumbs.swiper;t&&e.thumbs.swiperCreated&&t&&t.destroy()}}}];return G.use(se),G});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3dpcGVyLWJ1bmRsZS5qcyIsInNvdXJjZXMiOlsic3dpcGVyLWJ1bmRsZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFN3aXBlciA2LjMuMFxuICogTW9zdCBtb2Rlcm4gbW9iaWxlIHRvdWNoIHNsaWRlciBhbmQgZnJhbWV3b3JrIHdpdGggaGFyZHdhcmUgYWNjZWxlcmF0ZWQgdHJhbnNpdGlvbnNcbiAqIGh0dHA6Ly9zd2lwZXJqcy5jb21cbiAqXG4gKiBDb3B5cmlnaHQgMjAxNC0yMDIwIFZsYWRpbWlyIEtoYXJsYW1waWRpXG4gKlxuICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlXG4gKlxuICogUmVsZWFzZWQgb246IFNlcHRlbWJlciAyNSwgMjAyMFxuICovXG5cbihmdW5jdGlvbiAoZ2xvYmFsLCBmYWN0b3J5KSB7XG4gIHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyA/IG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpIDpcbiAgdHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kID8gZGVmaW5lKGZhY3RvcnkpIDpcbiAgKGdsb2JhbCA9IGdsb2JhbCB8fCBzZWxmLCBnbG9iYWwuU3dpcGVyID0gZmFjdG9yeSgpKTtcbn0odGhpcywgKGZ1bmN0aW9uICgpIHsgJ3VzZSBzdHJpY3QnO1xuXG4gIGZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldO1xuICAgICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlO1xuICAgICAgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlO1xuICAgICAgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTtcbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7XG4gICAgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7XG4gICAgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpO1xuICAgIHJldHVybiBDb25zdHJ1Y3RvcjtcbiAgfVxuXG4gIGZ1bmN0aW9uIF9leHRlbmRzKCkge1xuICAgIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7XG4gICAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldO1xuXG4gICAgICAgIGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHtcbiAgICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkge1xuICAgICAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRhcmdldDtcbiAgICB9O1xuXG4gICAgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gIH1cblxuICAvKipcbiAgICogU1NSIFdpbmRvdyAzLjAuMC1hbHBoYS40XG4gICAqIEJldHRlciBoYW5kbGluZyBmb3Igd2luZG93IG9iamVjdCBpbiBTU1IgZW52aXJvbm1lbnRcbiAgICogaHR0cHM6Ly9naXRodWIuY29tL25vbGltaXRzNHdlYi9zc3Itd2luZG93XG4gICAqXG4gICAqIENvcHlyaWdodCAyMDIwLCBWbGFkaW1pciBLaGFybGFtcGlkaVxuICAgKlxuICAgKiBMaWNlbnNlZCB1bmRlciBNSVRcbiAgICpcbiAgICogUmVsZWFzZWQgb246IE1heSAyMCwgMjAyMFxuICAgKi9cblxuICAvKiBlc2xpbnQtZGlzYWJsZSBuby1wYXJhbS1yZWFzc2lnbiAqL1xuICBmdW5jdGlvbiBpc09iamVjdChvYmopIHtcbiAgICByZXR1cm4gb2JqICE9PSBudWxsICYmIHR5cGVvZiBvYmogPT09ICdvYmplY3QnICYmICdjb25zdHJ1Y3RvcicgaW4gb2JqICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gT2JqZWN0O1xuICB9XG5cbiAgZnVuY3Rpb24gZXh0ZW5kKHRhcmdldCwgc3JjKSB7XG4gICAgaWYgKHRhcmdldCA9PT0gdm9pZCAwKSB7XG4gICAgICB0YXJnZXQgPSB7fTtcbiAgICB9XG5cbiAgICBpZiAoc3JjID09PSB2b2lkIDApIHtcbiAgICAgIHNyYyA9IHt9O1xuICAgIH1cblxuICAgIE9iamVjdC5rZXlzKHNyYykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICBpZiAodHlwZW9mIHRhcmdldFtrZXldID09PSAndW5kZWZpbmVkJykgdGFyZ2V0W2tleV0gPSBzcmNba2V5XTtlbHNlIGlmIChpc09iamVjdChzcmNba2V5XSkgJiYgaXNPYmplY3QodGFyZ2V0W2tleV0pICYmIE9iamVjdC5rZXlzKHNyY1trZXldKS5sZW5ndGggPiAwKSB7XG4gICAgICAgIGV4dGVuZCh0YXJnZXRba2V5XSwgc3JjW2tleV0pO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgdmFyIHNzckRvY3VtZW50ID0ge1xuICAgIGJvZHk6IHt9LFxuICAgIGFkZEV2ZW50TGlzdGVuZXI6IGZ1bmN0aW9uIGFkZEV2ZW50TGlzdGVuZXIoKSB7fSxcbiAgICByZW1vdmVFdmVudExpc3RlbmVyOiBmdW5jdGlvbiByZW1vdmVFdmVudExpc3RlbmVyKCkge30sXG4gICAgYWN0aXZlRWxlbWVudDoge1xuICAgICAgYmx1cjogZnVuY3Rpb24gYmx1cigpIHt9LFxuICAgICAgbm9kZU5hbWU6ICcnXG4gICAgfSxcbiAgICBxdWVyeVNlbGVjdG9yOiBmdW5jdGlvbiBxdWVyeVNlbGVjdG9yKCkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfSxcbiAgICBxdWVyeVNlbGVjdG9yQWxsOiBmdW5jdGlvbiBxdWVyeVNlbGVjdG9yQWxsKCkge1xuICAgICAgcmV0dXJuIFtdO1xuICAgIH0sXG4gICAgZ2V0RWxlbWVudEJ5SWQ6IGZ1bmN0aW9uIGdldEVsZW1lbnRCeUlkKCkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfSxcbiAgICBjcmVhdGVFdmVudDogZnVuY3Rpb24gY3JlYXRlRXZlbnQoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBpbml0RXZlbnQ6IGZ1bmN0aW9uIGluaXRFdmVudCgpIHt9XG4gICAgICB9O1xuICAgIH0sXG4gICAgY3JlYXRlRWxlbWVudDogZnVuY3Rpb24gY3JlYXRlRWxlbWVudCgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGNoaWxkcmVuOiBbXSxcbiAgICAgICAgY2hpbGROb2RlczogW10sXG4gICAgICAgIHN0eWxlOiB7fSxcbiAgICAgICAgc2V0QXR0cmlidXRlOiBmdW5jdGlvbiBzZXRBdHRyaWJ1dGUoKSB7fSxcbiAgICAgICAgZ2V0RWxlbWVudHNCeVRhZ05hbWU6IGZ1bmN0aW9uIGdldEVsZW1lbnRzQnlUYWdOYW1lKCkge1xuICAgICAgICAgIHJldHVybiBbXTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9LFxuICAgIGNyZWF0ZUVsZW1lbnROUzogZnVuY3Rpb24gY3JlYXRlRWxlbWVudE5TKCkge1xuICAgICAgcmV0dXJuIHt9O1xuICAgIH0sXG4gICAgaW1wb3J0Tm9kZTogZnVuY3Rpb24gaW1wb3J0Tm9kZSgpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH0sXG4gICAgbG9jYXRpb246IHtcbiAgICAgIGhhc2g6ICcnLFxuICAgICAgaG9zdDogJycsXG4gICAgICBob3N0bmFtZTogJycsXG4gICAgICBocmVmOiAnJyxcbiAgICAgIG9yaWdpbjogJycsXG4gICAgICBwYXRobmFtZTogJycsXG4gICAgICBwcm90b2NvbDogJycsXG4gICAgICBzZWFyY2g6ICcnXG4gICAgfVxuICB9O1xuXG4gIGZ1bmN0aW9uIGdldERvY3VtZW50KCkge1xuICAgIHZhciBkb2MgPSB0eXBlb2YgZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnID8gZG9jdW1lbnQgOiB7fTtcbiAgICBleHRlbmQoZG9jLCBzc3JEb2N1bWVudCk7XG4gICAgcmV0dXJuIGRvYztcbiAgfVxuXG4gIHZhciBzc3JXaW5kb3cgPSB7XG4gICAgZG9jdW1lbnQ6IHNzckRvY3VtZW50LFxuICAgIG5hdmlnYXRvcjoge1xuICAgICAgdXNlckFnZW50OiAnJ1xuICAgIH0sXG4gICAgbG9jYXRpb246IHtcbiAgICAgIGhhc2g6ICcnLFxuICAgICAgaG9zdDogJycsXG4gICAgICBob3N0bmFtZTogJycsXG4gICAgICBocmVmOiAnJyxcbiAgICAgIG9yaWdpbjogJycsXG4gICAgICBwYXRobmFtZTogJycsXG4gICAgICBwcm90b2NvbDogJycsXG4gICAgICBzZWFyY2g6ICcnXG4gICAgfSxcbiAgICBoaXN0b3J5OiB7XG4gICAgICByZXBsYWNlU3RhdGU6IGZ1bmN0aW9uIHJlcGxhY2VTdGF0ZSgpIHt9LFxuICAgICAgcHVzaFN0YXRlOiBmdW5jdGlvbiBwdXNoU3RhdGUoKSB7fSxcbiAgICAgIGdvOiBmdW5jdGlvbiBnbygpIHt9LFxuICAgICAgYmFjazogZnVuY3Rpb24gYmFjaygpIHt9XG4gICAgfSxcbiAgICBDdXN0b21FdmVudDogZnVuY3Rpb24gQ3VzdG9tRXZlbnQoKSB7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9LFxuICAgIGFkZEV2ZW50TGlzdGVuZXI6IGZ1bmN0aW9uIGFkZEV2ZW50TGlzdGVuZXIoKSB7fSxcbiAgICByZW1vdmVFdmVudExpc3RlbmVyOiBmdW5jdGlvbiByZW1vdmVFdmVudExpc3RlbmVyKCkge30sXG4gICAgZ2V0Q29tcHV0ZWRTdHlsZTogZnVuY3Rpb24gZ2V0Q29tcHV0ZWRTdHlsZSgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGdldFByb3BlcnR5VmFsdWU6IGZ1bmN0aW9uIGdldFByb3BlcnR5VmFsdWUoKSB7XG4gICAgICAgICAgcmV0dXJuICcnO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH0sXG4gICAgSW1hZ2U6IGZ1bmN0aW9uIEltYWdlKCkge30sXG4gICAgRGF0ZTogZnVuY3Rpb24gRGF0ZSgpIHt9LFxuICAgIHNjcmVlbjoge30sXG4gICAgc2V0VGltZW91dDogZnVuY3Rpb24gc2V0VGltZW91dCgpIHt9LFxuICAgIGNsZWFyVGltZW91dDogZnVuY3Rpb24gY2xlYXJUaW1lb3V0KCkge30sXG4gICAgbWF0Y2hNZWRpYTogZnVuY3Rpb24gbWF0Y2hNZWRpYSgpIHtcbiAgICAgIHJldHVybiB7fTtcbiAgICB9LFxuICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZTogZnVuY3Rpb24gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGNhbGxiYWNrKSB7XG4gICAgICBpZiAodHlwZW9mIHNldFRpbWVvdXQgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gc2V0VGltZW91dChjYWxsYmFjaywgMCk7XG4gICAgfSxcbiAgICBjYW5jZWxBbmltYXRpb25GcmFtZTogZnVuY3Rpb24gY2FuY2VsQW5pbWF0aW9uRnJhbWUoaWQpIHtcbiAgICAgIGlmICh0eXBlb2Ygc2V0VGltZW91dCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBjbGVhclRpbWVvdXQoaWQpO1xuICAgIH1cbiAgfTtcblxuICBmdW5jdGlvbiBnZXRXaW5kb3coKSB7XG4gICAgdmFyIHdpbiA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnID8gd2luZG93IDoge307XG4gICAgZXh0ZW5kKHdpbiwgc3NyV2luZG93KTtcbiAgICByZXR1cm4gd2luO1xuICB9XG5cbiAgLyoqXG4gICAqIERvbTcgMy4wLjAtYWxwaGEuN1xuICAgKiBNaW5pbWFsaXN0aWMgSmF2YVNjcmlwdCBsaWJyYXJ5IGZvciBET00gbWFuaXB1bGF0aW9uLCB3aXRoIGEgalF1ZXJ5LWNvbXBhdGlibGUgQVBJXG4gICAqIGh0dHBzOi8vZnJhbWV3b3JrNy5pby9kb2NzL2RvbTcuaHRtbFxuICAgKlxuICAgKiBDb3B5cmlnaHQgMjAyMCwgVmxhZGltaXIgS2hhcmxhbXBpZGlcbiAgICpcbiAgICogTGljZW5zZWQgdW5kZXIgTUlUXG4gICAqXG4gICAqIFJlbGVhc2VkIG9uOiBKdWx5IDE0LCAyMDIwXG4gICAqL1xuXG4gIGZ1bmN0aW9uIF9pbmhlcml0c0xvb3NlKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7XG4gICAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzLnByb3RvdHlwZSk7XG4gICAgc3ViQ2xhc3MucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gc3ViQ2xhc3M7XG4gICAgc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzcztcbiAgfVxuXG4gIGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7XG4gICAgX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mIDogZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHtcbiAgICAgIHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7XG4gICAgfTtcbiAgICByZXR1cm4gX2dldFByb3RvdHlwZU9mKG8pO1xuICB9XG5cbiAgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgICBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgICAgIG8uX19wcm90b19fID0gcDtcbiAgICAgIHJldHVybiBvO1xuICAgIH07XG5cbiAgICByZXR1cm4gX3NldFByb3RvdHlwZU9mKG8sIHApO1xuICB9XG5cbiAgZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHtcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwidW5kZWZpbmVkXCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTtcbiAgICBpZiAodHlwZW9mIFByb3h5ID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiB0cnVlO1xuXG4gICAgdHJ5IHtcbiAgICAgIERhdGUucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoRGF0ZSwgW10sIGZ1bmN0aW9uICgpIHt9KSk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gX2NvbnN0cnVjdChQYXJlbnQsIGFyZ3MsIENsYXNzKSB7XG4gICAgaWYgKF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSkge1xuICAgICAgX2NvbnN0cnVjdCA9IFJlZmxlY3QuY29uc3RydWN0O1xuICAgIH0gZWxzZSB7XG4gICAgICBfY29uc3RydWN0ID0gZnVuY3Rpb24gX2NvbnN0cnVjdChQYXJlbnQsIGFyZ3MsIENsYXNzKSB7XG4gICAgICAgIHZhciBhID0gW251bGxdO1xuICAgICAgICBhLnB1c2guYXBwbHkoYSwgYXJncyk7XG4gICAgICAgIHZhciBDb25zdHJ1Y3RvciA9IEZ1bmN0aW9uLmJpbmQuYXBwbHkoUGFyZW50LCBhKTtcbiAgICAgICAgdmFyIGluc3RhbmNlID0gbmV3IENvbnN0cnVjdG9yKCk7XG4gICAgICAgIGlmIChDbGFzcykgX3NldFByb3RvdHlwZU9mKGluc3RhbmNlLCBDbGFzcy5wcm90b3R5cGUpO1xuICAgICAgICByZXR1cm4gaW5zdGFuY2U7XG4gICAgICB9O1xuICAgIH1cblxuICAgIHJldHVybiBfY29uc3RydWN0LmFwcGx5KG51bGwsIGFyZ3VtZW50cyk7XG4gIH1cblxuICBmdW5jdGlvbiBfaXNOYXRpdmVGdW5jdGlvbihmbikge1xuICAgIHJldHVybiBGdW5jdGlvbi50b1N0cmluZy5jYWxsKGZuKS5pbmRleE9mKFwiW25hdGl2ZSBjb2RlXVwiKSAhPT0gLTE7XG4gIH1cblxuICBmdW5jdGlvbiBfd3JhcE5hdGl2ZVN1cGVyKENsYXNzKSB7XG4gICAgdmFyIF9jYWNoZSA9IHR5cGVvZiBNYXAgPT09IFwiZnVuY3Rpb25cIiA/IG5ldyBNYXAoKSA6IHVuZGVmaW5lZDtcblxuICAgIF93cmFwTmF0aXZlU3VwZXIgPSBmdW5jdGlvbiBfd3JhcE5hdGl2ZVN1cGVyKENsYXNzKSB7XG4gICAgICBpZiAoQ2xhc3MgPT09IG51bGwgfHwgIV9pc05hdGl2ZUZ1bmN0aW9uKENsYXNzKSkgcmV0dXJuIENsYXNzO1xuXG4gICAgICBpZiAodHlwZW9mIENsYXNzICE9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIF9jYWNoZSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAoX2NhY2hlLmhhcyhDbGFzcykpIHJldHVybiBfY2FjaGUuZ2V0KENsYXNzKTtcblxuICAgICAgICBfY2FjaGUuc2V0KENsYXNzLCBXcmFwcGVyKTtcbiAgICAgIH1cblxuICAgICAgZnVuY3Rpb24gV3JhcHBlcigpIHtcbiAgICAgICAgcmV0dXJuIF9jb25zdHJ1Y3QoQ2xhc3MsIGFyZ3VtZW50cywgX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yKTtcbiAgICAgIH1cblxuICAgICAgV3JhcHBlci5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKENsYXNzLnByb3RvdHlwZSwge1xuICAgICAgICBjb25zdHJ1Y3Rvcjoge1xuICAgICAgICAgIHZhbHVlOiBXcmFwcGVyLFxuICAgICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBfc2V0UHJvdG90eXBlT2YoV3JhcHBlciwgQ2xhc3MpO1xuICAgIH07XG5cbiAgICByZXR1cm4gX3dyYXBOYXRpdmVTdXBlcihDbGFzcyk7XG4gIH1cblxuICBmdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHtcbiAgICBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7XG4gICAgICB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7XG4gICAgfVxuXG4gICAgcmV0dXJuIHNlbGY7XG4gIH1cbiAgLyogZXNsaW50LWRpc2FibGUgbm8tcHJvdG8gKi9cblxuXG4gIGZ1bmN0aW9uIG1ha2VSZWFjdGl2ZShvYmopIHtcbiAgICB2YXIgcHJvdG8gPSBvYmouX19wcm90b19fO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosICdfX3Byb3RvX18nLCB7XG4gICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgcmV0dXJuIHByb3RvO1xuICAgICAgfSxcbiAgICAgIHNldDogZnVuY3Rpb24gc2V0KHZhbHVlKSB7XG4gICAgICAgIHByb3RvLl9fcHJvdG9fXyA9IHZhbHVlO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgdmFyIERvbTcgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9BcnJheSkge1xuICAgIF9pbmhlcml0c0xvb3NlKERvbTcsIF9BcnJheSk7XG5cbiAgICBmdW5jdGlvbiBEb203KGl0ZW1zKSB7XG4gICAgICB2YXIgX3RoaXM7XG5cbiAgICAgIF90aGlzID0gX0FycmF5LmNhbGwuYXBwbHkoX0FycmF5LCBbdGhpc10uY29uY2F0KGl0ZW1zKSkgfHwgdGhpcztcbiAgICAgIG1ha2VSZWFjdGl2ZShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSk7XG4gICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuXG4gICAgcmV0dXJuIERvbTc7XG4gIH0oIC8qI19fUFVSRV9fKi9fd3JhcE5hdGl2ZVN1cGVyKEFycmF5KSk7XG5cbiAgZnVuY3Rpb24gYXJyYXlGbGF0KGFycikge1xuICAgIGlmIChhcnIgPT09IHZvaWQgMCkge1xuICAgICAgYXJyID0gW107XG4gICAgfVxuXG4gICAgdmFyIHJlcyA9IFtdO1xuICAgIGFyci5mb3JFYWNoKGZ1bmN0aW9uIChlbCkge1xuICAgICAgaWYgKEFycmF5LmlzQXJyYXkoZWwpKSB7XG4gICAgICAgIHJlcy5wdXNoLmFwcGx5KHJlcywgYXJyYXlGbGF0KGVsKSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXMucHVzaChlbCk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIHJlcztcbiAgfVxuXG4gIGZ1bmN0aW9uIGFycmF5RmlsdGVyKGFyciwgY2FsbGJhY2spIHtcbiAgICByZXR1cm4gQXJyYXkucHJvdG90eXBlLmZpbHRlci5jYWxsKGFyciwgY2FsbGJhY2spO1xuICB9XG5cbiAgZnVuY3Rpb24gYXJyYXlVbmlxdWUoYXJyKSB7XG4gICAgdmFyIHVuaXF1ZUFycmF5ID0gW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyci5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgaWYgKHVuaXF1ZUFycmF5LmluZGV4T2YoYXJyW2ldKSA9PT0gLTEpIHVuaXF1ZUFycmF5LnB1c2goYXJyW2ldKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdW5pcXVlQXJyYXk7XG4gIH1cblxuICBmdW5jdGlvbiBxc2Eoc2VsZWN0b3IsIGNvbnRleHQpIHtcbiAgICBpZiAodHlwZW9mIHNlbGVjdG9yICE9PSAnc3RyaW5nJykge1xuICAgICAgcmV0dXJuIFtzZWxlY3Rvcl07XG4gICAgfVxuXG4gICAgdmFyIGEgPSBbXTtcbiAgICB2YXIgcmVzID0gY29udGV4dC5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yKTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcmVzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICBhLnB1c2gocmVzW2ldKTtcbiAgICB9XG5cbiAgICByZXR1cm4gYTtcbiAgfVxuXG4gIGZ1bmN0aW9uICQoc2VsZWN0b3IsIGNvbnRleHQpIHtcbiAgICB2YXIgd2luZG93ID0gZ2V0V2luZG93KCk7XG4gICAgdmFyIGRvY3VtZW50ID0gZ2V0RG9jdW1lbnQoKTtcbiAgICB2YXIgYXJyID0gW107XG5cbiAgICBpZiAoIWNvbnRleHQgJiYgc2VsZWN0b3IgaW5zdGFuY2VvZiBEb203KSB7XG4gICAgICByZXR1cm4gc2VsZWN0b3I7XG4gICAgfVxuXG4gICAgaWYgKCFzZWxlY3Rvcikge1xuICAgICAgcmV0dXJuIG5ldyBEb203KGFycik7XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBzZWxlY3RvciA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHZhciBodG1sID0gc2VsZWN0b3IudHJpbSgpO1xuXG4gICAgICBpZiAoaHRtbC5pbmRleE9mKCc8JykgPj0gMCAmJiBodG1sLmluZGV4T2YoJz4nKSA+PSAwKSB7XG4gICAgICAgIHZhciB0b0NyZWF0ZSA9ICdkaXYnO1xuICAgICAgICBpZiAoaHRtbC5pbmRleE9mKCc8bGknKSA9PT0gMCkgdG9DcmVhdGUgPSAndWwnO1xuICAgICAgICBpZiAoaHRtbC5pbmRleE9mKCc8dHInKSA9PT0gMCkgdG9DcmVhdGUgPSAndGJvZHknO1xuICAgICAgICBpZiAoaHRtbC5pbmRleE9mKCc8dGQnKSA9PT0gMCB8fCBodG1sLmluZGV4T2YoJzx0aCcpID09PSAwKSB0b0NyZWF0ZSA9ICd0cic7XG4gICAgICAgIGlmIChodG1sLmluZGV4T2YoJzx0Ym9keScpID09PSAwKSB0b0NyZWF0ZSA9ICd0YWJsZSc7XG4gICAgICAgIGlmIChodG1sLmluZGV4T2YoJzxvcHRpb24nKSA9PT0gMCkgdG9DcmVhdGUgPSAnc2VsZWN0JztcbiAgICAgICAgdmFyIHRlbXBQYXJlbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KHRvQ3JlYXRlKTtcbiAgICAgICAgdGVtcFBhcmVudC5pbm5lckhUTUwgPSBodG1sO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGVtcFBhcmVudC5jaGlsZE5vZGVzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgICAgYXJyLnB1c2godGVtcFBhcmVudC5jaGlsZE5vZGVzW2ldKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgYXJyID0gcXNhKHNlbGVjdG9yLnRyaW0oKSwgY29udGV4dCB8fCBkb2N1bWVudCk7XG4gICAgICB9IC8vIGFyciA9IHFzYShzZWxlY3RvciwgZG9jdW1lbnQpO1xuXG4gICAgfSBlbHNlIGlmIChzZWxlY3Rvci5ub2RlVHlwZSB8fCBzZWxlY3RvciA9PT0gd2luZG93IHx8IHNlbGVjdG9yID09PSBkb2N1bWVudCkge1xuICAgICAgYXJyLnB1c2goc2VsZWN0b3IpO1xuICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShzZWxlY3RvcikpIHtcbiAgICAgIGlmIChzZWxlY3RvciBpbnN0YW5jZW9mIERvbTcpIHJldHVybiBzZWxlY3RvcjtcbiAgICAgIGFyciA9IHNlbGVjdG9yO1xuICAgIH1cblxuICAgIHJldHVybiBuZXcgRG9tNyhhcnJheVVuaXF1ZShhcnIpKTtcbiAgfVxuXG4gICQuZm4gPSBEb203LnByb3RvdHlwZTtcblxuICBmdW5jdGlvbiBhZGRDbGFzcygpIHtcbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgY2xhc3NlcyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGNsYXNzZXNbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgdmFyIGNsYXNzTmFtZXMgPSBhcnJheUZsYXQoY2xhc3Nlcy5tYXAoZnVuY3Rpb24gKGMpIHtcbiAgICAgIHJldHVybiBjLnNwbGl0KCcgJyk7XG4gICAgfSkpO1xuICAgIHRoaXMuZm9yRWFjaChmdW5jdGlvbiAoZWwpIHtcbiAgICAgIHZhciBfZWwkY2xhc3NMaXN0O1xuXG4gICAgICAoX2VsJGNsYXNzTGlzdCA9IGVsLmNsYXNzTGlzdCkuYWRkLmFwcGx5KF9lbCRjbGFzc0xpc3QsIGNsYXNzTmFtZXMpO1xuICAgIH0pO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVtb3ZlQ2xhc3MoKSB7XG4gICAgZm9yICh2YXIgX2xlbjIgPSBhcmd1bWVudHMubGVuZ3RoLCBjbGFzc2VzID0gbmV3IEFycmF5KF9sZW4yKSwgX2tleTIgPSAwOyBfa2V5MiA8IF9sZW4yOyBfa2V5MisrKSB7XG4gICAgICBjbGFzc2VzW19rZXkyXSA9IGFyZ3VtZW50c1tfa2V5Ml07XG4gICAgfVxuXG4gICAgdmFyIGNsYXNzTmFtZXMgPSBhcnJheUZsYXQoY2xhc3Nlcy5tYXAoZnVuY3Rpb24gKGMpIHtcbiAgICAgIHJldHVybiBjLnNwbGl0KCcgJyk7XG4gICAgfSkpO1xuICAgIHRoaXMuZm9yRWFjaChmdW5jdGlvbiAoZWwpIHtcbiAgICAgIHZhciBfZWwkY2xhc3NMaXN0MjtcblxuICAgICAgKF9lbCRjbGFzc0xpc3QyID0gZWwuY2xhc3NMaXN0KS5yZW1vdmUuYXBwbHkoX2VsJGNsYXNzTGlzdDIsIGNsYXNzTmFtZXMpO1xuICAgIH0pO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgZnVuY3Rpb24gdG9nZ2xlQ2xhc3MoKSB7XG4gICAgZm9yICh2YXIgX2xlbjMgPSBhcmd1bWVudHMubGVuZ3RoLCBjbGFzc2VzID0gbmV3IEFycmF5KF9sZW4zKSwgX2tleTMgPSAwOyBfa2V5MyA8IF9sZW4zOyBfa2V5MysrKSB7XG4gICAgICBjbGFzc2VzW19rZXkzXSA9IGFyZ3VtZW50c1tfa2V5M107XG4gICAgfVxuXG4gICAgdmFyIGNsYXNzTmFtZXMgPSBhcnJheUZsYXQoY2xhc3Nlcy5tYXAoZnVuY3Rpb24gKGMpIHtcbiAgICAgIHJldHVybiBjLnNwbGl0KCcgJyk7XG4gICAgfSkpO1xuICAgIHRoaXMuZm9yRWFjaChmdW5jdGlvbiAoZWwpIHtcbiAgICAgIGNsYXNzTmFtZXMuZm9yRWFjaChmdW5jdGlvbiAoY2xhc3NOYW1lKSB7XG4gICAgICAgIGVsLmNsYXNzTGlzdC50b2dnbGUoY2xhc3NOYW1lKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFzQ2xhc3MoKSB7XG4gICAgZm9yICh2YXIgX2xlbjQgPSBhcmd1bWVudHMubGVuZ3RoLCBjbGFzc2VzID0gbmV3IEFycmF5KF9sZW40KSwgX2tleTQgPSAwOyBfa2V5NCA8IF9sZW40OyBfa2V5NCsrKSB7XG4gICAgICBjbGFzc2VzW19rZXk0XSA9IGFyZ3VtZW50c1tfa2V5NF07XG4gICAgfVxuXG4gICAgdmFyIGNsYXNzTmFtZXMgPSBhcnJheUZsYXQoY2xhc3Nlcy5tYXAoZnVuY3Rpb24gKGMpIHtcbiAgICAgIHJldHVybiBjLnNwbGl0KCcgJyk7XG4gICAgfSkpO1xuICAgIHJldHVybiBhcnJheUZpbHRlcih0aGlzLCBmdW5jdGlvbiAoZWwpIHtcbiAgICAgIHJldHVybiBjbGFzc05hbWVzLmZpbHRlcihmdW5jdGlvbiAoY2xhc3NOYW1lKSB7XG4gICAgICAgIHJldHVybiBlbC5jbGFzc0xpc3QuY29udGFpbnMoY2xhc3NOYW1lKTtcbiAgICAgIH0pLmxlbmd0aCA+IDA7XG4gICAgfSkubGVuZ3RoID4gMDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGF0dHIoYXR0cnMsIHZhbHVlKSB7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDEgJiYgdHlwZW9mIGF0dHJzID09PSAnc3RyaW5nJykge1xuICAgICAgLy8gR2V0IGF0dHJcbiAgICAgIGlmICh0aGlzWzBdKSByZXR1cm4gdGhpc1swXS5nZXRBdHRyaWJ1dGUoYXR0cnMpO1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9IC8vIFNldCBhdHRyc1xuXG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAyKSB7XG4gICAgICAgIC8vIFN0cmluZ1xuICAgICAgICB0aGlzW2ldLnNldEF0dHJpYnV0ZShhdHRycywgdmFsdWUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gT2JqZWN0XG4gICAgICAgIGZvciAodmFyIGF0dHJOYW1lIGluIGF0dHJzKSB7XG4gICAgICAgICAgdGhpc1tpXVthdHRyTmFtZV0gPSBhdHRyc1thdHRyTmFtZV07XG4gICAgICAgICAgdGhpc1tpXS5zZXRBdHRyaWJ1dGUoYXR0ck5hbWUsIGF0dHJzW2F0dHJOYW1lXSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlbW92ZUF0dHIoYXR0cikge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgdGhpc1tpXS5yZW1vdmVBdHRyaWJ1dGUoYXR0cik7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBmdW5jdGlvbiB0cmFuc2Zvcm0odHJhbnNmb3JtKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICB0aGlzW2ldLnN0eWxlLnRyYW5zZm9ybSA9IHRyYW5zZm9ybTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIGZ1bmN0aW9uIHRyYW5zaXRpb24oZHVyYXRpb24pIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIHRoaXNbaV0uc3R5bGUudHJhbnNpdGlvbiA9IHR5cGVvZiBkdXJhdGlvbiAhPT0gJ3N0cmluZycgPyBkdXJhdGlvbiArIFwibXNcIiA6IGR1cmF0aW9uO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgZnVuY3Rpb24gb24oKSB7XG4gICAgZm9yICh2YXIgX2xlbjUgPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW41KSwgX2tleTUgPSAwOyBfa2V5NSA8IF9sZW41OyBfa2V5NSsrKSB7XG4gICAgICBhcmdzW19rZXk1XSA9IGFyZ3VtZW50c1tfa2V5NV07XG4gICAgfVxuXG4gICAgdmFyIGV2ZW50VHlwZSA9IGFyZ3NbMF0sXG4gICAgICAgIHRhcmdldFNlbGVjdG9yID0gYXJnc1sxXSxcbiAgICAgICAgbGlzdGVuZXIgPSBhcmdzWzJdLFxuICAgICAgICBjYXB0dXJlID0gYXJnc1szXTtcblxuICAgIGlmICh0eXBlb2YgYXJnc1sxXSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgZXZlbnRUeXBlID0gYXJnc1swXTtcbiAgICAgIGxpc3RlbmVyID0gYXJnc1sxXTtcbiAgICAgIGNhcHR1cmUgPSBhcmdzWzJdO1xuICAgICAgdGFyZ2V0U2VsZWN0b3IgPSB1bmRlZmluZWQ7XG4gICAgfVxuXG4gICAgaWYgKCFjYXB0dXJlKSBjYXB0dXJlID0gZmFsc2U7XG5cbiAgICBmdW5jdGlvbiBoYW5kbGVMaXZlRXZlbnQoZSkge1xuICAgICAgdmFyIHRhcmdldCA9IGUudGFyZ2V0O1xuICAgICAgaWYgKCF0YXJnZXQpIHJldHVybjtcbiAgICAgIHZhciBldmVudERhdGEgPSBlLnRhcmdldC5kb203RXZlbnREYXRhIHx8IFtdO1xuXG4gICAgICBpZiAoZXZlbnREYXRhLmluZGV4T2YoZSkgPCAwKSB7XG4gICAgICAgIGV2ZW50RGF0YS51bnNoaWZ0KGUpO1xuICAgICAgfVxuXG4gICAgICBpZiAoJCh0YXJnZXQpLmlzKHRhcmdldFNlbGVjdG9yKSkgbGlzdGVuZXIuYXBwbHkodGFyZ2V0LCBldmVudERhdGEpO2Vsc2Uge1xuICAgICAgICB2YXIgX3BhcmVudHMgPSAkKHRhcmdldCkucGFyZW50cygpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG5cblxuICAgICAgICBmb3IgKHZhciBrID0gMDsgayA8IF9wYXJlbnRzLmxlbmd0aDsgayArPSAxKSB7XG4gICAgICAgICAgaWYgKCQoX3BhcmVudHNba10pLmlzKHRhcmdldFNlbGVjdG9yKSkgbGlzdGVuZXIuYXBwbHkoX3BhcmVudHNba10sIGV2ZW50RGF0YSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBoYW5kbGVFdmVudChlKSB7XG4gICAgICB2YXIgZXZlbnREYXRhID0gZSAmJiBlLnRhcmdldCA/IGUudGFyZ2V0LmRvbTdFdmVudERhdGEgfHwgW10gOiBbXTtcblxuICAgICAgaWYgKGV2ZW50RGF0YS5pbmRleE9mKGUpIDwgMCkge1xuICAgICAgICBldmVudERhdGEudW5zaGlmdChlKTtcbiAgICAgIH1cblxuICAgICAgbGlzdGVuZXIuYXBwbHkodGhpcywgZXZlbnREYXRhKTtcbiAgICB9XG5cbiAgICB2YXIgZXZlbnRzID0gZXZlbnRUeXBlLnNwbGl0KCcgJyk7XG4gICAgdmFyIGo7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIHZhciBlbCA9IHRoaXNbaV07XG5cbiAgICAgIGlmICghdGFyZ2V0U2VsZWN0b3IpIHtcbiAgICAgICAgZm9yIChqID0gMDsgaiA8IGV2ZW50cy5sZW5ndGg7IGogKz0gMSkge1xuICAgICAgICAgIHZhciBldmVudCA9IGV2ZW50c1tqXTtcbiAgICAgICAgICBpZiAoIWVsLmRvbTdMaXN0ZW5lcnMpIGVsLmRvbTdMaXN0ZW5lcnMgPSB7fTtcbiAgICAgICAgICBpZiAoIWVsLmRvbTdMaXN0ZW5lcnNbZXZlbnRdKSBlbC5kb203TGlzdGVuZXJzW2V2ZW50XSA9IFtdO1xuICAgICAgICAgIGVsLmRvbTdMaXN0ZW5lcnNbZXZlbnRdLnB1c2goe1xuICAgICAgICAgICAgbGlzdGVuZXI6IGxpc3RlbmVyLFxuICAgICAgICAgICAgcHJveHlMaXN0ZW5lcjogaGFuZGxlRXZlbnRcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBlbC5hZGRFdmVudExpc3RlbmVyKGV2ZW50LCBoYW5kbGVFdmVudCwgY2FwdHVyZSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIExpdmUgZXZlbnRzXG4gICAgICAgIGZvciAoaiA9IDA7IGogPCBldmVudHMubGVuZ3RoOyBqICs9IDEpIHtcbiAgICAgICAgICB2YXIgX2V2ZW50ID0gZXZlbnRzW2pdO1xuICAgICAgICAgIGlmICghZWwuZG9tN0xpdmVMaXN0ZW5lcnMpIGVsLmRvbTdMaXZlTGlzdGVuZXJzID0ge307XG4gICAgICAgICAgaWYgKCFlbC5kb203TGl2ZUxpc3RlbmVyc1tfZXZlbnRdKSBlbC5kb203TGl2ZUxpc3RlbmVyc1tfZXZlbnRdID0gW107XG5cbiAgICAgICAgICBlbC5kb203TGl2ZUxpc3RlbmVyc1tfZXZlbnRdLnB1c2goe1xuICAgICAgICAgICAgbGlzdGVuZXI6IGxpc3RlbmVyLFxuICAgICAgICAgICAgcHJveHlMaXN0ZW5lcjogaGFuZGxlTGl2ZUV2ZW50XG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgICBlbC5hZGRFdmVudExpc3RlbmVyKF9ldmVudCwgaGFuZGxlTGl2ZUV2ZW50LCBjYXB0dXJlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgZnVuY3Rpb24gb2ZmKCkge1xuICAgIGZvciAodmFyIF9sZW42ID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuNiksIF9rZXk2ID0gMDsgX2tleTYgPCBfbGVuNjsgX2tleTYrKykge1xuICAgICAgYXJnc1tfa2V5Nl0gPSBhcmd1bWVudHNbX2tleTZdO1xuICAgIH1cblxuICAgIHZhciBldmVudFR5cGUgPSBhcmdzWzBdLFxuICAgICAgICB0YXJnZXRTZWxlY3RvciA9IGFyZ3NbMV0sXG4gICAgICAgIGxpc3RlbmVyID0gYXJnc1syXSxcbiAgICAgICAgY2FwdHVyZSA9IGFyZ3NbM107XG5cbiAgICBpZiAodHlwZW9mIGFyZ3NbMV0gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGV2ZW50VHlwZSA9IGFyZ3NbMF07XG4gICAgICBsaXN0ZW5lciA9IGFyZ3NbMV07XG4gICAgICBjYXB0dXJlID0gYXJnc1syXTtcbiAgICAgIHRhcmdldFNlbGVjdG9yID0gdW5kZWZpbmVkO1xuICAgIH1cblxuICAgIGlmICghY2FwdHVyZSkgY2FwdHVyZSA9IGZhbHNlO1xuICAgIHZhciBldmVudHMgPSBldmVudFR5cGUuc3BsaXQoJyAnKTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZXZlbnRzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICB2YXIgZXZlbnQgPSBldmVudHNbaV07XG5cbiAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgdGhpcy5sZW5ndGg7IGogKz0gMSkge1xuICAgICAgICB2YXIgZWwgPSB0aGlzW2pdO1xuICAgICAgICB2YXIgaGFuZGxlcnMgPSB2b2lkIDA7XG5cbiAgICAgICAgaWYgKCF0YXJnZXRTZWxlY3RvciAmJiBlbC5kb203TGlzdGVuZXJzKSB7XG4gICAgICAgICAgaGFuZGxlcnMgPSBlbC5kb203TGlzdGVuZXJzW2V2ZW50XTtcbiAgICAgICAgfSBlbHNlIGlmICh0YXJnZXRTZWxlY3RvciAmJiBlbC5kb203TGl2ZUxpc3RlbmVycykge1xuICAgICAgICAgIGhhbmRsZXJzID0gZWwuZG9tN0xpdmVMaXN0ZW5lcnNbZXZlbnRdO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGhhbmRsZXJzICYmIGhhbmRsZXJzLmxlbmd0aCkge1xuICAgICAgICAgIGZvciAodmFyIGsgPSBoYW5kbGVycy5sZW5ndGggLSAxOyBrID49IDA7IGsgLT0gMSkge1xuICAgICAgICAgICAgdmFyIGhhbmRsZXIgPSBoYW5kbGVyc1trXTtcblxuICAgICAgICAgICAgaWYgKGxpc3RlbmVyICYmIGhhbmRsZXIubGlzdGVuZXIgPT09IGxpc3RlbmVyKSB7XG4gICAgICAgICAgICAgIGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnQsIGhhbmRsZXIucHJveHlMaXN0ZW5lciwgY2FwdHVyZSk7XG4gICAgICAgICAgICAgIGhhbmRsZXJzLnNwbGljZShrLCAxKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAobGlzdGVuZXIgJiYgaGFuZGxlci5saXN0ZW5lciAmJiBoYW5kbGVyLmxpc3RlbmVyLmRvbTdwcm94eSAmJiBoYW5kbGVyLmxpc3RlbmVyLmRvbTdwcm94eSA9PT0gbGlzdGVuZXIpIHtcbiAgICAgICAgICAgICAgZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudCwgaGFuZGxlci5wcm94eUxpc3RlbmVyLCBjYXB0dXJlKTtcbiAgICAgICAgICAgICAgaGFuZGxlcnMuc3BsaWNlKGssIDEpO1xuICAgICAgICAgICAgfSBlbHNlIGlmICghbGlzdGVuZXIpIHtcbiAgICAgICAgICAgICAgZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudCwgaGFuZGxlci5wcm94eUxpc3RlbmVyLCBjYXB0dXJlKTtcbiAgICAgICAgICAgICAgaGFuZGxlcnMuc3BsaWNlKGssIDEpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgZnVuY3Rpb24gdHJpZ2dlcigpIHtcbiAgICB2YXIgd2luZG93ID0gZ2V0V2luZG93KCk7XG5cbiAgICBmb3IgKHZhciBfbGVuOSA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbjkpLCBfa2V5OSA9IDA7IF9rZXk5IDwgX2xlbjk7IF9rZXk5KyspIHtcbiAgICAgIGFyZ3NbX2tleTldID0gYXJndW1lbnRzW19rZXk5XTtcbiAgICB9XG5cbiAgICB2YXIgZXZlbnRzID0gYXJnc1swXS5zcGxpdCgnICcpO1xuICAgIHZhciBldmVudERhdGEgPSBhcmdzWzFdO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBldmVudHMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIHZhciBldmVudCA9IGV2ZW50c1tpXTtcblxuICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB0aGlzLmxlbmd0aDsgaiArPSAxKSB7XG4gICAgICAgIHZhciBlbCA9IHRoaXNbal07XG5cbiAgICAgICAgaWYgKHdpbmRvdy5DdXN0b21FdmVudCkge1xuICAgICAgICAgIHZhciBldnQgPSBuZXcgd2luZG93LkN1c3RvbUV2ZW50KGV2ZW50LCB7XG4gICAgICAgICAgICBkZXRhaWw6IGV2ZW50RGF0YSxcbiAgICAgICAgICAgIGJ1YmJsZXM6IHRydWUsXG4gICAgICAgICAgICBjYW5jZWxhYmxlOiB0cnVlXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgZWwuZG9tN0V2ZW50RGF0YSA9IGFyZ3MuZmlsdGVyKGZ1bmN0aW9uIChkYXRhLCBkYXRhSW5kZXgpIHtcbiAgICAgICAgICAgIHJldHVybiBkYXRhSW5kZXggPiAwO1xuICAgICAgICAgIH0pO1xuICAgICAgICAgIGVsLmRpc3BhdGNoRXZlbnQoZXZ0KTtcbiAgICAgICAgICBlbC5kb203RXZlbnREYXRhID0gW107XG4gICAgICAgICAgZGVsZXRlIGVsLmRvbTdFdmVudERhdGE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIGZ1bmN0aW9uIHRyYW5zaXRpb25FbmQoY2FsbGJhY2spIHtcbiAgICB2YXIgZG9tID0gdGhpcztcblxuICAgIGZ1bmN0aW9uIGZpcmVDYWxsQmFjayhlKSB7XG4gICAgICBpZiAoZS50YXJnZXQgIT09IHRoaXMpIHJldHVybjtcbiAgICAgIGNhbGxiYWNrLmNhbGwodGhpcywgZSk7XG4gICAgICBkb20ub2ZmKCd0cmFuc2l0aW9uZW5kJywgZmlyZUNhbGxCYWNrKTtcbiAgICB9XG5cbiAgICBpZiAoY2FsbGJhY2spIHtcbiAgICAgIGRvbS5vbigndHJhbnNpdGlvbmVuZCcsIGZpcmVDYWxsQmFjayk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBmdW5jdGlvbiBvdXRlcldpZHRoKGluY2x1ZGVNYXJnaW5zKSB7XG4gICAgaWYgKHRoaXMubGVuZ3RoID4gMCkge1xuICAgICAgaWYgKGluY2x1ZGVNYXJnaW5zKSB7XG4gICAgICAgIHZhciBfc3R5bGVzID0gdGhpcy5zdHlsZXMoKTtcblxuICAgICAgICByZXR1cm4gdGhpc1swXS5vZmZzZXRXaWR0aCArIHBhcnNlRmxvYXQoX3N0eWxlcy5nZXRQcm9wZXJ0eVZhbHVlKCdtYXJnaW4tcmlnaHQnKSkgKyBwYXJzZUZsb2F0KF9zdHlsZXMuZ2V0UHJvcGVydHlWYWx1ZSgnbWFyZ2luLWxlZnQnKSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzWzBdLm9mZnNldFdpZHRoO1xuICAgIH1cblxuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgZnVuY3Rpb24gb3V0ZXJIZWlnaHQoaW5jbHVkZU1hcmdpbnMpIHtcbiAgICBpZiAodGhpcy5sZW5ndGggPiAwKSB7XG4gICAgICBpZiAoaW5jbHVkZU1hcmdpbnMpIHtcbiAgICAgICAgdmFyIF9zdHlsZXMyID0gdGhpcy5zdHlsZXMoKTtcblxuICAgICAgICByZXR1cm4gdGhpc1swXS5vZmZzZXRIZWlnaHQgKyBwYXJzZUZsb2F0KF9zdHlsZXMyLmdldFByb3BlcnR5VmFsdWUoJ21hcmdpbi10b3AnKSkgKyBwYXJzZUZsb2F0KF9zdHlsZXMyLmdldFByb3BlcnR5VmFsdWUoJ21hcmdpbi1ib3R0b20nKSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzWzBdLm9mZnNldEhlaWdodDtcbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIGZ1bmN0aW9uIG9mZnNldCgpIHtcbiAgICBpZiAodGhpcy5sZW5ndGggPiAwKSB7XG4gICAgICB2YXIgd2luZG93ID0gZ2V0V2luZG93KCk7XG4gICAgICB2YXIgZG9jdW1lbnQgPSBnZXREb2N1bWVudCgpO1xuICAgICAgdmFyIGVsID0gdGhpc1swXTtcbiAgICAgIHZhciBib3ggPSBlbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgIHZhciBib2R5ID0gZG9jdW1lbnQuYm9keTtcbiAgICAgIHZhciBjbGllbnRUb3AgPSBlbC5jbGllbnRUb3AgfHwgYm9keS5jbGllbnRUb3AgfHwgMDtcbiAgICAgIHZhciBjbGllbnRMZWZ0ID0gZWwuY2xpZW50TGVmdCB8fCBib2R5LmNsaWVudExlZnQgfHwgMDtcbiAgICAgIHZhciBzY3JvbGxUb3AgPSBlbCA9PT0gd2luZG93ID8gd2luZG93LnNjcm9sbFkgOiBlbC5zY3JvbGxUb3A7XG4gICAgICB2YXIgc2Nyb2xsTGVmdCA9IGVsID09PSB3aW5kb3cgPyB3aW5kb3cuc2Nyb2xsWCA6IGVsLnNjcm9sbExlZnQ7XG4gICAgICByZXR1cm4ge1xuICAgICAgICB0b3A6IGJveC50b3AgKyBzY3JvbGxUb3AgLSBjbGllbnRUb3AsXG4gICAgICAgIGxlZnQ6IGJveC5sZWZ0ICsgc2Nyb2xsTGVmdCAtIGNsaWVudExlZnRcbiAgICAgIH07XG4gICAgfVxuXG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICBmdW5jdGlvbiBzdHlsZXMoKSB7XG4gICAgdmFyIHdpbmRvdyA9IGdldFdpbmRvdygpO1xuICAgIGlmICh0aGlzWzBdKSByZXR1cm4gd2luZG93LmdldENvbXB1dGVkU3R5bGUodGhpc1swXSwgbnVsbCk7XG4gICAgcmV0dXJuIHt9O1xuICB9XG5cbiAgZnVuY3Rpb24gY3NzKHByb3BzLCB2YWx1ZSkge1xuICAgIHZhciB3aW5kb3cgPSBnZXRXaW5kb3coKTtcbiAgICB2YXIgaTtcblxuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAxKSB7XG4gICAgICBpZiAodHlwZW9mIHByb3BzID09PSAnc3RyaW5nJykge1xuICAgICAgICAvLyAuY3NzKCd3aWR0aCcpXG4gICAgICAgIGlmICh0aGlzWzBdKSByZXR1cm4gd2luZG93LmdldENvbXB1dGVkU3R5bGUodGhpc1swXSwgbnVsbCkuZ2V0UHJvcGVydHlWYWx1ZShwcm9wcyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyAuY3NzKHsgd2lkdGg6ICcxMDBweCcgfSlcbiAgICAgICAgZm9yIChpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgICBmb3IgKHZhciBfcHJvcCBpbiBwcm9wcykge1xuICAgICAgICAgICAgdGhpc1tpXS5zdHlsZVtfcHJvcF0gPSBwcm9wc1tfcHJvcF07XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDIgJiYgdHlwZW9mIHByb3BzID09PSAnc3RyaW5nJykge1xuICAgICAgLy8gLmNzcygnd2lkdGgnLCAnMTAwcHgnKVxuICAgICAgZm9yIChpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgdGhpc1tpXS5zdHlsZVtwcm9wc10gPSB2YWx1ZTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBmdW5jdGlvbiBlYWNoKGNhbGxiYWNrKSB7XG4gICAgaWYgKCFjYWxsYmFjaykgcmV0dXJuIHRoaXM7XG4gICAgdGhpcy5mb3JFYWNoKGZ1bmN0aW9uIChlbCwgaW5kZXgpIHtcbiAgICAgIGNhbGxiYWNrLmFwcGx5KGVsLCBbZWwsIGluZGV4XSk7XG4gICAgfSk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBmdW5jdGlvbiBmaWx0ZXIoY2FsbGJhY2spIHtcbiAgICB2YXIgcmVzdWx0ID0gYXJyYXlGaWx0ZXIodGhpcywgY2FsbGJhY2spO1xuICAgIHJldHVybiAkKHJlc3VsdCk7XG4gIH1cblxuICBmdW5jdGlvbiBodG1sKGh0bWwpIHtcbiAgICBpZiAodHlwZW9mIGh0bWwgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICByZXR1cm4gdGhpc1swXSA/IHRoaXNbMF0uaW5uZXJIVE1MIDogbnVsbDtcbiAgICB9XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIHRoaXNbaV0uaW5uZXJIVE1MID0gaHRtbDtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIGZ1bmN0aW9uIHRleHQodGV4dCkge1xuICAgIGlmICh0eXBlb2YgdGV4dCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHJldHVybiB0aGlzWzBdID8gdGhpc1swXS50ZXh0Q29udGVudC50cmltKCkgOiBudWxsO1xuICAgIH1cblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgdGhpc1tpXS50ZXh0Q29udGVudCA9IHRleHQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBmdW5jdGlvbiBpcyhzZWxlY3Rvcikge1xuICAgIHZhciB3aW5kb3cgPSBnZXRXaW5kb3coKTtcbiAgICB2YXIgZG9jdW1lbnQgPSBnZXREb2N1bWVudCgpO1xuICAgIHZhciBlbCA9IHRoaXNbMF07XG4gICAgdmFyIGNvbXBhcmVXaXRoO1xuICAgIHZhciBpO1xuICAgIGlmICghZWwgfHwgdHlwZW9mIHNlbGVjdG9yID09PSAndW5kZWZpbmVkJykgcmV0dXJuIGZhbHNlO1xuXG4gICAgaWYgKHR5cGVvZiBzZWxlY3RvciA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGlmIChlbC5tYXRjaGVzKSByZXR1cm4gZWwubWF0Y2hlcyhzZWxlY3Rvcik7XG4gICAgICBpZiAoZWwud2Via2l0TWF0Y2hlc1NlbGVjdG9yKSByZXR1cm4gZWwud2Via2l0TWF0Y2hlc1NlbGVjdG9yKHNlbGVjdG9yKTtcbiAgICAgIGlmIChlbC5tc01hdGNoZXNTZWxlY3RvcikgcmV0dXJuIGVsLm1zTWF0Y2hlc1NlbGVjdG9yKHNlbGVjdG9yKTtcbiAgICAgIGNvbXBhcmVXaXRoID0gJChzZWxlY3Rvcik7XG5cbiAgICAgIGZvciAoaSA9IDA7IGkgPCBjb21wYXJlV2l0aC5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICBpZiAoY29tcGFyZVdpdGhbaV0gPT09IGVsKSByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGlmIChzZWxlY3RvciA9PT0gZG9jdW1lbnQpIHtcbiAgICAgIHJldHVybiBlbCA9PT0gZG9jdW1lbnQ7XG4gICAgfVxuXG4gICAgaWYgKHNlbGVjdG9yID09PSB3aW5kb3cpIHtcbiAgICAgIHJldHVybiBlbCA9PT0gd2luZG93O1xuICAgIH1cblxuICAgIGlmIChzZWxlY3Rvci5ub2RlVHlwZSB8fCBzZWxlY3RvciBpbnN0YW5jZW9mIERvbTcpIHtcbiAgICAgIGNvbXBhcmVXaXRoID0gc2VsZWN0b3Iubm9kZVR5cGUgPyBbc2VsZWN0b3JdIDogc2VsZWN0b3I7XG5cbiAgICAgIGZvciAoaSA9IDA7IGkgPCBjb21wYXJlV2l0aC5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICBpZiAoY29tcGFyZVdpdGhbaV0gPT09IGVsKSByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGluZGV4KCkge1xuICAgIHZhciBjaGlsZCA9IHRoaXNbMF07XG4gICAgdmFyIGk7XG5cbiAgICBpZiAoY2hpbGQpIHtcbiAgICAgIGkgPSAwOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcblxuICAgICAgd2hpbGUgKChjaGlsZCA9IGNoaWxkLnByZXZpb3VzU2libGluZykgIT09IG51bGwpIHtcbiAgICAgICAgaWYgKGNoaWxkLm5vZGVUeXBlID09PSAxKSBpICs9IDE7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBpO1xuICAgIH1cblxuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICBmdW5jdGlvbiBlcShpbmRleCkge1xuICAgIGlmICh0eXBlb2YgaW5kZXggPT09ICd1bmRlZmluZWQnKSByZXR1cm4gdGhpcztcbiAgICB2YXIgbGVuZ3RoID0gdGhpcy5sZW5ndGg7XG5cbiAgICBpZiAoaW5kZXggPiBsZW5ndGggLSAxKSB7XG4gICAgICByZXR1cm4gJChbXSk7XG4gICAgfVxuXG4gICAgaWYgKGluZGV4IDwgMCkge1xuICAgICAgdmFyIHJldHVybkluZGV4ID0gbGVuZ3RoICsgaW5kZXg7XG4gICAgICBpZiAocmV0dXJuSW5kZXggPCAwKSByZXR1cm4gJChbXSk7XG4gICAgICByZXR1cm4gJChbdGhpc1tyZXR1cm5JbmRleF1dKTtcbiAgICB9XG5cbiAgICByZXR1cm4gJChbdGhpc1tpbmRleF1dKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGFwcGVuZCgpIHtcbiAgICB2YXIgbmV3Q2hpbGQ7XG4gICAgdmFyIGRvY3VtZW50ID0gZ2V0RG9jdW1lbnQoKTtcblxuICAgIGZvciAodmFyIGsgPSAwOyBrIDwgYXJndW1lbnRzLmxlbmd0aDsgayArPSAxKSB7XG4gICAgICBuZXdDaGlsZCA9IGsgPCAwIHx8IGFyZ3VtZW50cy5sZW5ndGggPD0gayA/IHVuZGVmaW5lZCA6IGFyZ3VtZW50c1trXTtcblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgIGlmICh0eXBlb2YgbmV3Q2hpbGQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgdmFyIHRlbXBEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgICB0ZW1wRGl2LmlubmVySFRNTCA9IG5ld0NoaWxkO1xuXG4gICAgICAgICAgd2hpbGUgKHRlbXBEaXYuZmlyc3RDaGlsZCkge1xuICAgICAgICAgICAgdGhpc1tpXS5hcHBlbmRDaGlsZCh0ZW1wRGl2LmZpcnN0Q2hpbGQpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChuZXdDaGlsZCBpbnN0YW5jZW9mIERvbTcpIHtcbiAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IG5ld0NoaWxkLmxlbmd0aDsgaiArPSAxKSB7XG4gICAgICAgICAgICB0aGlzW2ldLmFwcGVuZENoaWxkKG5ld0NoaWxkW2pdKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpc1tpXS5hcHBlbmRDaGlsZChuZXdDaGlsZCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIGZ1bmN0aW9uIHByZXBlbmQobmV3Q2hpbGQpIHtcbiAgICB2YXIgZG9jdW1lbnQgPSBnZXREb2N1bWVudCgpO1xuICAgIHZhciBpO1xuICAgIHZhciBqO1xuXG4gICAgZm9yIChpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIGlmICh0eXBlb2YgbmV3Q2hpbGQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHZhciB0ZW1wRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIHRlbXBEaXYuaW5uZXJIVE1MID0gbmV3Q2hpbGQ7XG5cbiAgICAgICAgZm9yIChqID0gdGVtcERpdi5jaGlsZE5vZGVzLmxlbmd0aCAtIDE7IGogPj0gMDsgaiAtPSAxKSB7XG4gICAgICAgICAgdGhpc1tpXS5pbnNlcnRCZWZvcmUodGVtcERpdi5jaGlsZE5vZGVzW2pdLCB0aGlzW2ldLmNoaWxkTm9kZXNbMF0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKG5ld0NoaWxkIGluc3RhbmNlb2YgRG9tNykge1xuICAgICAgICBmb3IgKGogPSAwOyBqIDwgbmV3Q2hpbGQubGVuZ3RoOyBqICs9IDEpIHtcbiAgICAgICAgICB0aGlzW2ldLmluc2VydEJlZm9yZShuZXdDaGlsZFtqXSwgdGhpc1tpXS5jaGlsZE5vZGVzWzBdKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpc1tpXS5pbnNlcnRCZWZvcmUobmV3Q2hpbGQsIHRoaXNbaV0uY2hpbGROb2Rlc1swXSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBmdW5jdGlvbiBuZXh0KHNlbGVjdG9yKSB7XG4gICAgaWYgKHRoaXMubGVuZ3RoID4gMCkge1xuICAgICAgaWYgKHNlbGVjdG9yKSB7XG4gICAgICAgIGlmICh0aGlzWzBdLm5leHRFbGVtZW50U2libGluZyAmJiAkKHRoaXNbMF0ubmV4dEVsZW1lbnRTaWJsaW5nKS5pcyhzZWxlY3RvcikpIHtcbiAgICAgICAgICByZXR1cm4gJChbdGhpc1swXS5uZXh0RWxlbWVudFNpYmxpbmddKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiAkKFtdKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXNbMF0ubmV4dEVsZW1lbnRTaWJsaW5nKSByZXR1cm4gJChbdGhpc1swXS5uZXh0RWxlbWVudFNpYmxpbmddKTtcbiAgICAgIHJldHVybiAkKFtdKTtcbiAgICB9XG5cbiAgICByZXR1cm4gJChbXSk7XG4gIH1cblxuICBmdW5jdGlvbiBuZXh0QWxsKHNlbGVjdG9yKSB7XG4gICAgdmFyIG5leHRFbHMgPSBbXTtcbiAgICB2YXIgZWwgPSB0aGlzWzBdO1xuICAgIGlmICghZWwpIHJldHVybiAkKFtdKTtcblxuICAgIHdoaWxlIChlbC5uZXh0RWxlbWVudFNpYmxpbmcpIHtcbiAgICAgIHZhciBfbmV4dCA9IGVsLm5leHRFbGVtZW50U2libGluZzsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuXG4gICAgICBpZiAoc2VsZWN0b3IpIHtcbiAgICAgICAgaWYgKCQoX25leHQpLmlzKHNlbGVjdG9yKSkgbmV4dEVscy5wdXNoKF9uZXh0KTtcbiAgICAgIH0gZWxzZSBuZXh0RWxzLnB1c2goX25leHQpO1xuXG4gICAgICBlbCA9IF9uZXh0O1xuICAgIH1cblxuICAgIHJldHVybiAkKG5leHRFbHMpO1xuICB9XG5cbiAgZnVuY3Rpb24gcHJldihzZWxlY3Rvcikge1xuICAgIGlmICh0aGlzLmxlbmd0aCA+IDApIHtcbiAgICAgIHZhciBlbCA9IHRoaXNbMF07XG5cbiAgICAgIGlmIChzZWxlY3Rvcikge1xuICAgICAgICBpZiAoZWwucHJldmlvdXNFbGVtZW50U2libGluZyAmJiAkKGVsLnByZXZpb3VzRWxlbWVudFNpYmxpbmcpLmlzKHNlbGVjdG9yKSkge1xuICAgICAgICAgIHJldHVybiAkKFtlbC5wcmV2aW91c0VsZW1lbnRTaWJsaW5nXSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gJChbXSk7XG4gICAgICB9XG5cbiAgICAgIGlmIChlbC5wcmV2aW91c0VsZW1lbnRTaWJsaW5nKSByZXR1cm4gJChbZWwucHJldmlvdXNFbGVtZW50U2libGluZ10pO1xuICAgICAgcmV0dXJuICQoW10pO1xuICAgIH1cblxuICAgIHJldHVybiAkKFtdKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHByZXZBbGwoc2VsZWN0b3IpIHtcbiAgICB2YXIgcHJldkVscyA9IFtdO1xuICAgIHZhciBlbCA9IHRoaXNbMF07XG4gICAgaWYgKCFlbCkgcmV0dXJuICQoW10pO1xuXG4gICAgd2hpbGUgKGVsLnByZXZpb3VzRWxlbWVudFNpYmxpbmcpIHtcbiAgICAgIHZhciBfcHJldiA9IGVsLnByZXZpb3VzRWxlbWVudFNpYmxpbmc7IC8vIGVzbGludC1kaXNhYmxlLWxpbmVcblxuICAgICAgaWYgKHNlbGVjdG9yKSB7XG4gICAgICAgIGlmICgkKF9wcmV2KS5pcyhzZWxlY3RvcikpIHByZXZFbHMucHVzaChfcHJldik7XG4gICAgICB9IGVsc2UgcHJldkVscy5wdXNoKF9wcmV2KTtcblxuICAgICAgZWwgPSBfcHJldjtcbiAgICB9XG5cbiAgICByZXR1cm4gJChwcmV2RWxzKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHBhcmVudChzZWxlY3Rvcikge1xuICAgIHZhciBwYXJlbnRzID0gW107IC8vIGVzbGludC1kaXNhYmxlLWxpbmVcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgaWYgKHRoaXNbaV0ucGFyZW50Tm9kZSAhPT0gbnVsbCkge1xuICAgICAgICBpZiAoc2VsZWN0b3IpIHtcbiAgICAgICAgICBpZiAoJCh0aGlzW2ldLnBhcmVudE5vZGUpLmlzKHNlbGVjdG9yKSkgcGFyZW50cy5wdXNoKHRoaXNbaV0ucGFyZW50Tm9kZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcGFyZW50cy5wdXNoKHRoaXNbaV0ucGFyZW50Tm9kZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gJChwYXJlbnRzKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHBhcmVudHMoc2VsZWN0b3IpIHtcbiAgICB2YXIgcGFyZW50cyA9IFtdOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIHZhciBfcGFyZW50ID0gdGhpc1tpXS5wYXJlbnROb2RlOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG5cbiAgICAgIHdoaWxlIChfcGFyZW50KSB7XG4gICAgICAgIGlmIChzZWxlY3Rvcikge1xuICAgICAgICAgIGlmICgkKF9wYXJlbnQpLmlzKHNlbGVjdG9yKSkgcGFyZW50cy5wdXNoKF9wYXJlbnQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHBhcmVudHMucHVzaChfcGFyZW50KTtcbiAgICAgICAgfVxuXG4gICAgICAgIF9wYXJlbnQgPSBfcGFyZW50LnBhcmVudE5vZGU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuICQocGFyZW50cyk7XG4gIH1cblxuICBmdW5jdGlvbiBjbG9zZXN0KHNlbGVjdG9yKSB7XG4gICAgdmFyIGNsb3Nlc3QgPSB0aGlzOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG5cbiAgICBpZiAodHlwZW9mIHNlbGVjdG9yID09PSAndW5kZWZpbmVkJykge1xuICAgICAgcmV0dXJuICQoW10pO1xuICAgIH1cblxuICAgIGlmICghY2xvc2VzdC5pcyhzZWxlY3RvcikpIHtcbiAgICAgIGNsb3Nlc3QgPSBjbG9zZXN0LnBhcmVudHMoc2VsZWN0b3IpLmVxKDApO1xuICAgIH1cblxuICAgIHJldHVybiBjbG9zZXN0O1xuICB9XG5cbiAgZnVuY3Rpb24gZmluZChzZWxlY3Rvcikge1xuICAgIHZhciBmb3VuZEVsZW1lbnRzID0gW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIHZhciBmb3VuZCA9IHRoaXNbaV0ucXVlcnlTZWxlY3RvckFsbChzZWxlY3Rvcik7XG5cbiAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgZm91bmQubGVuZ3RoOyBqICs9IDEpIHtcbiAgICAgICAgZm91bmRFbGVtZW50cy5wdXNoKGZvdW5kW2pdKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gJChmb3VuZEVsZW1lbnRzKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNoaWxkcmVuKHNlbGVjdG9yKSB7XG4gICAgdmFyIGNoaWxkcmVuID0gW107IC8vIGVzbGludC1kaXNhYmxlLWxpbmVcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgdmFyIGNoaWxkTm9kZXMgPSB0aGlzW2ldLmNoaWxkcmVuO1xuXG4gICAgICBmb3IgKHZhciBqID0gMDsgaiA8IGNoaWxkTm9kZXMubGVuZ3RoOyBqICs9IDEpIHtcbiAgICAgICAgaWYgKCFzZWxlY3RvciB8fCAkKGNoaWxkTm9kZXNbal0pLmlzKHNlbGVjdG9yKSkge1xuICAgICAgICAgIGNoaWxkcmVuLnB1c2goY2hpbGROb2Rlc1tqXSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gJChjaGlsZHJlbik7XG4gIH1cblxuICBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICBpZiAodGhpc1tpXS5wYXJlbnROb2RlKSB0aGlzW2ldLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpc1tpXSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICB2YXIgTWV0aG9kcyA9IHtcbiAgICBhZGRDbGFzczogYWRkQ2xhc3MsXG4gICAgcmVtb3ZlQ2xhc3M6IHJlbW92ZUNsYXNzLFxuICAgIGhhc0NsYXNzOiBoYXNDbGFzcyxcbiAgICB0b2dnbGVDbGFzczogdG9nZ2xlQ2xhc3MsXG4gICAgYXR0cjogYXR0cixcbiAgICByZW1vdmVBdHRyOiByZW1vdmVBdHRyLFxuICAgIHRyYW5zZm9ybTogdHJhbnNmb3JtLFxuICAgIHRyYW5zaXRpb246IHRyYW5zaXRpb24sXG4gICAgb246IG9uLFxuICAgIG9mZjogb2ZmLFxuICAgIHRyaWdnZXI6IHRyaWdnZXIsXG4gICAgdHJhbnNpdGlvbkVuZDogdHJhbnNpdGlvbkVuZCxcbiAgICBvdXRlcldpZHRoOiBvdXRlcldpZHRoLFxuICAgIG91dGVySGVpZ2h0OiBvdXRlckhlaWdodCxcbiAgICBzdHlsZXM6IHN0eWxlcyxcbiAgICBvZmZzZXQ6IG9mZnNldCxcbiAgICBjc3M6IGNzcyxcbiAgICBlYWNoOiBlYWNoLFxuICAgIGh0bWw6IGh0bWwsXG4gICAgdGV4dDogdGV4dCxcbiAgICBpczogaXMsXG4gICAgaW5kZXg6IGluZGV4LFxuICAgIGVxOiBlcSxcbiAgICBhcHBlbmQ6IGFwcGVuZCxcbiAgICBwcmVwZW5kOiBwcmVwZW5kLFxuICAgIG5leHQ6IG5leHQsXG4gICAgbmV4dEFsbDogbmV4dEFsbCxcbiAgICBwcmV2OiBwcmV2LFxuICAgIHByZXZBbGw6IHByZXZBbGwsXG4gICAgcGFyZW50OiBwYXJlbnQsXG4gICAgcGFyZW50czogcGFyZW50cyxcbiAgICBjbG9zZXN0OiBjbG9zZXN0LFxuICAgIGZpbmQ6IGZpbmQsXG4gICAgY2hpbGRyZW46IGNoaWxkcmVuLFxuICAgIGZpbHRlcjogZmlsdGVyLFxuICAgIHJlbW92ZTogcmVtb3ZlXG4gIH07XG4gIE9iamVjdC5rZXlzKE1ldGhvZHMpLmZvckVhY2goZnVuY3Rpb24gKG1ldGhvZE5hbWUpIHtcbiAgICAkLmZuW21ldGhvZE5hbWVdID0gTWV0aG9kc1ttZXRob2ROYW1lXTtcbiAgfSk7XG5cbiAgZnVuY3Rpb24gZGVsZXRlUHJvcHMob2JqKSB7XG4gICAgdmFyIG9iamVjdCA9IG9iajtcbiAgICBPYmplY3Qua2V5cyhvYmplY3QpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgb2JqZWN0W2tleV0gPSBudWxsO1xuICAgICAgfSBjYXRjaCAoZSkgey8vIG5vIGdldHRlciBmb3Igb2JqZWN0XG4gICAgICB9XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIGRlbGV0ZSBvYmplY3Rba2V5XTtcbiAgICAgIH0gY2F0Y2ggKGUpIHsvLyBzb21ldGhpbmcgZ290IHdyb25nXG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBuZXh0VGljayhjYWxsYmFjaywgZGVsYXkpIHtcbiAgICBpZiAoZGVsYXkgPT09IHZvaWQgMCkge1xuICAgICAgZGVsYXkgPSAwO1xuICAgIH1cblxuICAgIHJldHVybiBzZXRUaW1lb3V0KGNhbGxiYWNrLCBkZWxheSk7XG4gIH1cblxuICBmdW5jdGlvbiBub3coKSB7XG4gICAgcmV0dXJuIERhdGUubm93KCk7XG4gIH1cblxuICBmdW5jdGlvbiBnZXRUcmFuc2xhdGUoZWwsIGF4aXMpIHtcbiAgICBpZiAoYXhpcyA9PT0gdm9pZCAwKSB7XG4gICAgICBheGlzID0gJ3gnO1xuICAgIH1cblxuICAgIHZhciB3aW5kb3cgPSBnZXRXaW5kb3coKTtcbiAgICB2YXIgbWF0cml4O1xuICAgIHZhciBjdXJUcmFuc2Zvcm07XG4gICAgdmFyIHRyYW5zZm9ybU1hdHJpeDtcbiAgICB2YXIgY3VyU3R5bGUgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShlbCwgbnVsbCk7XG5cbiAgICBpZiAod2luZG93LldlYktpdENTU01hdHJpeCkge1xuICAgICAgY3VyVHJhbnNmb3JtID0gY3VyU3R5bGUudHJhbnNmb3JtIHx8IGN1clN0eWxlLndlYmtpdFRyYW5zZm9ybTtcblxuICAgICAgaWYgKGN1clRyYW5zZm9ybS5zcGxpdCgnLCcpLmxlbmd0aCA+IDYpIHtcbiAgICAgICAgY3VyVHJhbnNmb3JtID0gY3VyVHJhbnNmb3JtLnNwbGl0KCcsICcpLm1hcChmdW5jdGlvbiAoYSkge1xuICAgICAgICAgIHJldHVybiBhLnJlcGxhY2UoJywnLCAnLicpO1xuICAgICAgICB9KS5qb2luKCcsICcpO1xuICAgICAgfSAvLyBTb21lIG9sZCB2ZXJzaW9ucyBvZiBXZWJraXQgY2hva2Ugd2hlbiAnbm9uZScgaXMgcGFzc2VkOyBwYXNzXG4gICAgICAvLyBlbXB0eSBzdHJpbmcgaW5zdGVhZCBpbiB0aGlzIGNhc2VcblxuXG4gICAgICB0cmFuc2Zvcm1NYXRyaXggPSBuZXcgd2luZG93LldlYktpdENTU01hdHJpeChjdXJUcmFuc2Zvcm0gPT09ICdub25lJyA/ICcnIDogY3VyVHJhbnNmb3JtKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdHJhbnNmb3JtTWF0cml4ID0gY3VyU3R5bGUuTW96VHJhbnNmb3JtIHx8IGN1clN0eWxlLk9UcmFuc2Zvcm0gfHwgY3VyU3R5bGUuTXNUcmFuc2Zvcm0gfHwgY3VyU3R5bGUubXNUcmFuc2Zvcm0gfHwgY3VyU3R5bGUudHJhbnNmb3JtIHx8IGN1clN0eWxlLmdldFByb3BlcnR5VmFsdWUoJ3RyYW5zZm9ybScpLnJlcGxhY2UoJ3RyYW5zbGF0ZSgnLCAnbWF0cml4KDEsIDAsIDAsIDEsJyk7XG4gICAgICBtYXRyaXggPSB0cmFuc2Zvcm1NYXRyaXgudG9TdHJpbmcoKS5zcGxpdCgnLCcpO1xuICAgIH1cblxuICAgIGlmIChheGlzID09PSAneCcpIHtcbiAgICAgIC8vIExhdGVzdCBDaHJvbWUgYW5kIHdlYmtpdHMgRml4XG4gICAgICBpZiAod2luZG93LldlYktpdENTU01hdHJpeCkgY3VyVHJhbnNmb3JtID0gdHJhbnNmb3JtTWF0cml4Lm00MTsgLy8gQ3JhenkgSUUxMCBNYXRyaXhcbiAgICAgIGVsc2UgaWYgKG1hdHJpeC5sZW5ndGggPT09IDE2KSBjdXJUcmFuc2Zvcm0gPSBwYXJzZUZsb2F0KG1hdHJpeFsxMl0pOyAvLyBOb3JtYWwgQnJvd3NlcnNcbiAgICAgICAgZWxzZSBjdXJUcmFuc2Zvcm0gPSBwYXJzZUZsb2F0KG1hdHJpeFs0XSk7XG4gICAgfVxuXG4gICAgaWYgKGF4aXMgPT09ICd5Jykge1xuICAgICAgLy8gTGF0ZXN0IENocm9tZSBhbmQgd2Via2l0cyBGaXhcbiAgICAgIGlmICh3aW5kb3cuV2ViS2l0Q1NTTWF0cml4KSBjdXJUcmFuc2Zvcm0gPSB0cmFuc2Zvcm1NYXRyaXgubTQyOyAvLyBDcmF6eSBJRTEwIE1hdHJpeFxuICAgICAgZWxzZSBpZiAobWF0cml4Lmxlbmd0aCA9PT0gMTYpIGN1clRyYW5zZm9ybSA9IHBhcnNlRmxvYXQobWF0cml4WzEzXSk7IC8vIE5vcm1hbCBCcm93c2Vyc1xuICAgICAgICBlbHNlIGN1clRyYW5zZm9ybSA9IHBhcnNlRmxvYXQobWF0cml4WzVdKTtcbiAgICB9XG5cbiAgICByZXR1cm4gY3VyVHJhbnNmb3JtIHx8IDA7XG4gIH1cblxuICBmdW5jdGlvbiBpc09iamVjdCQxKG8pIHtcbiAgICByZXR1cm4gdHlwZW9mIG8gPT09ICdvYmplY3QnICYmIG8gIT09IG51bGwgJiYgby5jb25zdHJ1Y3RvciAmJiBvLmNvbnN0cnVjdG9yID09PSBPYmplY3Q7XG4gIH1cblxuICBmdW5jdGlvbiBleHRlbmQkMSgpIHtcbiAgICB2YXIgdG8gPSBPYmplY3QoYXJndW1lbnRzLmxlbmd0aCA8PSAwID8gdW5kZWZpbmVkIDogYXJndW1lbnRzWzBdKTtcblxuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICB2YXIgbmV4dFNvdXJjZSA9IGkgPCAwIHx8IGFyZ3VtZW50cy5sZW5ndGggPD0gaSA/IHVuZGVmaW5lZCA6IGFyZ3VtZW50c1tpXTtcblxuICAgICAgaWYgKG5leHRTb3VyY2UgIT09IHVuZGVmaW5lZCAmJiBuZXh0U291cmNlICE9PSBudWxsKSB7XG4gICAgICAgIHZhciBrZXlzQXJyYXkgPSBPYmplY3Qua2V5cyhPYmplY3QobmV4dFNvdXJjZSkpO1xuXG4gICAgICAgIGZvciAodmFyIG5leHRJbmRleCA9IDAsIGxlbiA9IGtleXNBcnJheS5sZW5ndGg7IG5leHRJbmRleCA8IGxlbjsgbmV4dEluZGV4ICs9IDEpIHtcbiAgICAgICAgICB2YXIgbmV4dEtleSA9IGtleXNBcnJheVtuZXh0SW5kZXhdO1xuICAgICAgICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihuZXh0U291cmNlLCBuZXh0S2V5KTtcblxuICAgICAgICAgIGlmIChkZXNjICE9PSB1bmRlZmluZWQgJiYgZGVzYy5lbnVtZXJhYmxlKSB7XG4gICAgICAgICAgICBpZiAoaXNPYmplY3QkMSh0b1tuZXh0S2V5XSkgJiYgaXNPYmplY3QkMShuZXh0U291cmNlW25leHRLZXldKSkge1xuICAgICAgICAgICAgICBleHRlbmQkMSh0b1tuZXh0S2V5XSwgbmV4dFNvdXJjZVtuZXh0S2V5XSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKCFpc09iamVjdCQxKHRvW25leHRLZXldKSAmJiBpc09iamVjdCQxKG5leHRTb3VyY2VbbmV4dEtleV0pKSB7XG4gICAgICAgICAgICAgIHRvW25leHRLZXldID0ge307XG4gICAgICAgICAgICAgIGV4dGVuZCQxKHRvW25leHRLZXldLCBuZXh0U291cmNlW25leHRLZXldKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHRvW25leHRLZXldID0gbmV4dFNvdXJjZVtuZXh0S2V5XTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdG87XG4gIH1cblxuICBmdW5jdGlvbiBiaW5kTW9kdWxlTWV0aG9kcyhpbnN0YW5jZSwgb2JqKSB7XG4gICAgT2JqZWN0LmtleXMob2JqKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgIGlmIChpc09iamVjdCQxKG9ialtrZXldKSkge1xuICAgICAgICBPYmplY3Qua2V5cyhvYmpba2V5XSkuZm9yRWFjaChmdW5jdGlvbiAoc3ViS2V5KSB7XG4gICAgICAgICAgaWYgKHR5cGVvZiBvYmpba2V5XVtzdWJLZXldID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBvYmpba2V5XVtzdWJLZXldID0gb2JqW2tleV1bc3ViS2V5XS5iaW5kKGluc3RhbmNlKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICBpbnN0YW5jZVtrZXldID0gb2JqW2tleV07XG4gICAgfSk7XG4gIH1cblxuICB2YXIgc3VwcG9ydDtcblxuICBmdW5jdGlvbiBjYWxjU3VwcG9ydCgpIHtcbiAgICB2YXIgd2luZG93ID0gZ2V0V2luZG93KCk7XG4gICAgdmFyIGRvY3VtZW50ID0gZ2V0RG9jdW1lbnQoKTtcbiAgICByZXR1cm4ge1xuICAgICAgdG91Y2g6ICEhKCdvbnRvdWNoc3RhcnQnIGluIHdpbmRvdyB8fCB3aW5kb3cuRG9jdW1lbnRUb3VjaCAmJiBkb2N1bWVudCBpbnN0YW5jZW9mIHdpbmRvdy5Eb2N1bWVudFRvdWNoKSxcbiAgICAgIHBvaW50ZXJFdmVudHM6ICEhd2luZG93LlBvaW50ZXJFdmVudCAmJiAnbWF4VG91Y2hQb2ludHMnIGluIHdpbmRvdy5uYXZpZ2F0b3IgJiYgd2luZG93Lm5hdmlnYXRvci5tYXhUb3VjaFBvaW50cyA+PSAwLFxuICAgICAgb2JzZXJ2ZXI6IGZ1bmN0aW9uIGNoZWNrT2JzZXJ2ZXIoKSB7XG4gICAgICAgIHJldHVybiAnTXV0YXRpb25PYnNlcnZlcicgaW4gd2luZG93IHx8ICdXZWJraXRNdXRhdGlvbk9ic2VydmVyJyBpbiB3aW5kb3c7XG4gICAgICB9KCksXG4gICAgICBwYXNzaXZlTGlzdGVuZXI6IGZ1bmN0aW9uIGNoZWNrUGFzc2l2ZUxpc3RlbmVyKCkge1xuICAgICAgICB2YXIgc3VwcG9ydHNQYXNzaXZlID0gZmFsc2U7XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICB2YXIgb3B0cyA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh7fSwgJ3Bhc3NpdmUnLCB7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgICAgICAgICBzdXBwb3J0c1Bhc3NpdmUgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCd0ZXN0UGFzc2l2ZUxpc3RlbmVyJywgbnVsbCwgb3B0cyk7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHsvLyBObyBzdXBwb3J0XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gc3VwcG9ydHNQYXNzaXZlO1xuICAgICAgfSgpLFxuICAgICAgZ2VzdHVyZXM6IGZ1bmN0aW9uIGNoZWNrR2VzdHVyZXMoKSB7XG4gICAgICAgIHJldHVybiAnb25nZXN0dXJlc3RhcnQnIGluIHdpbmRvdztcbiAgICAgIH0oKVxuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBnZXRTdXBwb3J0KCkge1xuICAgIGlmICghc3VwcG9ydCkge1xuICAgICAgc3VwcG9ydCA9IGNhbGNTdXBwb3J0KCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHN1cHBvcnQ7XG4gIH1cblxuICB2YXIgZGV2aWNlO1xuXG4gIGZ1bmN0aW9uIGNhbGNEZXZpY2UoX3RlbXApIHtcbiAgICB2YXIgX3JlZiA9IF90ZW1wID09PSB2b2lkIDAgPyB7fSA6IF90ZW1wLFxuICAgICAgICB1c2VyQWdlbnQgPSBfcmVmLnVzZXJBZ2VudDtcblxuICAgIHZhciBzdXBwb3J0ID0gZ2V0U3VwcG9ydCgpO1xuICAgIHZhciB3aW5kb3cgPSBnZXRXaW5kb3coKTtcbiAgICB2YXIgcGxhdGZvcm0gPSB3aW5kb3cubmF2aWdhdG9yLnBsYXRmb3JtO1xuICAgIHZhciB1YSA9IHVzZXJBZ2VudCB8fCB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudDtcbiAgICB2YXIgZGV2aWNlID0ge1xuICAgICAgaW9zOiBmYWxzZSxcbiAgICAgIGFuZHJvaWQ6IGZhbHNlXG4gICAgfTtcbiAgICB2YXIgc2NyZWVuV2lkdGggPSB3aW5kb3cuc2NyZWVuLndpZHRoO1xuICAgIHZhciBzY3JlZW5IZWlnaHQgPSB3aW5kb3cuc2NyZWVuLmhlaWdodDtcbiAgICB2YXIgYW5kcm9pZCA9IHVhLm1hdGNoKC8oQW5kcm9pZCk7P1tcXHNcXC9dKyhbXFxkLl0rKT8vKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuXG4gICAgdmFyIGlwYWQgPSB1YS5tYXRjaCgvKGlQYWQpLipPU1xccyhbXFxkX10rKS8pO1xuICAgIHZhciBpcG9kID0gdWEubWF0Y2goLyhpUG9kKSguKk9TXFxzKFtcXGRfXSspKT8vKTtcbiAgICB2YXIgaXBob25lID0gIWlwYWQgJiYgdWEubWF0Y2goLyhpUGhvbmVcXHNPU3xpT1MpXFxzKFtcXGRfXSspLyk7XG4gICAgdmFyIHdpbmRvd3MgPSBwbGF0Zm9ybSA9PT0gJ1dpbjMyJztcbiAgICB2YXIgbWFjb3MgPSBwbGF0Zm9ybSA9PT0gJ01hY0ludGVsJzsgLy8gaVBhZE9zIDEzIGZpeFxuXG4gICAgdmFyIGlQYWRTY3JlZW5zID0gWycxMDI0eDEzNjYnLCAnMTM2NngxMDI0JywgJzgzNHgxMTk0JywgJzExOTR4ODM0JywgJzgzNHgxMTEyJywgJzExMTJ4ODM0JywgJzc2OHgxMDI0JywgJzEwMjR4NzY4J107XG5cbiAgICBpZiAoIWlwYWQgJiYgbWFjb3MgJiYgc3VwcG9ydC50b3VjaCAmJiBpUGFkU2NyZWVucy5pbmRleE9mKHNjcmVlbldpZHRoICsgXCJ4XCIgKyBzY3JlZW5IZWlnaHQpID49IDApIHtcbiAgICAgIGlwYWQgPSB1YS5tYXRjaCgvKFZlcnNpb24pXFwvKFtcXGQuXSspLyk7XG4gICAgICBpZiAoIWlwYWQpIGlwYWQgPSBbMCwgMSwgJzEzXzBfMCddO1xuICAgICAgbWFjb3MgPSBmYWxzZTtcbiAgICB9IC8vIEFuZHJvaWRcblxuXG4gICAgaWYgKGFuZHJvaWQgJiYgIXdpbmRvd3MpIHtcbiAgICAgIGRldmljZS5vcyA9ICdhbmRyb2lkJztcbiAgICAgIGRldmljZS5hbmRyb2lkID0gdHJ1ZTtcbiAgICB9XG5cbiAgICBpZiAoaXBhZCB8fCBpcGhvbmUgfHwgaXBvZCkge1xuICAgICAgZGV2aWNlLm9zID0gJ2lvcyc7XG4gICAgICBkZXZpY2UuaW9zID0gdHJ1ZTtcbiAgICB9IC8vIEV4cG9ydCBvYmplY3RcblxuXG4gICAgcmV0dXJuIGRldmljZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldERldmljZShvdmVycmlkZXMpIHtcbiAgICBpZiAob3ZlcnJpZGVzID09PSB2b2lkIDApIHtcbiAgICAgIG92ZXJyaWRlcyA9IHt9O1xuICAgIH1cblxuICAgIGlmICghZGV2aWNlKSB7XG4gICAgICBkZXZpY2UgPSBjYWxjRGV2aWNlKG92ZXJyaWRlcyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGRldmljZTtcbiAgfVxuXG4gIHZhciBicm93c2VyO1xuXG4gIGZ1bmN0aW9uIGNhbGNCcm93c2VyKCkge1xuICAgIHZhciB3aW5kb3cgPSBnZXRXaW5kb3coKTtcblxuICAgIGZ1bmN0aW9uIGlzU2FmYXJpKCkge1xuICAgICAgdmFyIHVhID0gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKTtcbiAgICAgIHJldHVybiB1YS5pbmRleE9mKCdzYWZhcmknKSA+PSAwICYmIHVhLmluZGV4T2YoJ2Nocm9tZScpIDwgMCAmJiB1YS5pbmRleE9mKCdhbmRyb2lkJykgPCAwO1xuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICBpc0VkZ2U6ICEhd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL0VkZ2UvZyksXG4gICAgICBpc1NhZmFyaTogaXNTYWZhcmkoKSxcbiAgICAgIGlzV2ViVmlldzogLyhpUGhvbmV8aVBvZHxpUGFkKS4qQXBwbGVXZWJLaXQoPyEuKlNhZmFyaSkvaS50ZXN0KHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50KVxuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBnZXRCcm93c2VyKCkge1xuICAgIGlmICghYnJvd3Nlcikge1xuICAgICAgYnJvd3NlciA9IGNhbGNCcm93c2VyKCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGJyb3dzZXI7XG4gIH1cblxuICB2YXIgUmVzaXplID0ge1xuICAgIG5hbWU6ICdyZXNpemUnLFxuICAgIGNyZWF0ZTogZnVuY3Rpb24gY3JlYXRlKCkge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICBleHRlbmQkMShzd2lwZXIsIHtcbiAgICAgICAgcmVzaXplOiB7XG4gICAgICAgICAgcmVzaXplSGFuZGxlcjogZnVuY3Rpb24gcmVzaXplSGFuZGxlcigpIHtcbiAgICAgICAgICAgIGlmICghc3dpcGVyIHx8IHN3aXBlci5kZXN0cm95ZWQgfHwgIXN3aXBlci5pbml0aWFsaXplZCkgcmV0dXJuO1xuICAgICAgICAgICAgc3dpcGVyLmVtaXQoJ2JlZm9yZVJlc2l6ZScpO1xuICAgICAgICAgICAgc3dpcGVyLmVtaXQoJ3Jlc2l6ZScpO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgb3JpZW50YXRpb25DaGFuZ2VIYW5kbGVyOiBmdW5jdGlvbiBvcmllbnRhdGlvbkNoYW5nZUhhbmRsZXIoKSB7XG4gICAgICAgICAgICBpZiAoIXN3aXBlciB8fCBzd2lwZXIuZGVzdHJveWVkIHx8ICFzd2lwZXIuaW5pdGlhbGl6ZWQpIHJldHVybjtcbiAgICAgICAgICAgIHN3aXBlci5lbWl0KCdvcmllbnRhdGlvbmNoYW5nZScpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSxcbiAgICBvbjoge1xuICAgICAgaW5pdDogZnVuY3Rpb24gaW5pdChzd2lwZXIpIHtcbiAgICAgICAgdmFyIHdpbmRvdyA9IGdldFdpbmRvdygpOyAvLyBFbWl0IHJlc2l6ZVxuXG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCBzd2lwZXIucmVzaXplLnJlc2l6ZUhhbmRsZXIpOyAvLyBFbWl0IG9yaWVudGF0aW9uY2hhbmdlXG5cbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ29yaWVudGF0aW9uY2hhbmdlJywgc3dpcGVyLnJlc2l6ZS5vcmllbnRhdGlvbkNoYW5nZUhhbmRsZXIpO1xuICAgICAgfSxcbiAgICAgIGRlc3Ryb3k6IGZ1bmN0aW9uIGRlc3Ryb3koc3dpcGVyKSB7XG4gICAgICAgIHZhciB3aW5kb3cgPSBnZXRXaW5kb3coKTtcbiAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHN3aXBlci5yZXNpemUucmVzaXplSGFuZGxlcik7XG4gICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdvcmllbnRhdGlvbmNoYW5nZScsIHN3aXBlci5yZXNpemUub3JpZW50YXRpb25DaGFuZ2VIYW5kbGVyKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbiAgdmFyIE9ic2VydmVyID0ge1xuICAgIGF0dGFjaDogZnVuY3Rpb24gYXR0YWNoKHRhcmdldCwgb3B0aW9ucykge1xuICAgICAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkge1xuICAgICAgICBvcHRpb25zID0ge307XG4gICAgICB9XG5cbiAgICAgIHZhciB3aW5kb3cgPSBnZXRXaW5kb3coKTtcbiAgICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgICAgdmFyIE9ic2VydmVyRnVuYyA9IHdpbmRvdy5NdXRhdGlvbk9ic2VydmVyIHx8IHdpbmRvdy5XZWJraXRNdXRhdGlvbk9ic2VydmVyO1xuICAgICAgdmFyIG9ic2VydmVyID0gbmV3IE9ic2VydmVyRnVuYyhmdW5jdGlvbiAobXV0YXRpb25zKSB7XG4gICAgICAgIC8vIFRoZSBvYnNlcnZlclVwZGF0ZSBldmVudCBzaG91bGQgb25seSBiZSB0cmlnZ2VyZWRcbiAgICAgICAgLy8gb25jZSBkZXNwaXRlIHRoZSBudW1iZXIgb2YgbXV0YXRpb25zLiAgQWRkaXRpb25hbFxuICAgICAgICAvLyB0cmlnZ2VycyBhcmUgcmVkdW5kYW50IGFuZCBhcmUgdmVyeSBjb3N0bHlcbiAgICAgICAgaWYgKG11dGF0aW9ucy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICBzd2lwZXIuZW1pdCgnb2JzZXJ2ZXJVcGRhdGUnLCBtdXRhdGlvbnNbMF0pO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBvYnNlcnZlclVwZGF0ZSA9IGZ1bmN0aW9uIG9ic2VydmVyVXBkYXRlKCkge1xuICAgICAgICAgIHN3aXBlci5lbWl0KCdvYnNlcnZlclVwZGF0ZScsIG11dGF0aW9uc1swXSk7XG4gICAgICAgIH07XG5cbiAgICAgICAgaWYgKHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUpIHtcbiAgICAgICAgICB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKG9ic2VydmVyVXBkYXRlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB3aW5kb3cuc2V0VGltZW91dChvYnNlcnZlclVwZGF0ZSwgMCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgb2JzZXJ2ZXIub2JzZXJ2ZSh0YXJnZXQsIHtcbiAgICAgICAgYXR0cmlidXRlczogdHlwZW9mIG9wdGlvbnMuYXR0cmlidXRlcyA9PT0gJ3VuZGVmaW5lZCcgPyB0cnVlIDogb3B0aW9ucy5hdHRyaWJ1dGVzLFxuICAgICAgICBjaGlsZExpc3Q6IHR5cGVvZiBvcHRpb25zLmNoaWxkTGlzdCA9PT0gJ3VuZGVmaW5lZCcgPyB0cnVlIDogb3B0aW9ucy5jaGlsZExpc3QsXG4gICAgICAgIGNoYXJhY3RlckRhdGE6IHR5cGVvZiBvcHRpb25zLmNoYXJhY3RlckRhdGEgPT09ICd1bmRlZmluZWQnID8gdHJ1ZSA6IG9wdGlvbnMuY2hhcmFjdGVyRGF0YVxuICAgICAgfSk7XG4gICAgICBzd2lwZXIub2JzZXJ2ZXIub2JzZXJ2ZXJzLnB1c2gob2JzZXJ2ZXIpO1xuICAgIH0sXG4gICAgaW5pdDogZnVuY3Rpb24gaW5pdCgpIHtcbiAgICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgICAgaWYgKCFzd2lwZXIuc3VwcG9ydC5vYnNlcnZlciB8fCAhc3dpcGVyLnBhcmFtcy5vYnNlcnZlcikgcmV0dXJuO1xuXG4gICAgICBpZiAoc3dpcGVyLnBhcmFtcy5vYnNlcnZlUGFyZW50cykge1xuICAgICAgICB2YXIgY29udGFpbmVyUGFyZW50cyA9IHN3aXBlci4kZWwucGFyZW50cygpO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY29udGFpbmVyUGFyZW50cy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICAgIHN3aXBlci5vYnNlcnZlci5hdHRhY2goY29udGFpbmVyUGFyZW50c1tpXSk7XG4gICAgICAgIH1cbiAgICAgIH0gLy8gT2JzZXJ2ZSBjb250YWluZXJcblxuXG4gICAgICBzd2lwZXIub2JzZXJ2ZXIuYXR0YWNoKHN3aXBlci4kZWxbMF0sIHtcbiAgICAgICAgY2hpbGRMaXN0OiBzd2lwZXIucGFyYW1zLm9ic2VydmVTbGlkZUNoaWxkcmVuXG4gICAgICB9KTsgLy8gT2JzZXJ2ZSB3cmFwcGVyXG5cbiAgICAgIHN3aXBlci5vYnNlcnZlci5hdHRhY2goc3dpcGVyLiR3cmFwcGVyRWxbMF0sIHtcbiAgICAgICAgYXR0cmlidXRlczogZmFsc2VcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZGVzdHJveTogZnVuY3Rpb24gZGVzdHJveSgpIHtcbiAgICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgICAgc3dpcGVyLm9ic2VydmVyLm9ic2VydmVycy5mb3JFYWNoKGZ1bmN0aW9uIChvYnNlcnZlcikge1xuICAgICAgICBvYnNlcnZlci5kaXNjb25uZWN0KCk7XG4gICAgICB9KTtcbiAgICAgIHN3aXBlci5vYnNlcnZlci5vYnNlcnZlcnMgPSBbXTtcbiAgICB9XG4gIH07XG4gIHZhciBPYnNlcnZlciQxID0ge1xuICAgIG5hbWU6ICdvYnNlcnZlcicsXG4gICAgcGFyYW1zOiB7XG4gICAgICBvYnNlcnZlcjogZmFsc2UsXG4gICAgICBvYnNlcnZlUGFyZW50czogZmFsc2UsXG4gICAgICBvYnNlcnZlU2xpZGVDaGlsZHJlbjogZmFsc2VcbiAgICB9LFxuICAgIGNyZWF0ZTogZnVuY3Rpb24gY3JlYXRlKCkge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICBiaW5kTW9kdWxlTWV0aG9kcyhzd2lwZXIsIHtcbiAgICAgICAgb2JzZXJ2ZXI6IF9leHRlbmRzKF9leHRlbmRzKHt9LCBPYnNlcnZlciksIHt9LCB7XG4gICAgICAgICAgb2JzZXJ2ZXJzOiBbXVxuICAgICAgICB9KVxuICAgICAgfSk7XG4gICAgfSxcbiAgICBvbjoge1xuICAgICAgaW5pdDogZnVuY3Rpb24gaW5pdChzd2lwZXIpIHtcbiAgICAgICAgc3dpcGVyLm9ic2VydmVyLmluaXQoKTtcbiAgICAgIH0sXG4gICAgICBkZXN0cm95OiBmdW5jdGlvbiBkZXN0cm95KHN3aXBlcikge1xuICAgICAgICBzd2lwZXIub2JzZXJ2ZXIuZGVzdHJveSgpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICB2YXIgbW9kdWxhciA9IHtcbiAgICB1c2VQYXJhbXM6IGZ1bmN0aW9uIHVzZVBhcmFtcyhpbnN0YW5jZVBhcmFtcykge1xuICAgICAgdmFyIGluc3RhbmNlID0gdGhpcztcbiAgICAgIGlmICghaW5zdGFuY2UubW9kdWxlcykgcmV0dXJuO1xuICAgICAgT2JqZWN0LmtleXMoaW5zdGFuY2UubW9kdWxlcykuZm9yRWFjaChmdW5jdGlvbiAobW9kdWxlTmFtZSkge1xuICAgICAgICB2YXIgbW9kdWxlID0gaW5zdGFuY2UubW9kdWxlc1ttb2R1bGVOYW1lXTsgLy8gRXh0ZW5kIHBhcmFtc1xuXG4gICAgICAgIGlmIChtb2R1bGUucGFyYW1zKSB7XG4gICAgICAgICAgZXh0ZW5kJDEoaW5zdGFuY2VQYXJhbXMsIG1vZHVsZS5wYXJhbXMpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9LFxuICAgIHVzZU1vZHVsZXM6IGZ1bmN0aW9uIHVzZU1vZHVsZXMobW9kdWxlc1BhcmFtcykge1xuICAgICAgaWYgKG1vZHVsZXNQYXJhbXMgPT09IHZvaWQgMCkge1xuICAgICAgICBtb2R1bGVzUGFyYW1zID0ge307XG4gICAgICB9XG5cbiAgICAgIHZhciBpbnN0YW5jZSA9IHRoaXM7XG4gICAgICBpZiAoIWluc3RhbmNlLm1vZHVsZXMpIHJldHVybjtcbiAgICAgIE9iamVjdC5rZXlzKGluc3RhbmNlLm1vZHVsZXMpLmZvckVhY2goZnVuY3Rpb24gKG1vZHVsZU5hbWUpIHtcbiAgICAgICAgdmFyIG1vZHVsZSA9IGluc3RhbmNlLm1vZHVsZXNbbW9kdWxlTmFtZV07XG4gICAgICAgIHZhciBtb2R1bGVQYXJhbXMgPSBtb2R1bGVzUGFyYW1zW21vZHVsZU5hbWVdIHx8IHt9OyAvLyBBZGQgZXZlbnQgbGlzdGVuZXJzXG5cbiAgICAgICAgaWYgKG1vZHVsZS5vbiAmJiBpbnN0YW5jZS5vbikge1xuICAgICAgICAgIE9iamVjdC5rZXlzKG1vZHVsZS5vbikuZm9yRWFjaChmdW5jdGlvbiAobW9kdWxlRXZlbnROYW1lKSB7XG4gICAgICAgICAgICBpbnN0YW5jZS5vbihtb2R1bGVFdmVudE5hbWUsIG1vZHVsZS5vblttb2R1bGVFdmVudE5hbWVdKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSAvLyBNb2R1bGUgY3JlYXRlIGNhbGxiYWNrXG5cblxuICAgICAgICBpZiAobW9kdWxlLmNyZWF0ZSkge1xuICAgICAgICAgIG1vZHVsZS5jcmVhdGUuYmluZChpbnN0YW5jZSkobW9kdWxlUGFyYW1zKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9O1xuXG4gIC8qIGVzbGludC1kaXNhYmxlIG5vLXVuZGVyc2NvcmUtZGFuZ2xlICovXG4gIHZhciBldmVudHNFbWl0dGVyID0ge1xuICAgIG9uOiBmdW5jdGlvbiBvbihldmVudHMsIGhhbmRsZXIsIHByaW9yaXR5KSB7XG4gICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICBpZiAodHlwZW9mIGhhbmRsZXIgIT09ICdmdW5jdGlvbicpIHJldHVybiBzZWxmO1xuICAgICAgdmFyIG1ldGhvZCA9IHByaW9yaXR5ID8gJ3Vuc2hpZnQnIDogJ3B1c2gnO1xuICAgICAgZXZlbnRzLnNwbGl0KCcgJykuZm9yRWFjaChmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgaWYgKCFzZWxmLmV2ZW50c0xpc3RlbmVyc1tldmVudF0pIHNlbGYuZXZlbnRzTGlzdGVuZXJzW2V2ZW50XSA9IFtdO1xuICAgICAgICBzZWxmLmV2ZW50c0xpc3RlbmVyc1tldmVudF1bbWV0aG9kXShoYW5kbGVyKTtcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIHNlbGY7XG4gICAgfSxcbiAgICBvbmNlOiBmdW5jdGlvbiBvbmNlKGV2ZW50cywgaGFuZGxlciwgcHJpb3JpdHkpIHtcbiAgICAgIHZhciBzZWxmID0gdGhpcztcbiAgICAgIGlmICh0eXBlb2YgaGFuZGxlciAhPT0gJ2Z1bmN0aW9uJykgcmV0dXJuIHNlbGY7XG5cbiAgICAgIGZ1bmN0aW9uIG9uY2VIYW5kbGVyKCkge1xuICAgICAgICBzZWxmLm9mZihldmVudHMsIG9uY2VIYW5kbGVyKTtcblxuICAgICAgICBpZiAob25jZUhhbmRsZXIuX19lbWl0dGVyUHJveHkpIHtcbiAgICAgICAgICBkZWxldGUgb25jZUhhbmRsZXIuX19lbWl0dGVyUHJveHk7XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgICAgICB9XG5cbiAgICAgICAgaGFuZGxlci5hcHBseShzZWxmLCBhcmdzKTtcbiAgICAgIH1cblxuICAgICAgb25jZUhhbmRsZXIuX19lbWl0dGVyUHJveHkgPSBoYW5kbGVyO1xuICAgICAgcmV0dXJuIHNlbGYub24oZXZlbnRzLCBvbmNlSGFuZGxlciwgcHJpb3JpdHkpO1xuICAgIH0sXG4gICAgb25Bbnk6IGZ1bmN0aW9uIG9uQW55KGhhbmRsZXIsIHByaW9yaXR5KSB7XG4gICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICBpZiAodHlwZW9mIGhhbmRsZXIgIT09ICdmdW5jdGlvbicpIHJldHVybiBzZWxmO1xuICAgICAgdmFyIG1ldGhvZCA9IHByaW9yaXR5ID8gJ3Vuc2hpZnQnIDogJ3B1c2gnO1xuXG4gICAgICBpZiAoc2VsZi5ldmVudHNBbnlMaXN0ZW5lcnMuaW5kZXhPZihoYW5kbGVyKSA8IDApIHtcbiAgICAgICAgc2VsZi5ldmVudHNBbnlMaXN0ZW5lcnNbbWV0aG9kXShoYW5kbGVyKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHNlbGY7XG4gICAgfSxcbiAgICBvZmZBbnk6IGZ1bmN0aW9uIG9mZkFueShoYW5kbGVyKSB7XG4gICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICBpZiAoIXNlbGYuZXZlbnRzQW55TGlzdGVuZXJzKSByZXR1cm4gc2VsZjtcbiAgICAgIHZhciBpbmRleCA9IHNlbGYuZXZlbnRzQW55TGlzdGVuZXJzLmluZGV4T2YoaGFuZGxlcik7XG5cbiAgICAgIGlmIChpbmRleCA+PSAwKSB7XG4gICAgICAgIHNlbGYuZXZlbnRzQW55TGlzdGVuZXJzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBzZWxmO1xuICAgIH0sXG4gICAgb2ZmOiBmdW5jdGlvbiBvZmYoZXZlbnRzLCBoYW5kbGVyKSB7XG4gICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICBpZiAoIXNlbGYuZXZlbnRzTGlzdGVuZXJzKSByZXR1cm4gc2VsZjtcbiAgICAgIGV2ZW50cy5zcGxpdCgnICcpLmZvckVhY2goZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgIGlmICh0eXBlb2YgaGFuZGxlciA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICBzZWxmLmV2ZW50c0xpc3RlbmVyc1tldmVudF0gPSBbXTtcbiAgICAgICAgfSBlbHNlIGlmIChzZWxmLmV2ZW50c0xpc3RlbmVyc1tldmVudF0pIHtcbiAgICAgICAgICBzZWxmLmV2ZW50c0xpc3RlbmVyc1tldmVudF0uZm9yRWFjaChmdW5jdGlvbiAoZXZlbnRIYW5kbGVyLCBpbmRleCkge1xuICAgICAgICAgICAgaWYgKGV2ZW50SGFuZGxlciA9PT0gaGFuZGxlciB8fCBldmVudEhhbmRsZXIuX19lbWl0dGVyUHJveHkgJiYgZXZlbnRIYW5kbGVyLl9fZW1pdHRlclByb3h5ID09PSBoYW5kbGVyKSB7XG4gICAgICAgICAgICAgIHNlbGYuZXZlbnRzTGlzdGVuZXJzW2V2ZW50XS5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBzZWxmO1xuICAgIH0sXG4gICAgZW1pdDogZnVuY3Rpb24gZW1pdCgpIHtcbiAgICAgIHZhciBzZWxmID0gdGhpcztcbiAgICAgIGlmICghc2VsZi5ldmVudHNMaXN0ZW5lcnMpIHJldHVybiBzZWxmO1xuICAgICAgdmFyIGV2ZW50cztcbiAgICAgIHZhciBkYXRhO1xuICAgICAgdmFyIGNvbnRleHQ7XG5cbiAgICAgIGZvciAodmFyIF9sZW4yID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuMiksIF9rZXkyID0gMDsgX2tleTIgPCBfbGVuMjsgX2tleTIrKykge1xuICAgICAgICBhcmdzW19rZXkyXSA9IGFyZ3VtZW50c1tfa2V5Ml07XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgYXJnc1swXSA9PT0gJ3N0cmluZycgfHwgQXJyYXkuaXNBcnJheShhcmdzWzBdKSkge1xuICAgICAgICBldmVudHMgPSBhcmdzWzBdO1xuICAgICAgICBkYXRhID0gYXJncy5zbGljZSgxLCBhcmdzLmxlbmd0aCk7XG4gICAgICAgIGNvbnRleHQgPSBzZWxmO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZXZlbnRzID0gYXJnc1swXS5ldmVudHM7XG4gICAgICAgIGRhdGEgPSBhcmdzWzBdLmRhdGE7XG4gICAgICAgIGNvbnRleHQgPSBhcmdzWzBdLmNvbnRleHQgfHwgc2VsZjtcbiAgICAgIH1cblxuICAgICAgZGF0YS51bnNoaWZ0KGNvbnRleHQpO1xuICAgICAgdmFyIGV2ZW50c0FycmF5ID0gQXJyYXkuaXNBcnJheShldmVudHMpID8gZXZlbnRzIDogZXZlbnRzLnNwbGl0KCcgJyk7XG4gICAgICBldmVudHNBcnJheS5mb3JFYWNoKGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICBpZiAoc2VsZi5ldmVudHNBbnlMaXN0ZW5lcnMgJiYgc2VsZi5ldmVudHNBbnlMaXN0ZW5lcnMubGVuZ3RoKSB7XG4gICAgICAgICAgc2VsZi5ldmVudHNBbnlMaXN0ZW5lcnMuZm9yRWFjaChmdW5jdGlvbiAoZXZlbnRIYW5kbGVyKSB7XG4gICAgICAgICAgICBldmVudEhhbmRsZXIuYXBwbHkoY29udGV4dCwgW2V2ZW50XS5jb25jYXQoZGF0YSkpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHNlbGYuZXZlbnRzTGlzdGVuZXJzICYmIHNlbGYuZXZlbnRzTGlzdGVuZXJzW2V2ZW50XSkge1xuICAgICAgICAgIHZhciBoYW5kbGVycyA9IFtdO1xuICAgICAgICAgIHNlbGYuZXZlbnRzTGlzdGVuZXJzW2V2ZW50XS5mb3JFYWNoKGZ1bmN0aW9uIChldmVudEhhbmRsZXIpIHtcbiAgICAgICAgICAgIGhhbmRsZXJzLnB1c2goZXZlbnRIYW5kbGVyKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBoYW5kbGVycy5mb3JFYWNoKGZ1bmN0aW9uIChldmVudEhhbmRsZXIpIHtcbiAgICAgICAgICAgIGV2ZW50SGFuZGxlci5hcHBseShjb250ZXh0LCBkYXRhKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICByZXR1cm4gc2VsZjtcbiAgICB9XG4gIH07XG5cbiAgZnVuY3Rpb24gdXBkYXRlU2l6ZSgpIHtcbiAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICB2YXIgd2lkdGg7XG4gICAgdmFyIGhlaWdodDtcbiAgICB2YXIgJGVsID0gc3dpcGVyLiRlbDtcblxuICAgIGlmICh0eXBlb2Ygc3dpcGVyLnBhcmFtcy53aWR0aCAhPT0gJ3VuZGVmaW5lZCcgJiYgc3dpcGVyLnBhcmFtcy53aWR0aCAhPT0gbnVsbCkge1xuICAgICAgd2lkdGggPSBzd2lwZXIucGFyYW1zLndpZHRoO1xuICAgIH0gZWxzZSB7XG4gICAgICB3aWR0aCA9ICRlbFswXS5jbGllbnRXaWR0aDtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIHN3aXBlci5wYXJhbXMuaGVpZ2h0ICE9PSAndW5kZWZpbmVkJyAmJiBzd2lwZXIucGFyYW1zLndpZHRoICE9PSBudWxsKSB7XG4gICAgICBoZWlnaHQgPSBzd2lwZXIucGFyYW1zLmhlaWdodDtcbiAgICB9IGVsc2Uge1xuICAgICAgaGVpZ2h0ID0gJGVsWzBdLmNsaWVudEhlaWdodDtcbiAgICB9XG5cbiAgICBpZiAod2lkdGggPT09IDAgJiYgc3dpcGVyLmlzSG9yaXpvbnRhbCgpIHx8IGhlaWdodCA9PT0gMCAmJiBzd2lwZXIuaXNWZXJ0aWNhbCgpKSB7XG4gICAgICByZXR1cm47XG4gICAgfSAvLyBTdWJ0cmFjdCBwYWRkaW5nc1xuXG5cbiAgICB3aWR0aCA9IHdpZHRoIC0gcGFyc2VJbnQoJGVsLmNzcygncGFkZGluZy1sZWZ0JykgfHwgMCwgMTApIC0gcGFyc2VJbnQoJGVsLmNzcygncGFkZGluZy1yaWdodCcpIHx8IDAsIDEwKTtcbiAgICBoZWlnaHQgPSBoZWlnaHQgLSBwYXJzZUludCgkZWwuY3NzKCdwYWRkaW5nLXRvcCcpIHx8IDAsIDEwKSAtIHBhcnNlSW50KCRlbC5jc3MoJ3BhZGRpbmctYm90dG9tJykgfHwgMCwgMTApO1xuICAgIGlmIChOdW1iZXIuaXNOYU4od2lkdGgpKSB3aWR0aCA9IDA7XG4gICAgaWYgKE51bWJlci5pc05hTihoZWlnaHQpKSBoZWlnaHQgPSAwO1xuICAgIGV4dGVuZCQxKHN3aXBlciwge1xuICAgICAgd2lkdGg6IHdpZHRoLFxuICAgICAgaGVpZ2h0OiBoZWlnaHQsXG4gICAgICBzaXplOiBzd2lwZXIuaXNIb3Jpem9udGFsKCkgPyB3aWR0aCA6IGhlaWdodFxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gdXBkYXRlU2xpZGVzKCkge1xuICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgIHZhciB3aW5kb3cgPSBnZXRXaW5kb3coKTtcbiAgICB2YXIgcGFyYW1zID0gc3dpcGVyLnBhcmFtcztcbiAgICB2YXIgJHdyYXBwZXJFbCA9IHN3aXBlci4kd3JhcHBlckVsLFxuICAgICAgICBzd2lwZXJTaXplID0gc3dpcGVyLnNpemUsXG4gICAgICAgIHJ0bCA9IHN3aXBlci5ydGxUcmFuc2xhdGUsXG4gICAgICAgIHdyb25nUlRMID0gc3dpcGVyLndyb25nUlRMO1xuICAgIHZhciBpc1ZpcnR1YWwgPSBzd2lwZXIudmlydHVhbCAmJiBwYXJhbXMudmlydHVhbC5lbmFibGVkO1xuICAgIHZhciBwcmV2aW91c1NsaWRlc0xlbmd0aCA9IGlzVmlydHVhbCA/IHN3aXBlci52aXJ0dWFsLnNsaWRlcy5sZW5ndGggOiBzd2lwZXIuc2xpZGVzLmxlbmd0aDtcbiAgICB2YXIgc2xpZGVzID0gJHdyYXBwZXJFbC5jaGlsZHJlbihcIi5cIiArIHN3aXBlci5wYXJhbXMuc2xpZGVDbGFzcyk7XG4gICAgdmFyIHNsaWRlc0xlbmd0aCA9IGlzVmlydHVhbCA/IHN3aXBlci52aXJ0dWFsLnNsaWRlcy5sZW5ndGggOiBzbGlkZXMubGVuZ3RoO1xuICAgIHZhciBzbmFwR3JpZCA9IFtdO1xuICAgIHZhciBzbGlkZXNHcmlkID0gW107XG4gICAgdmFyIHNsaWRlc1NpemVzR3JpZCA9IFtdO1xuXG4gICAgZnVuY3Rpb24gc2xpZGVzRm9yTWFyZ2luKHNsaWRlRWwsIHNsaWRlSW5kZXgpIHtcbiAgICAgIGlmICghcGFyYW1zLmNzc01vZGUpIHJldHVybiB0cnVlO1xuXG4gICAgICBpZiAoc2xpZGVJbmRleCA9PT0gc2xpZGVzLmxlbmd0aCAtIDEpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICB2YXIgb2Zmc2V0QmVmb3JlID0gcGFyYW1zLnNsaWRlc09mZnNldEJlZm9yZTtcblxuICAgIGlmICh0eXBlb2Ygb2Zmc2V0QmVmb3JlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBvZmZzZXRCZWZvcmUgPSBwYXJhbXMuc2xpZGVzT2Zmc2V0QmVmb3JlLmNhbGwoc3dpcGVyKTtcbiAgICB9XG5cbiAgICB2YXIgb2Zmc2V0QWZ0ZXIgPSBwYXJhbXMuc2xpZGVzT2Zmc2V0QWZ0ZXI7XG5cbiAgICBpZiAodHlwZW9mIG9mZnNldEFmdGVyID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBvZmZzZXRBZnRlciA9IHBhcmFtcy5zbGlkZXNPZmZzZXRBZnRlci5jYWxsKHN3aXBlcik7XG4gICAgfVxuXG4gICAgdmFyIHByZXZpb3VzU25hcEdyaWRMZW5ndGggPSBzd2lwZXIuc25hcEdyaWQubGVuZ3RoO1xuICAgIHZhciBwcmV2aW91c1NsaWRlc0dyaWRMZW5ndGggPSBzd2lwZXIuc25hcEdyaWQubGVuZ3RoO1xuICAgIHZhciBzcGFjZUJldHdlZW4gPSBwYXJhbXMuc3BhY2VCZXR3ZWVuO1xuICAgIHZhciBzbGlkZVBvc2l0aW9uID0gLW9mZnNldEJlZm9yZTtcbiAgICB2YXIgcHJldlNsaWRlU2l6ZSA9IDA7XG4gICAgdmFyIGluZGV4ID0gMDtcblxuICAgIGlmICh0eXBlb2Ygc3dpcGVyU2l6ZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIHNwYWNlQmV0d2VlbiA9PT0gJ3N0cmluZycgJiYgc3BhY2VCZXR3ZWVuLmluZGV4T2YoJyUnKSA+PSAwKSB7XG4gICAgICBzcGFjZUJldHdlZW4gPSBwYXJzZUZsb2F0KHNwYWNlQmV0d2Vlbi5yZXBsYWNlKCclJywgJycpKSAvIDEwMCAqIHN3aXBlclNpemU7XG4gICAgfVxuXG4gICAgc3dpcGVyLnZpcnR1YWxTaXplID0gLXNwYWNlQmV0d2VlbjsgLy8gcmVzZXQgbWFyZ2luc1xuXG4gICAgaWYgKHJ0bCkgc2xpZGVzLmNzcyh7XG4gICAgICBtYXJnaW5MZWZ0OiAnJyxcbiAgICAgIG1hcmdpblRvcDogJydcbiAgICB9KTtlbHNlIHNsaWRlcy5jc3Moe1xuICAgICAgbWFyZ2luUmlnaHQ6ICcnLFxuICAgICAgbWFyZ2luQm90dG9tOiAnJ1xuICAgIH0pO1xuICAgIHZhciBzbGlkZXNOdW1iZXJFdmVuVG9Sb3dzO1xuXG4gICAgaWYgKHBhcmFtcy5zbGlkZXNQZXJDb2x1bW4gPiAxKSB7XG4gICAgICBpZiAoTWF0aC5mbG9vcihzbGlkZXNMZW5ndGggLyBwYXJhbXMuc2xpZGVzUGVyQ29sdW1uKSA9PT0gc2xpZGVzTGVuZ3RoIC8gc3dpcGVyLnBhcmFtcy5zbGlkZXNQZXJDb2x1bW4pIHtcbiAgICAgICAgc2xpZGVzTnVtYmVyRXZlblRvUm93cyA9IHNsaWRlc0xlbmd0aDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNsaWRlc051bWJlckV2ZW5Ub1Jvd3MgPSBNYXRoLmNlaWwoc2xpZGVzTGVuZ3RoIC8gcGFyYW1zLnNsaWRlc1BlckNvbHVtbikgKiBwYXJhbXMuc2xpZGVzUGVyQ29sdW1uO1xuICAgICAgfVxuXG4gICAgICBpZiAocGFyYW1zLnNsaWRlc1BlclZpZXcgIT09ICdhdXRvJyAmJiBwYXJhbXMuc2xpZGVzUGVyQ29sdW1uRmlsbCA9PT0gJ3JvdycpIHtcbiAgICAgICAgc2xpZGVzTnVtYmVyRXZlblRvUm93cyA9IE1hdGgubWF4KHNsaWRlc051bWJlckV2ZW5Ub1Jvd3MsIHBhcmFtcy5zbGlkZXNQZXJWaWV3ICogcGFyYW1zLnNsaWRlc1BlckNvbHVtbik7XG4gICAgICB9XG4gICAgfSAvLyBDYWxjIHNsaWRlc1xuXG5cbiAgICB2YXIgc2xpZGVTaXplO1xuICAgIHZhciBzbGlkZXNQZXJDb2x1bW4gPSBwYXJhbXMuc2xpZGVzUGVyQ29sdW1uO1xuICAgIHZhciBzbGlkZXNQZXJSb3cgPSBzbGlkZXNOdW1iZXJFdmVuVG9Sb3dzIC8gc2xpZGVzUGVyQ29sdW1uO1xuICAgIHZhciBudW1GdWxsQ29sdW1ucyA9IE1hdGguZmxvb3Ioc2xpZGVzTGVuZ3RoIC8gcGFyYW1zLnNsaWRlc1BlckNvbHVtbik7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNsaWRlc0xlbmd0aDsgaSArPSAxKSB7XG4gICAgICBzbGlkZVNpemUgPSAwO1xuICAgICAgdmFyIHNsaWRlID0gc2xpZGVzLmVxKGkpO1xuXG4gICAgICBpZiAocGFyYW1zLnNsaWRlc1BlckNvbHVtbiA+IDEpIHtcbiAgICAgICAgLy8gU2V0IHNsaWRlcyBvcmRlclxuICAgICAgICB2YXIgbmV3U2xpZGVPcmRlckluZGV4ID0gdm9pZCAwO1xuICAgICAgICB2YXIgY29sdW1uID0gdm9pZCAwO1xuICAgICAgICB2YXIgcm93ID0gdm9pZCAwO1xuXG4gICAgICAgIGlmIChwYXJhbXMuc2xpZGVzUGVyQ29sdW1uRmlsbCA9PT0gJ3JvdycgJiYgcGFyYW1zLnNsaWRlc1Blckdyb3VwID4gMSkge1xuICAgICAgICAgIHZhciBncm91cEluZGV4ID0gTWF0aC5mbG9vcihpIC8gKHBhcmFtcy5zbGlkZXNQZXJHcm91cCAqIHBhcmFtcy5zbGlkZXNQZXJDb2x1bW4pKTtcbiAgICAgICAgICB2YXIgc2xpZGVJbmRleEluR3JvdXAgPSBpIC0gcGFyYW1zLnNsaWRlc1BlckNvbHVtbiAqIHBhcmFtcy5zbGlkZXNQZXJHcm91cCAqIGdyb3VwSW5kZXg7XG4gICAgICAgICAgdmFyIGNvbHVtbnNJbkdyb3VwID0gZ3JvdXBJbmRleCA9PT0gMCA/IHBhcmFtcy5zbGlkZXNQZXJHcm91cCA6IE1hdGgubWluKE1hdGguY2VpbCgoc2xpZGVzTGVuZ3RoIC0gZ3JvdXBJbmRleCAqIHNsaWRlc1BlckNvbHVtbiAqIHBhcmFtcy5zbGlkZXNQZXJHcm91cCkgLyBzbGlkZXNQZXJDb2x1bW4pLCBwYXJhbXMuc2xpZGVzUGVyR3JvdXApO1xuICAgICAgICAgIHJvdyA9IE1hdGguZmxvb3Ioc2xpZGVJbmRleEluR3JvdXAgLyBjb2x1bW5zSW5Hcm91cCk7XG4gICAgICAgICAgY29sdW1uID0gc2xpZGVJbmRleEluR3JvdXAgLSByb3cgKiBjb2x1bW5zSW5Hcm91cCArIGdyb3VwSW5kZXggKiBwYXJhbXMuc2xpZGVzUGVyR3JvdXA7XG4gICAgICAgICAgbmV3U2xpZGVPcmRlckluZGV4ID0gY29sdW1uICsgcm93ICogc2xpZGVzTnVtYmVyRXZlblRvUm93cyAvIHNsaWRlc1BlckNvbHVtbjtcbiAgICAgICAgICBzbGlkZS5jc3Moe1xuICAgICAgICAgICAgJy13ZWJraXQtYm94LW9yZGluYWwtZ3JvdXAnOiBuZXdTbGlkZU9yZGVySW5kZXgsXG4gICAgICAgICAgICAnLW1vei1ib3gtb3JkaW5hbC1ncm91cCc6IG5ld1NsaWRlT3JkZXJJbmRleCxcbiAgICAgICAgICAgICctbXMtZmxleC1vcmRlcic6IG5ld1NsaWRlT3JkZXJJbmRleCxcbiAgICAgICAgICAgICctd2Via2l0LW9yZGVyJzogbmV3U2xpZGVPcmRlckluZGV4LFxuICAgICAgICAgICAgb3JkZXI6IG5ld1NsaWRlT3JkZXJJbmRleFxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2UgaWYgKHBhcmFtcy5zbGlkZXNQZXJDb2x1bW5GaWxsID09PSAnY29sdW1uJykge1xuICAgICAgICAgIGNvbHVtbiA9IE1hdGguZmxvb3IoaSAvIHNsaWRlc1BlckNvbHVtbik7XG4gICAgICAgICAgcm93ID0gaSAtIGNvbHVtbiAqIHNsaWRlc1BlckNvbHVtbjtcblxuICAgICAgICAgIGlmIChjb2x1bW4gPiBudW1GdWxsQ29sdW1ucyB8fCBjb2x1bW4gPT09IG51bUZ1bGxDb2x1bW5zICYmIHJvdyA9PT0gc2xpZGVzUGVyQ29sdW1uIC0gMSkge1xuICAgICAgICAgICAgcm93ICs9IDE7XG5cbiAgICAgICAgICAgIGlmIChyb3cgPj0gc2xpZGVzUGVyQ29sdW1uKSB7XG4gICAgICAgICAgICAgIHJvdyA9IDA7XG4gICAgICAgICAgICAgIGNvbHVtbiArPSAxO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByb3cgPSBNYXRoLmZsb29yKGkgLyBzbGlkZXNQZXJSb3cpO1xuICAgICAgICAgIGNvbHVtbiA9IGkgLSByb3cgKiBzbGlkZXNQZXJSb3c7XG4gICAgICAgIH1cblxuICAgICAgICBzbGlkZS5jc3MoXCJtYXJnaW4tXCIgKyAoc3dpcGVyLmlzSG9yaXpvbnRhbCgpID8gJ3RvcCcgOiAnbGVmdCcpLCByb3cgIT09IDAgJiYgcGFyYW1zLnNwYWNlQmV0d2VlbiAmJiBwYXJhbXMuc3BhY2VCZXR3ZWVuICsgXCJweFwiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHNsaWRlLmNzcygnZGlzcGxheScpID09PSAnbm9uZScpIGNvbnRpbnVlOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG5cbiAgICAgIGlmIChwYXJhbXMuc2xpZGVzUGVyVmlldyA9PT0gJ2F1dG8nKSB7XG4gICAgICAgIHZhciBzbGlkZVN0eWxlcyA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHNsaWRlWzBdLCBudWxsKTtcbiAgICAgICAgdmFyIGN1cnJlbnRUcmFuc2Zvcm0gPSBzbGlkZVswXS5zdHlsZS50cmFuc2Zvcm07XG4gICAgICAgIHZhciBjdXJyZW50V2ViS2l0VHJhbnNmb3JtID0gc2xpZGVbMF0uc3R5bGUud2Via2l0VHJhbnNmb3JtO1xuXG4gICAgICAgIGlmIChjdXJyZW50VHJhbnNmb3JtKSB7XG4gICAgICAgICAgc2xpZGVbMF0uc3R5bGUudHJhbnNmb3JtID0gJ25vbmUnO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGN1cnJlbnRXZWJLaXRUcmFuc2Zvcm0pIHtcbiAgICAgICAgICBzbGlkZVswXS5zdHlsZS53ZWJraXRUcmFuc2Zvcm0gPSAnbm9uZSc7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAocGFyYW1zLnJvdW5kTGVuZ3Rocykge1xuICAgICAgICAgIHNsaWRlU2l6ZSA9IHN3aXBlci5pc0hvcml6b250YWwoKSA/IHNsaWRlLm91dGVyV2lkdGgodHJ1ZSkgOiBzbGlkZS5vdXRlckhlaWdodCh0cnVlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcbiAgICAgICAgICBpZiAoc3dpcGVyLmlzSG9yaXpvbnRhbCgpKSB7XG4gICAgICAgICAgICB2YXIgd2lkdGggPSBwYXJzZUZsb2F0KHNsaWRlU3R5bGVzLmdldFByb3BlcnR5VmFsdWUoJ3dpZHRoJykgfHwgMCk7XG4gICAgICAgICAgICB2YXIgcGFkZGluZ0xlZnQgPSBwYXJzZUZsb2F0KHNsaWRlU3R5bGVzLmdldFByb3BlcnR5VmFsdWUoJ3BhZGRpbmctbGVmdCcpIHx8IDApO1xuICAgICAgICAgICAgdmFyIHBhZGRpbmdSaWdodCA9IHBhcnNlRmxvYXQoc2xpZGVTdHlsZXMuZ2V0UHJvcGVydHlWYWx1ZSgncGFkZGluZy1yaWdodCcpIHx8IDApO1xuICAgICAgICAgICAgdmFyIG1hcmdpbkxlZnQgPSBwYXJzZUZsb2F0KHNsaWRlU3R5bGVzLmdldFByb3BlcnR5VmFsdWUoJ21hcmdpbi1sZWZ0JykgfHwgMCk7XG4gICAgICAgICAgICB2YXIgbWFyZ2luUmlnaHQgPSBwYXJzZUZsb2F0KHNsaWRlU3R5bGVzLmdldFByb3BlcnR5VmFsdWUoJ21hcmdpbi1yaWdodCcpIHx8IDApO1xuICAgICAgICAgICAgdmFyIGJveFNpemluZyA9IHNsaWRlU3R5bGVzLmdldFByb3BlcnR5VmFsdWUoJ2JveC1zaXppbmcnKTtcblxuICAgICAgICAgICAgaWYgKGJveFNpemluZyAmJiBib3hTaXppbmcgPT09ICdib3JkZXItYm94Jykge1xuICAgICAgICAgICAgICBzbGlkZVNpemUgPSB3aWR0aCArIG1hcmdpbkxlZnQgKyBtYXJnaW5SaWdodDtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHNsaWRlU2l6ZSA9IHdpZHRoICsgcGFkZGluZ0xlZnQgKyBwYWRkaW5nUmlnaHQgKyBtYXJnaW5MZWZ0ICsgbWFyZ2luUmlnaHQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHZhciBoZWlnaHQgPSBwYXJzZUZsb2F0KHNsaWRlU3R5bGVzLmdldFByb3BlcnR5VmFsdWUoJ2hlaWdodCcpIHx8IDApO1xuICAgICAgICAgICAgdmFyIHBhZGRpbmdUb3AgPSBwYXJzZUZsb2F0KHNsaWRlU3R5bGVzLmdldFByb3BlcnR5VmFsdWUoJ3BhZGRpbmctdG9wJykgfHwgMCk7XG4gICAgICAgICAgICB2YXIgcGFkZGluZ0JvdHRvbSA9IHBhcnNlRmxvYXQoc2xpZGVTdHlsZXMuZ2V0UHJvcGVydHlWYWx1ZSgncGFkZGluZy1ib3R0b20nKSB8fCAwKTtcbiAgICAgICAgICAgIHZhciBtYXJnaW5Ub3AgPSBwYXJzZUZsb2F0KHNsaWRlU3R5bGVzLmdldFByb3BlcnR5VmFsdWUoJ21hcmdpbi10b3AnKSB8fCAwKTtcbiAgICAgICAgICAgIHZhciBtYXJnaW5Cb3R0b20gPSBwYXJzZUZsb2F0KHNsaWRlU3R5bGVzLmdldFByb3BlcnR5VmFsdWUoJ21hcmdpbi1ib3R0b20nKSB8fCAwKTtcblxuICAgICAgICAgICAgdmFyIF9ib3hTaXppbmcgPSBzbGlkZVN0eWxlcy5nZXRQcm9wZXJ0eVZhbHVlKCdib3gtc2l6aW5nJyk7XG5cbiAgICAgICAgICAgIGlmIChfYm94U2l6aW5nICYmIF9ib3hTaXppbmcgPT09ICdib3JkZXItYm94Jykge1xuICAgICAgICAgICAgICBzbGlkZVNpemUgPSBoZWlnaHQgKyBtYXJnaW5Ub3AgKyBtYXJnaW5Cb3R0b207XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBzbGlkZVNpemUgPSBoZWlnaHQgKyBwYWRkaW5nVG9wICsgcGFkZGluZ0JvdHRvbSArIG1hcmdpblRvcCArIG1hcmdpbkJvdHRvbTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoY3VycmVudFRyYW5zZm9ybSkge1xuICAgICAgICAgIHNsaWRlWzBdLnN0eWxlLnRyYW5zZm9ybSA9IGN1cnJlbnRUcmFuc2Zvcm07XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoY3VycmVudFdlYktpdFRyYW5zZm9ybSkge1xuICAgICAgICAgIHNsaWRlWzBdLnN0eWxlLndlYmtpdFRyYW5zZm9ybSA9IGN1cnJlbnRXZWJLaXRUcmFuc2Zvcm07XG4gICAgICAgIH1cblxuICAgICAgICBpZiAocGFyYW1zLnJvdW5kTGVuZ3Rocykgc2xpZGVTaXplID0gTWF0aC5mbG9vcihzbGlkZVNpemUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2xpZGVTaXplID0gKHN3aXBlclNpemUgLSAocGFyYW1zLnNsaWRlc1BlclZpZXcgLSAxKSAqIHNwYWNlQmV0d2VlbikgLyBwYXJhbXMuc2xpZGVzUGVyVmlldztcbiAgICAgICAgaWYgKHBhcmFtcy5yb3VuZExlbmd0aHMpIHNsaWRlU2l6ZSA9IE1hdGguZmxvb3Ioc2xpZGVTaXplKTtcblxuICAgICAgICBpZiAoc2xpZGVzW2ldKSB7XG4gICAgICAgICAgaWYgKHN3aXBlci5pc0hvcml6b250YWwoKSkge1xuICAgICAgICAgICAgc2xpZGVzW2ldLnN0eWxlLndpZHRoID0gc2xpZGVTaXplICsgXCJweFwiO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzbGlkZXNbaV0uc3R5bGUuaGVpZ2h0ID0gc2xpZGVTaXplICsgXCJweFwiO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoc2xpZGVzW2ldKSB7XG4gICAgICAgIHNsaWRlc1tpXS5zd2lwZXJTbGlkZVNpemUgPSBzbGlkZVNpemU7XG4gICAgICB9XG5cbiAgICAgIHNsaWRlc1NpemVzR3JpZC5wdXNoKHNsaWRlU2l6ZSk7XG5cbiAgICAgIGlmIChwYXJhbXMuY2VudGVyZWRTbGlkZXMpIHtcbiAgICAgICAgc2xpZGVQb3NpdGlvbiA9IHNsaWRlUG9zaXRpb24gKyBzbGlkZVNpemUgLyAyICsgcHJldlNsaWRlU2l6ZSAvIDIgKyBzcGFjZUJldHdlZW47XG4gICAgICAgIGlmIChwcmV2U2xpZGVTaXplID09PSAwICYmIGkgIT09IDApIHNsaWRlUG9zaXRpb24gPSBzbGlkZVBvc2l0aW9uIC0gc3dpcGVyU2l6ZSAvIDIgLSBzcGFjZUJldHdlZW47XG4gICAgICAgIGlmIChpID09PSAwKSBzbGlkZVBvc2l0aW9uID0gc2xpZGVQb3NpdGlvbiAtIHN3aXBlclNpemUgLyAyIC0gc3BhY2VCZXR3ZWVuO1xuICAgICAgICBpZiAoTWF0aC5hYnMoc2xpZGVQb3NpdGlvbikgPCAxIC8gMTAwMCkgc2xpZGVQb3NpdGlvbiA9IDA7XG4gICAgICAgIGlmIChwYXJhbXMucm91bmRMZW5ndGhzKSBzbGlkZVBvc2l0aW9uID0gTWF0aC5mbG9vcihzbGlkZVBvc2l0aW9uKTtcbiAgICAgICAgaWYgKGluZGV4ICUgcGFyYW1zLnNsaWRlc1Blckdyb3VwID09PSAwKSBzbmFwR3JpZC5wdXNoKHNsaWRlUG9zaXRpb24pO1xuICAgICAgICBzbGlkZXNHcmlkLnB1c2goc2xpZGVQb3NpdGlvbik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAocGFyYW1zLnJvdW5kTGVuZ3Rocykgc2xpZGVQb3NpdGlvbiA9IE1hdGguZmxvb3Ioc2xpZGVQb3NpdGlvbik7XG4gICAgICAgIGlmICgoaW5kZXggLSBNYXRoLm1pbihzd2lwZXIucGFyYW1zLnNsaWRlc1Blckdyb3VwU2tpcCwgaW5kZXgpKSAlIHN3aXBlci5wYXJhbXMuc2xpZGVzUGVyR3JvdXAgPT09IDApIHNuYXBHcmlkLnB1c2goc2xpZGVQb3NpdGlvbik7XG4gICAgICAgIHNsaWRlc0dyaWQucHVzaChzbGlkZVBvc2l0aW9uKTtcbiAgICAgICAgc2xpZGVQb3NpdGlvbiA9IHNsaWRlUG9zaXRpb24gKyBzbGlkZVNpemUgKyBzcGFjZUJldHdlZW47XG4gICAgICB9XG5cbiAgICAgIHN3aXBlci52aXJ0dWFsU2l6ZSArPSBzbGlkZVNpemUgKyBzcGFjZUJldHdlZW47XG4gICAgICBwcmV2U2xpZGVTaXplID0gc2xpZGVTaXplO1xuICAgICAgaW5kZXggKz0gMTtcbiAgICB9XG5cbiAgICBzd2lwZXIudmlydHVhbFNpemUgPSBNYXRoLm1heChzd2lwZXIudmlydHVhbFNpemUsIHN3aXBlclNpemUpICsgb2Zmc2V0QWZ0ZXI7XG4gICAgdmFyIG5ld1NsaWRlc0dyaWQ7XG5cbiAgICBpZiAocnRsICYmIHdyb25nUlRMICYmIChwYXJhbXMuZWZmZWN0ID09PSAnc2xpZGUnIHx8IHBhcmFtcy5lZmZlY3QgPT09ICdjb3ZlcmZsb3cnKSkge1xuICAgICAgJHdyYXBwZXJFbC5jc3Moe1xuICAgICAgICB3aWR0aDogc3dpcGVyLnZpcnR1YWxTaXplICsgcGFyYW1zLnNwYWNlQmV0d2VlbiArIFwicHhcIlxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWYgKHBhcmFtcy5zZXRXcmFwcGVyU2l6ZSkge1xuICAgICAgaWYgKHN3aXBlci5pc0hvcml6b250YWwoKSkgJHdyYXBwZXJFbC5jc3Moe1xuICAgICAgICB3aWR0aDogc3dpcGVyLnZpcnR1YWxTaXplICsgcGFyYW1zLnNwYWNlQmV0d2VlbiArIFwicHhcIlxuICAgICAgfSk7ZWxzZSAkd3JhcHBlckVsLmNzcyh7XG4gICAgICAgIGhlaWdodDogc3dpcGVyLnZpcnR1YWxTaXplICsgcGFyYW1zLnNwYWNlQmV0d2VlbiArIFwicHhcIlxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWYgKHBhcmFtcy5zbGlkZXNQZXJDb2x1bW4gPiAxKSB7XG4gICAgICBzd2lwZXIudmlydHVhbFNpemUgPSAoc2xpZGVTaXplICsgcGFyYW1zLnNwYWNlQmV0d2VlbikgKiBzbGlkZXNOdW1iZXJFdmVuVG9Sb3dzO1xuICAgICAgc3dpcGVyLnZpcnR1YWxTaXplID0gTWF0aC5jZWlsKHN3aXBlci52aXJ0dWFsU2l6ZSAvIHBhcmFtcy5zbGlkZXNQZXJDb2x1bW4pIC0gcGFyYW1zLnNwYWNlQmV0d2VlbjtcbiAgICAgIGlmIChzd2lwZXIuaXNIb3Jpem9udGFsKCkpICR3cmFwcGVyRWwuY3NzKHtcbiAgICAgICAgd2lkdGg6IHN3aXBlci52aXJ0dWFsU2l6ZSArIHBhcmFtcy5zcGFjZUJldHdlZW4gKyBcInB4XCJcbiAgICAgIH0pO2Vsc2UgJHdyYXBwZXJFbC5jc3Moe1xuICAgICAgICBoZWlnaHQ6IHN3aXBlci52aXJ0dWFsU2l6ZSArIHBhcmFtcy5zcGFjZUJldHdlZW4gKyBcInB4XCJcbiAgICAgIH0pO1xuXG4gICAgICBpZiAocGFyYW1zLmNlbnRlcmVkU2xpZGVzKSB7XG4gICAgICAgIG5ld1NsaWRlc0dyaWQgPSBbXTtcblxuICAgICAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgc25hcEdyaWQubGVuZ3RoOyBfaSArPSAxKSB7XG4gICAgICAgICAgdmFyIHNsaWRlc0dyaWRJdGVtID0gc25hcEdyaWRbX2ldO1xuICAgICAgICAgIGlmIChwYXJhbXMucm91bmRMZW5ndGhzKSBzbGlkZXNHcmlkSXRlbSA9IE1hdGguZmxvb3Ioc2xpZGVzR3JpZEl0ZW0pO1xuICAgICAgICAgIGlmIChzbmFwR3JpZFtfaV0gPCBzd2lwZXIudmlydHVhbFNpemUgKyBzbmFwR3JpZFswXSkgbmV3U2xpZGVzR3JpZC5wdXNoKHNsaWRlc0dyaWRJdGVtKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHNuYXBHcmlkID0gbmV3U2xpZGVzR3JpZDtcbiAgICAgIH1cbiAgICB9IC8vIFJlbW92ZSBsYXN0IGdyaWQgZWxlbWVudHMgZGVwZW5kaW5nIG9uIHdpZHRoXG5cblxuICAgIGlmICghcGFyYW1zLmNlbnRlcmVkU2xpZGVzKSB7XG4gICAgICBuZXdTbGlkZXNHcmlkID0gW107XG5cbiAgICAgIGZvciAodmFyIF9pMiA9IDA7IF9pMiA8IHNuYXBHcmlkLmxlbmd0aDsgX2kyICs9IDEpIHtcbiAgICAgICAgdmFyIF9zbGlkZXNHcmlkSXRlbSA9IHNuYXBHcmlkW19pMl07XG4gICAgICAgIGlmIChwYXJhbXMucm91bmRMZW5ndGhzKSBfc2xpZGVzR3JpZEl0ZW0gPSBNYXRoLmZsb29yKF9zbGlkZXNHcmlkSXRlbSk7XG5cbiAgICAgICAgaWYgKHNuYXBHcmlkW19pMl0gPD0gc3dpcGVyLnZpcnR1YWxTaXplIC0gc3dpcGVyU2l6ZSkge1xuICAgICAgICAgIG5ld1NsaWRlc0dyaWQucHVzaChfc2xpZGVzR3JpZEl0ZW0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHNuYXBHcmlkID0gbmV3U2xpZGVzR3JpZDtcblxuICAgICAgaWYgKE1hdGguZmxvb3Ioc3dpcGVyLnZpcnR1YWxTaXplIC0gc3dpcGVyU2l6ZSkgLSBNYXRoLmZsb29yKHNuYXBHcmlkW3NuYXBHcmlkLmxlbmd0aCAtIDFdKSA+IDEpIHtcbiAgICAgICAgc25hcEdyaWQucHVzaChzd2lwZXIudmlydHVhbFNpemUgLSBzd2lwZXJTaXplKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoc25hcEdyaWQubGVuZ3RoID09PSAwKSBzbmFwR3JpZCA9IFswXTtcblxuICAgIGlmIChwYXJhbXMuc3BhY2VCZXR3ZWVuICE9PSAwKSB7XG4gICAgICBpZiAoc3dpcGVyLmlzSG9yaXpvbnRhbCgpKSB7XG4gICAgICAgIGlmIChydGwpIHNsaWRlcy5maWx0ZXIoc2xpZGVzRm9yTWFyZ2luKS5jc3Moe1xuICAgICAgICAgIG1hcmdpbkxlZnQ6IHNwYWNlQmV0d2VlbiArIFwicHhcIlxuICAgICAgICB9KTtlbHNlIHNsaWRlcy5maWx0ZXIoc2xpZGVzRm9yTWFyZ2luKS5jc3Moe1xuICAgICAgICAgIG1hcmdpblJpZ2h0OiBzcGFjZUJldHdlZW4gKyBcInB4XCJcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Ugc2xpZGVzLmZpbHRlcihzbGlkZXNGb3JNYXJnaW4pLmNzcyh7XG4gICAgICAgIG1hcmdpbkJvdHRvbTogc3BhY2VCZXR3ZWVuICsgXCJweFwiXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAocGFyYW1zLmNlbnRlcmVkU2xpZGVzICYmIHBhcmFtcy5jZW50ZXJlZFNsaWRlc0JvdW5kcykge1xuICAgICAgdmFyIGFsbFNsaWRlc1NpemUgPSAwO1xuICAgICAgc2xpZGVzU2l6ZXNHcmlkLmZvckVhY2goZnVuY3Rpb24gKHNsaWRlU2l6ZVZhbHVlKSB7XG4gICAgICAgIGFsbFNsaWRlc1NpemUgKz0gc2xpZGVTaXplVmFsdWUgKyAocGFyYW1zLnNwYWNlQmV0d2VlbiA/IHBhcmFtcy5zcGFjZUJldHdlZW4gOiAwKTtcbiAgICAgIH0pO1xuICAgICAgYWxsU2xpZGVzU2l6ZSAtPSBwYXJhbXMuc3BhY2VCZXR3ZWVuO1xuICAgICAgdmFyIG1heFNuYXAgPSBhbGxTbGlkZXNTaXplIC0gc3dpcGVyU2l6ZTtcbiAgICAgIHNuYXBHcmlkID0gc25hcEdyaWQubWFwKGZ1bmN0aW9uIChzbmFwKSB7XG4gICAgICAgIGlmIChzbmFwIDwgMCkgcmV0dXJuIC1vZmZzZXRCZWZvcmU7XG4gICAgICAgIGlmIChzbmFwID4gbWF4U25hcCkgcmV0dXJuIG1heFNuYXAgKyBvZmZzZXRBZnRlcjtcbiAgICAgICAgcmV0dXJuIHNuYXA7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAocGFyYW1zLmNlbnRlckluc3VmZmljaWVudFNsaWRlcykge1xuICAgICAgdmFyIF9hbGxTbGlkZXNTaXplID0gMDtcbiAgICAgIHNsaWRlc1NpemVzR3JpZC5mb3JFYWNoKGZ1bmN0aW9uIChzbGlkZVNpemVWYWx1ZSkge1xuICAgICAgICBfYWxsU2xpZGVzU2l6ZSArPSBzbGlkZVNpemVWYWx1ZSArIChwYXJhbXMuc3BhY2VCZXR3ZWVuID8gcGFyYW1zLnNwYWNlQmV0d2VlbiA6IDApO1xuICAgICAgfSk7XG4gICAgICBfYWxsU2xpZGVzU2l6ZSAtPSBwYXJhbXMuc3BhY2VCZXR3ZWVuO1xuXG4gICAgICBpZiAoX2FsbFNsaWRlc1NpemUgPCBzd2lwZXJTaXplKSB7XG4gICAgICAgIHZhciBhbGxTbGlkZXNPZmZzZXQgPSAoc3dpcGVyU2l6ZSAtIF9hbGxTbGlkZXNTaXplKSAvIDI7XG4gICAgICAgIHNuYXBHcmlkLmZvckVhY2goZnVuY3Rpb24gKHNuYXAsIHNuYXBJbmRleCkge1xuICAgICAgICAgIHNuYXBHcmlkW3NuYXBJbmRleF0gPSBzbmFwIC0gYWxsU2xpZGVzT2Zmc2V0O1xuICAgICAgICB9KTtcbiAgICAgICAgc2xpZGVzR3JpZC5mb3JFYWNoKGZ1bmN0aW9uIChzbmFwLCBzbmFwSW5kZXgpIHtcbiAgICAgICAgICBzbGlkZXNHcmlkW3NuYXBJbmRleF0gPSBzbmFwICsgYWxsU2xpZGVzT2Zmc2V0O1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBleHRlbmQkMShzd2lwZXIsIHtcbiAgICAgIHNsaWRlczogc2xpZGVzLFxuICAgICAgc25hcEdyaWQ6IHNuYXBHcmlkLFxuICAgICAgc2xpZGVzR3JpZDogc2xpZGVzR3JpZCxcbiAgICAgIHNsaWRlc1NpemVzR3JpZDogc2xpZGVzU2l6ZXNHcmlkXG4gICAgfSk7XG5cbiAgICBpZiAoc2xpZGVzTGVuZ3RoICE9PSBwcmV2aW91c1NsaWRlc0xlbmd0aCkge1xuICAgICAgc3dpcGVyLmVtaXQoJ3NsaWRlc0xlbmd0aENoYW5nZScpO1xuICAgIH1cblxuICAgIGlmIChzbmFwR3JpZC5sZW5ndGggIT09IHByZXZpb3VzU25hcEdyaWRMZW5ndGgpIHtcbiAgICAgIGlmIChzd2lwZXIucGFyYW1zLndhdGNoT3ZlcmZsb3cpIHN3aXBlci5jaGVja092ZXJmbG93KCk7XG4gICAgICBzd2lwZXIuZW1pdCgnc25hcEdyaWRMZW5ndGhDaGFuZ2UnKTtcbiAgICB9XG5cbiAgICBpZiAoc2xpZGVzR3JpZC5sZW5ndGggIT09IHByZXZpb3VzU2xpZGVzR3JpZExlbmd0aCkge1xuICAgICAgc3dpcGVyLmVtaXQoJ3NsaWRlc0dyaWRMZW5ndGhDaGFuZ2UnKTtcbiAgICB9XG5cbiAgICBpZiAocGFyYW1zLndhdGNoU2xpZGVzUHJvZ3Jlc3MgfHwgcGFyYW1zLndhdGNoU2xpZGVzVmlzaWJpbGl0eSkge1xuICAgICAgc3dpcGVyLnVwZGF0ZVNsaWRlc09mZnNldCgpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHVwZGF0ZUF1dG9IZWlnaHQoc3BlZWQpIHtcbiAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICB2YXIgYWN0aXZlU2xpZGVzID0gW107XG4gICAgdmFyIG5ld0hlaWdodCA9IDA7XG4gICAgdmFyIGk7XG5cbiAgICBpZiAodHlwZW9mIHNwZWVkID09PSAnbnVtYmVyJykge1xuICAgICAgc3dpcGVyLnNldFRyYW5zaXRpb24oc3BlZWQpO1xuICAgIH0gZWxzZSBpZiAoc3BlZWQgPT09IHRydWUpIHtcbiAgICAgIHN3aXBlci5zZXRUcmFuc2l0aW9uKHN3aXBlci5wYXJhbXMuc3BlZWQpO1xuICAgIH0gLy8gRmluZCBzbGlkZXMgY3VycmVudGx5IGluIHZpZXdcblxuXG4gICAgaWYgKHN3aXBlci5wYXJhbXMuc2xpZGVzUGVyVmlldyAhPT0gJ2F1dG8nICYmIHN3aXBlci5wYXJhbXMuc2xpZGVzUGVyVmlldyA+IDEpIHtcbiAgICAgIGlmIChzd2lwZXIucGFyYW1zLmNlbnRlcmVkU2xpZGVzKSB7XG4gICAgICAgIHN3aXBlci52aXNpYmxlU2xpZGVzLmVhY2goZnVuY3Rpb24gKHNsaWRlKSB7XG4gICAgICAgICAgYWN0aXZlU2xpZGVzLnB1c2goc2xpZGUpO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGZvciAoaSA9IDA7IGkgPCBNYXRoLmNlaWwoc3dpcGVyLnBhcmFtcy5zbGlkZXNQZXJWaWV3KTsgaSArPSAxKSB7XG4gICAgICAgICAgdmFyIGluZGV4ID0gc3dpcGVyLmFjdGl2ZUluZGV4ICsgaTtcbiAgICAgICAgICBpZiAoaW5kZXggPiBzd2lwZXIuc2xpZGVzLmxlbmd0aCkgYnJlYWs7XG4gICAgICAgICAgYWN0aXZlU2xpZGVzLnB1c2goc3dpcGVyLnNsaWRlcy5lcShpbmRleClbMF0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGFjdGl2ZVNsaWRlcy5wdXNoKHN3aXBlci5zbGlkZXMuZXEoc3dpcGVyLmFjdGl2ZUluZGV4KVswXSk7XG4gICAgfSAvLyBGaW5kIG5ldyBoZWlnaHQgZnJvbSBoaWdoZXN0IHNsaWRlIGluIHZpZXdcblxuXG4gICAgZm9yIChpID0gMDsgaSA8IGFjdGl2ZVNsaWRlcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgaWYgKHR5cGVvZiBhY3RpdmVTbGlkZXNbaV0gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHZhciBoZWlnaHQgPSBhY3RpdmVTbGlkZXNbaV0ub2Zmc2V0SGVpZ2h0O1xuICAgICAgICBuZXdIZWlnaHQgPSBoZWlnaHQgPiBuZXdIZWlnaHQgPyBoZWlnaHQgOiBuZXdIZWlnaHQ7XG4gICAgICB9XG4gICAgfSAvLyBVcGRhdGUgSGVpZ2h0XG5cblxuICAgIGlmIChuZXdIZWlnaHQpIHN3aXBlci4kd3JhcHBlckVsLmNzcygnaGVpZ2h0JywgbmV3SGVpZ2h0ICsgXCJweFwiKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHVwZGF0ZVNsaWRlc09mZnNldCgpIHtcbiAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICB2YXIgc2xpZGVzID0gc3dpcGVyLnNsaWRlcztcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc2xpZGVzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICBzbGlkZXNbaV0uc3dpcGVyU2xpZGVPZmZzZXQgPSBzd2lwZXIuaXNIb3Jpem9udGFsKCkgPyBzbGlkZXNbaV0ub2Zmc2V0TGVmdCA6IHNsaWRlc1tpXS5vZmZzZXRUb3A7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gdXBkYXRlU2xpZGVzUHJvZ3Jlc3ModHJhbnNsYXRlKSB7XG4gICAgaWYgKHRyYW5zbGF0ZSA9PT0gdm9pZCAwKSB7XG4gICAgICB0cmFuc2xhdGUgPSB0aGlzICYmIHRoaXMudHJhbnNsYXRlIHx8IDA7XG4gICAgfVxuXG4gICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgdmFyIHBhcmFtcyA9IHN3aXBlci5wYXJhbXM7XG4gICAgdmFyIHNsaWRlcyA9IHN3aXBlci5zbGlkZXMsXG4gICAgICAgIHJ0bCA9IHN3aXBlci5ydGxUcmFuc2xhdGU7XG4gICAgaWYgKHNsaWRlcy5sZW5ndGggPT09IDApIHJldHVybjtcbiAgICBpZiAodHlwZW9mIHNsaWRlc1swXS5zd2lwZXJTbGlkZU9mZnNldCA9PT0gJ3VuZGVmaW5lZCcpIHN3aXBlci51cGRhdGVTbGlkZXNPZmZzZXQoKTtcbiAgICB2YXIgb2Zmc2V0Q2VudGVyID0gLXRyYW5zbGF0ZTtcbiAgICBpZiAocnRsKSBvZmZzZXRDZW50ZXIgPSB0cmFuc2xhdGU7IC8vIFZpc2libGUgU2xpZGVzXG5cbiAgICBzbGlkZXMucmVtb3ZlQ2xhc3MocGFyYW1zLnNsaWRlVmlzaWJsZUNsYXNzKTtcbiAgICBzd2lwZXIudmlzaWJsZVNsaWRlc0luZGV4ZXMgPSBbXTtcbiAgICBzd2lwZXIudmlzaWJsZVNsaWRlcyA9IFtdO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzbGlkZXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIHZhciBzbGlkZSA9IHNsaWRlc1tpXTtcbiAgICAgIHZhciBzbGlkZVByb2dyZXNzID0gKG9mZnNldENlbnRlciArIChwYXJhbXMuY2VudGVyZWRTbGlkZXMgPyBzd2lwZXIubWluVHJhbnNsYXRlKCkgOiAwKSAtIHNsaWRlLnN3aXBlclNsaWRlT2Zmc2V0KSAvIChzbGlkZS5zd2lwZXJTbGlkZVNpemUgKyBwYXJhbXMuc3BhY2VCZXR3ZWVuKTtcblxuICAgICAgaWYgKHBhcmFtcy53YXRjaFNsaWRlc1Zpc2liaWxpdHkgfHwgcGFyYW1zLmNlbnRlcmVkU2xpZGVzICYmIHBhcmFtcy5hdXRvSGVpZ2h0KSB7XG4gICAgICAgIHZhciBzbGlkZUJlZm9yZSA9IC0ob2Zmc2V0Q2VudGVyIC0gc2xpZGUuc3dpcGVyU2xpZGVPZmZzZXQpO1xuICAgICAgICB2YXIgc2xpZGVBZnRlciA9IHNsaWRlQmVmb3JlICsgc3dpcGVyLnNsaWRlc1NpemVzR3JpZFtpXTtcbiAgICAgICAgdmFyIGlzVmlzaWJsZSA9IHNsaWRlQmVmb3JlID49IDAgJiYgc2xpZGVCZWZvcmUgPCBzd2lwZXIuc2l6ZSAtIDEgfHwgc2xpZGVBZnRlciA+IDEgJiYgc2xpZGVBZnRlciA8PSBzd2lwZXIuc2l6ZSB8fCBzbGlkZUJlZm9yZSA8PSAwICYmIHNsaWRlQWZ0ZXIgPj0gc3dpcGVyLnNpemU7XG5cbiAgICAgICAgaWYgKGlzVmlzaWJsZSkge1xuICAgICAgICAgIHN3aXBlci52aXNpYmxlU2xpZGVzLnB1c2goc2xpZGUpO1xuICAgICAgICAgIHN3aXBlci52aXNpYmxlU2xpZGVzSW5kZXhlcy5wdXNoKGkpO1xuICAgICAgICAgIHNsaWRlcy5lcShpKS5hZGRDbGFzcyhwYXJhbXMuc2xpZGVWaXNpYmxlQ2xhc3MpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHNsaWRlLnByb2dyZXNzID0gcnRsID8gLXNsaWRlUHJvZ3Jlc3MgOiBzbGlkZVByb2dyZXNzO1xuICAgIH1cblxuICAgIHN3aXBlci52aXNpYmxlU2xpZGVzID0gJChzd2lwZXIudmlzaWJsZVNsaWRlcyk7XG4gIH1cblxuICBmdW5jdGlvbiB1cGRhdGVQcm9ncmVzcyh0cmFuc2xhdGUpIHtcbiAgICB2YXIgc3dpcGVyID0gdGhpcztcblxuICAgIGlmICh0eXBlb2YgdHJhbnNsYXRlID09PSAndW5kZWZpbmVkJykge1xuICAgICAgdmFyIG11bHRpcGxpZXIgPSBzd2lwZXIucnRsVHJhbnNsYXRlID8gLTEgOiAxOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcblxuICAgICAgdHJhbnNsYXRlID0gc3dpcGVyICYmIHN3aXBlci50cmFuc2xhdGUgJiYgc3dpcGVyLnRyYW5zbGF0ZSAqIG11bHRpcGxpZXIgfHwgMDtcbiAgICB9XG5cbiAgICB2YXIgcGFyYW1zID0gc3dpcGVyLnBhcmFtcztcbiAgICB2YXIgdHJhbnNsYXRlc0RpZmYgPSBzd2lwZXIubWF4VHJhbnNsYXRlKCkgLSBzd2lwZXIubWluVHJhbnNsYXRlKCk7XG4gICAgdmFyIHByb2dyZXNzID0gc3dpcGVyLnByb2dyZXNzLFxuICAgICAgICBpc0JlZ2lubmluZyA9IHN3aXBlci5pc0JlZ2lubmluZyxcbiAgICAgICAgaXNFbmQgPSBzd2lwZXIuaXNFbmQ7XG4gICAgdmFyIHdhc0JlZ2lubmluZyA9IGlzQmVnaW5uaW5nO1xuICAgIHZhciB3YXNFbmQgPSBpc0VuZDtcblxuICAgIGlmICh0cmFuc2xhdGVzRGlmZiA9PT0gMCkge1xuICAgICAgcHJvZ3Jlc3MgPSAwO1xuICAgICAgaXNCZWdpbm5pbmcgPSB0cnVlO1xuICAgICAgaXNFbmQgPSB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICBwcm9ncmVzcyA9ICh0cmFuc2xhdGUgLSBzd2lwZXIubWluVHJhbnNsYXRlKCkpIC8gdHJhbnNsYXRlc0RpZmY7XG4gICAgICBpc0JlZ2lubmluZyA9IHByb2dyZXNzIDw9IDA7XG4gICAgICBpc0VuZCA9IHByb2dyZXNzID49IDE7XG4gICAgfVxuXG4gICAgZXh0ZW5kJDEoc3dpcGVyLCB7XG4gICAgICBwcm9ncmVzczogcHJvZ3Jlc3MsXG4gICAgICBpc0JlZ2lubmluZzogaXNCZWdpbm5pbmcsXG4gICAgICBpc0VuZDogaXNFbmRcbiAgICB9KTtcbiAgICBpZiAocGFyYW1zLndhdGNoU2xpZGVzUHJvZ3Jlc3MgfHwgcGFyYW1zLndhdGNoU2xpZGVzVmlzaWJpbGl0eSB8fCBwYXJhbXMuY2VudGVyZWRTbGlkZXMgJiYgcGFyYW1zLmF1dG9IZWlnaHQpIHN3aXBlci51cGRhdGVTbGlkZXNQcm9ncmVzcyh0cmFuc2xhdGUpO1xuXG4gICAgaWYgKGlzQmVnaW5uaW5nICYmICF3YXNCZWdpbm5pbmcpIHtcbiAgICAgIHN3aXBlci5lbWl0KCdyZWFjaEJlZ2lubmluZyB0b0VkZ2UnKTtcbiAgICB9XG5cbiAgICBpZiAoaXNFbmQgJiYgIXdhc0VuZCkge1xuICAgICAgc3dpcGVyLmVtaXQoJ3JlYWNoRW5kIHRvRWRnZScpO1xuICAgIH1cblxuICAgIGlmICh3YXNCZWdpbm5pbmcgJiYgIWlzQmVnaW5uaW5nIHx8IHdhc0VuZCAmJiAhaXNFbmQpIHtcbiAgICAgIHN3aXBlci5lbWl0KCdmcm9tRWRnZScpO1xuICAgIH1cblxuICAgIHN3aXBlci5lbWl0KCdwcm9ncmVzcycsIHByb2dyZXNzKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHVwZGF0ZVNsaWRlc0NsYXNzZXMoKSB7XG4gICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgdmFyIHNsaWRlcyA9IHN3aXBlci5zbGlkZXMsXG4gICAgICAgIHBhcmFtcyA9IHN3aXBlci5wYXJhbXMsXG4gICAgICAgICR3cmFwcGVyRWwgPSBzd2lwZXIuJHdyYXBwZXJFbCxcbiAgICAgICAgYWN0aXZlSW5kZXggPSBzd2lwZXIuYWN0aXZlSW5kZXgsXG4gICAgICAgIHJlYWxJbmRleCA9IHN3aXBlci5yZWFsSW5kZXg7XG4gICAgdmFyIGlzVmlydHVhbCA9IHN3aXBlci52aXJ0dWFsICYmIHBhcmFtcy52aXJ0dWFsLmVuYWJsZWQ7XG4gICAgc2xpZGVzLnJlbW92ZUNsYXNzKHBhcmFtcy5zbGlkZUFjdGl2ZUNsYXNzICsgXCIgXCIgKyBwYXJhbXMuc2xpZGVOZXh0Q2xhc3MgKyBcIiBcIiArIHBhcmFtcy5zbGlkZVByZXZDbGFzcyArIFwiIFwiICsgcGFyYW1zLnNsaWRlRHVwbGljYXRlQWN0aXZlQ2xhc3MgKyBcIiBcIiArIHBhcmFtcy5zbGlkZUR1cGxpY2F0ZU5leHRDbGFzcyArIFwiIFwiICsgcGFyYW1zLnNsaWRlRHVwbGljYXRlUHJldkNsYXNzKTtcbiAgICB2YXIgYWN0aXZlU2xpZGU7XG5cbiAgICBpZiAoaXNWaXJ0dWFsKSB7XG4gICAgICBhY3RpdmVTbGlkZSA9IHN3aXBlci4kd3JhcHBlckVsLmZpbmQoXCIuXCIgKyBwYXJhbXMuc2xpZGVDbGFzcyArIFwiW2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4PVxcXCJcIiArIGFjdGl2ZUluZGV4ICsgXCJcXFwiXVwiKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYWN0aXZlU2xpZGUgPSBzbGlkZXMuZXEoYWN0aXZlSW5kZXgpO1xuICAgIH0gLy8gQWN0aXZlIGNsYXNzZXNcblxuXG4gICAgYWN0aXZlU2xpZGUuYWRkQ2xhc3MocGFyYW1zLnNsaWRlQWN0aXZlQ2xhc3MpO1xuXG4gICAgaWYgKHBhcmFtcy5sb29wKSB7XG4gICAgICAvLyBEdXBsaWNhdGUgdG8gYWxsIGxvb3BlZCBzbGlkZXNcbiAgICAgIGlmIChhY3RpdmVTbGlkZS5oYXNDbGFzcyhwYXJhbXMuc2xpZGVEdXBsaWNhdGVDbGFzcykpIHtcbiAgICAgICAgJHdyYXBwZXJFbC5jaGlsZHJlbihcIi5cIiArIHBhcmFtcy5zbGlkZUNsYXNzICsgXCI6bm90KC5cIiArIHBhcmFtcy5zbGlkZUR1cGxpY2F0ZUNsYXNzICsgXCIpW2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4PVxcXCJcIiArIHJlYWxJbmRleCArIFwiXFxcIl1cIikuYWRkQ2xhc3MocGFyYW1zLnNsaWRlRHVwbGljYXRlQWN0aXZlQ2xhc3MpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgJHdyYXBwZXJFbC5jaGlsZHJlbihcIi5cIiArIHBhcmFtcy5zbGlkZUNsYXNzICsgXCIuXCIgKyBwYXJhbXMuc2xpZGVEdXBsaWNhdGVDbGFzcyArIFwiW2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4PVxcXCJcIiArIHJlYWxJbmRleCArIFwiXFxcIl1cIikuYWRkQ2xhc3MocGFyYW1zLnNsaWRlRHVwbGljYXRlQWN0aXZlQ2xhc3MpO1xuICAgICAgfVxuICAgIH0gLy8gTmV4dCBTbGlkZVxuXG5cbiAgICB2YXIgbmV4dFNsaWRlID0gYWN0aXZlU2xpZGUubmV4dEFsbChcIi5cIiArIHBhcmFtcy5zbGlkZUNsYXNzKS5lcSgwKS5hZGRDbGFzcyhwYXJhbXMuc2xpZGVOZXh0Q2xhc3MpO1xuXG4gICAgaWYgKHBhcmFtcy5sb29wICYmIG5leHRTbGlkZS5sZW5ndGggPT09IDApIHtcbiAgICAgIG5leHRTbGlkZSA9IHNsaWRlcy5lcSgwKTtcbiAgICAgIG5leHRTbGlkZS5hZGRDbGFzcyhwYXJhbXMuc2xpZGVOZXh0Q2xhc3MpO1xuICAgIH0gLy8gUHJldiBTbGlkZVxuXG5cbiAgICB2YXIgcHJldlNsaWRlID0gYWN0aXZlU2xpZGUucHJldkFsbChcIi5cIiArIHBhcmFtcy5zbGlkZUNsYXNzKS5lcSgwKS5hZGRDbGFzcyhwYXJhbXMuc2xpZGVQcmV2Q2xhc3MpO1xuXG4gICAgaWYgKHBhcmFtcy5sb29wICYmIHByZXZTbGlkZS5sZW5ndGggPT09IDApIHtcbiAgICAgIHByZXZTbGlkZSA9IHNsaWRlcy5lcSgtMSk7XG4gICAgICBwcmV2U2xpZGUuYWRkQ2xhc3MocGFyYW1zLnNsaWRlUHJldkNsYXNzKTtcbiAgICB9XG5cbiAgICBpZiAocGFyYW1zLmxvb3ApIHtcbiAgICAgIC8vIER1cGxpY2F0ZSB0byBhbGwgbG9vcGVkIHNsaWRlc1xuICAgICAgaWYgKG5leHRTbGlkZS5oYXNDbGFzcyhwYXJhbXMuc2xpZGVEdXBsaWNhdGVDbGFzcykpIHtcbiAgICAgICAgJHdyYXBwZXJFbC5jaGlsZHJlbihcIi5cIiArIHBhcmFtcy5zbGlkZUNsYXNzICsgXCI6bm90KC5cIiArIHBhcmFtcy5zbGlkZUR1cGxpY2F0ZUNsYXNzICsgXCIpW2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4PVxcXCJcIiArIG5leHRTbGlkZS5hdHRyKCdkYXRhLXN3aXBlci1zbGlkZS1pbmRleCcpICsgXCJcXFwiXVwiKS5hZGRDbGFzcyhwYXJhbXMuc2xpZGVEdXBsaWNhdGVOZXh0Q2xhc3MpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgJHdyYXBwZXJFbC5jaGlsZHJlbihcIi5cIiArIHBhcmFtcy5zbGlkZUNsYXNzICsgXCIuXCIgKyBwYXJhbXMuc2xpZGVEdXBsaWNhdGVDbGFzcyArIFwiW2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4PVxcXCJcIiArIG5leHRTbGlkZS5hdHRyKCdkYXRhLXN3aXBlci1zbGlkZS1pbmRleCcpICsgXCJcXFwiXVwiKS5hZGRDbGFzcyhwYXJhbXMuc2xpZGVEdXBsaWNhdGVOZXh0Q2xhc3MpO1xuICAgICAgfVxuXG4gICAgICBpZiAocHJldlNsaWRlLmhhc0NsYXNzKHBhcmFtcy5zbGlkZUR1cGxpY2F0ZUNsYXNzKSkge1xuICAgICAgICAkd3JhcHBlckVsLmNoaWxkcmVuKFwiLlwiICsgcGFyYW1zLnNsaWRlQ2xhc3MgKyBcIjpub3QoLlwiICsgcGFyYW1zLnNsaWRlRHVwbGljYXRlQ2xhc3MgKyBcIilbZGF0YS1zd2lwZXItc2xpZGUtaW5kZXg9XFxcIlwiICsgcHJldlNsaWRlLmF0dHIoJ2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4JykgKyBcIlxcXCJdXCIpLmFkZENsYXNzKHBhcmFtcy5zbGlkZUR1cGxpY2F0ZVByZXZDbGFzcyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAkd3JhcHBlckVsLmNoaWxkcmVuKFwiLlwiICsgcGFyYW1zLnNsaWRlQ2xhc3MgKyBcIi5cIiArIHBhcmFtcy5zbGlkZUR1cGxpY2F0ZUNsYXNzICsgXCJbZGF0YS1zd2lwZXItc2xpZGUtaW5kZXg9XFxcIlwiICsgcHJldlNsaWRlLmF0dHIoJ2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4JykgKyBcIlxcXCJdXCIpLmFkZENsYXNzKHBhcmFtcy5zbGlkZUR1cGxpY2F0ZVByZXZDbGFzcyk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgc3dpcGVyLmVtaXRTbGlkZXNDbGFzc2VzKCk7XG4gIH1cblxuICBmdW5jdGlvbiB1cGRhdGVBY3RpdmVJbmRleChuZXdBY3RpdmVJbmRleCkge1xuICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgIHZhciB0cmFuc2xhdGUgPSBzd2lwZXIucnRsVHJhbnNsYXRlID8gc3dpcGVyLnRyYW5zbGF0ZSA6IC1zd2lwZXIudHJhbnNsYXRlO1xuICAgIHZhciBzbGlkZXNHcmlkID0gc3dpcGVyLnNsaWRlc0dyaWQsXG4gICAgICAgIHNuYXBHcmlkID0gc3dpcGVyLnNuYXBHcmlkLFxuICAgICAgICBwYXJhbXMgPSBzd2lwZXIucGFyYW1zLFxuICAgICAgICBwcmV2aW91c0luZGV4ID0gc3dpcGVyLmFjdGl2ZUluZGV4LFxuICAgICAgICBwcmV2aW91c1JlYWxJbmRleCA9IHN3aXBlci5yZWFsSW5kZXgsXG4gICAgICAgIHByZXZpb3VzU25hcEluZGV4ID0gc3dpcGVyLnNuYXBJbmRleDtcbiAgICB2YXIgYWN0aXZlSW5kZXggPSBuZXdBY3RpdmVJbmRleDtcbiAgICB2YXIgc25hcEluZGV4O1xuXG4gICAgaWYgKHR5cGVvZiBhY3RpdmVJbmRleCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc2xpZGVzR3JpZC5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICBpZiAodHlwZW9mIHNsaWRlc0dyaWRbaSArIDFdICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgIGlmICh0cmFuc2xhdGUgPj0gc2xpZGVzR3JpZFtpXSAmJiB0cmFuc2xhdGUgPCBzbGlkZXNHcmlkW2kgKyAxXSAtIChzbGlkZXNHcmlkW2kgKyAxXSAtIHNsaWRlc0dyaWRbaV0pIC8gMikge1xuICAgICAgICAgICAgYWN0aXZlSW5kZXggPSBpO1xuICAgICAgICAgIH0gZWxzZSBpZiAodHJhbnNsYXRlID49IHNsaWRlc0dyaWRbaV0gJiYgdHJhbnNsYXRlIDwgc2xpZGVzR3JpZFtpICsgMV0pIHtcbiAgICAgICAgICAgIGFjdGl2ZUluZGV4ID0gaSArIDE7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKHRyYW5zbGF0ZSA+PSBzbGlkZXNHcmlkW2ldKSB7XG4gICAgICAgICAgYWN0aXZlSW5kZXggPSBpO1xuICAgICAgICB9XG4gICAgICB9IC8vIE5vcm1hbGl6ZSBzbGlkZUluZGV4XG5cblxuICAgICAgaWYgKHBhcmFtcy5ub3JtYWxpemVTbGlkZUluZGV4KSB7XG4gICAgICAgIGlmIChhY3RpdmVJbmRleCA8IDAgfHwgdHlwZW9mIGFjdGl2ZUluZGV4ID09PSAndW5kZWZpbmVkJykgYWN0aXZlSW5kZXggPSAwO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChzbmFwR3JpZC5pbmRleE9mKHRyYW5zbGF0ZSkgPj0gMCkge1xuICAgICAgc25hcEluZGV4ID0gc25hcEdyaWQuaW5kZXhPZih0cmFuc2xhdGUpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgc2tpcCA9IE1hdGgubWluKHBhcmFtcy5zbGlkZXNQZXJHcm91cFNraXAsIGFjdGl2ZUluZGV4KTtcbiAgICAgIHNuYXBJbmRleCA9IHNraXAgKyBNYXRoLmZsb29yKChhY3RpdmVJbmRleCAtIHNraXApIC8gcGFyYW1zLnNsaWRlc1Blckdyb3VwKTtcbiAgICB9XG5cbiAgICBpZiAoc25hcEluZGV4ID49IHNuYXBHcmlkLmxlbmd0aCkgc25hcEluZGV4ID0gc25hcEdyaWQubGVuZ3RoIC0gMTtcblxuICAgIGlmIChhY3RpdmVJbmRleCA9PT0gcHJldmlvdXNJbmRleCkge1xuICAgICAgaWYgKHNuYXBJbmRleCAhPT0gcHJldmlvdXNTbmFwSW5kZXgpIHtcbiAgICAgICAgc3dpcGVyLnNuYXBJbmRleCA9IHNuYXBJbmRleDtcbiAgICAgICAgc3dpcGVyLmVtaXQoJ3NuYXBJbmRleENoYW5nZScpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm47XG4gICAgfSAvLyBHZXQgcmVhbCBpbmRleFxuXG5cbiAgICB2YXIgcmVhbEluZGV4ID0gcGFyc2VJbnQoc3dpcGVyLnNsaWRlcy5lcShhY3RpdmVJbmRleCkuYXR0cignZGF0YS1zd2lwZXItc2xpZGUtaW5kZXgnKSB8fCBhY3RpdmVJbmRleCwgMTApO1xuICAgIGV4dGVuZCQxKHN3aXBlciwge1xuICAgICAgc25hcEluZGV4OiBzbmFwSW5kZXgsXG4gICAgICByZWFsSW5kZXg6IHJlYWxJbmRleCxcbiAgICAgIHByZXZpb3VzSW5kZXg6IHByZXZpb3VzSW5kZXgsXG4gICAgICBhY3RpdmVJbmRleDogYWN0aXZlSW5kZXhcbiAgICB9KTtcbiAgICBzd2lwZXIuZW1pdCgnYWN0aXZlSW5kZXhDaGFuZ2UnKTtcbiAgICBzd2lwZXIuZW1pdCgnc25hcEluZGV4Q2hhbmdlJyk7XG5cbiAgICBpZiAocHJldmlvdXNSZWFsSW5kZXggIT09IHJlYWxJbmRleCkge1xuICAgICAgc3dpcGVyLmVtaXQoJ3JlYWxJbmRleENoYW5nZScpO1xuICAgIH1cblxuICAgIGlmIChzd2lwZXIuaW5pdGlhbGl6ZWQgfHwgc3dpcGVyLnBhcmFtcy5ydW5DYWxsYmFja3NPbkluaXQpIHtcbiAgICAgIHN3aXBlci5lbWl0KCdzbGlkZUNoYW5nZScpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHVwZGF0ZUNsaWNrZWRTbGlkZShlKSB7XG4gICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgdmFyIHBhcmFtcyA9IHN3aXBlci5wYXJhbXM7XG4gICAgdmFyIHNsaWRlID0gJChlLnRhcmdldCkuY2xvc2VzdChcIi5cIiArIHBhcmFtcy5zbGlkZUNsYXNzKVswXTtcbiAgICB2YXIgc2xpZGVGb3VuZCA9IGZhbHNlO1xuXG4gICAgaWYgKHNsaWRlKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHN3aXBlci5zbGlkZXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgaWYgKHN3aXBlci5zbGlkZXNbaV0gPT09IHNsaWRlKSBzbGlkZUZvdW5kID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoc2xpZGUgJiYgc2xpZGVGb3VuZCkge1xuICAgICAgc3dpcGVyLmNsaWNrZWRTbGlkZSA9IHNsaWRlO1xuXG4gICAgICBpZiAoc3dpcGVyLnZpcnR1YWwgJiYgc3dpcGVyLnBhcmFtcy52aXJ0dWFsLmVuYWJsZWQpIHtcbiAgICAgICAgc3dpcGVyLmNsaWNrZWRJbmRleCA9IHBhcnNlSW50KCQoc2xpZGUpLmF0dHIoJ2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4JyksIDEwKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHN3aXBlci5jbGlja2VkSW5kZXggPSAkKHNsaWRlKS5pbmRleCgpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBzd2lwZXIuY2xpY2tlZFNsaWRlID0gdW5kZWZpbmVkO1xuICAgICAgc3dpcGVyLmNsaWNrZWRJbmRleCA9IHVuZGVmaW5lZDtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAocGFyYW1zLnNsaWRlVG9DbGlja2VkU2xpZGUgJiYgc3dpcGVyLmNsaWNrZWRJbmRleCAhPT0gdW5kZWZpbmVkICYmIHN3aXBlci5jbGlja2VkSW5kZXggIT09IHN3aXBlci5hY3RpdmVJbmRleCkge1xuICAgICAgc3dpcGVyLnNsaWRlVG9DbGlja2VkU2xpZGUoKTtcbiAgICB9XG4gIH1cblxuICB2YXIgdXBkYXRlID0ge1xuICAgIHVwZGF0ZVNpemU6IHVwZGF0ZVNpemUsXG4gICAgdXBkYXRlU2xpZGVzOiB1cGRhdGVTbGlkZXMsXG4gICAgdXBkYXRlQXV0b0hlaWdodDogdXBkYXRlQXV0b0hlaWdodCxcbiAgICB1cGRhdGVTbGlkZXNPZmZzZXQ6IHVwZGF0ZVNsaWRlc09mZnNldCxcbiAgICB1cGRhdGVTbGlkZXNQcm9ncmVzczogdXBkYXRlU2xpZGVzUHJvZ3Jlc3MsXG4gICAgdXBkYXRlUHJvZ3Jlc3M6IHVwZGF0ZVByb2dyZXNzLFxuICAgIHVwZGF0ZVNsaWRlc0NsYXNzZXM6IHVwZGF0ZVNsaWRlc0NsYXNzZXMsXG4gICAgdXBkYXRlQWN0aXZlSW5kZXg6IHVwZGF0ZUFjdGl2ZUluZGV4LFxuICAgIHVwZGF0ZUNsaWNrZWRTbGlkZTogdXBkYXRlQ2xpY2tlZFNsaWRlXG4gIH07XG5cbiAgZnVuY3Rpb24gZ2V0U3dpcGVyVHJhbnNsYXRlKGF4aXMpIHtcbiAgICBpZiAoYXhpcyA9PT0gdm9pZCAwKSB7XG4gICAgICBheGlzID0gdGhpcy5pc0hvcml6b250YWwoKSA/ICd4JyA6ICd5JztcbiAgICB9XG5cbiAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICB2YXIgcGFyYW1zID0gc3dpcGVyLnBhcmFtcyxcbiAgICAgICAgcnRsID0gc3dpcGVyLnJ0bFRyYW5zbGF0ZSxcbiAgICAgICAgdHJhbnNsYXRlID0gc3dpcGVyLnRyYW5zbGF0ZSxcbiAgICAgICAgJHdyYXBwZXJFbCA9IHN3aXBlci4kd3JhcHBlckVsO1xuXG4gICAgaWYgKHBhcmFtcy52aXJ0dWFsVHJhbnNsYXRlKSB7XG4gICAgICByZXR1cm4gcnRsID8gLXRyYW5zbGF0ZSA6IHRyYW5zbGF0ZTtcbiAgICB9XG5cbiAgICBpZiAocGFyYW1zLmNzc01vZGUpIHtcbiAgICAgIHJldHVybiB0cmFuc2xhdGU7XG4gICAgfVxuXG4gICAgdmFyIGN1cnJlbnRUcmFuc2xhdGUgPSBnZXRUcmFuc2xhdGUoJHdyYXBwZXJFbFswXSwgYXhpcyk7XG4gICAgaWYgKHJ0bCkgY3VycmVudFRyYW5zbGF0ZSA9IC1jdXJyZW50VHJhbnNsYXRlO1xuICAgIHJldHVybiBjdXJyZW50VHJhbnNsYXRlIHx8IDA7XG4gIH1cblxuICBmdW5jdGlvbiBzZXRUcmFuc2xhdGUodHJhbnNsYXRlLCBieUNvbnRyb2xsZXIpIHtcbiAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICB2YXIgcnRsID0gc3dpcGVyLnJ0bFRyYW5zbGF0ZSxcbiAgICAgICAgcGFyYW1zID0gc3dpcGVyLnBhcmFtcyxcbiAgICAgICAgJHdyYXBwZXJFbCA9IHN3aXBlci4kd3JhcHBlckVsLFxuICAgICAgICB3cmFwcGVyRWwgPSBzd2lwZXIud3JhcHBlckVsLFxuICAgICAgICBwcm9ncmVzcyA9IHN3aXBlci5wcm9ncmVzcztcbiAgICB2YXIgeCA9IDA7XG4gICAgdmFyIHkgPSAwO1xuICAgIHZhciB6ID0gMDtcblxuICAgIGlmIChzd2lwZXIuaXNIb3Jpem9udGFsKCkpIHtcbiAgICAgIHggPSBydGwgPyAtdHJhbnNsYXRlIDogdHJhbnNsYXRlO1xuICAgIH0gZWxzZSB7XG4gICAgICB5ID0gdHJhbnNsYXRlO1xuICAgIH1cblxuICAgIGlmIChwYXJhbXMucm91bmRMZW5ndGhzKSB7XG4gICAgICB4ID0gTWF0aC5mbG9vcih4KTtcbiAgICAgIHkgPSBNYXRoLmZsb29yKHkpO1xuICAgIH1cblxuICAgIGlmIChwYXJhbXMuY3NzTW9kZSkge1xuICAgICAgd3JhcHBlckVsW3N3aXBlci5pc0hvcml6b250YWwoKSA/ICdzY3JvbGxMZWZ0JyA6ICdzY3JvbGxUb3AnXSA9IHN3aXBlci5pc0hvcml6b250YWwoKSA/IC14IDogLXk7XG4gICAgfSBlbHNlIGlmICghcGFyYW1zLnZpcnR1YWxUcmFuc2xhdGUpIHtcbiAgICAgICR3cmFwcGVyRWwudHJhbnNmb3JtKFwidHJhbnNsYXRlM2QoXCIgKyB4ICsgXCJweCwgXCIgKyB5ICsgXCJweCwgXCIgKyB6ICsgXCJweClcIik7XG4gICAgfVxuXG4gICAgc3dpcGVyLnByZXZpb3VzVHJhbnNsYXRlID0gc3dpcGVyLnRyYW5zbGF0ZTtcbiAgICBzd2lwZXIudHJhbnNsYXRlID0gc3dpcGVyLmlzSG9yaXpvbnRhbCgpID8geCA6IHk7IC8vIENoZWNrIGlmIHdlIG5lZWQgdG8gdXBkYXRlIHByb2dyZXNzXG5cbiAgICB2YXIgbmV3UHJvZ3Jlc3M7XG4gICAgdmFyIHRyYW5zbGF0ZXNEaWZmID0gc3dpcGVyLm1heFRyYW5zbGF0ZSgpIC0gc3dpcGVyLm1pblRyYW5zbGF0ZSgpO1xuXG4gICAgaWYgKHRyYW5zbGF0ZXNEaWZmID09PSAwKSB7XG4gICAgICBuZXdQcm9ncmVzcyA9IDA7XG4gICAgfSBlbHNlIHtcbiAgICAgIG5ld1Byb2dyZXNzID0gKHRyYW5zbGF0ZSAtIHN3aXBlci5taW5UcmFuc2xhdGUoKSkgLyB0cmFuc2xhdGVzRGlmZjtcbiAgICB9XG5cbiAgICBpZiAobmV3UHJvZ3Jlc3MgIT09IHByb2dyZXNzKSB7XG4gICAgICBzd2lwZXIudXBkYXRlUHJvZ3Jlc3ModHJhbnNsYXRlKTtcbiAgICB9XG5cbiAgICBzd2lwZXIuZW1pdCgnc2V0VHJhbnNsYXRlJywgc3dpcGVyLnRyYW5zbGF0ZSwgYnlDb250cm9sbGVyKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIG1pblRyYW5zbGF0ZSgpIHtcbiAgICByZXR1cm4gLXRoaXMuc25hcEdyaWRbMF07XG4gIH1cblxuICBmdW5jdGlvbiBtYXhUcmFuc2xhdGUoKSB7XG4gICAgcmV0dXJuIC10aGlzLnNuYXBHcmlkW3RoaXMuc25hcEdyaWQubGVuZ3RoIC0gMV07XG4gIH1cblxuICBmdW5jdGlvbiB0cmFuc2xhdGVUbyh0cmFuc2xhdGUsIHNwZWVkLCBydW5DYWxsYmFja3MsIHRyYW5zbGF0ZUJvdW5kcywgaW50ZXJuYWwpIHtcbiAgICBpZiAodHJhbnNsYXRlID09PSB2b2lkIDApIHtcbiAgICAgIHRyYW5zbGF0ZSA9IDA7XG4gICAgfVxuXG4gICAgaWYgKHNwZWVkID09PSB2b2lkIDApIHtcbiAgICAgIHNwZWVkID0gdGhpcy5wYXJhbXMuc3BlZWQ7XG4gICAgfVxuXG4gICAgaWYgKHJ1bkNhbGxiYWNrcyA9PT0gdm9pZCAwKSB7XG4gICAgICBydW5DYWxsYmFja3MgPSB0cnVlO1xuICAgIH1cblxuICAgIGlmICh0cmFuc2xhdGVCb3VuZHMgPT09IHZvaWQgMCkge1xuICAgICAgdHJhbnNsYXRlQm91bmRzID0gdHJ1ZTtcbiAgICB9XG5cbiAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICB2YXIgcGFyYW1zID0gc3dpcGVyLnBhcmFtcyxcbiAgICAgICAgd3JhcHBlckVsID0gc3dpcGVyLndyYXBwZXJFbDtcblxuICAgIGlmIChzd2lwZXIuYW5pbWF0aW5nICYmIHBhcmFtcy5wcmV2ZW50SW50ZXJhY3Rpb25PblRyYW5zaXRpb24pIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICB2YXIgbWluVHJhbnNsYXRlID0gc3dpcGVyLm1pblRyYW5zbGF0ZSgpO1xuICAgIHZhciBtYXhUcmFuc2xhdGUgPSBzd2lwZXIubWF4VHJhbnNsYXRlKCk7XG4gICAgdmFyIG5ld1RyYW5zbGF0ZTtcbiAgICBpZiAodHJhbnNsYXRlQm91bmRzICYmIHRyYW5zbGF0ZSA+IG1pblRyYW5zbGF0ZSkgbmV3VHJhbnNsYXRlID0gbWluVHJhbnNsYXRlO2Vsc2UgaWYgKHRyYW5zbGF0ZUJvdW5kcyAmJiB0cmFuc2xhdGUgPCBtYXhUcmFuc2xhdGUpIG5ld1RyYW5zbGF0ZSA9IG1heFRyYW5zbGF0ZTtlbHNlIG5ld1RyYW5zbGF0ZSA9IHRyYW5zbGF0ZTsgLy8gVXBkYXRlIHByb2dyZXNzXG5cbiAgICBzd2lwZXIudXBkYXRlUHJvZ3Jlc3MobmV3VHJhbnNsYXRlKTtcblxuICAgIGlmIChwYXJhbXMuY3NzTW9kZSkge1xuICAgICAgdmFyIGlzSCA9IHN3aXBlci5pc0hvcml6b250YWwoKTtcblxuICAgICAgaWYgKHNwZWVkID09PSAwKSB7XG4gICAgICAgIHdyYXBwZXJFbFtpc0ggPyAnc2Nyb2xsTGVmdCcgOiAnc2Nyb2xsVG9wJ10gPSAtbmV3VHJhbnNsYXRlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG4gICAgICAgIGlmICh3cmFwcGVyRWwuc2Nyb2xsVG8pIHtcbiAgICAgICAgICB2YXIgX3dyYXBwZXJFbCRzY3JvbGxUbztcblxuICAgICAgICAgIHdyYXBwZXJFbC5zY3JvbGxUbygoX3dyYXBwZXJFbCRzY3JvbGxUbyA9IHt9LCBfd3JhcHBlckVsJHNjcm9sbFRvW2lzSCA/ICdsZWZ0JyA6ICd0b3AnXSA9IC1uZXdUcmFuc2xhdGUsIF93cmFwcGVyRWwkc2Nyb2xsVG8uYmVoYXZpb3IgPSAnc21vb3RoJywgX3dyYXBwZXJFbCRzY3JvbGxUbykpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHdyYXBwZXJFbFtpc0ggPyAnc2Nyb2xsTGVmdCcgOiAnc2Nyb2xsVG9wJ10gPSAtbmV3VHJhbnNsYXRlO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIGlmIChzcGVlZCA9PT0gMCkge1xuICAgICAgc3dpcGVyLnNldFRyYW5zaXRpb24oMCk7XG4gICAgICBzd2lwZXIuc2V0VHJhbnNsYXRlKG5ld1RyYW5zbGF0ZSk7XG5cbiAgICAgIGlmIChydW5DYWxsYmFja3MpIHtcbiAgICAgICAgc3dpcGVyLmVtaXQoJ2JlZm9yZVRyYW5zaXRpb25TdGFydCcsIHNwZWVkLCBpbnRlcm5hbCk7XG4gICAgICAgIHN3aXBlci5lbWl0KCd0cmFuc2l0aW9uRW5kJyk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHN3aXBlci5zZXRUcmFuc2l0aW9uKHNwZWVkKTtcbiAgICAgIHN3aXBlci5zZXRUcmFuc2xhdGUobmV3VHJhbnNsYXRlKTtcblxuICAgICAgaWYgKHJ1bkNhbGxiYWNrcykge1xuICAgICAgICBzd2lwZXIuZW1pdCgnYmVmb3JlVHJhbnNpdGlvblN0YXJ0Jywgc3BlZWQsIGludGVybmFsKTtcbiAgICAgICAgc3dpcGVyLmVtaXQoJ3RyYW5zaXRpb25TdGFydCcpO1xuICAgICAgfVxuXG4gICAgICBpZiAoIXN3aXBlci5hbmltYXRpbmcpIHtcbiAgICAgICAgc3dpcGVyLmFuaW1hdGluZyA9IHRydWU7XG5cbiAgICAgICAgaWYgKCFzd2lwZXIub25UcmFuc2xhdGVUb1dyYXBwZXJUcmFuc2l0aW9uRW5kKSB7XG4gICAgICAgICAgc3dpcGVyLm9uVHJhbnNsYXRlVG9XcmFwcGVyVHJhbnNpdGlvbkVuZCA9IGZ1bmN0aW9uIHRyYW5zaXRpb25FbmQoZSkge1xuICAgICAgICAgICAgaWYgKCFzd2lwZXIgfHwgc3dpcGVyLmRlc3Ryb3llZCkgcmV0dXJuO1xuICAgICAgICAgICAgaWYgKGUudGFyZ2V0ICE9PSB0aGlzKSByZXR1cm47XG4gICAgICAgICAgICBzd2lwZXIuJHdyYXBwZXJFbFswXS5yZW1vdmVFdmVudExpc3RlbmVyKCd0cmFuc2l0aW9uZW5kJywgc3dpcGVyLm9uVHJhbnNsYXRlVG9XcmFwcGVyVHJhbnNpdGlvbkVuZCk7XG4gICAgICAgICAgICBzd2lwZXIuJHdyYXBwZXJFbFswXS5yZW1vdmVFdmVudExpc3RlbmVyKCd3ZWJraXRUcmFuc2l0aW9uRW5kJywgc3dpcGVyLm9uVHJhbnNsYXRlVG9XcmFwcGVyVHJhbnNpdGlvbkVuZCk7XG4gICAgICAgICAgICBzd2lwZXIub25UcmFuc2xhdGVUb1dyYXBwZXJUcmFuc2l0aW9uRW5kID0gbnVsbDtcbiAgICAgICAgICAgIGRlbGV0ZSBzd2lwZXIub25UcmFuc2xhdGVUb1dyYXBwZXJUcmFuc2l0aW9uRW5kO1xuXG4gICAgICAgICAgICBpZiAocnVuQ2FsbGJhY2tzKSB7XG4gICAgICAgICAgICAgIHN3aXBlci5lbWl0KCd0cmFuc2l0aW9uRW5kJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuXG4gICAgICAgIHN3aXBlci4kd3JhcHBlckVsWzBdLmFkZEV2ZW50TGlzdGVuZXIoJ3RyYW5zaXRpb25lbmQnLCBzd2lwZXIub25UcmFuc2xhdGVUb1dyYXBwZXJUcmFuc2l0aW9uRW5kKTtcbiAgICAgICAgc3dpcGVyLiR3cmFwcGVyRWxbMF0uYWRkRXZlbnRMaXN0ZW5lcignd2Via2l0VHJhbnNpdGlvbkVuZCcsIHN3aXBlci5vblRyYW5zbGF0ZVRvV3JhcHBlclRyYW5zaXRpb25FbmQpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgdmFyIHRyYW5zbGF0ZSA9IHtcbiAgICBnZXRUcmFuc2xhdGU6IGdldFN3aXBlclRyYW5zbGF0ZSxcbiAgICBzZXRUcmFuc2xhdGU6IHNldFRyYW5zbGF0ZSxcbiAgICBtaW5UcmFuc2xhdGU6IG1pblRyYW5zbGF0ZSxcbiAgICBtYXhUcmFuc2xhdGU6IG1heFRyYW5zbGF0ZSxcbiAgICB0cmFuc2xhdGVUbzogdHJhbnNsYXRlVG9cbiAgfTtcblxuICBmdW5jdGlvbiBzZXRUcmFuc2l0aW9uKGR1cmF0aW9uLCBieUNvbnRyb2xsZXIpIHtcbiAgICB2YXIgc3dpcGVyID0gdGhpcztcblxuICAgIGlmICghc3dpcGVyLnBhcmFtcy5jc3NNb2RlKSB7XG4gICAgICBzd2lwZXIuJHdyYXBwZXJFbC50cmFuc2l0aW9uKGR1cmF0aW9uKTtcbiAgICB9XG5cbiAgICBzd2lwZXIuZW1pdCgnc2V0VHJhbnNpdGlvbicsIGR1cmF0aW9uLCBieUNvbnRyb2xsZXIpO1xuICB9XG5cbiAgZnVuY3Rpb24gdHJhbnNpdGlvblN0YXJ0KHJ1bkNhbGxiYWNrcywgZGlyZWN0aW9uKSB7XG4gICAgaWYgKHJ1bkNhbGxiYWNrcyA9PT0gdm9pZCAwKSB7XG4gICAgICBydW5DYWxsYmFja3MgPSB0cnVlO1xuICAgIH1cblxuICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgIHZhciBhY3RpdmVJbmRleCA9IHN3aXBlci5hY3RpdmVJbmRleCxcbiAgICAgICAgcGFyYW1zID0gc3dpcGVyLnBhcmFtcyxcbiAgICAgICAgcHJldmlvdXNJbmRleCA9IHN3aXBlci5wcmV2aW91c0luZGV4O1xuICAgIGlmIChwYXJhbXMuY3NzTW9kZSkgcmV0dXJuO1xuXG4gICAgaWYgKHBhcmFtcy5hdXRvSGVpZ2h0KSB7XG4gICAgICBzd2lwZXIudXBkYXRlQXV0b0hlaWdodCgpO1xuICAgIH1cblxuICAgIHZhciBkaXIgPSBkaXJlY3Rpb247XG5cbiAgICBpZiAoIWRpcikge1xuICAgICAgaWYgKGFjdGl2ZUluZGV4ID4gcHJldmlvdXNJbmRleCkgZGlyID0gJ25leHQnO2Vsc2UgaWYgKGFjdGl2ZUluZGV4IDwgcHJldmlvdXNJbmRleCkgZGlyID0gJ3ByZXYnO2Vsc2UgZGlyID0gJ3Jlc2V0JztcbiAgICB9XG5cbiAgICBzd2lwZXIuZW1pdCgndHJhbnNpdGlvblN0YXJ0Jyk7XG5cbiAgICBpZiAocnVuQ2FsbGJhY2tzICYmIGFjdGl2ZUluZGV4ICE9PSBwcmV2aW91c0luZGV4KSB7XG4gICAgICBpZiAoZGlyID09PSAncmVzZXQnKSB7XG4gICAgICAgIHN3aXBlci5lbWl0KCdzbGlkZVJlc2V0VHJhbnNpdGlvblN0YXJ0Jyk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgc3dpcGVyLmVtaXQoJ3NsaWRlQ2hhbmdlVHJhbnNpdGlvblN0YXJ0Jyk7XG5cbiAgICAgIGlmIChkaXIgPT09ICduZXh0Jykge1xuICAgICAgICBzd2lwZXIuZW1pdCgnc2xpZGVOZXh0VHJhbnNpdGlvblN0YXJ0Jyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzd2lwZXIuZW1pdCgnc2xpZGVQcmV2VHJhbnNpdGlvblN0YXJ0Jyk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gdHJhbnNpdGlvbkVuZCQxKHJ1bkNhbGxiYWNrcywgZGlyZWN0aW9uKSB7XG4gICAgaWYgKHJ1bkNhbGxiYWNrcyA9PT0gdm9pZCAwKSB7XG4gICAgICBydW5DYWxsYmFja3MgPSB0cnVlO1xuICAgIH1cblxuICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgIHZhciBhY3RpdmVJbmRleCA9IHN3aXBlci5hY3RpdmVJbmRleCxcbiAgICAgICAgcHJldmlvdXNJbmRleCA9IHN3aXBlci5wcmV2aW91c0luZGV4LFxuICAgICAgICBwYXJhbXMgPSBzd2lwZXIucGFyYW1zO1xuICAgIHN3aXBlci5hbmltYXRpbmcgPSBmYWxzZTtcbiAgICBpZiAocGFyYW1zLmNzc01vZGUpIHJldHVybjtcbiAgICBzd2lwZXIuc2V0VHJhbnNpdGlvbigwKTtcbiAgICB2YXIgZGlyID0gZGlyZWN0aW9uO1xuXG4gICAgaWYgKCFkaXIpIHtcbiAgICAgIGlmIChhY3RpdmVJbmRleCA+IHByZXZpb3VzSW5kZXgpIGRpciA9ICduZXh0JztlbHNlIGlmIChhY3RpdmVJbmRleCA8IHByZXZpb3VzSW5kZXgpIGRpciA9ICdwcmV2JztlbHNlIGRpciA9ICdyZXNldCc7XG4gICAgfVxuXG4gICAgc3dpcGVyLmVtaXQoJ3RyYW5zaXRpb25FbmQnKTtcblxuICAgIGlmIChydW5DYWxsYmFja3MgJiYgYWN0aXZlSW5kZXggIT09IHByZXZpb3VzSW5kZXgpIHtcbiAgICAgIGlmIChkaXIgPT09ICdyZXNldCcpIHtcbiAgICAgICAgc3dpcGVyLmVtaXQoJ3NsaWRlUmVzZXRUcmFuc2l0aW9uRW5kJyk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgc3dpcGVyLmVtaXQoJ3NsaWRlQ2hhbmdlVHJhbnNpdGlvbkVuZCcpO1xuXG4gICAgICBpZiAoZGlyID09PSAnbmV4dCcpIHtcbiAgICAgICAgc3dpcGVyLmVtaXQoJ3NsaWRlTmV4dFRyYW5zaXRpb25FbmQnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHN3aXBlci5lbWl0KCdzbGlkZVByZXZUcmFuc2l0aW9uRW5kJyk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgdmFyIHRyYW5zaXRpb24kMSA9IHtcbiAgICBzZXRUcmFuc2l0aW9uOiBzZXRUcmFuc2l0aW9uLFxuICAgIHRyYW5zaXRpb25TdGFydDogdHJhbnNpdGlvblN0YXJ0LFxuICAgIHRyYW5zaXRpb25FbmQ6IHRyYW5zaXRpb25FbmQkMVxuICB9O1xuXG4gIGZ1bmN0aW9uIHNsaWRlVG8oaW5kZXgsIHNwZWVkLCBydW5DYWxsYmFja3MsIGludGVybmFsKSB7XG4gICAgaWYgKGluZGV4ID09PSB2b2lkIDApIHtcbiAgICAgIGluZGV4ID0gMDtcbiAgICB9XG5cbiAgICBpZiAoc3BlZWQgPT09IHZvaWQgMCkge1xuICAgICAgc3BlZWQgPSB0aGlzLnBhcmFtcy5zcGVlZDtcbiAgICB9XG5cbiAgICBpZiAocnVuQ2FsbGJhY2tzID09PSB2b2lkIDApIHtcbiAgICAgIHJ1bkNhbGxiYWNrcyA9IHRydWU7XG4gICAgfVxuXG4gICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgdmFyIHNsaWRlSW5kZXggPSBpbmRleDtcbiAgICBpZiAoc2xpZGVJbmRleCA8IDApIHNsaWRlSW5kZXggPSAwO1xuICAgIHZhciBwYXJhbXMgPSBzd2lwZXIucGFyYW1zLFxuICAgICAgICBzbmFwR3JpZCA9IHN3aXBlci5zbmFwR3JpZCxcbiAgICAgICAgc2xpZGVzR3JpZCA9IHN3aXBlci5zbGlkZXNHcmlkLFxuICAgICAgICBwcmV2aW91c0luZGV4ID0gc3dpcGVyLnByZXZpb3VzSW5kZXgsXG4gICAgICAgIGFjdGl2ZUluZGV4ID0gc3dpcGVyLmFjdGl2ZUluZGV4LFxuICAgICAgICBydGwgPSBzd2lwZXIucnRsVHJhbnNsYXRlLFxuICAgICAgICB3cmFwcGVyRWwgPSBzd2lwZXIud3JhcHBlckVsO1xuXG4gICAgaWYgKHN3aXBlci5hbmltYXRpbmcgJiYgcGFyYW1zLnByZXZlbnRJbnRlcmFjdGlvbk9uVHJhbnNpdGlvbikge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIHZhciBza2lwID0gTWF0aC5taW4oc3dpcGVyLnBhcmFtcy5zbGlkZXNQZXJHcm91cFNraXAsIHNsaWRlSW5kZXgpO1xuICAgIHZhciBzbmFwSW5kZXggPSBza2lwICsgTWF0aC5mbG9vcigoc2xpZGVJbmRleCAtIHNraXApIC8gc3dpcGVyLnBhcmFtcy5zbGlkZXNQZXJHcm91cCk7XG4gICAgaWYgKHNuYXBJbmRleCA+PSBzbmFwR3JpZC5sZW5ndGgpIHNuYXBJbmRleCA9IHNuYXBHcmlkLmxlbmd0aCAtIDE7XG5cbiAgICBpZiAoKGFjdGl2ZUluZGV4IHx8IHBhcmFtcy5pbml0aWFsU2xpZGUgfHwgMCkgPT09IChwcmV2aW91c0luZGV4IHx8IDApICYmIHJ1bkNhbGxiYWNrcykge1xuICAgICAgc3dpcGVyLmVtaXQoJ2JlZm9yZVNsaWRlQ2hhbmdlU3RhcnQnKTtcbiAgICB9XG5cbiAgICB2YXIgdHJhbnNsYXRlID0gLXNuYXBHcmlkW3NuYXBJbmRleF07IC8vIFVwZGF0ZSBwcm9ncmVzc1xuXG4gICAgc3dpcGVyLnVwZGF0ZVByb2dyZXNzKHRyYW5zbGF0ZSk7IC8vIE5vcm1hbGl6ZSBzbGlkZUluZGV4XG5cbiAgICBpZiAocGFyYW1zLm5vcm1hbGl6ZVNsaWRlSW5kZXgpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc2xpZGVzR3JpZC5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICBpZiAoLU1hdGguZmxvb3IodHJhbnNsYXRlICogMTAwKSA+PSBNYXRoLmZsb29yKHNsaWRlc0dyaWRbaV0gKiAxMDApKSB7XG4gICAgICAgICAgc2xpZGVJbmRleCA9IGk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IC8vIERpcmVjdGlvbnMgbG9ja3NcblxuXG4gICAgaWYgKHN3aXBlci5pbml0aWFsaXplZCAmJiBzbGlkZUluZGV4ICE9PSBhY3RpdmVJbmRleCkge1xuICAgICAgaWYgKCFzd2lwZXIuYWxsb3dTbGlkZU5leHQgJiYgdHJhbnNsYXRlIDwgc3dpcGVyLnRyYW5zbGF0ZSAmJiB0cmFuc2xhdGUgPCBzd2lwZXIubWluVHJhbnNsYXRlKCkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICBpZiAoIXN3aXBlci5hbGxvd1NsaWRlUHJldiAmJiB0cmFuc2xhdGUgPiBzd2lwZXIudHJhbnNsYXRlICYmIHRyYW5zbGF0ZSA+IHN3aXBlci5tYXhUcmFuc2xhdGUoKSkge1xuICAgICAgICBpZiAoKGFjdGl2ZUluZGV4IHx8IDApICE9PSBzbGlkZUluZGV4KSByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdmFyIGRpcmVjdGlvbjtcbiAgICBpZiAoc2xpZGVJbmRleCA+IGFjdGl2ZUluZGV4KSBkaXJlY3Rpb24gPSAnbmV4dCc7ZWxzZSBpZiAoc2xpZGVJbmRleCA8IGFjdGl2ZUluZGV4KSBkaXJlY3Rpb24gPSAncHJldic7ZWxzZSBkaXJlY3Rpb24gPSAncmVzZXQnOyAvLyBVcGRhdGUgSW5kZXhcblxuICAgIGlmIChydGwgJiYgLXRyYW5zbGF0ZSA9PT0gc3dpcGVyLnRyYW5zbGF0ZSB8fCAhcnRsICYmIHRyYW5zbGF0ZSA9PT0gc3dpcGVyLnRyYW5zbGF0ZSkge1xuICAgICAgc3dpcGVyLnVwZGF0ZUFjdGl2ZUluZGV4KHNsaWRlSW5kZXgpOyAvLyBVcGRhdGUgSGVpZ2h0XG5cbiAgICAgIGlmIChwYXJhbXMuYXV0b0hlaWdodCkge1xuICAgICAgICBzd2lwZXIudXBkYXRlQXV0b0hlaWdodCgpO1xuICAgICAgfVxuXG4gICAgICBzd2lwZXIudXBkYXRlU2xpZGVzQ2xhc3NlcygpO1xuXG4gICAgICBpZiAocGFyYW1zLmVmZmVjdCAhPT0gJ3NsaWRlJykge1xuICAgICAgICBzd2lwZXIuc2V0VHJhbnNsYXRlKHRyYW5zbGF0ZSk7XG4gICAgICB9XG5cbiAgICAgIGlmIChkaXJlY3Rpb24gIT09ICdyZXNldCcpIHtcbiAgICAgICAgc3dpcGVyLnRyYW5zaXRpb25TdGFydChydW5DYWxsYmFja3MsIGRpcmVjdGlvbik7XG4gICAgICAgIHN3aXBlci50cmFuc2l0aW9uRW5kKHJ1bkNhbGxiYWNrcywgZGlyZWN0aW9uKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGlmIChwYXJhbXMuY3NzTW9kZSkge1xuICAgICAgdmFyIGlzSCA9IHN3aXBlci5pc0hvcml6b250YWwoKTtcbiAgICAgIHZhciB0ID0gLXRyYW5zbGF0ZTtcblxuICAgICAgaWYgKHJ0bCkge1xuICAgICAgICB0ID0gd3JhcHBlckVsLnNjcm9sbFdpZHRoIC0gd3JhcHBlckVsLm9mZnNldFdpZHRoIC0gdDtcbiAgICAgIH1cblxuICAgICAgaWYgKHNwZWVkID09PSAwKSB7XG4gICAgICAgIHdyYXBwZXJFbFtpc0ggPyAnc2Nyb2xsTGVmdCcgOiAnc2Nyb2xsVG9wJ10gPSB0O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG4gICAgICAgIGlmICh3cmFwcGVyRWwuc2Nyb2xsVG8pIHtcbiAgICAgICAgICB2YXIgX3dyYXBwZXJFbCRzY3JvbGxUbztcblxuICAgICAgICAgIHdyYXBwZXJFbC5zY3JvbGxUbygoX3dyYXBwZXJFbCRzY3JvbGxUbyA9IHt9LCBfd3JhcHBlckVsJHNjcm9sbFRvW2lzSCA/ICdsZWZ0JyA6ICd0b3AnXSA9IHQsIF93cmFwcGVyRWwkc2Nyb2xsVG8uYmVoYXZpb3IgPSAnc21vb3RoJywgX3dyYXBwZXJFbCRzY3JvbGxUbykpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHdyYXBwZXJFbFtpc0ggPyAnc2Nyb2xsTGVmdCcgOiAnc2Nyb2xsVG9wJ10gPSB0O1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIGlmIChzcGVlZCA9PT0gMCkge1xuICAgICAgc3dpcGVyLnNldFRyYW5zaXRpb24oMCk7XG4gICAgICBzd2lwZXIuc2V0VHJhbnNsYXRlKHRyYW5zbGF0ZSk7XG4gICAgICBzd2lwZXIudXBkYXRlQWN0aXZlSW5kZXgoc2xpZGVJbmRleCk7XG4gICAgICBzd2lwZXIudXBkYXRlU2xpZGVzQ2xhc3NlcygpO1xuICAgICAgc3dpcGVyLmVtaXQoJ2JlZm9yZVRyYW5zaXRpb25TdGFydCcsIHNwZWVkLCBpbnRlcm5hbCk7XG4gICAgICBzd2lwZXIudHJhbnNpdGlvblN0YXJ0KHJ1bkNhbGxiYWNrcywgZGlyZWN0aW9uKTtcbiAgICAgIHN3aXBlci50cmFuc2l0aW9uRW5kKHJ1bkNhbGxiYWNrcywgZGlyZWN0aW9uKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3dpcGVyLnNldFRyYW5zaXRpb24oc3BlZWQpO1xuICAgICAgc3dpcGVyLnNldFRyYW5zbGF0ZSh0cmFuc2xhdGUpO1xuICAgICAgc3dpcGVyLnVwZGF0ZUFjdGl2ZUluZGV4KHNsaWRlSW5kZXgpO1xuICAgICAgc3dpcGVyLnVwZGF0ZVNsaWRlc0NsYXNzZXMoKTtcbiAgICAgIHN3aXBlci5lbWl0KCdiZWZvcmVUcmFuc2l0aW9uU3RhcnQnLCBzcGVlZCwgaW50ZXJuYWwpO1xuICAgICAgc3dpcGVyLnRyYW5zaXRpb25TdGFydChydW5DYWxsYmFja3MsIGRpcmVjdGlvbik7XG5cbiAgICAgIGlmICghc3dpcGVyLmFuaW1hdGluZykge1xuICAgICAgICBzd2lwZXIuYW5pbWF0aW5nID0gdHJ1ZTtcblxuICAgICAgICBpZiAoIXN3aXBlci5vblNsaWRlVG9XcmFwcGVyVHJhbnNpdGlvbkVuZCkge1xuICAgICAgICAgIHN3aXBlci5vblNsaWRlVG9XcmFwcGVyVHJhbnNpdGlvbkVuZCA9IGZ1bmN0aW9uIHRyYW5zaXRpb25FbmQoZSkge1xuICAgICAgICAgICAgaWYgKCFzd2lwZXIgfHwgc3dpcGVyLmRlc3Ryb3llZCkgcmV0dXJuO1xuICAgICAgICAgICAgaWYgKGUudGFyZ2V0ICE9PSB0aGlzKSByZXR1cm47XG4gICAgICAgICAgICBzd2lwZXIuJHdyYXBwZXJFbFswXS5yZW1vdmVFdmVudExpc3RlbmVyKCd0cmFuc2l0aW9uZW5kJywgc3dpcGVyLm9uU2xpZGVUb1dyYXBwZXJUcmFuc2l0aW9uRW5kKTtcbiAgICAgICAgICAgIHN3aXBlci4kd3JhcHBlckVsWzBdLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3dlYmtpdFRyYW5zaXRpb25FbmQnLCBzd2lwZXIub25TbGlkZVRvV3JhcHBlclRyYW5zaXRpb25FbmQpO1xuICAgICAgICAgICAgc3dpcGVyLm9uU2xpZGVUb1dyYXBwZXJUcmFuc2l0aW9uRW5kID0gbnVsbDtcbiAgICAgICAgICAgIGRlbGV0ZSBzd2lwZXIub25TbGlkZVRvV3JhcHBlclRyYW5zaXRpb25FbmQ7XG4gICAgICAgICAgICBzd2lwZXIudHJhbnNpdGlvbkVuZChydW5DYWxsYmFja3MsIGRpcmVjdGlvbik7XG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuXG4gICAgICAgIHN3aXBlci4kd3JhcHBlckVsWzBdLmFkZEV2ZW50TGlzdGVuZXIoJ3RyYW5zaXRpb25lbmQnLCBzd2lwZXIub25TbGlkZVRvV3JhcHBlclRyYW5zaXRpb25FbmQpO1xuICAgICAgICBzd2lwZXIuJHdyYXBwZXJFbFswXS5hZGRFdmVudExpc3RlbmVyKCd3ZWJraXRUcmFuc2l0aW9uRW5kJywgc3dpcGVyLm9uU2xpZGVUb1dyYXBwZXJUcmFuc2l0aW9uRW5kKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHNsaWRlVG9Mb29wKGluZGV4LCBzcGVlZCwgcnVuQ2FsbGJhY2tzLCBpbnRlcm5hbCkge1xuICAgIGlmIChpbmRleCA9PT0gdm9pZCAwKSB7XG4gICAgICBpbmRleCA9IDA7XG4gICAgfVxuXG4gICAgaWYgKHNwZWVkID09PSB2b2lkIDApIHtcbiAgICAgIHNwZWVkID0gdGhpcy5wYXJhbXMuc3BlZWQ7XG4gICAgfVxuXG4gICAgaWYgKHJ1bkNhbGxiYWNrcyA9PT0gdm9pZCAwKSB7XG4gICAgICBydW5DYWxsYmFja3MgPSB0cnVlO1xuICAgIH1cblxuICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgIHZhciBuZXdJbmRleCA9IGluZGV4O1xuXG4gICAgaWYgKHN3aXBlci5wYXJhbXMubG9vcCkge1xuICAgICAgbmV3SW5kZXggKz0gc3dpcGVyLmxvb3BlZFNsaWRlcztcbiAgICB9XG5cbiAgICByZXR1cm4gc3dpcGVyLnNsaWRlVG8obmV3SW5kZXgsIHNwZWVkLCBydW5DYWxsYmFja3MsIGludGVybmFsKTtcbiAgfVxuXG4gIC8qIGVzbGludCBuby11bnVzZWQtdmFyczogXCJvZmZcIiAqL1xuICBmdW5jdGlvbiBzbGlkZU5leHQoc3BlZWQsIHJ1bkNhbGxiYWNrcywgaW50ZXJuYWwpIHtcbiAgICBpZiAoc3BlZWQgPT09IHZvaWQgMCkge1xuICAgICAgc3BlZWQgPSB0aGlzLnBhcmFtcy5zcGVlZDtcbiAgICB9XG5cbiAgICBpZiAocnVuQ2FsbGJhY2tzID09PSB2b2lkIDApIHtcbiAgICAgIHJ1bkNhbGxiYWNrcyA9IHRydWU7XG4gICAgfVxuXG4gICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgdmFyIHBhcmFtcyA9IHN3aXBlci5wYXJhbXMsXG4gICAgICAgIGFuaW1hdGluZyA9IHN3aXBlci5hbmltYXRpbmc7XG4gICAgdmFyIGluY3JlbWVudCA9IHN3aXBlci5hY3RpdmVJbmRleCA8IHBhcmFtcy5zbGlkZXNQZXJHcm91cFNraXAgPyAxIDogcGFyYW1zLnNsaWRlc1Blckdyb3VwO1xuXG4gICAgaWYgKHBhcmFtcy5sb29wKSB7XG4gICAgICBpZiAoYW5pbWF0aW5nICYmIHBhcmFtcy5sb29wUHJldmVudHNTbGlkZSkgcmV0dXJuIGZhbHNlO1xuICAgICAgc3dpcGVyLmxvb3BGaXgoKTsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG5cbiAgICAgIHN3aXBlci5fY2xpZW50TGVmdCA9IHN3aXBlci4kd3JhcHBlckVsWzBdLmNsaWVudExlZnQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIHN3aXBlci5zbGlkZVRvKHN3aXBlci5hY3RpdmVJbmRleCArIGluY3JlbWVudCwgc3BlZWQsIHJ1bkNhbGxiYWNrcywgaW50ZXJuYWwpO1xuICB9XG5cbiAgLyogZXNsaW50IG5vLXVudXNlZC12YXJzOiBcIm9mZlwiICovXG4gIGZ1bmN0aW9uIHNsaWRlUHJldihzcGVlZCwgcnVuQ2FsbGJhY2tzLCBpbnRlcm5hbCkge1xuICAgIGlmIChzcGVlZCA9PT0gdm9pZCAwKSB7XG4gICAgICBzcGVlZCA9IHRoaXMucGFyYW1zLnNwZWVkO1xuICAgIH1cblxuICAgIGlmIChydW5DYWxsYmFja3MgPT09IHZvaWQgMCkge1xuICAgICAgcnVuQ2FsbGJhY2tzID0gdHJ1ZTtcbiAgICB9XG5cbiAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICB2YXIgcGFyYW1zID0gc3dpcGVyLnBhcmFtcyxcbiAgICAgICAgYW5pbWF0aW5nID0gc3dpcGVyLmFuaW1hdGluZyxcbiAgICAgICAgc25hcEdyaWQgPSBzd2lwZXIuc25hcEdyaWQsXG4gICAgICAgIHNsaWRlc0dyaWQgPSBzd2lwZXIuc2xpZGVzR3JpZCxcbiAgICAgICAgcnRsVHJhbnNsYXRlID0gc3dpcGVyLnJ0bFRyYW5zbGF0ZTtcblxuICAgIGlmIChwYXJhbXMubG9vcCkge1xuICAgICAgaWYgKGFuaW1hdGluZyAmJiBwYXJhbXMubG9vcFByZXZlbnRzU2xpZGUpIHJldHVybiBmYWxzZTtcbiAgICAgIHN3aXBlci5sb29wRml4KCk7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuXG4gICAgICBzd2lwZXIuX2NsaWVudExlZnQgPSBzd2lwZXIuJHdyYXBwZXJFbFswXS5jbGllbnRMZWZ0O1xuICAgIH1cblxuICAgIHZhciB0cmFuc2xhdGUgPSBydGxUcmFuc2xhdGUgPyBzd2lwZXIudHJhbnNsYXRlIDogLXN3aXBlci50cmFuc2xhdGU7XG5cbiAgICBmdW5jdGlvbiBub3JtYWxpemUodmFsKSB7XG4gICAgICBpZiAodmFsIDwgMCkgcmV0dXJuIC1NYXRoLmZsb29yKE1hdGguYWJzKHZhbCkpO1xuICAgICAgcmV0dXJuIE1hdGguZmxvb3IodmFsKTtcbiAgICB9XG5cbiAgICB2YXIgbm9ybWFsaXplZFRyYW5zbGF0ZSA9IG5vcm1hbGl6ZSh0cmFuc2xhdGUpO1xuICAgIHZhciBub3JtYWxpemVkU25hcEdyaWQgPSBzbmFwR3JpZC5tYXAoZnVuY3Rpb24gKHZhbCkge1xuICAgICAgcmV0dXJuIG5vcm1hbGl6ZSh2YWwpO1xuICAgIH0pO1xuICAgIHZhciBjdXJyZW50U25hcCA9IHNuYXBHcmlkW25vcm1hbGl6ZWRTbmFwR3JpZC5pbmRleE9mKG5vcm1hbGl6ZWRUcmFuc2xhdGUpXTtcbiAgICB2YXIgcHJldlNuYXAgPSBzbmFwR3JpZFtub3JtYWxpemVkU25hcEdyaWQuaW5kZXhPZihub3JtYWxpemVkVHJhbnNsYXRlKSAtIDFdO1xuXG4gICAgaWYgKHR5cGVvZiBwcmV2U25hcCA9PT0gJ3VuZGVmaW5lZCcgJiYgcGFyYW1zLmNzc01vZGUpIHtcbiAgICAgIHNuYXBHcmlkLmZvckVhY2goZnVuY3Rpb24gKHNuYXApIHtcbiAgICAgICAgaWYgKCFwcmV2U25hcCAmJiBub3JtYWxpemVkVHJhbnNsYXRlID49IHNuYXApIHByZXZTbmFwID0gc25hcDtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHZhciBwcmV2SW5kZXg7XG5cbiAgICBpZiAodHlwZW9mIHByZXZTbmFwICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgcHJldkluZGV4ID0gc2xpZGVzR3JpZC5pbmRleE9mKHByZXZTbmFwKTtcbiAgICAgIGlmIChwcmV2SW5kZXggPCAwKSBwcmV2SW5kZXggPSBzd2lwZXIuYWN0aXZlSW5kZXggLSAxO1xuICAgIH1cblxuICAgIHJldHVybiBzd2lwZXIuc2xpZGVUbyhwcmV2SW5kZXgsIHNwZWVkLCBydW5DYWxsYmFja3MsIGludGVybmFsKTtcbiAgfVxuXG4gIC8qIGVzbGludCBuby11bnVzZWQtdmFyczogXCJvZmZcIiAqL1xuICBmdW5jdGlvbiBzbGlkZVJlc2V0KHNwZWVkLCBydW5DYWxsYmFja3MsIGludGVybmFsKSB7XG4gICAgaWYgKHNwZWVkID09PSB2b2lkIDApIHtcbiAgICAgIHNwZWVkID0gdGhpcy5wYXJhbXMuc3BlZWQ7XG4gICAgfVxuXG4gICAgaWYgKHJ1bkNhbGxiYWNrcyA9PT0gdm9pZCAwKSB7XG4gICAgICBydW5DYWxsYmFja3MgPSB0cnVlO1xuICAgIH1cblxuICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgIHJldHVybiBzd2lwZXIuc2xpZGVUbyhzd2lwZXIuYWN0aXZlSW5kZXgsIHNwZWVkLCBydW5DYWxsYmFja3MsIGludGVybmFsKTtcbiAgfVxuXG4gIC8qIGVzbGludCBuby11bnVzZWQtdmFyczogXCJvZmZcIiAqL1xuICBmdW5jdGlvbiBzbGlkZVRvQ2xvc2VzdChzcGVlZCwgcnVuQ2FsbGJhY2tzLCBpbnRlcm5hbCwgdGhyZXNob2xkKSB7XG4gICAgaWYgKHNwZWVkID09PSB2b2lkIDApIHtcbiAgICAgIHNwZWVkID0gdGhpcy5wYXJhbXMuc3BlZWQ7XG4gICAgfVxuXG4gICAgaWYgKHJ1bkNhbGxiYWNrcyA9PT0gdm9pZCAwKSB7XG4gICAgICBydW5DYWxsYmFja3MgPSB0cnVlO1xuICAgIH1cblxuICAgIGlmICh0aHJlc2hvbGQgPT09IHZvaWQgMCkge1xuICAgICAgdGhyZXNob2xkID0gMC41O1xuICAgIH1cblxuICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgIHZhciBpbmRleCA9IHN3aXBlci5hY3RpdmVJbmRleDtcbiAgICB2YXIgc2tpcCA9IE1hdGgubWluKHN3aXBlci5wYXJhbXMuc2xpZGVzUGVyR3JvdXBTa2lwLCBpbmRleCk7XG4gICAgdmFyIHNuYXBJbmRleCA9IHNraXAgKyBNYXRoLmZsb29yKChpbmRleCAtIHNraXApIC8gc3dpcGVyLnBhcmFtcy5zbGlkZXNQZXJHcm91cCk7XG4gICAgdmFyIHRyYW5zbGF0ZSA9IHN3aXBlci5ydGxUcmFuc2xhdGUgPyBzd2lwZXIudHJhbnNsYXRlIDogLXN3aXBlci50cmFuc2xhdGU7XG5cbiAgICBpZiAodHJhbnNsYXRlID49IHN3aXBlci5zbmFwR3JpZFtzbmFwSW5kZXhdKSB7XG4gICAgICAvLyBUaGUgY3VycmVudCB0cmFuc2xhdGUgaXMgb24gb3IgYWZ0ZXIgdGhlIGN1cnJlbnQgc25hcCBpbmRleCwgc28gdGhlIGNob2ljZVxuICAgICAgLy8gaXMgYmV0d2VlbiB0aGUgY3VycmVudCBpbmRleCBhbmQgdGhlIG9uZSBhZnRlciBpdC5cbiAgICAgIHZhciBjdXJyZW50U25hcCA9IHN3aXBlci5zbmFwR3JpZFtzbmFwSW5kZXhdO1xuICAgICAgdmFyIG5leHRTbmFwID0gc3dpcGVyLnNuYXBHcmlkW3NuYXBJbmRleCArIDFdO1xuXG4gICAgICBpZiAodHJhbnNsYXRlIC0gY3VycmVudFNuYXAgPiAobmV4dFNuYXAgLSBjdXJyZW50U25hcCkgKiB0aHJlc2hvbGQpIHtcbiAgICAgICAgaW5kZXggKz0gc3dpcGVyLnBhcmFtcy5zbGlkZXNQZXJHcm91cDtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgLy8gVGhlIGN1cnJlbnQgdHJhbnNsYXRlIGlzIGJlZm9yZSB0aGUgY3VycmVudCBzbmFwIGluZGV4LCBzbyB0aGUgY2hvaWNlXG4gICAgICAvLyBpcyBiZXR3ZWVuIHRoZSBjdXJyZW50IGluZGV4IGFuZCB0aGUgb25lIGJlZm9yZSBpdC5cbiAgICAgIHZhciBwcmV2U25hcCA9IHN3aXBlci5zbmFwR3JpZFtzbmFwSW5kZXggLSAxXTtcbiAgICAgIHZhciBfY3VycmVudFNuYXAgPSBzd2lwZXIuc25hcEdyaWRbc25hcEluZGV4XTtcblxuICAgICAgaWYgKHRyYW5zbGF0ZSAtIHByZXZTbmFwIDw9IChfY3VycmVudFNuYXAgLSBwcmV2U25hcCkgKiB0aHJlc2hvbGQpIHtcbiAgICAgICAgaW5kZXggLT0gc3dpcGVyLnBhcmFtcy5zbGlkZXNQZXJHcm91cDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpbmRleCA9IE1hdGgubWF4KGluZGV4LCAwKTtcbiAgICBpbmRleCA9IE1hdGgubWluKGluZGV4LCBzd2lwZXIuc2xpZGVzR3JpZC5sZW5ndGggLSAxKTtcbiAgICByZXR1cm4gc3dpcGVyLnNsaWRlVG8oaW5kZXgsIHNwZWVkLCBydW5DYWxsYmFja3MsIGludGVybmFsKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHNsaWRlVG9DbGlja2VkU2xpZGUoKSB7XG4gICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgdmFyIHBhcmFtcyA9IHN3aXBlci5wYXJhbXMsXG4gICAgICAgICR3cmFwcGVyRWwgPSBzd2lwZXIuJHdyYXBwZXJFbDtcbiAgICB2YXIgc2xpZGVzUGVyVmlldyA9IHBhcmFtcy5zbGlkZXNQZXJWaWV3ID09PSAnYXV0bycgPyBzd2lwZXIuc2xpZGVzUGVyVmlld0R5bmFtaWMoKSA6IHBhcmFtcy5zbGlkZXNQZXJWaWV3O1xuICAgIHZhciBzbGlkZVRvSW5kZXggPSBzd2lwZXIuY2xpY2tlZEluZGV4O1xuICAgIHZhciByZWFsSW5kZXg7XG5cbiAgICBpZiAocGFyYW1zLmxvb3ApIHtcbiAgICAgIGlmIChzd2lwZXIuYW5pbWF0aW5nKSByZXR1cm47XG4gICAgICByZWFsSW5kZXggPSBwYXJzZUludCgkKHN3aXBlci5jbGlja2VkU2xpZGUpLmF0dHIoJ2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4JyksIDEwKTtcblxuICAgICAgaWYgKHBhcmFtcy5jZW50ZXJlZFNsaWRlcykge1xuICAgICAgICBpZiAoc2xpZGVUb0luZGV4IDwgc3dpcGVyLmxvb3BlZFNsaWRlcyAtIHNsaWRlc1BlclZpZXcgLyAyIHx8IHNsaWRlVG9JbmRleCA+IHN3aXBlci5zbGlkZXMubGVuZ3RoIC0gc3dpcGVyLmxvb3BlZFNsaWRlcyArIHNsaWRlc1BlclZpZXcgLyAyKSB7XG4gICAgICAgICAgc3dpcGVyLmxvb3BGaXgoKTtcbiAgICAgICAgICBzbGlkZVRvSW5kZXggPSAkd3JhcHBlckVsLmNoaWxkcmVuKFwiLlwiICsgcGFyYW1zLnNsaWRlQ2xhc3MgKyBcIltkYXRhLXN3aXBlci1zbGlkZS1pbmRleD1cXFwiXCIgKyByZWFsSW5kZXggKyBcIlxcXCJdOm5vdCguXCIgKyBwYXJhbXMuc2xpZGVEdXBsaWNhdGVDbGFzcyArIFwiKVwiKS5lcSgwKS5pbmRleCgpO1xuICAgICAgICAgIG5leHRUaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHN3aXBlci5zbGlkZVRvKHNsaWRlVG9JbmRleCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc3dpcGVyLnNsaWRlVG8oc2xpZGVUb0luZGV4KTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChzbGlkZVRvSW5kZXggPiBzd2lwZXIuc2xpZGVzLmxlbmd0aCAtIHNsaWRlc1BlclZpZXcpIHtcbiAgICAgICAgc3dpcGVyLmxvb3BGaXgoKTtcbiAgICAgICAgc2xpZGVUb0luZGV4ID0gJHdyYXBwZXJFbC5jaGlsZHJlbihcIi5cIiArIHBhcmFtcy5zbGlkZUNsYXNzICsgXCJbZGF0YS1zd2lwZXItc2xpZGUtaW5kZXg9XFxcIlwiICsgcmVhbEluZGV4ICsgXCJcXFwiXTpub3QoLlwiICsgcGFyYW1zLnNsaWRlRHVwbGljYXRlQ2xhc3MgKyBcIilcIikuZXEoMCkuaW5kZXgoKTtcbiAgICAgICAgbmV4dFRpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHN3aXBlci5zbGlkZVRvKHNsaWRlVG9JbmRleCk7XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc3dpcGVyLnNsaWRlVG8oc2xpZGVUb0luZGV4KTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgc3dpcGVyLnNsaWRlVG8oc2xpZGVUb0luZGV4KTtcbiAgICB9XG4gIH1cblxuICB2YXIgc2xpZGUgPSB7XG4gICAgc2xpZGVUbzogc2xpZGVUbyxcbiAgICBzbGlkZVRvTG9vcDogc2xpZGVUb0xvb3AsXG4gICAgc2xpZGVOZXh0OiBzbGlkZU5leHQsXG4gICAgc2xpZGVQcmV2OiBzbGlkZVByZXYsXG4gICAgc2xpZGVSZXNldDogc2xpZGVSZXNldCxcbiAgICBzbGlkZVRvQ2xvc2VzdDogc2xpZGVUb0Nsb3Nlc3QsXG4gICAgc2xpZGVUb0NsaWNrZWRTbGlkZTogc2xpZGVUb0NsaWNrZWRTbGlkZVxuICB9O1xuXG4gIGZ1bmN0aW9uIGxvb3BDcmVhdGUoKSB7XG4gICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgdmFyIGRvY3VtZW50ID0gZ2V0RG9jdW1lbnQoKTtcbiAgICB2YXIgcGFyYW1zID0gc3dpcGVyLnBhcmFtcyxcbiAgICAgICAgJHdyYXBwZXJFbCA9IHN3aXBlci4kd3JhcHBlckVsOyAvLyBSZW1vdmUgZHVwbGljYXRlZCBzbGlkZXNcblxuICAgICR3cmFwcGVyRWwuY2hpbGRyZW4oXCIuXCIgKyBwYXJhbXMuc2xpZGVDbGFzcyArIFwiLlwiICsgcGFyYW1zLnNsaWRlRHVwbGljYXRlQ2xhc3MpLnJlbW92ZSgpO1xuICAgIHZhciBzbGlkZXMgPSAkd3JhcHBlckVsLmNoaWxkcmVuKFwiLlwiICsgcGFyYW1zLnNsaWRlQ2xhc3MpO1xuXG4gICAgaWYgKHBhcmFtcy5sb29wRmlsbEdyb3VwV2l0aEJsYW5rKSB7XG4gICAgICB2YXIgYmxhbmtTbGlkZXNOdW0gPSBwYXJhbXMuc2xpZGVzUGVyR3JvdXAgLSBzbGlkZXMubGVuZ3RoICUgcGFyYW1zLnNsaWRlc1Blckdyb3VwO1xuXG4gICAgICBpZiAoYmxhbmtTbGlkZXNOdW0gIT09IHBhcmFtcy5zbGlkZXNQZXJHcm91cCkge1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGJsYW5rU2xpZGVzTnVtOyBpICs9IDEpIHtcbiAgICAgICAgICB2YXIgYmxhbmtOb2RlID0gJChkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKSkuYWRkQ2xhc3MocGFyYW1zLnNsaWRlQ2xhc3MgKyBcIiBcIiArIHBhcmFtcy5zbGlkZUJsYW5rQ2xhc3MpO1xuICAgICAgICAgICR3cmFwcGVyRWwuYXBwZW5kKGJsYW5rTm9kZSk7XG4gICAgICAgIH1cblxuICAgICAgICBzbGlkZXMgPSAkd3JhcHBlckVsLmNoaWxkcmVuKFwiLlwiICsgcGFyYW1zLnNsaWRlQ2xhc3MpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChwYXJhbXMuc2xpZGVzUGVyVmlldyA9PT0gJ2F1dG8nICYmICFwYXJhbXMubG9vcGVkU2xpZGVzKSBwYXJhbXMubG9vcGVkU2xpZGVzID0gc2xpZGVzLmxlbmd0aDtcbiAgICBzd2lwZXIubG9vcGVkU2xpZGVzID0gTWF0aC5jZWlsKHBhcnNlRmxvYXQocGFyYW1zLmxvb3BlZFNsaWRlcyB8fCBwYXJhbXMuc2xpZGVzUGVyVmlldywgMTApKTtcbiAgICBzd2lwZXIubG9vcGVkU2xpZGVzICs9IHBhcmFtcy5sb29wQWRkaXRpb25hbFNsaWRlcztcblxuICAgIGlmIChzd2lwZXIubG9vcGVkU2xpZGVzID4gc2xpZGVzLmxlbmd0aCkge1xuICAgICAgc3dpcGVyLmxvb3BlZFNsaWRlcyA9IHNsaWRlcy5sZW5ndGg7XG4gICAgfVxuXG4gICAgdmFyIHByZXBlbmRTbGlkZXMgPSBbXTtcbiAgICB2YXIgYXBwZW5kU2xpZGVzID0gW107XG4gICAgc2xpZGVzLmVhY2goZnVuY3Rpb24gKGVsLCBpbmRleCkge1xuICAgICAgdmFyIHNsaWRlID0gJChlbCk7XG5cbiAgICAgIGlmIChpbmRleCA8IHN3aXBlci5sb29wZWRTbGlkZXMpIHtcbiAgICAgICAgYXBwZW5kU2xpZGVzLnB1c2goZWwpO1xuICAgICAgfVxuXG4gICAgICBpZiAoaW5kZXggPCBzbGlkZXMubGVuZ3RoICYmIGluZGV4ID49IHNsaWRlcy5sZW5ndGggLSBzd2lwZXIubG9vcGVkU2xpZGVzKSB7XG4gICAgICAgIHByZXBlbmRTbGlkZXMucHVzaChlbCk7XG4gICAgICB9XG5cbiAgICAgIHNsaWRlLmF0dHIoJ2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4JywgaW5kZXgpO1xuICAgIH0pO1xuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFwcGVuZFNsaWRlcy5sZW5ndGg7IF9pICs9IDEpIHtcbiAgICAgICR3cmFwcGVyRWwuYXBwZW5kKCQoYXBwZW5kU2xpZGVzW19pXS5jbG9uZU5vZGUodHJ1ZSkpLmFkZENsYXNzKHBhcmFtcy5zbGlkZUR1cGxpY2F0ZUNsYXNzKSk7XG4gICAgfVxuXG4gICAgZm9yICh2YXIgX2kyID0gcHJlcGVuZFNsaWRlcy5sZW5ndGggLSAxOyBfaTIgPj0gMDsgX2kyIC09IDEpIHtcbiAgICAgICR3cmFwcGVyRWwucHJlcGVuZCgkKHByZXBlbmRTbGlkZXNbX2kyXS5jbG9uZU5vZGUodHJ1ZSkpLmFkZENsYXNzKHBhcmFtcy5zbGlkZUR1cGxpY2F0ZUNsYXNzKSk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gbG9vcEZpeCgpIHtcbiAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICBzd2lwZXIuZW1pdCgnYmVmb3JlTG9vcEZpeCcpO1xuICAgIHZhciBhY3RpdmVJbmRleCA9IHN3aXBlci5hY3RpdmVJbmRleCxcbiAgICAgICAgc2xpZGVzID0gc3dpcGVyLnNsaWRlcyxcbiAgICAgICAgbG9vcGVkU2xpZGVzID0gc3dpcGVyLmxvb3BlZFNsaWRlcyxcbiAgICAgICAgYWxsb3dTbGlkZVByZXYgPSBzd2lwZXIuYWxsb3dTbGlkZVByZXYsXG4gICAgICAgIGFsbG93U2xpZGVOZXh0ID0gc3dpcGVyLmFsbG93U2xpZGVOZXh0LFxuICAgICAgICBzbmFwR3JpZCA9IHN3aXBlci5zbmFwR3JpZCxcbiAgICAgICAgcnRsID0gc3dpcGVyLnJ0bFRyYW5zbGF0ZTtcbiAgICB2YXIgbmV3SW5kZXg7XG4gICAgc3dpcGVyLmFsbG93U2xpZGVQcmV2ID0gdHJ1ZTtcbiAgICBzd2lwZXIuYWxsb3dTbGlkZU5leHQgPSB0cnVlO1xuICAgIHZhciBzbmFwVHJhbnNsYXRlID0gLXNuYXBHcmlkW2FjdGl2ZUluZGV4XTtcbiAgICB2YXIgZGlmZiA9IHNuYXBUcmFuc2xhdGUgLSBzd2lwZXIuZ2V0VHJhbnNsYXRlKCk7IC8vIEZpeCBGb3IgTmVnYXRpdmUgT3ZlcnNsaWRpbmdcblxuICAgIGlmIChhY3RpdmVJbmRleCA8IGxvb3BlZFNsaWRlcykge1xuICAgICAgbmV3SW5kZXggPSBzbGlkZXMubGVuZ3RoIC0gbG9vcGVkU2xpZGVzICogMyArIGFjdGl2ZUluZGV4O1xuICAgICAgbmV3SW5kZXggKz0gbG9vcGVkU2xpZGVzO1xuICAgICAgdmFyIHNsaWRlQ2hhbmdlZCA9IHN3aXBlci5zbGlkZVRvKG5ld0luZGV4LCAwLCBmYWxzZSwgdHJ1ZSk7XG5cbiAgICAgIGlmIChzbGlkZUNoYW5nZWQgJiYgZGlmZiAhPT0gMCkge1xuICAgICAgICBzd2lwZXIuc2V0VHJhbnNsYXRlKChydGwgPyAtc3dpcGVyLnRyYW5zbGF0ZSA6IHN3aXBlci50cmFuc2xhdGUpIC0gZGlmZik7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChhY3RpdmVJbmRleCA+PSBzbGlkZXMubGVuZ3RoIC0gbG9vcGVkU2xpZGVzKSB7XG4gICAgICAvLyBGaXggRm9yIFBvc2l0aXZlIE92ZXJzbGlkaW5nXG4gICAgICBuZXdJbmRleCA9IC1zbGlkZXMubGVuZ3RoICsgYWN0aXZlSW5kZXggKyBsb29wZWRTbGlkZXM7XG4gICAgICBuZXdJbmRleCArPSBsb29wZWRTbGlkZXM7XG5cbiAgICAgIHZhciBfc2xpZGVDaGFuZ2VkID0gc3dpcGVyLnNsaWRlVG8obmV3SW5kZXgsIDAsIGZhbHNlLCB0cnVlKTtcblxuICAgICAgaWYgKF9zbGlkZUNoYW5nZWQgJiYgZGlmZiAhPT0gMCkge1xuICAgICAgICBzd2lwZXIuc2V0VHJhbnNsYXRlKChydGwgPyAtc3dpcGVyLnRyYW5zbGF0ZSA6IHN3aXBlci50cmFuc2xhdGUpIC0gZGlmZik7XG4gICAgICB9XG4gICAgfVxuXG4gICAgc3dpcGVyLmFsbG93U2xpZGVQcmV2ID0gYWxsb3dTbGlkZVByZXY7XG4gICAgc3dpcGVyLmFsbG93U2xpZGVOZXh0ID0gYWxsb3dTbGlkZU5leHQ7XG4gICAgc3dpcGVyLmVtaXQoJ2xvb3BGaXgnKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxvb3BEZXN0cm95KCkge1xuICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgIHZhciAkd3JhcHBlckVsID0gc3dpcGVyLiR3cmFwcGVyRWwsXG4gICAgICAgIHBhcmFtcyA9IHN3aXBlci5wYXJhbXMsXG4gICAgICAgIHNsaWRlcyA9IHN3aXBlci5zbGlkZXM7XG4gICAgJHdyYXBwZXJFbC5jaGlsZHJlbihcIi5cIiArIHBhcmFtcy5zbGlkZUNsYXNzICsgXCIuXCIgKyBwYXJhbXMuc2xpZGVEdXBsaWNhdGVDbGFzcyArIFwiLC5cIiArIHBhcmFtcy5zbGlkZUNsYXNzICsgXCIuXCIgKyBwYXJhbXMuc2xpZGVCbGFua0NsYXNzKS5yZW1vdmUoKTtcbiAgICBzbGlkZXMucmVtb3ZlQXR0cignZGF0YS1zd2lwZXItc2xpZGUtaW5kZXgnKTtcbiAgfVxuXG4gIHZhciBsb29wID0ge1xuICAgIGxvb3BDcmVhdGU6IGxvb3BDcmVhdGUsXG4gICAgbG9vcEZpeDogbG9vcEZpeCxcbiAgICBsb29wRGVzdHJveTogbG9vcERlc3Ryb3lcbiAgfTtcblxuICBmdW5jdGlvbiBzZXRHcmFiQ3Vyc29yKG1vdmluZykge1xuICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgIGlmIChzd2lwZXIuc3VwcG9ydC50b3VjaCB8fCAhc3dpcGVyLnBhcmFtcy5zaW11bGF0ZVRvdWNoIHx8IHN3aXBlci5wYXJhbXMud2F0Y2hPdmVyZmxvdyAmJiBzd2lwZXIuaXNMb2NrZWQgfHwgc3dpcGVyLnBhcmFtcy5jc3NNb2RlKSByZXR1cm47XG4gICAgdmFyIGVsID0gc3dpcGVyLmVsO1xuICAgIGVsLnN0eWxlLmN1cnNvciA9ICdtb3ZlJztcbiAgICBlbC5zdHlsZS5jdXJzb3IgPSBtb3ZpbmcgPyAnLXdlYmtpdC1ncmFiYmluZycgOiAnLXdlYmtpdC1ncmFiJztcbiAgICBlbC5zdHlsZS5jdXJzb3IgPSBtb3ZpbmcgPyAnLW1vei1ncmFiYmluJyA6ICctbW96LWdyYWInO1xuICAgIGVsLnN0eWxlLmN1cnNvciA9IG1vdmluZyA/ICdncmFiYmluZycgOiAnZ3JhYic7XG4gIH1cblxuICBmdW5jdGlvbiB1bnNldEdyYWJDdXJzb3IoKSB7XG4gICAgdmFyIHN3aXBlciA9IHRoaXM7XG5cbiAgICBpZiAoc3dpcGVyLnN1cHBvcnQudG91Y2ggfHwgc3dpcGVyLnBhcmFtcy53YXRjaE92ZXJmbG93ICYmIHN3aXBlci5pc0xvY2tlZCB8fCBzd2lwZXIucGFyYW1zLmNzc01vZGUpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBzd2lwZXIuZWwuc3R5bGUuY3Vyc29yID0gJyc7XG4gIH1cblxuICB2YXIgZ3JhYkN1cnNvciA9IHtcbiAgICBzZXRHcmFiQ3Vyc29yOiBzZXRHcmFiQ3Vyc29yLFxuICAgIHVuc2V0R3JhYkN1cnNvcjogdW5zZXRHcmFiQ3Vyc29yXG4gIH07XG5cbiAgZnVuY3Rpb24gYXBwZW5kU2xpZGUoc2xpZGVzKSB7XG4gICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgdmFyICR3cmFwcGVyRWwgPSBzd2lwZXIuJHdyYXBwZXJFbCxcbiAgICAgICAgcGFyYW1zID0gc3dpcGVyLnBhcmFtcztcblxuICAgIGlmIChwYXJhbXMubG9vcCkge1xuICAgICAgc3dpcGVyLmxvb3BEZXN0cm95KCk7XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBzbGlkZXMgPT09ICdvYmplY3QnICYmICdsZW5ndGgnIGluIHNsaWRlcykge1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzbGlkZXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgaWYgKHNsaWRlc1tpXSkgJHdyYXBwZXJFbC5hcHBlbmQoc2xpZGVzW2ldKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgJHdyYXBwZXJFbC5hcHBlbmQoc2xpZGVzKTtcbiAgICB9XG5cbiAgICBpZiAocGFyYW1zLmxvb3ApIHtcbiAgICAgIHN3aXBlci5sb29wQ3JlYXRlKCk7XG4gICAgfVxuXG4gICAgaWYgKCEocGFyYW1zLm9ic2VydmVyICYmIHN3aXBlci5zdXBwb3J0Lm9ic2VydmVyKSkge1xuICAgICAgc3dpcGVyLnVwZGF0ZSgpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHByZXBlbmRTbGlkZShzbGlkZXMpIHtcbiAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICB2YXIgcGFyYW1zID0gc3dpcGVyLnBhcmFtcyxcbiAgICAgICAgJHdyYXBwZXJFbCA9IHN3aXBlci4kd3JhcHBlckVsLFxuICAgICAgICBhY3RpdmVJbmRleCA9IHN3aXBlci5hY3RpdmVJbmRleDtcblxuICAgIGlmIChwYXJhbXMubG9vcCkge1xuICAgICAgc3dpcGVyLmxvb3BEZXN0cm95KCk7XG4gICAgfVxuXG4gICAgdmFyIG5ld0FjdGl2ZUluZGV4ID0gYWN0aXZlSW5kZXggKyAxO1xuXG4gICAgaWYgKHR5cGVvZiBzbGlkZXMgPT09ICdvYmplY3QnICYmICdsZW5ndGgnIGluIHNsaWRlcykge1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzbGlkZXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgaWYgKHNsaWRlc1tpXSkgJHdyYXBwZXJFbC5wcmVwZW5kKHNsaWRlc1tpXSk7XG4gICAgICB9XG5cbiAgICAgIG5ld0FjdGl2ZUluZGV4ID0gYWN0aXZlSW5kZXggKyBzbGlkZXMubGVuZ3RoO1xuICAgIH0gZWxzZSB7XG4gICAgICAkd3JhcHBlckVsLnByZXBlbmQoc2xpZGVzKTtcbiAgICB9XG5cbiAgICBpZiAocGFyYW1zLmxvb3ApIHtcbiAgICAgIHN3aXBlci5sb29wQ3JlYXRlKCk7XG4gICAgfVxuXG4gICAgaWYgKCEocGFyYW1zLm9ic2VydmVyICYmIHN3aXBlci5zdXBwb3J0Lm9ic2VydmVyKSkge1xuICAgICAgc3dpcGVyLnVwZGF0ZSgpO1xuICAgIH1cblxuICAgIHN3aXBlci5zbGlkZVRvKG5ld0FjdGl2ZUluZGV4LCAwLCBmYWxzZSk7XG4gIH1cblxuICBmdW5jdGlvbiBhZGRTbGlkZShpbmRleCwgc2xpZGVzKSB7XG4gICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgdmFyICR3cmFwcGVyRWwgPSBzd2lwZXIuJHdyYXBwZXJFbCxcbiAgICAgICAgcGFyYW1zID0gc3dpcGVyLnBhcmFtcyxcbiAgICAgICAgYWN0aXZlSW5kZXggPSBzd2lwZXIuYWN0aXZlSW5kZXg7XG4gICAgdmFyIGFjdGl2ZUluZGV4QnVmZmVyID0gYWN0aXZlSW5kZXg7XG5cbiAgICBpZiAocGFyYW1zLmxvb3ApIHtcbiAgICAgIGFjdGl2ZUluZGV4QnVmZmVyIC09IHN3aXBlci5sb29wZWRTbGlkZXM7XG4gICAgICBzd2lwZXIubG9vcERlc3Ryb3koKTtcbiAgICAgIHN3aXBlci5zbGlkZXMgPSAkd3JhcHBlckVsLmNoaWxkcmVuKFwiLlwiICsgcGFyYW1zLnNsaWRlQ2xhc3MpO1xuICAgIH1cblxuICAgIHZhciBiYXNlTGVuZ3RoID0gc3dpcGVyLnNsaWRlcy5sZW5ndGg7XG5cbiAgICBpZiAoaW5kZXggPD0gMCkge1xuICAgICAgc3dpcGVyLnByZXBlbmRTbGlkZShzbGlkZXMpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChpbmRleCA+PSBiYXNlTGVuZ3RoKSB7XG4gICAgICBzd2lwZXIuYXBwZW5kU2xpZGUoc2xpZGVzKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB2YXIgbmV3QWN0aXZlSW5kZXggPSBhY3RpdmVJbmRleEJ1ZmZlciA+IGluZGV4ID8gYWN0aXZlSW5kZXhCdWZmZXIgKyAxIDogYWN0aXZlSW5kZXhCdWZmZXI7XG4gICAgdmFyIHNsaWRlc0J1ZmZlciA9IFtdO1xuXG4gICAgZm9yICh2YXIgaSA9IGJhc2VMZW5ndGggLSAxOyBpID49IGluZGV4OyBpIC09IDEpIHtcbiAgICAgIHZhciBjdXJyZW50U2xpZGUgPSBzd2lwZXIuc2xpZGVzLmVxKGkpO1xuICAgICAgY3VycmVudFNsaWRlLnJlbW92ZSgpO1xuICAgICAgc2xpZGVzQnVmZmVyLnVuc2hpZnQoY3VycmVudFNsaWRlKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIHNsaWRlcyA9PT0gJ29iamVjdCcgJiYgJ2xlbmd0aCcgaW4gc2xpZGVzKSB7XG4gICAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgc2xpZGVzLmxlbmd0aDsgX2kgKz0gMSkge1xuICAgICAgICBpZiAoc2xpZGVzW19pXSkgJHdyYXBwZXJFbC5hcHBlbmQoc2xpZGVzW19pXSk7XG4gICAgICB9XG5cbiAgICAgIG5ld0FjdGl2ZUluZGV4ID0gYWN0aXZlSW5kZXhCdWZmZXIgPiBpbmRleCA/IGFjdGl2ZUluZGV4QnVmZmVyICsgc2xpZGVzLmxlbmd0aCA6IGFjdGl2ZUluZGV4QnVmZmVyO1xuICAgIH0gZWxzZSB7XG4gICAgICAkd3JhcHBlckVsLmFwcGVuZChzbGlkZXMpO1xuICAgIH1cblxuICAgIGZvciAodmFyIF9pMiA9IDA7IF9pMiA8IHNsaWRlc0J1ZmZlci5sZW5ndGg7IF9pMiArPSAxKSB7XG4gICAgICAkd3JhcHBlckVsLmFwcGVuZChzbGlkZXNCdWZmZXJbX2kyXSk7XG4gICAgfVxuXG4gICAgaWYgKHBhcmFtcy5sb29wKSB7XG4gICAgICBzd2lwZXIubG9vcENyZWF0ZSgpO1xuICAgIH1cblxuICAgIGlmICghKHBhcmFtcy5vYnNlcnZlciAmJiBzd2lwZXIuc3VwcG9ydC5vYnNlcnZlcikpIHtcbiAgICAgIHN3aXBlci51cGRhdGUoKTtcbiAgICB9XG5cbiAgICBpZiAocGFyYW1zLmxvb3ApIHtcbiAgICAgIHN3aXBlci5zbGlkZVRvKG5ld0FjdGl2ZUluZGV4ICsgc3dpcGVyLmxvb3BlZFNsaWRlcywgMCwgZmFsc2UpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzd2lwZXIuc2xpZGVUbyhuZXdBY3RpdmVJbmRleCwgMCwgZmFsc2UpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHJlbW92ZVNsaWRlKHNsaWRlc0luZGV4ZXMpIHtcbiAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICB2YXIgcGFyYW1zID0gc3dpcGVyLnBhcmFtcyxcbiAgICAgICAgJHdyYXBwZXJFbCA9IHN3aXBlci4kd3JhcHBlckVsLFxuICAgICAgICBhY3RpdmVJbmRleCA9IHN3aXBlci5hY3RpdmVJbmRleDtcbiAgICB2YXIgYWN0aXZlSW5kZXhCdWZmZXIgPSBhY3RpdmVJbmRleDtcblxuICAgIGlmIChwYXJhbXMubG9vcCkge1xuICAgICAgYWN0aXZlSW5kZXhCdWZmZXIgLT0gc3dpcGVyLmxvb3BlZFNsaWRlcztcbiAgICAgIHN3aXBlci5sb29wRGVzdHJveSgpO1xuICAgICAgc3dpcGVyLnNsaWRlcyA9ICR3cmFwcGVyRWwuY2hpbGRyZW4oXCIuXCIgKyBwYXJhbXMuc2xpZGVDbGFzcyk7XG4gICAgfVxuXG4gICAgdmFyIG5ld0FjdGl2ZUluZGV4ID0gYWN0aXZlSW5kZXhCdWZmZXI7XG4gICAgdmFyIGluZGV4VG9SZW1vdmU7XG5cbiAgICBpZiAodHlwZW9mIHNsaWRlc0luZGV4ZXMgPT09ICdvYmplY3QnICYmICdsZW5ndGgnIGluIHNsaWRlc0luZGV4ZXMpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc2xpZGVzSW5kZXhlcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICBpbmRleFRvUmVtb3ZlID0gc2xpZGVzSW5kZXhlc1tpXTtcbiAgICAgICAgaWYgKHN3aXBlci5zbGlkZXNbaW5kZXhUb1JlbW92ZV0pIHN3aXBlci5zbGlkZXMuZXEoaW5kZXhUb1JlbW92ZSkucmVtb3ZlKCk7XG4gICAgICAgIGlmIChpbmRleFRvUmVtb3ZlIDwgbmV3QWN0aXZlSW5kZXgpIG5ld0FjdGl2ZUluZGV4IC09IDE7XG4gICAgICB9XG5cbiAgICAgIG5ld0FjdGl2ZUluZGV4ID0gTWF0aC5tYXgobmV3QWN0aXZlSW5kZXgsIDApO1xuICAgIH0gZWxzZSB7XG4gICAgICBpbmRleFRvUmVtb3ZlID0gc2xpZGVzSW5kZXhlcztcbiAgICAgIGlmIChzd2lwZXIuc2xpZGVzW2luZGV4VG9SZW1vdmVdKSBzd2lwZXIuc2xpZGVzLmVxKGluZGV4VG9SZW1vdmUpLnJlbW92ZSgpO1xuICAgICAgaWYgKGluZGV4VG9SZW1vdmUgPCBuZXdBY3RpdmVJbmRleCkgbmV3QWN0aXZlSW5kZXggLT0gMTtcbiAgICAgIG5ld0FjdGl2ZUluZGV4ID0gTWF0aC5tYXgobmV3QWN0aXZlSW5kZXgsIDApO1xuICAgIH1cblxuICAgIGlmIChwYXJhbXMubG9vcCkge1xuICAgICAgc3dpcGVyLmxvb3BDcmVhdGUoKTtcbiAgICB9XG5cbiAgICBpZiAoIShwYXJhbXMub2JzZXJ2ZXIgJiYgc3dpcGVyLnN1cHBvcnQub2JzZXJ2ZXIpKSB7XG4gICAgICBzd2lwZXIudXBkYXRlKCk7XG4gICAgfVxuXG4gICAgaWYgKHBhcmFtcy5sb29wKSB7XG4gICAgICBzd2lwZXIuc2xpZGVUbyhuZXdBY3RpdmVJbmRleCArIHN3aXBlci5sb29wZWRTbGlkZXMsIDAsIGZhbHNlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3dpcGVyLnNsaWRlVG8obmV3QWN0aXZlSW5kZXgsIDAsIGZhbHNlKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiByZW1vdmVBbGxTbGlkZXMoKSB7XG4gICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgdmFyIHNsaWRlc0luZGV4ZXMgPSBbXTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc3dpcGVyLnNsaWRlcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgc2xpZGVzSW5kZXhlcy5wdXNoKGkpO1xuICAgIH1cblxuICAgIHN3aXBlci5yZW1vdmVTbGlkZShzbGlkZXNJbmRleGVzKTtcbiAgfVxuXG4gIHZhciBtYW5pcHVsYXRpb24gPSB7XG4gICAgYXBwZW5kU2xpZGU6IGFwcGVuZFNsaWRlLFxuICAgIHByZXBlbmRTbGlkZTogcHJlcGVuZFNsaWRlLFxuICAgIGFkZFNsaWRlOiBhZGRTbGlkZSxcbiAgICByZW1vdmVTbGlkZTogcmVtb3ZlU2xpZGUsXG4gICAgcmVtb3ZlQWxsU2xpZGVzOiByZW1vdmVBbGxTbGlkZXNcbiAgfTtcblxuICBmdW5jdGlvbiBvblRvdWNoU3RhcnQoZXZlbnQpIHtcbiAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICB2YXIgZG9jdW1lbnQgPSBnZXREb2N1bWVudCgpO1xuICAgIHZhciB3aW5kb3cgPSBnZXRXaW5kb3coKTtcbiAgICB2YXIgZGF0YSA9IHN3aXBlci50b3VjaEV2ZW50c0RhdGE7XG4gICAgdmFyIHBhcmFtcyA9IHN3aXBlci5wYXJhbXMsXG4gICAgICAgIHRvdWNoZXMgPSBzd2lwZXIudG91Y2hlcztcblxuICAgIGlmIChzd2lwZXIuYW5pbWF0aW5nICYmIHBhcmFtcy5wcmV2ZW50SW50ZXJhY3Rpb25PblRyYW5zaXRpb24pIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB2YXIgZSA9IGV2ZW50O1xuICAgIGlmIChlLm9yaWdpbmFsRXZlbnQpIGUgPSBlLm9yaWdpbmFsRXZlbnQ7XG4gICAgdmFyICR0YXJnZXRFbCA9ICQoZS50YXJnZXQpO1xuXG4gICAgaWYgKHBhcmFtcy50b3VjaEV2ZW50c1RhcmdldCA9PT0gJ3dyYXBwZXInKSB7XG4gICAgICBpZiAoISR0YXJnZXRFbC5jbG9zZXN0KHN3aXBlci53cmFwcGVyRWwpLmxlbmd0aCkgcmV0dXJuO1xuICAgIH1cblxuICAgIGRhdGEuaXNUb3VjaEV2ZW50ID0gZS50eXBlID09PSAndG91Y2hzdGFydCc7XG4gICAgaWYgKCFkYXRhLmlzVG91Y2hFdmVudCAmJiAnd2hpY2gnIGluIGUgJiYgZS53aGljaCA9PT0gMykgcmV0dXJuO1xuICAgIGlmICghZGF0YS5pc1RvdWNoRXZlbnQgJiYgJ2J1dHRvbicgaW4gZSAmJiBlLmJ1dHRvbiA+IDApIHJldHVybjtcbiAgICBpZiAoZGF0YS5pc1RvdWNoZWQgJiYgZGF0YS5pc01vdmVkKSByZXR1cm47XG5cbiAgICBpZiAocGFyYW1zLm5vU3dpcGluZyAmJiAkdGFyZ2V0RWwuY2xvc2VzdChwYXJhbXMubm9Td2lwaW5nU2VsZWN0b3IgPyBwYXJhbXMubm9Td2lwaW5nU2VsZWN0b3IgOiBcIi5cIiArIHBhcmFtcy5ub1N3aXBpbmdDbGFzcylbMF0pIHtcbiAgICAgIHN3aXBlci5hbGxvd0NsaWNrID0gdHJ1ZTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAocGFyYW1zLnN3aXBlSGFuZGxlcikge1xuICAgICAgaWYgKCEkdGFyZ2V0RWwuY2xvc2VzdChwYXJhbXMuc3dpcGVIYW5kbGVyKVswXSkgcmV0dXJuO1xuICAgIH1cblxuICAgIHRvdWNoZXMuY3VycmVudFggPSBlLnR5cGUgPT09ICd0b3VjaHN0YXJ0JyA/IGUudGFyZ2V0VG91Y2hlc1swXS5wYWdlWCA6IGUucGFnZVg7XG4gICAgdG91Y2hlcy5jdXJyZW50WSA9IGUudHlwZSA9PT0gJ3RvdWNoc3RhcnQnID8gZS50YXJnZXRUb3VjaGVzWzBdLnBhZ2VZIDogZS5wYWdlWTtcbiAgICB2YXIgc3RhcnRYID0gdG91Y2hlcy5jdXJyZW50WDtcbiAgICB2YXIgc3RhcnRZID0gdG91Y2hlcy5jdXJyZW50WTsgLy8gRG8gTk9UIHN0YXJ0IGlmIGlPUyBlZGdlIHN3aXBlIGlzIGRldGVjdGVkLiBPdGhlcndpc2UgaU9TIGFwcCBjYW5ub3Qgc3dpcGUtdG8tZ28tYmFjayBhbnltb3JlXG5cbiAgICB2YXIgZWRnZVN3aXBlRGV0ZWN0aW9uID0gcGFyYW1zLmVkZ2VTd2lwZURldGVjdGlvbiB8fCBwYXJhbXMuaU9TRWRnZVN3aXBlRGV0ZWN0aW9uO1xuICAgIHZhciBlZGdlU3dpcGVUaHJlc2hvbGQgPSBwYXJhbXMuZWRnZVN3aXBlVGhyZXNob2xkIHx8IHBhcmFtcy5pT1NFZGdlU3dpcGVUaHJlc2hvbGQ7XG5cbiAgICBpZiAoZWRnZVN3aXBlRGV0ZWN0aW9uICYmIChzdGFydFggPD0gZWRnZVN3aXBlVGhyZXNob2xkIHx8IHN0YXJ0WCA+PSB3aW5kb3cuc2NyZWVuLndpZHRoIC0gZWRnZVN3aXBlVGhyZXNob2xkKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGV4dGVuZCQxKGRhdGEsIHtcbiAgICAgIGlzVG91Y2hlZDogdHJ1ZSxcbiAgICAgIGlzTW92ZWQ6IGZhbHNlLFxuICAgICAgYWxsb3dUb3VjaENhbGxiYWNrczogdHJ1ZSxcbiAgICAgIGlzU2Nyb2xsaW5nOiB1bmRlZmluZWQsXG4gICAgICBzdGFydE1vdmluZzogdW5kZWZpbmVkXG4gICAgfSk7XG4gICAgdG91Y2hlcy5zdGFydFggPSBzdGFydFg7XG4gICAgdG91Y2hlcy5zdGFydFkgPSBzdGFydFk7XG4gICAgZGF0YS50b3VjaFN0YXJ0VGltZSA9IG5vdygpO1xuICAgIHN3aXBlci5hbGxvd0NsaWNrID0gdHJ1ZTtcbiAgICBzd2lwZXIudXBkYXRlU2l6ZSgpO1xuICAgIHN3aXBlci5zd2lwZURpcmVjdGlvbiA9IHVuZGVmaW5lZDtcbiAgICBpZiAocGFyYW1zLnRocmVzaG9sZCA+IDApIGRhdGEuYWxsb3dUaHJlc2hvbGRNb3ZlID0gZmFsc2U7XG5cbiAgICBpZiAoZS50eXBlICE9PSAndG91Y2hzdGFydCcpIHtcbiAgICAgIHZhciBwcmV2ZW50RGVmYXVsdCA9IHRydWU7XG4gICAgICBpZiAoJHRhcmdldEVsLmlzKGRhdGEuZm9ybUVsZW1lbnRzKSkgcHJldmVudERlZmF1bHQgPSBmYWxzZTtcblxuICAgICAgaWYgKGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgJiYgJChkb2N1bWVudC5hY3RpdmVFbGVtZW50KS5pcyhkYXRhLmZvcm1FbGVtZW50cykgJiYgZG9jdW1lbnQuYWN0aXZlRWxlbWVudCAhPT0gJHRhcmdldEVsWzBdKSB7XG4gICAgICAgIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQuYmx1cigpO1xuICAgICAgfVxuXG4gICAgICB2YXIgc2hvdWxkUHJldmVudERlZmF1bHQgPSBwcmV2ZW50RGVmYXVsdCAmJiBzd2lwZXIuYWxsb3dUb3VjaE1vdmUgJiYgcGFyYW1zLnRvdWNoU3RhcnRQcmV2ZW50RGVmYXVsdDtcblxuICAgICAgaWYgKHBhcmFtcy50b3VjaFN0YXJ0Rm9yY2VQcmV2ZW50RGVmYXVsdCB8fCBzaG91bGRQcmV2ZW50RGVmYXVsdCkge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgc3dpcGVyLmVtaXQoJ3RvdWNoU3RhcnQnLCBlKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIG9uVG91Y2hNb3ZlKGV2ZW50KSB7XG4gICAgdmFyIGRvY3VtZW50ID0gZ2V0RG9jdW1lbnQoKTtcbiAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICB2YXIgZGF0YSA9IHN3aXBlci50b3VjaEV2ZW50c0RhdGE7XG4gICAgdmFyIHBhcmFtcyA9IHN3aXBlci5wYXJhbXMsXG4gICAgICAgIHRvdWNoZXMgPSBzd2lwZXIudG91Y2hlcyxcbiAgICAgICAgcnRsID0gc3dpcGVyLnJ0bFRyYW5zbGF0ZTtcbiAgICB2YXIgZSA9IGV2ZW50O1xuICAgIGlmIChlLm9yaWdpbmFsRXZlbnQpIGUgPSBlLm9yaWdpbmFsRXZlbnQ7XG5cbiAgICBpZiAoIWRhdGEuaXNUb3VjaGVkKSB7XG4gICAgICBpZiAoZGF0YS5zdGFydE1vdmluZyAmJiBkYXRhLmlzU2Nyb2xsaW5nKSB7XG4gICAgICAgIHN3aXBlci5lbWl0KCd0b3VjaE1vdmVPcHBvc2l0ZScsIGUpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKGRhdGEuaXNUb3VjaEV2ZW50ICYmIGUudHlwZSAhPT0gJ3RvdWNobW92ZScpIHJldHVybjtcbiAgICB2YXIgdGFyZ2V0VG91Y2ggPSBlLnR5cGUgPT09ICd0b3VjaG1vdmUnICYmIGUudGFyZ2V0VG91Y2hlcyAmJiAoZS50YXJnZXRUb3VjaGVzWzBdIHx8IGUuY2hhbmdlZFRvdWNoZXNbMF0pO1xuICAgIHZhciBwYWdlWCA9IGUudHlwZSA9PT0gJ3RvdWNobW92ZScgPyB0YXJnZXRUb3VjaC5wYWdlWCA6IGUucGFnZVg7XG4gICAgdmFyIHBhZ2VZID0gZS50eXBlID09PSAndG91Y2htb3ZlJyA/IHRhcmdldFRvdWNoLnBhZ2VZIDogZS5wYWdlWTtcblxuICAgIGlmIChlLnByZXZlbnRlZEJ5TmVzdGVkU3dpcGVyKSB7XG4gICAgICB0b3VjaGVzLnN0YXJ0WCA9IHBhZ2VYO1xuICAgICAgdG91Y2hlcy5zdGFydFkgPSBwYWdlWTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoIXN3aXBlci5hbGxvd1RvdWNoTW92ZSkge1xuICAgICAgLy8gaXNNb3ZlZCA9IHRydWU7XG4gICAgICBzd2lwZXIuYWxsb3dDbGljayA9IGZhbHNlO1xuXG4gICAgICBpZiAoZGF0YS5pc1RvdWNoZWQpIHtcbiAgICAgICAgZXh0ZW5kJDEodG91Y2hlcywge1xuICAgICAgICAgIHN0YXJ0WDogcGFnZVgsXG4gICAgICAgICAgc3RhcnRZOiBwYWdlWSxcbiAgICAgICAgICBjdXJyZW50WDogcGFnZVgsXG4gICAgICAgICAgY3VycmVudFk6IHBhZ2VZXG4gICAgICAgIH0pO1xuICAgICAgICBkYXRhLnRvdWNoU3RhcnRUaW1lID0gbm93KCk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoZGF0YS5pc1RvdWNoRXZlbnQgJiYgcGFyYW1zLnRvdWNoUmVsZWFzZU9uRWRnZXMgJiYgIXBhcmFtcy5sb29wKSB7XG4gICAgICBpZiAoc3dpcGVyLmlzVmVydGljYWwoKSkge1xuICAgICAgICAvLyBWZXJ0aWNhbFxuICAgICAgICBpZiAocGFnZVkgPCB0b3VjaGVzLnN0YXJ0WSAmJiBzd2lwZXIudHJhbnNsYXRlIDw9IHN3aXBlci5tYXhUcmFuc2xhdGUoKSB8fCBwYWdlWSA+IHRvdWNoZXMuc3RhcnRZICYmIHN3aXBlci50cmFuc2xhdGUgPj0gc3dpcGVyLm1pblRyYW5zbGF0ZSgpKSB7XG4gICAgICAgICAgZGF0YS5pc1RvdWNoZWQgPSBmYWxzZTtcbiAgICAgICAgICBkYXRhLmlzTW92ZWQgPSBmYWxzZTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAocGFnZVggPCB0b3VjaGVzLnN0YXJ0WCAmJiBzd2lwZXIudHJhbnNsYXRlIDw9IHN3aXBlci5tYXhUcmFuc2xhdGUoKSB8fCBwYWdlWCA+IHRvdWNoZXMuc3RhcnRYICYmIHN3aXBlci50cmFuc2xhdGUgPj0gc3dpcGVyLm1pblRyYW5zbGF0ZSgpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoZGF0YS5pc1RvdWNoRXZlbnQgJiYgZG9jdW1lbnQuYWN0aXZlRWxlbWVudCkge1xuICAgICAgaWYgKGUudGFyZ2V0ID09PSBkb2N1bWVudC5hY3RpdmVFbGVtZW50ICYmICQoZS50YXJnZXQpLmlzKGRhdGEuZm9ybUVsZW1lbnRzKSkge1xuICAgICAgICBkYXRhLmlzTW92ZWQgPSB0cnVlO1xuICAgICAgICBzd2lwZXIuYWxsb3dDbGljayA9IGZhbHNlO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGRhdGEuYWxsb3dUb3VjaENhbGxiYWNrcykge1xuICAgICAgc3dpcGVyLmVtaXQoJ3RvdWNoTW92ZScsIGUpO1xuICAgIH1cblxuICAgIGlmIChlLnRhcmdldFRvdWNoZXMgJiYgZS50YXJnZXRUb3VjaGVzLmxlbmd0aCA+IDEpIHJldHVybjtcbiAgICB0b3VjaGVzLmN1cnJlbnRYID0gcGFnZVg7XG4gICAgdG91Y2hlcy5jdXJyZW50WSA9IHBhZ2VZO1xuICAgIHZhciBkaWZmWCA9IHRvdWNoZXMuY3VycmVudFggLSB0b3VjaGVzLnN0YXJ0WDtcbiAgICB2YXIgZGlmZlkgPSB0b3VjaGVzLmN1cnJlbnRZIC0gdG91Y2hlcy5zdGFydFk7XG4gICAgaWYgKHN3aXBlci5wYXJhbXMudGhyZXNob2xkICYmIE1hdGguc3FydChNYXRoLnBvdyhkaWZmWCwgMikgKyBNYXRoLnBvdyhkaWZmWSwgMikpIDwgc3dpcGVyLnBhcmFtcy50aHJlc2hvbGQpIHJldHVybjtcblxuICAgIGlmICh0eXBlb2YgZGF0YS5pc1Njcm9sbGluZyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHZhciB0b3VjaEFuZ2xlO1xuXG4gICAgICBpZiAoc3dpcGVyLmlzSG9yaXpvbnRhbCgpICYmIHRvdWNoZXMuY3VycmVudFkgPT09IHRvdWNoZXMuc3RhcnRZIHx8IHN3aXBlci5pc1ZlcnRpY2FsKCkgJiYgdG91Y2hlcy5jdXJyZW50WCA9PT0gdG91Y2hlcy5zdGFydFgpIHtcbiAgICAgICAgZGF0YS5pc1Njcm9sbGluZyA9IGZhbHNlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG4gICAgICAgIGlmIChkaWZmWCAqIGRpZmZYICsgZGlmZlkgKiBkaWZmWSA+PSAyNSkge1xuICAgICAgICAgIHRvdWNoQW5nbGUgPSBNYXRoLmF0YW4yKE1hdGguYWJzKGRpZmZZKSwgTWF0aC5hYnMoZGlmZlgpKSAqIDE4MCAvIE1hdGguUEk7XG4gICAgICAgICAgZGF0YS5pc1Njcm9sbGluZyA9IHN3aXBlci5pc0hvcml6b250YWwoKSA/IHRvdWNoQW5nbGUgPiBwYXJhbXMudG91Y2hBbmdsZSA6IDkwIC0gdG91Y2hBbmdsZSA+IHBhcmFtcy50b3VjaEFuZ2xlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGRhdGEuaXNTY3JvbGxpbmcpIHtcbiAgICAgIHN3aXBlci5lbWl0KCd0b3VjaE1vdmVPcHBvc2l0ZScsIGUpO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgZGF0YS5zdGFydE1vdmluZyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGlmICh0b3VjaGVzLmN1cnJlbnRYICE9PSB0b3VjaGVzLnN0YXJ0WCB8fCB0b3VjaGVzLmN1cnJlbnRZICE9PSB0b3VjaGVzLnN0YXJ0WSkge1xuICAgICAgICBkYXRhLnN0YXJ0TW92aW5nID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoZGF0YS5pc1Njcm9sbGluZykge1xuICAgICAgZGF0YS5pc1RvdWNoZWQgPSBmYWxzZTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoIWRhdGEuc3RhcnRNb3ZpbmcpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBzd2lwZXIuYWxsb3dDbGljayA9IGZhbHNlO1xuXG4gICAgaWYgKCFwYXJhbXMuY3NzTW9kZSAmJiBlLmNhbmNlbGFibGUpIHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB9XG5cbiAgICBpZiAocGFyYW1zLnRvdWNoTW92ZVN0b3BQcm9wYWdhdGlvbiAmJiAhcGFyYW1zLm5lc3RlZCkge1xuICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICB9XG5cbiAgICBpZiAoIWRhdGEuaXNNb3ZlZCkge1xuICAgICAgaWYgKHBhcmFtcy5sb29wKSB7XG4gICAgICAgIHN3aXBlci5sb29wRml4KCk7XG4gICAgICB9XG5cbiAgICAgIGRhdGEuc3RhcnRUcmFuc2xhdGUgPSBzd2lwZXIuZ2V0VHJhbnNsYXRlKCk7XG4gICAgICBzd2lwZXIuc2V0VHJhbnNpdGlvbigwKTtcblxuICAgICAgaWYgKHN3aXBlci5hbmltYXRpbmcpIHtcbiAgICAgICAgc3dpcGVyLiR3cmFwcGVyRWwudHJpZ2dlcignd2Via2l0VHJhbnNpdGlvbkVuZCB0cmFuc2l0aW9uZW5kJyk7XG4gICAgICB9XG5cbiAgICAgIGRhdGEuYWxsb3dNb21lbnR1bUJvdW5jZSA9IGZhbHNlOyAvLyBHcmFiIEN1cnNvclxuXG4gICAgICBpZiAocGFyYW1zLmdyYWJDdXJzb3IgJiYgKHN3aXBlci5hbGxvd1NsaWRlTmV4dCA9PT0gdHJ1ZSB8fCBzd2lwZXIuYWxsb3dTbGlkZVByZXYgPT09IHRydWUpKSB7XG4gICAgICAgIHN3aXBlci5zZXRHcmFiQ3Vyc29yKHRydWUpO1xuICAgICAgfVxuXG4gICAgICBzd2lwZXIuZW1pdCgnc2xpZGVyRmlyc3RNb3ZlJywgZSk7XG4gICAgfVxuXG4gICAgc3dpcGVyLmVtaXQoJ3NsaWRlck1vdmUnLCBlKTtcbiAgICBkYXRhLmlzTW92ZWQgPSB0cnVlO1xuICAgIHZhciBkaWZmID0gc3dpcGVyLmlzSG9yaXpvbnRhbCgpID8gZGlmZlggOiBkaWZmWTtcbiAgICB0b3VjaGVzLmRpZmYgPSBkaWZmO1xuICAgIGRpZmYgKj0gcGFyYW1zLnRvdWNoUmF0aW87XG4gICAgaWYgKHJ0bCkgZGlmZiA9IC1kaWZmO1xuICAgIHN3aXBlci5zd2lwZURpcmVjdGlvbiA9IGRpZmYgPiAwID8gJ3ByZXYnIDogJ25leHQnO1xuICAgIGRhdGEuY3VycmVudFRyYW5zbGF0ZSA9IGRpZmYgKyBkYXRhLnN0YXJ0VHJhbnNsYXRlO1xuICAgIHZhciBkaXNhYmxlUGFyZW50U3dpcGVyID0gdHJ1ZTtcbiAgICB2YXIgcmVzaXN0YW5jZVJhdGlvID0gcGFyYW1zLnJlc2lzdGFuY2VSYXRpbztcblxuICAgIGlmIChwYXJhbXMudG91Y2hSZWxlYXNlT25FZGdlcykge1xuICAgICAgcmVzaXN0YW5jZVJhdGlvID0gMDtcbiAgICB9XG5cbiAgICBpZiAoZGlmZiA+IDAgJiYgZGF0YS5jdXJyZW50VHJhbnNsYXRlID4gc3dpcGVyLm1pblRyYW5zbGF0ZSgpKSB7XG4gICAgICBkaXNhYmxlUGFyZW50U3dpcGVyID0gZmFsc2U7XG4gICAgICBpZiAocGFyYW1zLnJlc2lzdGFuY2UpIGRhdGEuY3VycmVudFRyYW5zbGF0ZSA9IHN3aXBlci5taW5UcmFuc2xhdGUoKSAtIDEgKyBNYXRoLnBvdygtc3dpcGVyLm1pblRyYW5zbGF0ZSgpICsgZGF0YS5zdGFydFRyYW5zbGF0ZSArIGRpZmYsIHJlc2lzdGFuY2VSYXRpbyk7XG4gICAgfSBlbHNlIGlmIChkaWZmIDwgMCAmJiBkYXRhLmN1cnJlbnRUcmFuc2xhdGUgPCBzd2lwZXIubWF4VHJhbnNsYXRlKCkpIHtcbiAgICAgIGRpc2FibGVQYXJlbnRTd2lwZXIgPSBmYWxzZTtcbiAgICAgIGlmIChwYXJhbXMucmVzaXN0YW5jZSkgZGF0YS5jdXJyZW50VHJhbnNsYXRlID0gc3dpcGVyLm1heFRyYW5zbGF0ZSgpICsgMSAtIE1hdGgucG93KHN3aXBlci5tYXhUcmFuc2xhdGUoKSAtIGRhdGEuc3RhcnRUcmFuc2xhdGUgLSBkaWZmLCByZXNpc3RhbmNlUmF0aW8pO1xuICAgIH1cblxuICAgIGlmIChkaXNhYmxlUGFyZW50U3dpcGVyKSB7XG4gICAgICBlLnByZXZlbnRlZEJ5TmVzdGVkU3dpcGVyID0gdHJ1ZTtcbiAgICB9IC8vIERpcmVjdGlvbnMgbG9ja3NcblxuXG4gICAgaWYgKCFzd2lwZXIuYWxsb3dTbGlkZU5leHQgJiYgc3dpcGVyLnN3aXBlRGlyZWN0aW9uID09PSAnbmV4dCcgJiYgZGF0YS5jdXJyZW50VHJhbnNsYXRlIDwgZGF0YS5zdGFydFRyYW5zbGF0ZSkge1xuICAgICAgZGF0YS5jdXJyZW50VHJhbnNsYXRlID0gZGF0YS5zdGFydFRyYW5zbGF0ZTtcbiAgICB9XG5cbiAgICBpZiAoIXN3aXBlci5hbGxvd1NsaWRlUHJldiAmJiBzd2lwZXIuc3dpcGVEaXJlY3Rpb24gPT09ICdwcmV2JyAmJiBkYXRhLmN1cnJlbnRUcmFuc2xhdGUgPiBkYXRhLnN0YXJ0VHJhbnNsYXRlKSB7XG4gICAgICBkYXRhLmN1cnJlbnRUcmFuc2xhdGUgPSBkYXRhLnN0YXJ0VHJhbnNsYXRlO1xuICAgIH0gLy8gVGhyZXNob2xkXG5cblxuICAgIGlmIChwYXJhbXMudGhyZXNob2xkID4gMCkge1xuICAgICAgaWYgKE1hdGguYWJzKGRpZmYpID4gcGFyYW1zLnRocmVzaG9sZCB8fCBkYXRhLmFsbG93VGhyZXNob2xkTW92ZSkge1xuICAgICAgICBpZiAoIWRhdGEuYWxsb3dUaHJlc2hvbGRNb3ZlKSB7XG4gICAgICAgICAgZGF0YS5hbGxvd1RocmVzaG9sZE1vdmUgPSB0cnVlO1xuICAgICAgICAgIHRvdWNoZXMuc3RhcnRYID0gdG91Y2hlcy5jdXJyZW50WDtcbiAgICAgICAgICB0b3VjaGVzLnN0YXJ0WSA9IHRvdWNoZXMuY3VycmVudFk7XG4gICAgICAgICAgZGF0YS5jdXJyZW50VHJhbnNsYXRlID0gZGF0YS5zdGFydFRyYW5zbGF0ZTtcbiAgICAgICAgICB0b3VjaGVzLmRpZmYgPSBzd2lwZXIuaXNIb3Jpem9udGFsKCkgPyB0b3VjaGVzLmN1cnJlbnRYIC0gdG91Y2hlcy5zdGFydFggOiB0b3VjaGVzLmN1cnJlbnRZIC0gdG91Y2hlcy5zdGFydFk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBkYXRhLmN1cnJlbnRUcmFuc2xhdGUgPSBkYXRhLnN0YXJ0VHJhbnNsYXRlO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKCFwYXJhbXMuZm9sbG93RmluZ2VyIHx8IHBhcmFtcy5jc3NNb2RlKSByZXR1cm47IC8vIFVwZGF0ZSBhY3RpdmUgaW5kZXggaW4gZnJlZSBtb2RlXG5cbiAgICBpZiAocGFyYW1zLmZyZWVNb2RlIHx8IHBhcmFtcy53YXRjaFNsaWRlc1Byb2dyZXNzIHx8IHBhcmFtcy53YXRjaFNsaWRlc1Zpc2liaWxpdHkpIHtcbiAgICAgIHN3aXBlci51cGRhdGVBY3RpdmVJbmRleCgpO1xuICAgICAgc3dpcGVyLnVwZGF0ZVNsaWRlc0NsYXNzZXMoKTtcbiAgICB9XG5cbiAgICBpZiAocGFyYW1zLmZyZWVNb2RlKSB7XG4gICAgICAvLyBWZWxvY2l0eVxuICAgICAgaWYgKGRhdGEudmVsb2NpdGllcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgZGF0YS52ZWxvY2l0aWVzLnB1c2goe1xuICAgICAgICAgIHBvc2l0aW9uOiB0b3VjaGVzW3N3aXBlci5pc0hvcml6b250YWwoKSA/ICdzdGFydFgnIDogJ3N0YXJ0WSddLFxuICAgICAgICAgIHRpbWU6IGRhdGEudG91Y2hTdGFydFRpbWVcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIGRhdGEudmVsb2NpdGllcy5wdXNoKHtcbiAgICAgICAgcG9zaXRpb246IHRvdWNoZXNbc3dpcGVyLmlzSG9yaXpvbnRhbCgpID8gJ2N1cnJlbnRYJyA6ICdjdXJyZW50WSddLFxuICAgICAgICB0aW1lOiBub3coKVxuICAgICAgfSk7XG4gICAgfSAvLyBVcGRhdGUgcHJvZ3Jlc3NcblxuXG4gICAgc3dpcGVyLnVwZGF0ZVByb2dyZXNzKGRhdGEuY3VycmVudFRyYW5zbGF0ZSk7IC8vIFVwZGF0ZSB0cmFuc2xhdGVcblxuICAgIHN3aXBlci5zZXRUcmFuc2xhdGUoZGF0YS5jdXJyZW50VHJhbnNsYXRlKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIG9uVG91Y2hFbmQoZXZlbnQpIHtcbiAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICB2YXIgZGF0YSA9IHN3aXBlci50b3VjaEV2ZW50c0RhdGE7XG4gICAgdmFyIHBhcmFtcyA9IHN3aXBlci5wYXJhbXMsXG4gICAgICAgIHRvdWNoZXMgPSBzd2lwZXIudG91Y2hlcyxcbiAgICAgICAgcnRsID0gc3dpcGVyLnJ0bFRyYW5zbGF0ZSxcbiAgICAgICAgJHdyYXBwZXJFbCA9IHN3aXBlci4kd3JhcHBlckVsLFxuICAgICAgICBzbGlkZXNHcmlkID0gc3dpcGVyLnNsaWRlc0dyaWQsXG4gICAgICAgIHNuYXBHcmlkID0gc3dpcGVyLnNuYXBHcmlkO1xuICAgIHZhciBlID0gZXZlbnQ7XG4gICAgaWYgKGUub3JpZ2luYWxFdmVudCkgZSA9IGUub3JpZ2luYWxFdmVudDtcblxuICAgIGlmIChkYXRhLmFsbG93VG91Y2hDYWxsYmFja3MpIHtcbiAgICAgIHN3aXBlci5lbWl0KCd0b3VjaEVuZCcsIGUpO1xuICAgIH1cblxuICAgIGRhdGEuYWxsb3dUb3VjaENhbGxiYWNrcyA9IGZhbHNlO1xuXG4gICAgaWYgKCFkYXRhLmlzVG91Y2hlZCkge1xuICAgICAgaWYgKGRhdGEuaXNNb3ZlZCAmJiBwYXJhbXMuZ3JhYkN1cnNvcikge1xuICAgICAgICBzd2lwZXIuc2V0R3JhYkN1cnNvcihmYWxzZSk7XG4gICAgICB9XG5cbiAgICAgIGRhdGEuaXNNb3ZlZCA9IGZhbHNlO1xuICAgICAgZGF0YS5zdGFydE1vdmluZyA9IGZhbHNlO1xuICAgICAgcmV0dXJuO1xuICAgIH0gLy8gUmV0dXJuIEdyYWIgQ3Vyc29yXG5cblxuICAgIGlmIChwYXJhbXMuZ3JhYkN1cnNvciAmJiBkYXRhLmlzTW92ZWQgJiYgZGF0YS5pc1RvdWNoZWQgJiYgKHN3aXBlci5hbGxvd1NsaWRlTmV4dCA9PT0gdHJ1ZSB8fCBzd2lwZXIuYWxsb3dTbGlkZVByZXYgPT09IHRydWUpKSB7XG4gICAgICBzd2lwZXIuc2V0R3JhYkN1cnNvcihmYWxzZSk7XG4gICAgfSAvLyBUaW1lIGRpZmZcblxuXG4gICAgdmFyIHRvdWNoRW5kVGltZSA9IG5vdygpO1xuICAgIHZhciB0aW1lRGlmZiA9IHRvdWNoRW5kVGltZSAtIGRhdGEudG91Y2hTdGFydFRpbWU7IC8vIFRhcCwgZG91YmxlVGFwLCBDbGlja1xuXG4gICAgaWYgKHN3aXBlci5hbGxvd0NsaWNrKSB7XG4gICAgICBzd2lwZXIudXBkYXRlQ2xpY2tlZFNsaWRlKGUpO1xuICAgICAgc3dpcGVyLmVtaXQoJ3RhcCBjbGljaycsIGUpO1xuXG4gICAgICBpZiAodGltZURpZmYgPCAzMDAgJiYgdG91Y2hFbmRUaW1lIC0gZGF0YS5sYXN0Q2xpY2tUaW1lIDwgMzAwKSB7XG4gICAgICAgIHN3aXBlci5lbWl0KCdkb3VibGVUYXAgZG91YmxlQ2xpY2snLCBlKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBkYXRhLmxhc3RDbGlja1RpbWUgPSBub3coKTtcbiAgICBuZXh0VGljayhmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoIXN3aXBlci5kZXN0cm95ZWQpIHN3aXBlci5hbGxvd0NsaWNrID0gdHJ1ZTtcbiAgICB9KTtcblxuICAgIGlmICghZGF0YS5pc1RvdWNoZWQgfHwgIWRhdGEuaXNNb3ZlZCB8fCAhc3dpcGVyLnN3aXBlRGlyZWN0aW9uIHx8IHRvdWNoZXMuZGlmZiA9PT0gMCB8fCBkYXRhLmN1cnJlbnRUcmFuc2xhdGUgPT09IGRhdGEuc3RhcnRUcmFuc2xhdGUpIHtcbiAgICAgIGRhdGEuaXNUb3VjaGVkID0gZmFsc2U7XG4gICAgICBkYXRhLmlzTW92ZWQgPSBmYWxzZTtcbiAgICAgIGRhdGEuc3RhcnRNb3ZpbmcgPSBmYWxzZTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBkYXRhLmlzVG91Y2hlZCA9IGZhbHNlO1xuICAgIGRhdGEuaXNNb3ZlZCA9IGZhbHNlO1xuICAgIGRhdGEuc3RhcnRNb3ZpbmcgPSBmYWxzZTtcbiAgICB2YXIgY3VycmVudFBvcztcblxuICAgIGlmIChwYXJhbXMuZm9sbG93RmluZ2VyKSB7XG4gICAgICBjdXJyZW50UG9zID0gcnRsID8gc3dpcGVyLnRyYW5zbGF0ZSA6IC1zd2lwZXIudHJhbnNsYXRlO1xuICAgIH0gZWxzZSB7XG4gICAgICBjdXJyZW50UG9zID0gLWRhdGEuY3VycmVudFRyYW5zbGF0ZTtcbiAgICB9XG5cbiAgICBpZiAocGFyYW1zLmNzc01vZGUpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAocGFyYW1zLmZyZWVNb2RlKSB7XG4gICAgICBpZiAoY3VycmVudFBvcyA8IC1zd2lwZXIubWluVHJhbnNsYXRlKCkpIHtcbiAgICAgICAgc3dpcGVyLnNsaWRlVG8oc3dpcGVyLmFjdGl2ZUluZGV4KTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAoY3VycmVudFBvcyA+IC1zd2lwZXIubWF4VHJhbnNsYXRlKCkpIHtcbiAgICAgICAgaWYgKHN3aXBlci5zbGlkZXMubGVuZ3RoIDwgc25hcEdyaWQubGVuZ3RoKSB7XG4gICAgICAgICAgc3dpcGVyLnNsaWRlVG8oc25hcEdyaWQubGVuZ3RoIC0gMSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc3dpcGVyLnNsaWRlVG8oc3dpcGVyLnNsaWRlcy5sZW5ndGggLSAxKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKHBhcmFtcy5mcmVlTW9kZU1vbWVudHVtKSB7XG4gICAgICAgIGlmIChkYXRhLnZlbG9jaXRpZXMubGVuZ3RoID4gMSkge1xuICAgICAgICAgIHZhciBsYXN0TW92ZUV2ZW50ID0gZGF0YS52ZWxvY2l0aWVzLnBvcCgpO1xuICAgICAgICAgIHZhciB2ZWxvY2l0eUV2ZW50ID0gZGF0YS52ZWxvY2l0aWVzLnBvcCgpO1xuICAgICAgICAgIHZhciBkaXN0YW5jZSA9IGxhc3RNb3ZlRXZlbnQucG9zaXRpb24gLSB2ZWxvY2l0eUV2ZW50LnBvc2l0aW9uO1xuICAgICAgICAgIHZhciB0aW1lID0gbGFzdE1vdmVFdmVudC50aW1lIC0gdmVsb2NpdHlFdmVudC50aW1lO1xuICAgICAgICAgIHN3aXBlci52ZWxvY2l0eSA9IGRpc3RhbmNlIC8gdGltZTtcbiAgICAgICAgICBzd2lwZXIudmVsb2NpdHkgLz0gMjtcblxuICAgICAgICAgIGlmIChNYXRoLmFicyhzd2lwZXIudmVsb2NpdHkpIDwgcGFyYW1zLmZyZWVNb2RlTWluaW11bVZlbG9jaXR5KSB7XG4gICAgICAgICAgICBzd2lwZXIudmVsb2NpdHkgPSAwO1xuICAgICAgICAgIH0gLy8gdGhpcyBpbXBsaWVzIHRoYXQgdGhlIHVzZXIgc3RvcHBlZCBtb3ZpbmcgYSBmaW5nZXIgdGhlbiByZWxlYXNlZC5cbiAgICAgICAgICAvLyBUaGVyZSB3b3VsZCBiZSBubyBldmVudHMgd2l0aCBkaXN0YW5jZSB6ZXJvLCBzbyB0aGUgbGFzdCBldmVudCBpcyBzdGFsZS5cblxuXG4gICAgICAgICAgaWYgKHRpbWUgPiAxNTAgfHwgbm93KCkgLSBsYXN0TW92ZUV2ZW50LnRpbWUgPiAzMDApIHtcbiAgICAgICAgICAgIHN3aXBlci52ZWxvY2l0eSA9IDA7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHN3aXBlci52ZWxvY2l0eSA9IDA7XG4gICAgICAgIH1cblxuICAgICAgICBzd2lwZXIudmVsb2NpdHkgKj0gcGFyYW1zLmZyZWVNb2RlTW9tZW50dW1WZWxvY2l0eVJhdGlvO1xuICAgICAgICBkYXRhLnZlbG9jaXRpZXMubGVuZ3RoID0gMDtcbiAgICAgICAgdmFyIG1vbWVudHVtRHVyYXRpb24gPSAxMDAwICogcGFyYW1zLmZyZWVNb2RlTW9tZW50dW1SYXRpbztcbiAgICAgICAgdmFyIG1vbWVudHVtRGlzdGFuY2UgPSBzd2lwZXIudmVsb2NpdHkgKiBtb21lbnR1bUR1cmF0aW9uO1xuICAgICAgICB2YXIgbmV3UG9zaXRpb24gPSBzd2lwZXIudHJhbnNsYXRlICsgbW9tZW50dW1EaXN0YW5jZTtcbiAgICAgICAgaWYgKHJ0bCkgbmV3UG9zaXRpb24gPSAtbmV3UG9zaXRpb247XG4gICAgICAgIHZhciBkb0JvdW5jZSA9IGZhbHNlO1xuICAgICAgICB2YXIgYWZ0ZXJCb3VuY2VQb3NpdGlvbjtcbiAgICAgICAgdmFyIGJvdW5jZUFtb3VudCA9IE1hdGguYWJzKHN3aXBlci52ZWxvY2l0eSkgKiAyMCAqIHBhcmFtcy5mcmVlTW9kZU1vbWVudHVtQm91bmNlUmF0aW87XG4gICAgICAgIHZhciBuZWVkc0xvb3BGaXg7XG5cbiAgICAgICAgaWYgKG5ld1Bvc2l0aW9uIDwgc3dpcGVyLm1heFRyYW5zbGF0ZSgpKSB7XG4gICAgICAgICAgaWYgKHBhcmFtcy5mcmVlTW9kZU1vbWVudHVtQm91bmNlKSB7XG4gICAgICAgICAgICBpZiAobmV3UG9zaXRpb24gKyBzd2lwZXIubWF4VHJhbnNsYXRlKCkgPCAtYm91bmNlQW1vdW50KSB7XG4gICAgICAgICAgICAgIG5ld1Bvc2l0aW9uID0gc3dpcGVyLm1heFRyYW5zbGF0ZSgpIC0gYm91bmNlQW1vdW50O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBhZnRlckJvdW5jZVBvc2l0aW9uID0gc3dpcGVyLm1heFRyYW5zbGF0ZSgpO1xuICAgICAgICAgICAgZG9Cb3VuY2UgPSB0cnVlO1xuICAgICAgICAgICAgZGF0YS5hbGxvd01vbWVudHVtQm91bmNlID0gdHJ1ZTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbmV3UG9zaXRpb24gPSBzd2lwZXIubWF4VHJhbnNsYXRlKCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHBhcmFtcy5sb29wICYmIHBhcmFtcy5jZW50ZXJlZFNsaWRlcykgbmVlZHNMb29wRml4ID0gdHJ1ZTtcbiAgICAgICAgfSBlbHNlIGlmIChuZXdQb3NpdGlvbiA+IHN3aXBlci5taW5UcmFuc2xhdGUoKSkge1xuICAgICAgICAgIGlmIChwYXJhbXMuZnJlZU1vZGVNb21lbnR1bUJvdW5jZSkge1xuICAgICAgICAgICAgaWYgKG5ld1Bvc2l0aW9uIC0gc3dpcGVyLm1pblRyYW5zbGF0ZSgpID4gYm91bmNlQW1vdW50KSB7XG4gICAgICAgICAgICAgIG5ld1Bvc2l0aW9uID0gc3dpcGVyLm1pblRyYW5zbGF0ZSgpICsgYm91bmNlQW1vdW50O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBhZnRlckJvdW5jZVBvc2l0aW9uID0gc3dpcGVyLm1pblRyYW5zbGF0ZSgpO1xuICAgICAgICAgICAgZG9Cb3VuY2UgPSB0cnVlO1xuICAgICAgICAgICAgZGF0YS5hbGxvd01vbWVudHVtQm91bmNlID0gdHJ1ZTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbmV3UG9zaXRpb24gPSBzd2lwZXIubWluVHJhbnNsYXRlKCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHBhcmFtcy5sb29wICYmIHBhcmFtcy5jZW50ZXJlZFNsaWRlcykgbmVlZHNMb29wRml4ID0gdHJ1ZTtcbiAgICAgICAgfSBlbHNlIGlmIChwYXJhbXMuZnJlZU1vZGVTdGlja3kpIHtcbiAgICAgICAgICB2YXIgbmV4dFNsaWRlO1xuXG4gICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBzbmFwR3JpZC5sZW5ndGg7IGogKz0gMSkge1xuICAgICAgICAgICAgaWYgKHNuYXBHcmlkW2pdID4gLW5ld1Bvc2l0aW9uKSB7XG4gICAgICAgICAgICAgIG5leHRTbGlkZSA9IGo7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChNYXRoLmFicyhzbmFwR3JpZFtuZXh0U2xpZGVdIC0gbmV3UG9zaXRpb24pIDwgTWF0aC5hYnMoc25hcEdyaWRbbmV4dFNsaWRlIC0gMV0gLSBuZXdQb3NpdGlvbikgfHwgc3dpcGVyLnN3aXBlRGlyZWN0aW9uID09PSAnbmV4dCcpIHtcbiAgICAgICAgICAgIG5ld1Bvc2l0aW9uID0gc25hcEdyaWRbbmV4dFNsaWRlXTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbmV3UG9zaXRpb24gPSBzbmFwR3JpZFtuZXh0U2xpZGUgLSAxXTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBuZXdQb3NpdGlvbiA9IC1uZXdQb3NpdGlvbjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChuZWVkc0xvb3BGaXgpIHtcbiAgICAgICAgICBzd2lwZXIub25jZSgndHJhbnNpdGlvbkVuZCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHN3aXBlci5sb29wRml4KCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gLy8gRml4IGR1cmF0aW9uXG5cblxuICAgICAgICBpZiAoc3dpcGVyLnZlbG9jaXR5ICE9PSAwKSB7XG4gICAgICAgICAgaWYgKHJ0bCkge1xuICAgICAgICAgICAgbW9tZW50dW1EdXJhdGlvbiA9IE1hdGguYWJzKCgtbmV3UG9zaXRpb24gLSBzd2lwZXIudHJhbnNsYXRlKSAvIHN3aXBlci52ZWxvY2l0eSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG1vbWVudHVtRHVyYXRpb24gPSBNYXRoLmFicygobmV3UG9zaXRpb24gLSBzd2lwZXIudHJhbnNsYXRlKSAvIHN3aXBlci52ZWxvY2l0eSk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHBhcmFtcy5mcmVlTW9kZVN0aWNreSkge1xuICAgICAgICAgICAgLy8gSWYgZnJlZU1vZGVTdGlja3kgaXMgYWN0aXZlIGFuZCB0aGUgdXNlciBlbmRzIGEgc3dpcGUgd2l0aCBhIHNsb3ctdmVsb2NpdHlcbiAgICAgICAgICAgIC8vIGV2ZW50LCB0aGVuIGR1cmF0aW9ucyBjYW4gYmUgMjArIHNlY29uZHMgdG8gc2xpZGUgb25lIChvciB6ZXJvISkgc2xpZGVzLlxuICAgICAgICAgICAgLy8gSXQncyBlYXN5IHRvIHNlZSB0aGlzIHdoZW4gc2ltdWxhdGluZyB0b3VjaCB3aXRoIG1vdXNlIGV2ZW50cy4gVG8gZml4IHRoaXMsXG4gICAgICAgICAgICAvLyBsaW1pdCBzaW5nbGUtc2xpZGUgc3dpcGVzIHRvIHRoZSBkZWZhdWx0IHNsaWRlIGR1cmF0aW9uLiBUaGlzIGFsc28gaGFzIHRoZVxuICAgICAgICAgICAgLy8gbmljZSBzaWRlIGVmZmVjdCBvZiBtYXRjaGluZyBzbGlkZSBzcGVlZCBpZiB0aGUgdXNlciBzdG9wcGVkIG1vdmluZyBiZWZvcmVcbiAgICAgICAgICAgIC8vIGxpZnRpbmcgZmluZ2VyIG9yIG1vdXNlIHZzLiBtb3Zpbmcgc2xvd2x5IGJlZm9yZSBsaWZ0aW5nIHRoZSBmaW5nZXIvbW91c2UuXG4gICAgICAgICAgICAvLyBGb3IgZmFzdGVyIHN3aXBlcywgYWxzbyBhcHBseSBsaW1pdHMgKGFsYmVpdCBoaWdoZXIgb25lcykuXG4gICAgICAgICAgICB2YXIgbW92ZURpc3RhbmNlID0gTWF0aC5hYnMoKHJ0bCA/IC1uZXdQb3NpdGlvbiA6IG5ld1Bvc2l0aW9uKSAtIHN3aXBlci50cmFuc2xhdGUpO1xuICAgICAgICAgICAgdmFyIGN1cnJlbnRTbGlkZVNpemUgPSBzd2lwZXIuc2xpZGVzU2l6ZXNHcmlkW3N3aXBlci5hY3RpdmVJbmRleF07XG5cbiAgICAgICAgICAgIGlmIChtb3ZlRGlzdGFuY2UgPCBjdXJyZW50U2xpZGVTaXplKSB7XG4gICAgICAgICAgICAgIG1vbWVudHVtRHVyYXRpb24gPSBwYXJhbXMuc3BlZWQ7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKG1vdmVEaXN0YW5jZSA8IDIgKiBjdXJyZW50U2xpZGVTaXplKSB7XG4gICAgICAgICAgICAgIG1vbWVudHVtRHVyYXRpb24gPSBwYXJhbXMuc3BlZWQgKiAxLjU7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBtb21lbnR1bUR1cmF0aW9uID0gcGFyYW1zLnNwZWVkICogMi41O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChwYXJhbXMuZnJlZU1vZGVTdGlja3kpIHtcbiAgICAgICAgICBzd2lwZXIuc2xpZGVUb0Nsb3Nlc3QoKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBpZiAocGFyYW1zLmZyZWVNb2RlTW9tZW50dW1Cb3VuY2UgJiYgZG9Cb3VuY2UpIHtcbiAgICAgICAgICBzd2lwZXIudXBkYXRlUHJvZ3Jlc3MoYWZ0ZXJCb3VuY2VQb3NpdGlvbik7XG4gICAgICAgICAgc3dpcGVyLnNldFRyYW5zaXRpb24obW9tZW50dW1EdXJhdGlvbik7XG4gICAgICAgICAgc3dpcGVyLnNldFRyYW5zbGF0ZShuZXdQb3NpdGlvbik7XG4gICAgICAgICAgc3dpcGVyLnRyYW5zaXRpb25TdGFydCh0cnVlLCBzd2lwZXIuc3dpcGVEaXJlY3Rpb24pO1xuICAgICAgICAgIHN3aXBlci5hbmltYXRpbmcgPSB0cnVlO1xuICAgICAgICAgICR3cmFwcGVyRWwudHJhbnNpdGlvbkVuZChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAoIXN3aXBlciB8fCBzd2lwZXIuZGVzdHJveWVkIHx8ICFkYXRhLmFsbG93TW9tZW50dW1Cb3VuY2UpIHJldHVybjtcbiAgICAgICAgICAgIHN3aXBlci5lbWl0KCdtb21lbnR1bUJvdW5jZScpO1xuICAgICAgICAgICAgc3dpcGVyLnNldFRyYW5zaXRpb24ocGFyYW1zLnNwZWVkKTtcbiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICBzd2lwZXIuc2V0VHJhbnNsYXRlKGFmdGVyQm91bmNlUG9zaXRpb24pO1xuICAgICAgICAgICAgICAkd3JhcHBlckVsLnRyYW5zaXRpb25FbmQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGlmICghc3dpcGVyIHx8IHN3aXBlci5kZXN0cm95ZWQpIHJldHVybjtcbiAgICAgICAgICAgICAgICBzd2lwZXIudHJhbnNpdGlvbkVuZCgpO1xuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sIDApO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2UgaWYgKHN3aXBlci52ZWxvY2l0eSkge1xuICAgICAgICAgIHN3aXBlci51cGRhdGVQcm9ncmVzcyhuZXdQb3NpdGlvbik7XG4gICAgICAgICAgc3dpcGVyLnNldFRyYW5zaXRpb24obW9tZW50dW1EdXJhdGlvbik7XG4gICAgICAgICAgc3dpcGVyLnNldFRyYW5zbGF0ZShuZXdQb3NpdGlvbik7XG4gICAgICAgICAgc3dpcGVyLnRyYW5zaXRpb25TdGFydCh0cnVlLCBzd2lwZXIuc3dpcGVEaXJlY3Rpb24pO1xuXG4gICAgICAgICAgaWYgKCFzd2lwZXIuYW5pbWF0aW5nKSB7XG4gICAgICAgICAgICBzd2lwZXIuYW5pbWF0aW5nID0gdHJ1ZTtcbiAgICAgICAgICAgICR3cmFwcGVyRWwudHJhbnNpdGlvbkVuZChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgIGlmICghc3dpcGVyIHx8IHN3aXBlci5kZXN0cm95ZWQpIHJldHVybjtcbiAgICAgICAgICAgICAgc3dpcGVyLnRyYW5zaXRpb25FbmQoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzd2lwZXIudXBkYXRlUHJvZ3Jlc3MobmV3UG9zaXRpb24pO1xuICAgICAgICB9XG5cbiAgICAgICAgc3dpcGVyLnVwZGF0ZUFjdGl2ZUluZGV4KCk7XG4gICAgICAgIHN3aXBlci51cGRhdGVTbGlkZXNDbGFzc2VzKCk7XG4gICAgICB9IGVsc2UgaWYgKHBhcmFtcy5mcmVlTW9kZVN0aWNreSkge1xuICAgICAgICBzd2lwZXIuc2xpZGVUb0Nsb3Nlc3QoKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAoIXBhcmFtcy5mcmVlTW9kZU1vbWVudHVtIHx8IHRpbWVEaWZmID49IHBhcmFtcy5sb25nU3dpcGVzTXMpIHtcbiAgICAgICAgc3dpcGVyLnVwZGF0ZVByb2dyZXNzKCk7XG4gICAgICAgIHN3aXBlci51cGRhdGVBY3RpdmVJbmRleCgpO1xuICAgICAgICBzd2lwZXIudXBkYXRlU2xpZGVzQ2xhc3NlcygpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm47XG4gICAgfSAvLyBGaW5kIGN1cnJlbnQgc2xpZGVcblxuXG4gICAgdmFyIHN0b3BJbmRleCA9IDA7XG4gICAgdmFyIGdyb3VwU2l6ZSA9IHN3aXBlci5zbGlkZXNTaXplc0dyaWRbMF07XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNsaWRlc0dyaWQubGVuZ3RoOyBpICs9IGkgPCBwYXJhbXMuc2xpZGVzUGVyR3JvdXBTa2lwID8gMSA6IHBhcmFtcy5zbGlkZXNQZXJHcm91cCkge1xuICAgICAgdmFyIF9pbmNyZW1lbnQgPSBpIDwgcGFyYW1zLnNsaWRlc1Blckdyb3VwU2tpcCAtIDEgPyAxIDogcGFyYW1zLnNsaWRlc1Blckdyb3VwO1xuXG4gICAgICBpZiAodHlwZW9mIHNsaWRlc0dyaWRbaSArIF9pbmNyZW1lbnRdICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICBpZiAoY3VycmVudFBvcyA+PSBzbGlkZXNHcmlkW2ldICYmIGN1cnJlbnRQb3MgPCBzbGlkZXNHcmlkW2kgKyBfaW5jcmVtZW50XSkge1xuICAgICAgICAgIHN0b3BJbmRleCA9IGk7XG4gICAgICAgICAgZ3JvdXBTaXplID0gc2xpZGVzR3JpZFtpICsgX2luY3JlbWVudF0gLSBzbGlkZXNHcmlkW2ldO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKGN1cnJlbnRQb3MgPj0gc2xpZGVzR3JpZFtpXSkge1xuICAgICAgICBzdG9wSW5kZXggPSBpO1xuICAgICAgICBncm91cFNpemUgPSBzbGlkZXNHcmlkW3NsaWRlc0dyaWQubGVuZ3RoIC0gMV0gLSBzbGlkZXNHcmlkW3NsaWRlc0dyaWQubGVuZ3RoIC0gMl07XG4gICAgICB9XG4gICAgfSAvLyBGaW5kIGN1cnJlbnQgc2xpZGUgc2l6ZVxuXG5cbiAgICB2YXIgcmF0aW8gPSAoY3VycmVudFBvcyAtIHNsaWRlc0dyaWRbc3RvcEluZGV4XSkgLyBncm91cFNpemU7XG4gICAgdmFyIGluY3JlbWVudCA9IHN0b3BJbmRleCA8IHBhcmFtcy5zbGlkZXNQZXJHcm91cFNraXAgLSAxID8gMSA6IHBhcmFtcy5zbGlkZXNQZXJHcm91cDtcblxuICAgIGlmICh0aW1lRGlmZiA+IHBhcmFtcy5sb25nU3dpcGVzTXMpIHtcbiAgICAgIC8vIExvbmcgdG91Y2hlc1xuICAgICAgaWYgKCFwYXJhbXMubG9uZ1N3aXBlcykge1xuICAgICAgICBzd2lwZXIuc2xpZGVUbyhzd2lwZXIuYWN0aXZlSW5kZXgpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChzd2lwZXIuc3dpcGVEaXJlY3Rpb24gPT09ICduZXh0Jykge1xuICAgICAgICBpZiAocmF0aW8gPj0gcGFyYW1zLmxvbmdTd2lwZXNSYXRpbykgc3dpcGVyLnNsaWRlVG8oc3RvcEluZGV4ICsgaW5jcmVtZW50KTtlbHNlIHN3aXBlci5zbGlkZVRvKHN0b3BJbmRleCk7XG4gICAgICB9XG5cbiAgICAgIGlmIChzd2lwZXIuc3dpcGVEaXJlY3Rpb24gPT09ICdwcmV2Jykge1xuICAgICAgICBpZiAocmF0aW8gPiAxIC0gcGFyYW1zLmxvbmdTd2lwZXNSYXRpbykgc3dpcGVyLnNsaWRlVG8oc3RvcEluZGV4ICsgaW5jcmVtZW50KTtlbHNlIHN3aXBlci5zbGlkZVRvKHN0b3BJbmRleCk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIFNob3J0IHN3aXBlc1xuICAgICAgaWYgKCFwYXJhbXMuc2hvcnRTd2lwZXMpIHtcbiAgICAgICAgc3dpcGVyLnNsaWRlVG8oc3dpcGVyLmFjdGl2ZUluZGV4KTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB2YXIgaXNOYXZCdXR0b25UYXJnZXQgPSBzd2lwZXIubmF2aWdhdGlvbiAmJiAoZS50YXJnZXQgPT09IHN3aXBlci5uYXZpZ2F0aW9uLm5leHRFbCB8fCBlLnRhcmdldCA9PT0gc3dpcGVyLm5hdmlnYXRpb24ucHJldkVsKTtcblxuICAgICAgaWYgKCFpc05hdkJ1dHRvblRhcmdldCkge1xuICAgICAgICBpZiAoc3dpcGVyLnN3aXBlRGlyZWN0aW9uID09PSAnbmV4dCcpIHtcbiAgICAgICAgICBzd2lwZXIuc2xpZGVUbyhzdG9wSW5kZXggKyBpbmNyZW1lbnQpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHN3aXBlci5zd2lwZURpcmVjdGlvbiA9PT0gJ3ByZXYnKSB7XG4gICAgICAgICAgc3dpcGVyLnNsaWRlVG8oc3RvcEluZGV4KTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChlLnRhcmdldCA9PT0gc3dpcGVyLm5hdmlnYXRpb24ubmV4dEVsKSB7XG4gICAgICAgIHN3aXBlci5zbGlkZVRvKHN0b3BJbmRleCArIGluY3JlbWVudCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzd2lwZXIuc2xpZGVUbyhzdG9wSW5kZXgpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIG9uUmVzaXplKCkge1xuICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgIHZhciBwYXJhbXMgPSBzd2lwZXIucGFyYW1zLFxuICAgICAgICBlbCA9IHN3aXBlci5lbDtcbiAgICBpZiAoZWwgJiYgZWwub2Zmc2V0V2lkdGggPT09IDApIHJldHVybjsgLy8gQnJlYWtwb2ludHNcblxuICAgIGlmIChwYXJhbXMuYnJlYWtwb2ludHMpIHtcbiAgICAgIHN3aXBlci5zZXRCcmVha3BvaW50KCk7XG4gICAgfSAvLyBTYXZlIGxvY2tzXG5cblxuICAgIHZhciBhbGxvd1NsaWRlTmV4dCA9IHN3aXBlci5hbGxvd1NsaWRlTmV4dCxcbiAgICAgICAgYWxsb3dTbGlkZVByZXYgPSBzd2lwZXIuYWxsb3dTbGlkZVByZXYsXG4gICAgICAgIHNuYXBHcmlkID0gc3dpcGVyLnNuYXBHcmlkOyAvLyBEaXNhYmxlIGxvY2tzIG9uIHJlc2l6ZVxuXG4gICAgc3dpcGVyLmFsbG93U2xpZGVOZXh0ID0gdHJ1ZTtcbiAgICBzd2lwZXIuYWxsb3dTbGlkZVByZXYgPSB0cnVlO1xuICAgIHN3aXBlci51cGRhdGVTaXplKCk7XG4gICAgc3dpcGVyLnVwZGF0ZVNsaWRlcygpO1xuICAgIHN3aXBlci51cGRhdGVTbGlkZXNDbGFzc2VzKCk7XG5cbiAgICBpZiAoKHBhcmFtcy5zbGlkZXNQZXJWaWV3ID09PSAnYXV0bycgfHwgcGFyYW1zLnNsaWRlc1BlclZpZXcgPiAxKSAmJiBzd2lwZXIuaXNFbmQgJiYgIXN3aXBlci5pc0JlZ2lubmluZyAmJiAhc3dpcGVyLnBhcmFtcy5jZW50ZXJlZFNsaWRlcykge1xuICAgICAgc3dpcGVyLnNsaWRlVG8oc3dpcGVyLnNsaWRlcy5sZW5ndGggLSAxLCAwLCBmYWxzZSwgdHJ1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN3aXBlci5zbGlkZVRvKHN3aXBlci5hY3RpdmVJbmRleCwgMCwgZmFsc2UsIHRydWUpO1xuICAgIH1cblxuICAgIGlmIChzd2lwZXIuYXV0b3BsYXkgJiYgc3dpcGVyLmF1dG9wbGF5LnJ1bm5pbmcgJiYgc3dpcGVyLmF1dG9wbGF5LnBhdXNlZCkge1xuICAgICAgc3dpcGVyLmF1dG9wbGF5LnJ1bigpO1xuICAgIH0gLy8gUmV0dXJuIGxvY2tzIGFmdGVyIHJlc2l6ZVxuXG5cbiAgICBzd2lwZXIuYWxsb3dTbGlkZVByZXYgPSBhbGxvd1NsaWRlUHJldjtcbiAgICBzd2lwZXIuYWxsb3dTbGlkZU5leHQgPSBhbGxvd1NsaWRlTmV4dDtcblxuICAgIGlmIChzd2lwZXIucGFyYW1zLndhdGNoT3ZlcmZsb3cgJiYgc25hcEdyaWQgIT09IHN3aXBlci5zbmFwR3JpZCkge1xuICAgICAgc3dpcGVyLmNoZWNrT3ZlcmZsb3coKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBvbkNsaWNrKGUpIHtcbiAgICB2YXIgc3dpcGVyID0gdGhpcztcblxuICAgIGlmICghc3dpcGVyLmFsbG93Q2xpY2spIHtcbiAgICAgIGlmIChzd2lwZXIucGFyYW1zLnByZXZlbnRDbGlja3MpIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgaWYgKHN3aXBlci5wYXJhbXMucHJldmVudENsaWNrc1Byb3BhZ2F0aW9uICYmIHN3aXBlci5hbmltYXRpbmcpIHtcbiAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgZS5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBvblNjcm9sbCgpIHtcbiAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICB2YXIgd3JhcHBlckVsID0gc3dpcGVyLndyYXBwZXJFbCxcbiAgICAgICAgcnRsVHJhbnNsYXRlID0gc3dpcGVyLnJ0bFRyYW5zbGF0ZTtcbiAgICBzd2lwZXIucHJldmlvdXNUcmFuc2xhdGUgPSBzd2lwZXIudHJhbnNsYXRlO1xuXG4gICAgaWYgKHN3aXBlci5pc0hvcml6b250YWwoKSkge1xuICAgICAgaWYgKHJ0bFRyYW5zbGF0ZSkge1xuICAgICAgICBzd2lwZXIudHJhbnNsYXRlID0gd3JhcHBlckVsLnNjcm9sbFdpZHRoIC0gd3JhcHBlckVsLm9mZnNldFdpZHRoIC0gd3JhcHBlckVsLnNjcm9sbExlZnQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzd2lwZXIudHJhbnNsYXRlID0gLXdyYXBwZXJFbC5zY3JvbGxMZWZ0O1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBzd2lwZXIudHJhbnNsYXRlID0gLXdyYXBwZXJFbC5zY3JvbGxUb3A7XG4gICAgfSAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcblxuXG4gICAgaWYgKHN3aXBlci50cmFuc2xhdGUgPT09IC0wKSBzd2lwZXIudHJhbnNsYXRlID0gMDtcbiAgICBzd2lwZXIudXBkYXRlQWN0aXZlSW5kZXgoKTtcbiAgICBzd2lwZXIudXBkYXRlU2xpZGVzQ2xhc3NlcygpO1xuICAgIHZhciBuZXdQcm9ncmVzcztcbiAgICB2YXIgdHJhbnNsYXRlc0RpZmYgPSBzd2lwZXIubWF4VHJhbnNsYXRlKCkgLSBzd2lwZXIubWluVHJhbnNsYXRlKCk7XG5cbiAgICBpZiAodHJhbnNsYXRlc0RpZmYgPT09IDApIHtcbiAgICAgIG5ld1Byb2dyZXNzID0gMDtcbiAgICB9IGVsc2Uge1xuICAgICAgbmV3UHJvZ3Jlc3MgPSAoc3dpcGVyLnRyYW5zbGF0ZSAtIHN3aXBlci5taW5UcmFuc2xhdGUoKSkgLyB0cmFuc2xhdGVzRGlmZjtcbiAgICB9XG5cbiAgICBpZiAobmV3UHJvZ3Jlc3MgIT09IHN3aXBlci5wcm9ncmVzcykge1xuICAgICAgc3dpcGVyLnVwZGF0ZVByb2dyZXNzKHJ0bFRyYW5zbGF0ZSA/IC1zd2lwZXIudHJhbnNsYXRlIDogc3dpcGVyLnRyYW5zbGF0ZSk7XG4gICAgfVxuXG4gICAgc3dpcGVyLmVtaXQoJ3NldFRyYW5zbGF0ZScsIHN3aXBlci50cmFuc2xhdGUsIGZhbHNlKTtcbiAgfVxuXG4gIHZhciBkdW1teUV2ZW50QXR0YWNoZWQgPSBmYWxzZTtcblxuICBmdW5jdGlvbiBkdW1teUV2ZW50TGlzdGVuZXIoKSB7fVxuXG4gIGZ1bmN0aW9uIGF0dGFjaEV2ZW50cygpIHtcbiAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICB2YXIgZG9jdW1lbnQgPSBnZXREb2N1bWVudCgpO1xuICAgIHZhciBwYXJhbXMgPSBzd2lwZXIucGFyYW1zLFxuICAgICAgICB0b3VjaEV2ZW50cyA9IHN3aXBlci50b3VjaEV2ZW50cyxcbiAgICAgICAgZWwgPSBzd2lwZXIuZWwsXG4gICAgICAgIHdyYXBwZXJFbCA9IHN3aXBlci53cmFwcGVyRWwsXG4gICAgICAgIGRldmljZSA9IHN3aXBlci5kZXZpY2UsXG4gICAgICAgIHN1cHBvcnQgPSBzd2lwZXIuc3VwcG9ydDtcbiAgICBzd2lwZXIub25Ub3VjaFN0YXJ0ID0gb25Ub3VjaFN0YXJ0LmJpbmQoc3dpcGVyKTtcbiAgICBzd2lwZXIub25Ub3VjaE1vdmUgPSBvblRvdWNoTW92ZS5iaW5kKHN3aXBlcik7XG4gICAgc3dpcGVyLm9uVG91Y2hFbmQgPSBvblRvdWNoRW5kLmJpbmQoc3dpcGVyKTtcblxuICAgIGlmIChwYXJhbXMuY3NzTW9kZSkge1xuICAgICAgc3dpcGVyLm9uU2Nyb2xsID0gb25TY3JvbGwuYmluZChzd2lwZXIpO1xuICAgIH1cblxuICAgIHN3aXBlci5vbkNsaWNrID0gb25DbGljay5iaW5kKHN3aXBlcik7XG4gICAgdmFyIGNhcHR1cmUgPSAhIXBhcmFtcy5uZXN0ZWQ7IC8vIFRvdWNoIEV2ZW50c1xuXG4gICAgaWYgKCFzdXBwb3J0LnRvdWNoICYmIHN1cHBvcnQucG9pbnRlckV2ZW50cykge1xuICAgICAgZWwuYWRkRXZlbnRMaXN0ZW5lcih0b3VjaEV2ZW50cy5zdGFydCwgc3dpcGVyLm9uVG91Y2hTdGFydCwgZmFsc2UpO1xuICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcih0b3VjaEV2ZW50cy5tb3ZlLCBzd2lwZXIub25Ub3VjaE1vdmUsIGNhcHR1cmUpO1xuICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcih0b3VjaEV2ZW50cy5lbmQsIHN3aXBlci5vblRvdWNoRW5kLCBmYWxzZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChzdXBwb3J0LnRvdWNoKSB7XG4gICAgICAgIHZhciBwYXNzaXZlTGlzdGVuZXIgPSB0b3VjaEV2ZW50cy5zdGFydCA9PT0gJ3RvdWNoc3RhcnQnICYmIHN1cHBvcnQucGFzc2l2ZUxpc3RlbmVyICYmIHBhcmFtcy5wYXNzaXZlTGlzdGVuZXJzID8ge1xuICAgICAgICAgIHBhc3NpdmU6IHRydWUsXG4gICAgICAgICAgY2FwdHVyZTogZmFsc2VcbiAgICAgICAgfSA6IGZhbHNlO1xuICAgICAgICBlbC5hZGRFdmVudExpc3RlbmVyKHRvdWNoRXZlbnRzLnN0YXJ0LCBzd2lwZXIub25Ub3VjaFN0YXJ0LCBwYXNzaXZlTGlzdGVuZXIpO1xuICAgICAgICBlbC5hZGRFdmVudExpc3RlbmVyKHRvdWNoRXZlbnRzLm1vdmUsIHN3aXBlci5vblRvdWNoTW92ZSwgc3VwcG9ydC5wYXNzaXZlTGlzdGVuZXIgPyB7XG4gICAgICAgICAgcGFzc2l2ZTogZmFsc2UsXG4gICAgICAgICAgY2FwdHVyZTogY2FwdHVyZVxuICAgICAgICB9IDogY2FwdHVyZSk7XG4gICAgICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIodG91Y2hFdmVudHMuZW5kLCBzd2lwZXIub25Ub3VjaEVuZCwgcGFzc2l2ZUxpc3RlbmVyKTtcblxuICAgICAgICBpZiAodG91Y2hFdmVudHMuY2FuY2VsKSB7XG4gICAgICAgICAgZWwuYWRkRXZlbnRMaXN0ZW5lcih0b3VjaEV2ZW50cy5jYW5jZWwsIHN3aXBlci5vblRvdWNoRW5kLCBwYXNzaXZlTGlzdGVuZXIpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCFkdW1teUV2ZW50QXR0YWNoZWQpIHtcbiAgICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCd0b3VjaHN0YXJ0JywgZHVtbXlFdmVudExpc3RlbmVyKTtcbiAgICAgICAgICBkdW1teUV2ZW50QXR0YWNoZWQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChwYXJhbXMuc2ltdWxhdGVUb3VjaCAmJiAhZGV2aWNlLmlvcyAmJiAhZGV2aWNlLmFuZHJvaWQgfHwgcGFyYW1zLnNpbXVsYXRlVG91Y2ggJiYgIXN1cHBvcnQudG91Y2ggJiYgZGV2aWNlLmlvcykge1xuICAgICAgICBlbC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCBzd2lwZXIub25Ub3VjaFN0YXJ0LCBmYWxzZSk7XG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIHN3aXBlci5vblRvdWNoTW92ZSwgY2FwdHVyZSk7XG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCBzd2lwZXIub25Ub3VjaEVuZCwgZmFsc2UpO1xuICAgICAgfVxuICAgIH0gLy8gUHJldmVudCBMaW5rcyBDbGlja3NcblxuXG4gICAgaWYgKHBhcmFtcy5wcmV2ZW50Q2xpY2tzIHx8IHBhcmFtcy5wcmV2ZW50Q2xpY2tzUHJvcGFnYXRpb24pIHtcbiAgICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgc3dpcGVyLm9uQ2xpY2ssIHRydWUpO1xuICAgIH1cblxuICAgIGlmIChwYXJhbXMuY3NzTW9kZSkge1xuICAgICAgd3JhcHBlckVsLmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIHN3aXBlci5vblNjcm9sbCk7XG4gICAgfSAvLyBSZXNpemUgaGFuZGxlclxuXG5cbiAgICBpZiAocGFyYW1zLnVwZGF0ZU9uV2luZG93UmVzaXplKSB7XG4gICAgICBzd2lwZXIub24oZGV2aWNlLmlvcyB8fCBkZXZpY2UuYW5kcm9pZCA/ICdyZXNpemUgb3JpZW50YXRpb25jaGFuZ2Ugb2JzZXJ2ZXJVcGRhdGUnIDogJ3Jlc2l6ZSBvYnNlcnZlclVwZGF0ZScsIG9uUmVzaXplLCB0cnVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3dpcGVyLm9uKCdvYnNlcnZlclVwZGF0ZScsIG9uUmVzaXplLCB0cnVlKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBkZXRhY2hFdmVudHMoKSB7XG4gICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgdmFyIGRvY3VtZW50ID0gZ2V0RG9jdW1lbnQoKTtcbiAgICB2YXIgcGFyYW1zID0gc3dpcGVyLnBhcmFtcyxcbiAgICAgICAgdG91Y2hFdmVudHMgPSBzd2lwZXIudG91Y2hFdmVudHMsXG4gICAgICAgIGVsID0gc3dpcGVyLmVsLFxuICAgICAgICB3cmFwcGVyRWwgPSBzd2lwZXIud3JhcHBlckVsLFxuICAgICAgICBkZXZpY2UgPSBzd2lwZXIuZGV2aWNlLFxuICAgICAgICBzdXBwb3J0ID0gc3dpcGVyLnN1cHBvcnQ7XG4gICAgdmFyIGNhcHR1cmUgPSAhIXBhcmFtcy5uZXN0ZWQ7IC8vIFRvdWNoIEV2ZW50c1xuXG4gICAgaWYgKCFzdXBwb3J0LnRvdWNoICYmIHN1cHBvcnQucG9pbnRlckV2ZW50cykge1xuICAgICAgZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcih0b3VjaEV2ZW50cy5zdGFydCwgc3dpcGVyLm9uVG91Y2hTdGFydCwgZmFsc2UpO1xuICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcih0b3VjaEV2ZW50cy5tb3ZlLCBzd2lwZXIub25Ub3VjaE1vdmUsIGNhcHR1cmUpO1xuICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcih0b3VjaEV2ZW50cy5lbmQsIHN3aXBlci5vblRvdWNoRW5kLCBmYWxzZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChzdXBwb3J0LnRvdWNoKSB7XG4gICAgICAgIHZhciBwYXNzaXZlTGlzdGVuZXIgPSB0b3VjaEV2ZW50cy5zdGFydCA9PT0gJ29uVG91Y2hTdGFydCcgJiYgc3VwcG9ydC5wYXNzaXZlTGlzdGVuZXIgJiYgcGFyYW1zLnBhc3NpdmVMaXN0ZW5lcnMgPyB7XG4gICAgICAgICAgcGFzc2l2ZTogdHJ1ZSxcbiAgICAgICAgICBjYXB0dXJlOiBmYWxzZVxuICAgICAgICB9IDogZmFsc2U7XG4gICAgICAgIGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIodG91Y2hFdmVudHMuc3RhcnQsIHN3aXBlci5vblRvdWNoU3RhcnQsIHBhc3NpdmVMaXN0ZW5lcik7XG4gICAgICAgIGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIodG91Y2hFdmVudHMubW92ZSwgc3dpcGVyLm9uVG91Y2hNb3ZlLCBjYXB0dXJlKTtcbiAgICAgICAgZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcih0b3VjaEV2ZW50cy5lbmQsIHN3aXBlci5vblRvdWNoRW5kLCBwYXNzaXZlTGlzdGVuZXIpO1xuXG4gICAgICAgIGlmICh0b3VjaEV2ZW50cy5jYW5jZWwpIHtcbiAgICAgICAgICBlbC5yZW1vdmVFdmVudExpc3RlbmVyKHRvdWNoRXZlbnRzLmNhbmNlbCwgc3dpcGVyLm9uVG91Y2hFbmQsIHBhc3NpdmVMaXN0ZW5lcik7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHBhcmFtcy5zaW11bGF0ZVRvdWNoICYmICFkZXZpY2UuaW9zICYmICFkZXZpY2UuYW5kcm9pZCB8fCBwYXJhbXMuc2ltdWxhdGVUb3VjaCAmJiAhc3VwcG9ydC50b3VjaCAmJiBkZXZpY2UuaW9zKSB7XG4gICAgICAgIGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIHN3aXBlci5vblRvdWNoU3RhcnQsIGZhbHNlKTtcbiAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgc3dpcGVyLm9uVG91Y2hNb3ZlLCBjYXB0dXJlKTtcbiAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIHN3aXBlci5vblRvdWNoRW5kLCBmYWxzZSk7XG4gICAgICB9XG4gICAgfSAvLyBQcmV2ZW50IExpbmtzIENsaWNrc1xuXG5cbiAgICBpZiAocGFyYW1zLnByZXZlbnRDbGlja3MgfHwgcGFyYW1zLnByZXZlbnRDbGlja3NQcm9wYWdhdGlvbikge1xuICAgICAgZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCBzd2lwZXIub25DbGljaywgdHJ1ZSk7XG4gICAgfVxuXG4gICAgaWYgKHBhcmFtcy5jc3NNb2RlKSB7XG4gICAgICB3cmFwcGVyRWwucmVtb3ZlRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgc3dpcGVyLm9uU2Nyb2xsKTtcbiAgICB9IC8vIFJlc2l6ZSBoYW5kbGVyXG5cblxuICAgIHN3aXBlci5vZmYoZGV2aWNlLmlvcyB8fCBkZXZpY2UuYW5kcm9pZCA/ICdyZXNpemUgb3JpZW50YXRpb25jaGFuZ2Ugb2JzZXJ2ZXJVcGRhdGUnIDogJ3Jlc2l6ZSBvYnNlcnZlclVwZGF0ZScsIG9uUmVzaXplKTtcbiAgfVxuXG4gIHZhciBldmVudHMgPSB7XG4gICAgYXR0YWNoRXZlbnRzOiBhdHRhY2hFdmVudHMsXG4gICAgZGV0YWNoRXZlbnRzOiBkZXRhY2hFdmVudHNcbiAgfTtcblxuICBmdW5jdGlvbiBzZXRCcmVha3BvaW50KCkge1xuICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgIHZhciBhY3RpdmVJbmRleCA9IHN3aXBlci5hY3RpdmVJbmRleCxcbiAgICAgICAgaW5pdGlhbGl6ZWQgPSBzd2lwZXIuaW5pdGlhbGl6ZWQsXG4gICAgICAgIF9zd2lwZXIkbG9vcGVkU2xpZGVzID0gc3dpcGVyLmxvb3BlZFNsaWRlcyxcbiAgICAgICAgbG9vcGVkU2xpZGVzID0gX3N3aXBlciRsb29wZWRTbGlkZXMgPT09IHZvaWQgMCA/IDAgOiBfc3dpcGVyJGxvb3BlZFNsaWRlcyxcbiAgICAgICAgcGFyYW1zID0gc3dpcGVyLnBhcmFtcyxcbiAgICAgICAgJGVsID0gc3dpcGVyLiRlbDtcbiAgICB2YXIgYnJlYWtwb2ludHMgPSBwYXJhbXMuYnJlYWtwb2ludHM7XG4gICAgaWYgKCFicmVha3BvaW50cyB8fCBicmVha3BvaW50cyAmJiBPYmplY3Qua2V5cyhicmVha3BvaW50cykubGVuZ3RoID09PSAwKSByZXR1cm47IC8vIEdldCBicmVha3BvaW50IGZvciB3aW5kb3cgd2lkdGggYW5kIHVwZGF0ZSBwYXJhbWV0ZXJzXG5cbiAgICB2YXIgYnJlYWtwb2ludCA9IHN3aXBlci5nZXRCcmVha3BvaW50KGJyZWFrcG9pbnRzKTtcblxuICAgIGlmIChicmVha3BvaW50ICYmIHN3aXBlci5jdXJyZW50QnJlYWtwb2ludCAhPT0gYnJlYWtwb2ludCkge1xuICAgICAgdmFyIGJyZWFrcG9pbnRPbmx5UGFyYW1zID0gYnJlYWtwb2ludCBpbiBicmVha3BvaW50cyA/IGJyZWFrcG9pbnRzW2JyZWFrcG9pbnRdIDogdW5kZWZpbmVkO1xuXG4gICAgICBpZiAoYnJlYWtwb2ludE9ubHlQYXJhbXMpIHtcbiAgICAgICAgWydzbGlkZXNQZXJWaWV3JywgJ3NwYWNlQmV0d2VlbicsICdzbGlkZXNQZXJHcm91cCcsICdzbGlkZXNQZXJHcm91cFNraXAnLCAnc2xpZGVzUGVyQ29sdW1uJ10uZm9yRWFjaChmdW5jdGlvbiAocGFyYW0pIHtcbiAgICAgICAgICB2YXIgcGFyYW1WYWx1ZSA9IGJyZWFrcG9pbnRPbmx5UGFyYW1zW3BhcmFtXTtcbiAgICAgICAgICBpZiAodHlwZW9mIHBhcmFtVmFsdWUgPT09ICd1bmRlZmluZWQnKSByZXR1cm47XG5cbiAgICAgICAgICBpZiAocGFyYW0gPT09ICdzbGlkZXNQZXJWaWV3JyAmJiAocGFyYW1WYWx1ZSA9PT0gJ0FVVE8nIHx8IHBhcmFtVmFsdWUgPT09ICdhdXRvJykpIHtcbiAgICAgICAgICAgIGJyZWFrcG9pbnRPbmx5UGFyYW1zW3BhcmFtXSA9ICdhdXRvJztcbiAgICAgICAgICB9IGVsc2UgaWYgKHBhcmFtID09PSAnc2xpZGVzUGVyVmlldycpIHtcbiAgICAgICAgICAgIGJyZWFrcG9pbnRPbmx5UGFyYW1zW3BhcmFtXSA9IHBhcnNlRmxvYXQocGFyYW1WYWx1ZSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGJyZWFrcG9pbnRPbmx5UGFyYW1zW3BhcmFtXSA9IHBhcnNlSW50KHBhcmFtVmFsdWUsIDEwKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICB2YXIgYnJlYWtwb2ludFBhcmFtcyA9IGJyZWFrcG9pbnRPbmx5UGFyYW1zIHx8IHN3aXBlci5vcmlnaW5hbFBhcmFtcztcbiAgICAgIHZhciB3YXNNdWx0aVJvdyA9IHBhcmFtcy5zbGlkZXNQZXJDb2x1bW4gPiAxO1xuICAgICAgdmFyIGlzTXVsdGlSb3cgPSBicmVha3BvaW50UGFyYW1zLnNsaWRlc1BlckNvbHVtbiA+IDE7XG5cbiAgICAgIGlmICh3YXNNdWx0aVJvdyAmJiAhaXNNdWx0aVJvdykge1xuICAgICAgICAkZWwucmVtb3ZlQ2xhc3MocGFyYW1zLmNvbnRhaW5lck1vZGlmaWVyQ2xhc3MgKyBcIm11bHRpcm93IFwiICsgcGFyYW1zLmNvbnRhaW5lck1vZGlmaWVyQ2xhc3MgKyBcIm11bHRpcm93LWNvbHVtblwiKTtcbiAgICAgICAgc3dpcGVyLmVtaXRDb250YWluZXJDbGFzc2VzKCk7XG4gICAgICB9IGVsc2UgaWYgKCF3YXNNdWx0aVJvdyAmJiBpc011bHRpUm93KSB7XG4gICAgICAgICRlbC5hZGRDbGFzcyhwYXJhbXMuY29udGFpbmVyTW9kaWZpZXJDbGFzcyArIFwibXVsdGlyb3dcIik7XG5cbiAgICAgICAgaWYgKGJyZWFrcG9pbnRQYXJhbXMuc2xpZGVzUGVyQ29sdW1uRmlsbCA9PT0gJ2NvbHVtbicpIHtcbiAgICAgICAgICAkZWwuYWRkQ2xhc3MocGFyYW1zLmNvbnRhaW5lck1vZGlmaWVyQ2xhc3MgKyBcIm11bHRpcm93LWNvbHVtblwiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHN3aXBlci5lbWl0Q29udGFpbmVyQ2xhc3NlcygpO1xuICAgICAgfVxuXG4gICAgICB2YXIgZGlyZWN0aW9uQ2hhbmdlZCA9IGJyZWFrcG9pbnRQYXJhbXMuZGlyZWN0aW9uICYmIGJyZWFrcG9pbnRQYXJhbXMuZGlyZWN0aW9uICE9PSBwYXJhbXMuZGlyZWN0aW9uO1xuICAgICAgdmFyIG5lZWRzUmVMb29wID0gcGFyYW1zLmxvb3AgJiYgKGJyZWFrcG9pbnRQYXJhbXMuc2xpZGVzUGVyVmlldyAhPT0gcGFyYW1zLnNsaWRlc1BlclZpZXcgfHwgZGlyZWN0aW9uQ2hhbmdlZCk7XG5cbiAgICAgIGlmIChkaXJlY3Rpb25DaGFuZ2VkICYmIGluaXRpYWxpemVkKSB7XG4gICAgICAgIHN3aXBlci5jaGFuZ2VEaXJlY3Rpb24oKTtcbiAgICAgIH1cblxuICAgICAgZXh0ZW5kJDEoc3dpcGVyLnBhcmFtcywgYnJlYWtwb2ludFBhcmFtcyk7XG4gICAgICBleHRlbmQkMShzd2lwZXIsIHtcbiAgICAgICAgYWxsb3dUb3VjaE1vdmU6IHN3aXBlci5wYXJhbXMuYWxsb3dUb3VjaE1vdmUsXG4gICAgICAgIGFsbG93U2xpZGVOZXh0OiBzd2lwZXIucGFyYW1zLmFsbG93U2xpZGVOZXh0LFxuICAgICAgICBhbGxvd1NsaWRlUHJldjogc3dpcGVyLnBhcmFtcy5hbGxvd1NsaWRlUHJldlxuICAgICAgfSk7XG4gICAgICBzd2lwZXIuY3VycmVudEJyZWFrcG9pbnQgPSBicmVha3BvaW50O1xuICAgICAgc3dpcGVyLmVtaXQoJ19iZWZvcmVCcmVha3BvaW50JywgYnJlYWtwb2ludFBhcmFtcyk7XG5cbiAgICAgIGlmIChuZWVkc1JlTG9vcCAmJiBpbml0aWFsaXplZCkge1xuICAgICAgICBzd2lwZXIubG9vcERlc3Ryb3koKTtcbiAgICAgICAgc3dpcGVyLmxvb3BDcmVhdGUoKTtcbiAgICAgICAgc3dpcGVyLnVwZGF0ZVNsaWRlcygpO1xuICAgICAgICBzd2lwZXIuc2xpZGVUbyhhY3RpdmVJbmRleCAtIGxvb3BlZFNsaWRlcyArIHN3aXBlci5sb29wZWRTbGlkZXMsIDAsIGZhbHNlKTtcbiAgICAgIH1cblxuICAgICAgc3dpcGVyLmVtaXQoJ2JyZWFrcG9pbnQnLCBicmVha3BvaW50UGFyYW1zKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBnZXRCcmVha3BvaW50cyhicmVha3BvaW50cykge1xuICAgIHZhciB3aW5kb3cgPSBnZXRXaW5kb3coKTsgLy8gR2V0IGJyZWFrcG9pbnQgZm9yIHdpbmRvdyB3aWR0aFxuXG4gICAgaWYgKCFicmVha3BvaW50cykgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB2YXIgYnJlYWtwb2ludCA9IGZhbHNlO1xuICAgIHZhciBwb2ludHMgPSBPYmplY3Qua2V5cyhicmVha3BvaW50cykubWFwKGZ1bmN0aW9uIChwb2ludCkge1xuICAgICAgaWYgKHR5cGVvZiBwb2ludCA9PT0gJ3N0cmluZycgJiYgcG9pbnQuaW5kZXhPZignQCcpID09PSAwKSB7XG4gICAgICAgIHZhciBtaW5SYXRpbyA9IHBhcnNlRmxvYXQocG9pbnQuc3Vic3RyKDEpKTtcbiAgICAgICAgdmFyIHZhbHVlID0gd2luZG93LmlubmVySGVpZ2h0ICogbWluUmF0aW87XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgICAgIHBvaW50OiBwb2ludFxuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICByZXR1cm4ge1xuICAgICAgICB2YWx1ZTogcG9pbnQsXG4gICAgICAgIHBvaW50OiBwb2ludFxuICAgICAgfTtcbiAgICB9KTtcbiAgICBwb2ludHMuc29ydChmdW5jdGlvbiAoYSwgYikge1xuICAgICAgcmV0dXJuIHBhcnNlSW50KGEudmFsdWUsIDEwKSAtIHBhcnNlSW50KGIudmFsdWUsIDEwKTtcbiAgICB9KTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcG9pbnRzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICB2YXIgX3BvaW50cyRpID0gcG9pbnRzW2ldLFxuICAgICAgICAgIHBvaW50ID0gX3BvaW50cyRpLnBvaW50LFxuICAgICAgICAgIHZhbHVlID0gX3BvaW50cyRpLnZhbHVlO1xuXG4gICAgICBpZiAodmFsdWUgPD0gd2luZG93LmlubmVyV2lkdGgpIHtcbiAgICAgICAgYnJlYWtwb2ludCA9IHBvaW50O1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBicmVha3BvaW50IHx8ICdtYXgnO1xuICB9XG5cbiAgdmFyIGJyZWFrcG9pbnRzID0ge1xuICAgIHNldEJyZWFrcG9pbnQ6IHNldEJyZWFrcG9pbnQsXG4gICAgZ2V0QnJlYWtwb2ludDogZ2V0QnJlYWtwb2ludHNcbiAgfTtcblxuICBmdW5jdGlvbiBhZGRDbGFzc2VzKCkge1xuICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgIHZhciBjbGFzc05hbWVzID0gc3dpcGVyLmNsYXNzTmFtZXMsXG4gICAgICAgIHBhcmFtcyA9IHN3aXBlci5wYXJhbXMsXG4gICAgICAgIHJ0bCA9IHN3aXBlci5ydGwsXG4gICAgICAgICRlbCA9IHN3aXBlci4kZWwsXG4gICAgICAgIGRldmljZSA9IHN3aXBlci5kZXZpY2U7XG4gICAgdmFyIHN1ZmZpeGVzID0gW107XG4gICAgc3VmZml4ZXMucHVzaCgnaW5pdGlhbGl6ZWQnKTtcbiAgICBzdWZmaXhlcy5wdXNoKHBhcmFtcy5kaXJlY3Rpb24pO1xuXG4gICAgaWYgKHBhcmFtcy5mcmVlTW9kZSkge1xuICAgICAgc3VmZml4ZXMucHVzaCgnZnJlZS1tb2RlJyk7XG4gICAgfVxuXG4gICAgaWYgKHBhcmFtcy5hdXRvSGVpZ2h0KSB7XG4gICAgICBzdWZmaXhlcy5wdXNoKCdhdXRvaGVpZ2h0Jyk7XG4gICAgfVxuXG4gICAgaWYgKHJ0bCkge1xuICAgICAgc3VmZml4ZXMucHVzaCgncnRsJyk7XG4gICAgfVxuXG4gICAgaWYgKHBhcmFtcy5zbGlkZXNQZXJDb2x1bW4gPiAxKSB7XG4gICAgICBzdWZmaXhlcy5wdXNoKCdtdWx0aXJvdycpO1xuXG4gICAgICBpZiAocGFyYW1zLnNsaWRlc1BlckNvbHVtbkZpbGwgPT09ICdjb2x1bW4nKSB7XG4gICAgICAgIHN1ZmZpeGVzLnB1c2goJ211bHRpcm93LWNvbHVtbicpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChkZXZpY2UuYW5kcm9pZCkge1xuICAgICAgc3VmZml4ZXMucHVzaCgnYW5kcm9pZCcpO1xuICAgIH1cblxuICAgIGlmIChkZXZpY2UuaW9zKSB7XG4gICAgICBzdWZmaXhlcy5wdXNoKCdpb3MnKTtcbiAgICB9XG5cbiAgICBpZiAocGFyYW1zLmNzc01vZGUpIHtcbiAgICAgIHN1ZmZpeGVzLnB1c2goJ2Nzcy1tb2RlJyk7XG4gICAgfVxuXG4gICAgc3VmZml4ZXMuZm9yRWFjaChmdW5jdGlvbiAoc3VmZml4KSB7XG4gICAgICBjbGFzc05hbWVzLnB1c2gocGFyYW1zLmNvbnRhaW5lck1vZGlmaWVyQ2xhc3MgKyBzdWZmaXgpO1xuICAgIH0pO1xuICAgICRlbC5hZGRDbGFzcyhjbGFzc05hbWVzLmpvaW4oJyAnKSk7XG4gICAgc3dpcGVyLmVtaXRDb250YWluZXJDbGFzc2VzKCk7XG4gIH1cblxuICBmdW5jdGlvbiByZW1vdmVDbGFzc2VzKCkge1xuICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgIHZhciAkZWwgPSBzd2lwZXIuJGVsLFxuICAgICAgICBjbGFzc05hbWVzID0gc3dpcGVyLmNsYXNzTmFtZXM7XG4gICAgJGVsLnJlbW92ZUNsYXNzKGNsYXNzTmFtZXMuam9pbignICcpKTtcbiAgICBzd2lwZXIuZW1pdENvbnRhaW5lckNsYXNzZXMoKTtcbiAgfVxuXG4gIHZhciBjbGFzc2VzID0ge1xuICAgIGFkZENsYXNzZXM6IGFkZENsYXNzZXMsXG4gICAgcmVtb3ZlQ2xhc3NlczogcmVtb3ZlQ2xhc3Nlc1xuICB9O1xuXG4gIGZ1bmN0aW9uIGxvYWRJbWFnZShpbWFnZUVsLCBzcmMsIHNyY3NldCwgc2l6ZXMsIGNoZWNrRm9yQ29tcGxldGUsIGNhbGxiYWNrKSB7XG4gICAgdmFyIHdpbmRvdyA9IGdldFdpbmRvdygpO1xuICAgIHZhciBpbWFnZTtcblxuICAgIGZ1bmN0aW9uIG9uUmVhZHkoKSB7XG4gICAgICBpZiAoY2FsbGJhY2spIGNhbGxiYWNrKCk7XG4gICAgfVxuXG4gICAgdmFyIGlzUGljdHVyZSA9ICQoaW1hZ2VFbCkucGFyZW50KCdwaWN0dXJlJylbMF07XG5cbiAgICBpZiAoIWlzUGljdHVyZSAmJiAoIWltYWdlRWwuY29tcGxldGUgfHwgIWNoZWNrRm9yQ29tcGxldGUpKSB7XG4gICAgICBpZiAoc3JjKSB7XG4gICAgICAgIGltYWdlID0gbmV3IHdpbmRvdy5JbWFnZSgpO1xuICAgICAgICBpbWFnZS5vbmxvYWQgPSBvblJlYWR5O1xuICAgICAgICBpbWFnZS5vbmVycm9yID0gb25SZWFkeTtcblxuICAgICAgICBpZiAoc2l6ZXMpIHtcbiAgICAgICAgICBpbWFnZS5zaXplcyA9IHNpemVzO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHNyY3NldCkge1xuICAgICAgICAgIGltYWdlLnNyY3NldCA9IHNyY3NldDtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChzcmMpIHtcbiAgICAgICAgICBpbWFnZS5zcmMgPSBzcmM7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG9uUmVhZHkoKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgLy8gaW1hZ2UgYWxyZWFkeSBsb2FkZWQuLi5cbiAgICAgIG9uUmVhZHkoKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBwcmVsb2FkSW1hZ2VzKCkge1xuICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgIHN3aXBlci5pbWFnZXNUb0xvYWQgPSBzd2lwZXIuJGVsLmZpbmQoJ2ltZycpO1xuXG4gICAgZnVuY3Rpb24gb25SZWFkeSgpIHtcbiAgICAgIGlmICh0eXBlb2Ygc3dpcGVyID09PSAndW5kZWZpbmVkJyB8fCBzd2lwZXIgPT09IG51bGwgfHwgIXN3aXBlciB8fCBzd2lwZXIuZGVzdHJveWVkKSByZXR1cm47XG4gICAgICBpZiAoc3dpcGVyLmltYWdlc0xvYWRlZCAhPT0gdW5kZWZpbmVkKSBzd2lwZXIuaW1hZ2VzTG9hZGVkICs9IDE7XG5cbiAgICAgIGlmIChzd2lwZXIuaW1hZ2VzTG9hZGVkID09PSBzd2lwZXIuaW1hZ2VzVG9Mb2FkLmxlbmd0aCkge1xuICAgICAgICBpZiAoc3dpcGVyLnBhcmFtcy51cGRhdGVPbkltYWdlc1JlYWR5KSBzd2lwZXIudXBkYXRlKCk7XG4gICAgICAgIHN3aXBlci5lbWl0KCdpbWFnZXNSZWFkeScpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc3dpcGVyLmltYWdlc1RvTG9hZC5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgdmFyIGltYWdlRWwgPSBzd2lwZXIuaW1hZ2VzVG9Mb2FkW2ldO1xuICAgICAgc3dpcGVyLmxvYWRJbWFnZShpbWFnZUVsLCBpbWFnZUVsLmN1cnJlbnRTcmMgfHwgaW1hZ2VFbC5nZXRBdHRyaWJ1dGUoJ3NyYycpLCBpbWFnZUVsLnNyY3NldCB8fCBpbWFnZUVsLmdldEF0dHJpYnV0ZSgnc3Jjc2V0JyksIGltYWdlRWwuc2l6ZXMgfHwgaW1hZ2VFbC5nZXRBdHRyaWJ1dGUoJ3NpemVzJyksIHRydWUsIG9uUmVhZHkpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBpbWFnZXMgPSB7XG4gICAgbG9hZEltYWdlOiBsb2FkSW1hZ2UsXG4gICAgcHJlbG9hZEltYWdlczogcHJlbG9hZEltYWdlc1xuICB9O1xuXG4gIGZ1bmN0aW9uIGNoZWNrT3ZlcmZsb3coKSB7XG4gICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgdmFyIHBhcmFtcyA9IHN3aXBlci5wYXJhbXM7XG4gICAgdmFyIHdhc0xvY2tlZCA9IHN3aXBlci5pc0xvY2tlZDtcbiAgICB2YXIgbGFzdFNsaWRlUG9zaXRpb24gPSBzd2lwZXIuc2xpZGVzLmxlbmd0aCA+IDAgJiYgcGFyYW1zLnNsaWRlc09mZnNldEJlZm9yZSArIHBhcmFtcy5zcGFjZUJldHdlZW4gKiAoc3dpcGVyLnNsaWRlcy5sZW5ndGggLSAxKSArIHN3aXBlci5zbGlkZXNbMF0ub2Zmc2V0V2lkdGggKiBzd2lwZXIuc2xpZGVzLmxlbmd0aDtcblxuICAgIGlmIChwYXJhbXMuc2xpZGVzT2Zmc2V0QmVmb3JlICYmIHBhcmFtcy5zbGlkZXNPZmZzZXRBZnRlciAmJiBsYXN0U2xpZGVQb3NpdGlvbikge1xuICAgICAgc3dpcGVyLmlzTG9ja2VkID0gbGFzdFNsaWRlUG9zaXRpb24gPD0gc3dpcGVyLnNpemU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN3aXBlci5pc0xvY2tlZCA9IHN3aXBlci5zbmFwR3JpZC5sZW5ndGggPT09IDE7XG4gICAgfVxuXG4gICAgc3dpcGVyLmFsbG93U2xpZGVOZXh0ID0gIXN3aXBlci5pc0xvY2tlZDtcbiAgICBzd2lwZXIuYWxsb3dTbGlkZVByZXYgPSAhc3dpcGVyLmlzTG9ja2VkOyAvLyBldmVudHNcblxuICAgIGlmICh3YXNMb2NrZWQgIT09IHN3aXBlci5pc0xvY2tlZCkgc3dpcGVyLmVtaXQoc3dpcGVyLmlzTG9ja2VkID8gJ2xvY2snIDogJ3VubG9jaycpO1xuXG4gICAgaWYgKHdhc0xvY2tlZCAmJiB3YXNMb2NrZWQgIT09IHN3aXBlci5pc0xvY2tlZCkge1xuICAgICAgc3dpcGVyLmlzRW5kID0gZmFsc2U7XG4gICAgICBpZiAoc3dpcGVyLm5hdmlnYXRpb24pIHN3aXBlci5uYXZpZ2F0aW9uLnVwZGF0ZSgpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBjaGVja092ZXJmbG93JDEgPSB7XG4gICAgY2hlY2tPdmVyZmxvdzogY2hlY2tPdmVyZmxvd1xuICB9O1xuXG4gIHZhciBkZWZhdWx0cyA9IHtcbiAgICBpbml0OiB0cnVlLFxuICAgIGRpcmVjdGlvbjogJ2hvcml6b250YWwnLFxuICAgIHRvdWNoRXZlbnRzVGFyZ2V0OiAnY29udGFpbmVyJyxcbiAgICBpbml0aWFsU2xpZGU6IDAsXG4gICAgc3BlZWQ6IDMwMCxcbiAgICBjc3NNb2RlOiBmYWxzZSxcbiAgICB1cGRhdGVPbldpbmRvd1Jlc2l6ZTogdHJ1ZSxcbiAgICAvLyBPdmVycmlkZXNcbiAgICB3aWR0aDogbnVsbCxcbiAgICBoZWlnaHQ6IG51bGwsXG4gICAgLy9cbiAgICBwcmV2ZW50SW50ZXJhY3Rpb25PblRyYW5zaXRpb246IGZhbHNlLFxuICAgIC8vIHNzclxuICAgIHVzZXJBZ2VudDogbnVsbCxcbiAgICB1cmw6IG51bGwsXG4gICAgLy8gVG8gc3VwcG9ydCBpT1MncyBzd2lwZS10by1nby1iYWNrIGdlc3R1cmUgKHdoZW4gYmVpbmcgdXNlZCBpbi1hcHApLlxuICAgIGVkZ2VTd2lwZURldGVjdGlvbjogZmFsc2UsXG4gICAgZWRnZVN3aXBlVGhyZXNob2xkOiAyMCxcbiAgICAvLyBGcmVlIG1vZGVcbiAgICBmcmVlTW9kZTogZmFsc2UsXG4gICAgZnJlZU1vZGVNb21lbnR1bTogdHJ1ZSxcbiAgICBmcmVlTW9kZU1vbWVudHVtUmF0aW86IDEsXG4gICAgZnJlZU1vZGVNb21lbnR1bUJvdW5jZTogdHJ1ZSxcbiAgICBmcmVlTW9kZU1vbWVudHVtQm91bmNlUmF0aW86IDEsXG4gICAgZnJlZU1vZGVNb21lbnR1bVZlbG9jaXR5UmF0aW86IDEsXG4gICAgZnJlZU1vZGVTdGlja3k6IGZhbHNlLFxuICAgIGZyZWVNb2RlTWluaW11bVZlbG9jaXR5OiAwLjAyLFxuICAgIC8vIEF1dG9oZWlnaHRcbiAgICBhdXRvSGVpZ2h0OiBmYWxzZSxcbiAgICAvLyBTZXQgd3JhcHBlciB3aWR0aFxuICAgIHNldFdyYXBwZXJTaXplOiBmYWxzZSxcbiAgICAvLyBWaXJ0dWFsIFRyYW5zbGF0ZVxuICAgIHZpcnR1YWxUcmFuc2xhdGU6IGZhbHNlLFxuICAgIC8vIEVmZmVjdHNcbiAgICBlZmZlY3Q6ICdzbGlkZScsXG4gICAgLy8gJ3NsaWRlJyBvciAnZmFkZScgb3IgJ2N1YmUnIG9yICdjb3ZlcmZsb3cnIG9yICdmbGlwJ1xuICAgIC8vIEJyZWFrcG9pbnRzXG4gICAgYnJlYWtwb2ludHM6IHVuZGVmaW5lZCxcbiAgICAvLyBTbGlkZXMgZ3JpZFxuICAgIHNwYWNlQmV0d2VlbjogMCxcbiAgICBzbGlkZXNQZXJWaWV3OiAxLFxuICAgIHNsaWRlc1BlckNvbHVtbjogMSxcbiAgICBzbGlkZXNQZXJDb2x1bW5GaWxsOiAnY29sdW1uJyxcbiAgICBzbGlkZXNQZXJHcm91cDogMSxcbiAgICBzbGlkZXNQZXJHcm91cFNraXA6IDAsXG4gICAgY2VudGVyZWRTbGlkZXM6IGZhbHNlLFxuICAgIGNlbnRlcmVkU2xpZGVzQm91bmRzOiBmYWxzZSxcbiAgICBzbGlkZXNPZmZzZXRCZWZvcmU6IDAsXG4gICAgLy8gaW4gcHhcbiAgICBzbGlkZXNPZmZzZXRBZnRlcjogMCxcbiAgICAvLyBpbiBweFxuICAgIG5vcm1hbGl6ZVNsaWRlSW5kZXg6IHRydWUsXG4gICAgY2VudGVySW5zdWZmaWNpZW50U2xpZGVzOiBmYWxzZSxcbiAgICAvLyBEaXNhYmxlIHN3aXBlciBhbmQgaGlkZSBuYXZpZ2F0aW9uIHdoZW4gY29udGFpbmVyIG5vdCBvdmVyZmxvd1xuICAgIHdhdGNoT3ZlcmZsb3c6IGZhbHNlLFxuICAgIC8vIFJvdW5kIGxlbmd0aFxuICAgIHJvdW5kTGVuZ3RoczogZmFsc2UsXG4gICAgLy8gVG91Y2hlc1xuICAgIHRvdWNoUmF0aW86IDEsXG4gICAgdG91Y2hBbmdsZTogNDUsXG4gICAgc2ltdWxhdGVUb3VjaDogdHJ1ZSxcbiAgICBzaG9ydFN3aXBlczogdHJ1ZSxcbiAgICBsb25nU3dpcGVzOiB0cnVlLFxuICAgIGxvbmdTd2lwZXNSYXRpbzogMC41LFxuICAgIGxvbmdTd2lwZXNNczogMzAwLFxuICAgIGZvbGxvd0ZpbmdlcjogdHJ1ZSxcbiAgICBhbGxvd1RvdWNoTW92ZTogdHJ1ZSxcbiAgICB0aHJlc2hvbGQ6IDAsXG4gICAgdG91Y2hNb3ZlU3RvcFByb3BhZ2F0aW9uOiBmYWxzZSxcbiAgICB0b3VjaFN0YXJ0UHJldmVudERlZmF1bHQ6IHRydWUsXG4gICAgdG91Y2hTdGFydEZvcmNlUHJldmVudERlZmF1bHQ6IGZhbHNlLFxuICAgIHRvdWNoUmVsZWFzZU9uRWRnZXM6IGZhbHNlLFxuICAgIC8vIFVuaXF1ZSBOYXZpZ2F0aW9uIEVsZW1lbnRzXG4gICAgdW5pcXVlTmF2RWxlbWVudHM6IHRydWUsXG4gICAgLy8gUmVzaXN0YW5jZVxuICAgIHJlc2lzdGFuY2U6IHRydWUsXG4gICAgcmVzaXN0YW5jZVJhdGlvOiAwLjg1LFxuICAgIC8vIFByb2dyZXNzXG4gICAgd2F0Y2hTbGlkZXNQcm9ncmVzczogZmFsc2UsXG4gICAgd2F0Y2hTbGlkZXNWaXNpYmlsaXR5OiBmYWxzZSxcbiAgICAvLyBDdXJzb3JcbiAgICBncmFiQ3Vyc29yOiBmYWxzZSxcbiAgICAvLyBDbGlja3NcbiAgICBwcmV2ZW50Q2xpY2tzOiB0cnVlLFxuICAgIHByZXZlbnRDbGlja3NQcm9wYWdhdGlvbjogdHJ1ZSxcbiAgICBzbGlkZVRvQ2xpY2tlZFNsaWRlOiBmYWxzZSxcbiAgICAvLyBJbWFnZXNcbiAgICBwcmVsb2FkSW1hZ2VzOiB0cnVlLFxuICAgIHVwZGF0ZU9uSW1hZ2VzUmVhZHk6IHRydWUsXG4gICAgLy8gbG9vcFxuICAgIGxvb3A6IGZhbHNlLFxuICAgIGxvb3BBZGRpdGlvbmFsU2xpZGVzOiAwLFxuICAgIGxvb3BlZFNsaWRlczogbnVsbCxcbiAgICBsb29wRmlsbEdyb3VwV2l0aEJsYW5rOiBmYWxzZSxcbiAgICBsb29wUHJldmVudHNTbGlkZTogdHJ1ZSxcbiAgICAvLyBTd2lwaW5nL25vIHN3aXBpbmdcbiAgICBhbGxvd1NsaWRlUHJldjogdHJ1ZSxcbiAgICBhbGxvd1NsaWRlTmV4dDogdHJ1ZSxcbiAgICBzd2lwZUhhbmRsZXI6IG51bGwsXG4gICAgLy8gJy5zd2lwZS1oYW5kbGVyJyxcbiAgICBub1N3aXBpbmc6IHRydWUsXG4gICAgbm9Td2lwaW5nQ2xhc3M6ICdzd2lwZXItbm8tc3dpcGluZycsXG4gICAgbm9Td2lwaW5nU2VsZWN0b3I6IG51bGwsXG4gICAgLy8gUGFzc2l2ZSBMaXN0ZW5lcnNcbiAgICBwYXNzaXZlTGlzdGVuZXJzOiB0cnVlLFxuICAgIC8vIE5TXG4gICAgY29udGFpbmVyTW9kaWZpZXJDbGFzczogJ3N3aXBlci1jb250YWluZXItJyxcbiAgICAvLyBORVdcbiAgICBzbGlkZUNsYXNzOiAnc3dpcGVyLXNsaWRlJyxcbiAgICBzbGlkZUJsYW5rQ2xhc3M6ICdzd2lwZXItc2xpZGUtaW52aXNpYmxlLWJsYW5rJyxcbiAgICBzbGlkZUFjdGl2ZUNsYXNzOiAnc3dpcGVyLXNsaWRlLWFjdGl2ZScsXG4gICAgc2xpZGVEdXBsaWNhdGVBY3RpdmVDbGFzczogJ3N3aXBlci1zbGlkZS1kdXBsaWNhdGUtYWN0aXZlJyxcbiAgICBzbGlkZVZpc2libGVDbGFzczogJ3N3aXBlci1zbGlkZS12aXNpYmxlJyxcbiAgICBzbGlkZUR1cGxpY2F0ZUNsYXNzOiAnc3dpcGVyLXNsaWRlLWR1cGxpY2F0ZScsXG4gICAgc2xpZGVOZXh0Q2xhc3M6ICdzd2lwZXItc2xpZGUtbmV4dCcsXG4gICAgc2xpZGVEdXBsaWNhdGVOZXh0Q2xhc3M6ICdzd2lwZXItc2xpZGUtZHVwbGljYXRlLW5leHQnLFxuICAgIHNsaWRlUHJldkNsYXNzOiAnc3dpcGVyLXNsaWRlLXByZXYnLFxuICAgIHNsaWRlRHVwbGljYXRlUHJldkNsYXNzOiAnc3dpcGVyLXNsaWRlLWR1cGxpY2F0ZS1wcmV2JyxcbiAgICB3cmFwcGVyQ2xhc3M6ICdzd2lwZXItd3JhcHBlcicsXG4gICAgLy8gQ2FsbGJhY2tzXG4gICAgcnVuQ2FsbGJhY2tzT25Jbml0OiB0cnVlLFxuICAgIC8vIEludGVybmFsc1xuICAgIF9lbWl0Q2xhc3NlczogZmFsc2VcbiAgfTtcblxuICB2YXIgcHJvdG90eXBlcyA9IHtcbiAgICBtb2R1bGFyOiBtb2R1bGFyLFxuICAgIGV2ZW50c0VtaXR0ZXI6IGV2ZW50c0VtaXR0ZXIsXG4gICAgdXBkYXRlOiB1cGRhdGUsXG4gICAgdHJhbnNsYXRlOiB0cmFuc2xhdGUsXG4gICAgdHJhbnNpdGlvbjogdHJhbnNpdGlvbiQxLFxuICAgIHNsaWRlOiBzbGlkZSxcbiAgICBsb29wOiBsb29wLFxuICAgIGdyYWJDdXJzb3I6IGdyYWJDdXJzb3IsXG4gICAgbWFuaXB1bGF0aW9uOiBtYW5pcHVsYXRpb24sXG4gICAgZXZlbnRzOiBldmVudHMsXG4gICAgYnJlYWtwb2ludHM6IGJyZWFrcG9pbnRzLFxuICAgIGNoZWNrT3ZlcmZsb3c6IGNoZWNrT3ZlcmZsb3ckMSxcbiAgICBjbGFzc2VzOiBjbGFzc2VzLFxuICAgIGltYWdlczogaW1hZ2VzXG4gIH07XG4gIHZhciBleHRlbmRlZERlZmF1bHRzID0ge307XG5cbiAgdmFyIFN3aXBlciA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gU3dpcGVyKCkge1xuICAgICAgdmFyIGVsO1xuICAgICAgdmFyIHBhcmFtcztcblxuICAgICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgICB9XG5cbiAgICAgIGlmIChhcmdzLmxlbmd0aCA9PT0gMSAmJiBhcmdzWzBdLmNvbnN0cnVjdG9yICYmIGFyZ3NbMF0uY29uc3RydWN0b3IgPT09IE9iamVjdCkge1xuICAgICAgICBwYXJhbXMgPSBhcmdzWzBdO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZWwgPSBhcmdzWzBdO1xuICAgICAgICBwYXJhbXMgPSBhcmdzWzFdO1xuICAgICAgfVxuXG4gICAgICBpZiAoIXBhcmFtcykgcGFyYW1zID0ge307XG4gICAgICBwYXJhbXMgPSBleHRlbmQkMSh7fSwgcGFyYW1zKTtcbiAgICAgIGlmIChlbCAmJiAhcGFyYW1zLmVsKSBwYXJhbXMuZWwgPSBlbDsgLy8gU3dpcGVyIEluc3RhbmNlXG5cbiAgICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgICAgc3dpcGVyLnN1cHBvcnQgPSBnZXRTdXBwb3J0KCk7XG4gICAgICBzd2lwZXIuZGV2aWNlID0gZ2V0RGV2aWNlKHtcbiAgICAgICAgdXNlckFnZW50OiBwYXJhbXMudXNlckFnZW50XG4gICAgICB9KTtcbiAgICAgIHN3aXBlci5icm93c2VyID0gZ2V0QnJvd3NlcigpO1xuICAgICAgc3dpcGVyLmV2ZW50c0xpc3RlbmVycyA9IHt9O1xuICAgICAgc3dpcGVyLmV2ZW50c0FueUxpc3RlbmVycyA9IFtdO1xuXG4gICAgICBpZiAodHlwZW9mIHN3aXBlci5tb2R1bGVzID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICBzd2lwZXIubW9kdWxlcyA9IHt9O1xuICAgICAgfVxuXG4gICAgICBPYmplY3Qua2V5cyhzd2lwZXIubW9kdWxlcykuZm9yRWFjaChmdW5jdGlvbiAobW9kdWxlTmFtZSkge1xuICAgICAgICB2YXIgbW9kdWxlID0gc3dpcGVyLm1vZHVsZXNbbW9kdWxlTmFtZV07XG5cbiAgICAgICAgaWYgKG1vZHVsZS5wYXJhbXMpIHtcbiAgICAgICAgICB2YXIgbW9kdWxlUGFyYW1OYW1lID0gT2JqZWN0LmtleXMobW9kdWxlLnBhcmFtcylbMF07XG4gICAgICAgICAgdmFyIG1vZHVsZVBhcmFtcyA9IG1vZHVsZS5wYXJhbXNbbW9kdWxlUGFyYW1OYW1lXTtcbiAgICAgICAgICBpZiAodHlwZW9mIG1vZHVsZVBhcmFtcyAhPT0gJ29iamVjdCcgfHwgbW9kdWxlUGFyYW1zID09PSBudWxsKSByZXR1cm47XG4gICAgICAgICAgaWYgKCEobW9kdWxlUGFyYW1OYW1lIGluIHBhcmFtcyAmJiAnZW5hYmxlZCcgaW4gbW9kdWxlUGFyYW1zKSkgcmV0dXJuO1xuXG4gICAgICAgICAgaWYgKHBhcmFtc1ttb2R1bGVQYXJhbU5hbWVdID09PSB0cnVlKSB7XG4gICAgICAgICAgICBwYXJhbXNbbW9kdWxlUGFyYW1OYW1lXSA9IHtcbiAgICAgICAgICAgICAgZW5hYmxlZDogdHJ1ZVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAodHlwZW9mIHBhcmFtc1ttb2R1bGVQYXJhbU5hbWVdID09PSAnb2JqZWN0JyAmJiAhKCdlbmFibGVkJyBpbiBwYXJhbXNbbW9kdWxlUGFyYW1OYW1lXSkpIHtcbiAgICAgICAgICAgIHBhcmFtc1ttb2R1bGVQYXJhbU5hbWVdLmVuYWJsZWQgPSB0cnVlO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmICghcGFyYW1zW21vZHVsZVBhcmFtTmFtZV0pIHBhcmFtc1ttb2R1bGVQYXJhbU5hbWVdID0ge1xuICAgICAgICAgICAgZW5hYmxlZDogZmFsc2VcbiAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICB9KTsgLy8gRXh0ZW5kIGRlZmF1bHRzIHdpdGggbW9kdWxlcyBwYXJhbXNcblxuICAgICAgdmFyIHN3aXBlclBhcmFtcyA9IGV4dGVuZCQxKHt9LCBkZWZhdWx0cyk7XG4gICAgICBzd2lwZXIudXNlUGFyYW1zKHN3aXBlclBhcmFtcyk7IC8vIEV4dGVuZCBkZWZhdWx0cyB3aXRoIHBhc3NlZCBwYXJhbXNcblxuICAgICAgc3dpcGVyLnBhcmFtcyA9IGV4dGVuZCQxKHt9LCBzd2lwZXJQYXJhbXMsIGV4dGVuZGVkRGVmYXVsdHMsIHBhcmFtcyk7XG4gICAgICBzd2lwZXIub3JpZ2luYWxQYXJhbXMgPSBleHRlbmQkMSh7fSwgc3dpcGVyLnBhcmFtcyk7XG4gICAgICBzd2lwZXIucGFzc2VkUGFyYW1zID0gZXh0ZW5kJDEoe30sIHBhcmFtcyk7IC8vIGFkZCBldmVudCBsaXN0ZW5lcnNcblxuICAgICAgaWYgKHN3aXBlci5wYXJhbXMgJiYgc3dpcGVyLnBhcmFtcy5vbikge1xuICAgICAgICBPYmplY3Qua2V5cyhzd2lwZXIucGFyYW1zLm9uKS5mb3JFYWNoKGZ1bmN0aW9uIChldmVudE5hbWUpIHtcbiAgICAgICAgICBzd2lwZXIub24oZXZlbnROYW1lLCBzd2lwZXIucGFyYW1zLm9uW2V2ZW50TmFtZV0pO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgaWYgKHN3aXBlci5wYXJhbXMgJiYgc3dpcGVyLnBhcmFtcy5vbkFueSkge1xuICAgICAgICBzd2lwZXIub25Bbnkoc3dpcGVyLnBhcmFtcy5vbkFueSk7XG4gICAgICB9IC8vIFNhdmUgRG9tIGxpYlxuXG5cbiAgICAgIHN3aXBlci4kID0gJDsgLy8gRmluZCBlbFxuXG4gICAgICB2YXIgJGVsID0gJChzd2lwZXIucGFyYW1zLmVsKTtcbiAgICAgIGVsID0gJGVsWzBdO1xuXG4gICAgICBpZiAoIWVsKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICB9XG5cbiAgICAgIGlmICgkZWwubGVuZ3RoID4gMSkge1xuICAgICAgICB2YXIgc3dpcGVycyA9IFtdO1xuICAgICAgICAkZWwuZWFjaChmdW5jdGlvbiAoY29udGFpbmVyRWwpIHtcbiAgICAgICAgICB2YXIgbmV3UGFyYW1zID0gZXh0ZW5kJDEoe30sIHBhcmFtcywge1xuICAgICAgICAgICAgZWw6IGNvbnRhaW5lckVsXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgc3dpcGVycy5wdXNoKG5ldyBTd2lwZXIobmV3UGFyYW1zKSk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gc3dpcGVycztcbiAgICAgIH1cblxuICAgICAgZWwuc3dpcGVyID0gc3dpcGVyOyAvLyBGaW5kIFdyYXBwZXJcblxuICAgICAgdmFyICR3cmFwcGVyRWw7XG5cbiAgICAgIGlmIChlbCAmJiBlbC5zaGFkb3dSb290ICYmIGVsLnNoYWRvd1Jvb3QucXVlcnlTZWxlY3Rvcikge1xuICAgICAgICAkd3JhcHBlckVsID0gJChlbC5zaGFkb3dSb290LnF1ZXJ5U2VsZWN0b3IoXCIuXCIgKyBzd2lwZXIucGFyYW1zLndyYXBwZXJDbGFzcykpOyAvLyBDaGlsZHJlbiBuZWVkcyB0byByZXR1cm4gc2xvdCBpdGVtc1xuXG4gICAgICAgICR3cmFwcGVyRWwuY2hpbGRyZW4gPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgICAgICAgIHJldHVybiAkZWwuY2hpbGRyZW4ob3B0aW9ucyk7XG4gICAgICAgIH07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAkd3JhcHBlckVsID0gJGVsLmNoaWxkcmVuKFwiLlwiICsgc3dpcGVyLnBhcmFtcy53cmFwcGVyQ2xhc3MpO1xuICAgICAgfSAvLyBFeHRlbmQgU3dpcGVyXG5cblxuICAgICAgZXh0ZW5kJDEoc3dpcGVyLCB7XG4gICAgICAgICRlbDogJGVsLFxuICAgICAgICBlbDogZWwsXG4gICAgICAgICR3cmFwcGVyRWw6ICR3cmFwcGVyRWwsXG4gICAgICAgIHdyYXBwZXJFbDogJHdyYXBwZXJFbFswXSxcbiAgICAgICAgLy8gQ2xhc3Nlc1xuICAgICAgICBjbGFzc05hbWVzOiBbXSxcbiAgICAgICAgLy8gU2xpZGVzXG4gICAgICAgIHNsaWRlczogJCgpLFxuICAgICAgICBzbGlkZXNHcmlkOiBbXSxcbiAgICAgICAgc25hcEdyaWQ6IFtdLFxuICAgICAgICBzbGlkZXNTaXplc0dyaWQ6IFtdLFxuICAgICAgICAvLyBpc0RpcmVjdGlvblxuICAgICAgICBpc0hvcml6b250YWw6IGZ1bmN0aW9uIGlzSG9yaXpvbnRhbCgpIHtcbiAgICAgICAgICByZXR1cm4gc3dpcGVyLnBhcmFtcy5kaXJlY3Rpb24gPT09ICdob3Jpem9udGFsJztcbiAgICAgICAgfSxcbiAgICAgICAgaXNWZXJ0aWNhbDogZnVuY3Rpb24gaXNWZXJ0aWNhbCgpIHtcbiAgICAgICAgICByZXR1cm4gc3dpcGVyLnBhcmFtcy5kaXJlY3Rpb24gPT09ICd2ZXJ0aWNhbCc7XG4gICAgICAgIH0sXG4gICAgICAgIC8vIFJUTFxuICAgICAgICBydGw6IGVsLmRpci50b0xvd2VyQ2FzZSgpID09PSAncnRsJyB8fCAkZWwuY3NzKCdkaXJlY3Rpb24nKSA9PT0gJ3J0bCcsXG4gICAgICAgIHJ0bFRyYW5zbGF0ZTogc3dpcGVyLnBhcmFtcy5kaXJlY3Rpb24gPT09ICdob3Jpem9udGFsJyAmJiAoZWwuZGlyLnRvTG93ZXJDYXNlKCkgPT09ICdydGwnIHx8ICRlbC5jc3MoJ2RpcmVjdGlvbicpID09PSAncnRsJyksXG4gICAgICAgIHdyb25nUlRMOiAkd3JhcHBlckVsLmNzcygnZGlzcGxheScpID09PSAnLXdlYmtpdC1ib3gnLFxuICAgICAgICAvLyBJbmRleGVzXG4gICAgICAgIGFjdGl2ZUluZGV4OiAwLFxuICAgICAgICByZWFsSW5kZXg6IDAsXG4gICAgICAgIC8vXG4gICAgICAgIGlzQmVnaW5uaW5nOiB0cnVlLFxuICAgICAgICBpc0VuZDogZmFsc2UsXG4gICAgICAgIC8vIFByb3BzXG4gICAgICAgIHRyYW5zbGF0ZTogMCxcbiAgICAgICAgcHJldmlvdXNUcmFuc2xhdGU6IDAsXG4gICAgICAgIHByb2dyZXNzOiAwLFxuICAgICAgICB2ZWxvY2l0eTogMCxcbiAgICAgICAgYW5pbWF0aW5nOiBmYWxzZSxcbiAgICAgICAgLy8gTG9ja3NcbiAgICAgICAgYWxsb3dTbGlkZU5leHQ6IHN3aXBlci5wYXJhbXMuYWxsb3dTbGlkZU5leHQsXG4gICAgICAgIGFsbG93U2xpZGVQcmV2OiBzd2lwZXIucGFyYW1zLmFsbG93U2xpZGVQcmV2LFxuICAgICAgICAvLyBUb3VjaCBFdmVudHNcbiAgICAgICAgdG91Y2hFdmVudHM6IGZ1bmN0aW9uIHRvdWNoRXZlbnRzKCkge1xuICAgICAgICAgIHZhciB0b3VjaCA9IFsndG91Y2hzdGFydCcsICd0b3VjaG1vdmUnLCAndG91Y2hlbmQnLCAndG91Y2hjYW5jZWwnXTtcbiAgICAgICAgICB2YXIgZGVza3RvcCA9IFsnbW91c2Vkb3duJywgJ21vdXNlbW92ZScsICdtb3VzZXVwJ107XG5cbiAgICAgICAgICBpZiAoc3dpcGVyLnN1cHBvcnQucG9pbnRlckV2ZW50cykge1xuICAgICAgICAgICAgZGVza3RvcCA9IFsncG9pbnRlcmRvd24nLCAncG9pbnRlcm1vdmUnLCAncG9pbnRlcnVwJ107XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgc3dpcGVyLnRvdWNoRXZlbnRzVG91Y2ggPSB7XG4gICAgICAgICAgICBzdGFydDogdG91Y2hbMF0sXG4gICAgICAgICAgICBtb3ZlOiB0b3VjaFsxXSxcbiAgICAgICAgICAgIGVuZDogdG91Y2hbMl0sXG4gICAgICAgICAgICBjYW5jZWw6IHRvdWNoWzNdXG4gICAgICAgICAgfTtcbiAgICAgICAgICBzd2lwZXIudG91Y2hFdmVudHNEZXNrdG9wID0ge1xuICAgICAgICAgICAgc3RhcnQ6IGRlc2t0b3BbMF0sXG4gICAgICAgICAgICBtb3ZlOiBkZXNrdG9wWzFdLFxuICAgICAgICAgICAgZW5kOiBkZXNrdG9wWzJdXG4gICAgICAgICAgfTtcbiAgICAgICAgICByZXR1cm4gc3dpcGVyLnN1cHBvcnQudG91Y2ggfHwgIXN3aXBlci5wYXJhbXMuc2ltdWxhdGVUb3VjaCA/IHN3aXBlci50b3VjaEV2ZW50c1RvdWNoIDogc3dpcGVyLnRvdWNoRXZlbnRzRGVza3RvcDtcbiAgICAgICAgfSgpLFxuICAgICAgICB0b3VjaEV2ZW50c0RhdGE6IHtcbiAgICAgICAgICBpc1RvdWNoZWQ6IHVuZGVmaW5lZCxcbiAgICAgICAgICBpc01vdmVkOiB1bmRlZmluZWQsXG4gICAgICAgICAgYWxsb3dUb3VjaENhbGxiYWNrczogdW5kZWZpbmVkLFxuICAgICAgICAgIHRvdWNoU3RhcnRUaW1lOiB1bmRlZmluZWQsXG4gICAgICAgICAgaXNTY3JvbGxpbmc6IHVuZGVmaW5lZCxcbiAgICAgICAgICBjdXJyZW50VHJhbnNsYXRlOiB1bmRlZmluZWQsXG4gICAgICAgICAgc3RhcnRUcmFuc2xhdGU6IHVuZGVmaW5lZCxcbiAgICAgICAgICBhbGxvd1RocmVzaG9sZE1vdmU6IHVuZGVmaW5lZCxcbiAgICAgICAgICAvLyBGb3JtIGVsZW1lbnRzIHRvIG1hdGNoXG4gICAgICAgICAgZm9ybUVsZW1lbnRzOiAnaW5wdXQsIHNlbGVjdCwgb3B0aW9uLCB0ZXh0YXJlYSwgYnV0dG9uLCB2aWRlbywgbGFiZWwnLFxuICAgICAgICAgIC8vIExhc3QgY2xpY2sgdGltZVxuICAgICAgICAgIGxhc3RDbGlja1RpbWU6IG5vdygpLFxuICAgICAgICAgIGNsaWNrVGltZW91dDogdW5kZWZpbmVkLFxuICAgICAgICAgIC8vIFZlbG9jaXRpZXNcbiAgICAgICAgICB2ZWxvY2l0aWVzOiBbXSxcbiAgICAgICAgICBhbGxvd01vbWVudHVtQm91bmNlOiB1bmRlZmluZWQsXG4gICAgICAgICAgaXNUb3VjaEV2ZW50OiB1bmRlZmluZWQsXG4gICAgICAgICAgc3RhcnRNb3Zpbmc6IHVuZGVmaW5lZFxuICAgICAgICB9LFxuICAgICAgICAvLyBDbGlja3NcbiAgICAgICAgYWxsb3dDbGljazogdHJ1ZSxcbiAgICAgICAgLy8gVG91Y2hlc1xuICAgICAgICBhbGxvd1RvdWNoTW92ZTogc3dpcGVyLnBhcmFtcy5hbGxvd1RvdWNoTW92ZSxcbiAgICAgICAgdG91Y2hlczoge1xuICAgICAgICAgIHN0YXJ0WDogMCxcbiAgICAgICAgICBzdGFydFk6IDAsXG4gICAgICAgICAgY3VycmVudFg6IDAsXG4gICAgICAgICAgY3VycmVudFk6IDAsXG4gICAgICAgICAgZGlmZjogMFxuICAgICAgICB9LFxuICAgICAgICAvLyBJbWFnZXNcbiAgICAgICAgaW1hZ2VzVG9Mb2FkOiBbXSxcbiAgICAgICAgaW1hZ2VzTG9hZGVkOiAwXG4gICAgICB9KTsgLy8gSW5zdGFsbCBNb2R1bGVzXG5cbiAgICAgIHN3aXBlci51c2VNb2R1bGVzKCk7XG4gICAgICBzd2lwZXIuZW1pdCgnX3N3aXBlcicpOyAvLyBJbml0XG5cbiAgICAgIGlmIChzd2lwZXIucGFyYW1zLmluaXQpIHtcbiAgICAgICAgc3dpcGVyLmluaXQoKTtcbiAgICAgIH0gLy8gUmV0dXJuIGFwcCBpbnN0YW5jZVxuXG5cbiAgICAgIHJldHVybiBzd2lwZXI7XG4gICAgfVxuXG4gICAgdmFyIF9wcm90byA9IFN3aXBlci5wcm90b3R5cGU7XG5cbiAgICBfcHJvdG8uZW1pdENvbnRhaW5lckNsYXNzZXMgPSBmdW5jdGlvbiBlbWl0Q29udGFpbmVyQ2xhc3NlcygpIHtcbiAgICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgICAgaWYgKCFzd2lwZXIucGFyYW1zLl9lbWl0Q2xhc3NlcyB8fCAhc3dpcGVyLmVsKSByZXR1cm47XG4gICAgICB2YXIgY2xhc3NlcyA9IHN3aXBlci5lbC5jbGFzc05hbWUuc3BsaXQoJyAnKS5maWx0ZXIoZnVuY3Rpb24gKGNsYXNzTmFtZSkge1xuICAgICAgICByZXR1cm4gY2xhc3NOYW1lLmluZGV4T2YoJ3N3aXBlci1jb250YWluZXInKSA9PT0gMCB8fCBjbGFzc05hbWUuaW5kZXhPZihzd2lwZXIucGFyYW1zLmNvbnRhaW5lck1vZGlmaWVyQ2xhc3MpID09PSAwO1xuICAgICAgfSk7XG4gICAgICBzd2lwZXIuZW1pdCgnX2NvbnRhaW5lckNsYXNzZXMnLCBjbGFzc2VzLmpvaW4oJyAnKSk7XG4gICAgfTtcblxuICAgIF9wcm90by5lbWl0U2xpZGVzQ2xhc3NlcyA9IGZ1bmN0aW9uIGVtaXRTbGlkZXNDbGFzc2VzKCkge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICBpZiAoIXN3aXBlci5wYXJhbXMuX2VtaXRDbGFzc2VzIHx8ICFzd2lwZXIuZWwpIHJldHVybjtcbiAgICAgIHN3aXBlci5zbGlkZXMuZWFjaChmdW5jdGlvbiAoc2xpZGVFbCkge1xuICAgICAgICB2YXIgY2xhc3NlcyA9IHNsaWRlRWwuY2xhc3NOYW1lLnNwbGl0KCcgJykuZmlsdGVyKGZ1bmN0aW9uIChjbGFzc05hbWUpIHtcbiAgICAgICAgICByZXR1cm4gY2xhc3NOYW1lLmluZGV4T2YoJ3N3aXBlci1zbGlkZScpID09PSAwIHx8IGNsYXNzTmFtZS5pbmRleE9mKHN3aXBlci5wYXJhbXMuc2xpZGVDbGFzcykgPT09IDA7XG4gICAgICAgIH0pO1xuICAgICAgICBzd2lwZXIuZW1pdCgnX3NsaWRlQ2xhc3MnLCBzbGlkZUVsLCBjbGFzc2VzLmpvaW4oJyAnKSk7XG4gICAgICB9KTtcbiAgICB9O1xuXG4gICAgX3Byb3RvLnNsaWRlc1BlclZpZXdEeW5hbWljID0gZnVuY3Rpb24gc2xpZGVzUGVyVmlld0R5bmFtaWMoKSB7XG4gICAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICAgIHZhciBwYXJhbXMgPSBzd2lwZXIucGFyYW1zLFxuICAgICAgICAgIHNsaWRlcyA9IHN3aXBlci5zbGlkZXMsXG4gICAgICAgICAgc2xpZGVzR3JpZCA9IHN3aXBlci5zbGlkZXNHcmlkLFxuICAgICAgICAgIHN3aXBlclNpemUgPSBzd2lwZXIuc2l6ZSxcbiAgICAgICAgICBhY3RpdmVJbmRleCA9IHN3aXBlci5hY3RpdmVJbmRleDtcbiAgICAgIHZhciBzcHYgPSAxO1xuXG4gICAgICBpZiAocGFyYW1zLmNlbnRlcmVkU2xpZGVzKSB7XG4gICAgICAgIHZhciBzbGlkZVNpemUgPSBzbGlkZXNbYWN0aXZlSW5kZXhdLnN3aXBlclNsaWRlU2l6ZTtcbiAgICAgICAgdmFyIGJyZWFrTG9vcDtcblxuICAgICAgICBmb3IgKHZhciBpID0gYWN0aXZlSW5kZXggKyAxOyBpIDwgc2xpZGVzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgICAgaWYgKHNsaWRlc1tpXSAmJiAhYnJlYWtMb29wKSB7XG4gICAgICAgICAgICBzbGlkZVNpemUgKz0gc2xpZGVzW2ldLnN3aXBlclNsaWRlU2l6ZTtcbiAgICAgICAgICAgIHNwdiArPSAxO1xuICAgICAgICAgICAgaWYgKHNsaWRlU2l6ZSA+IHN3aXBlclNpemUpIGJyZWFrTG9vcCA9IHRydWU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZm9yICh2YXIgX2kgPSBhY3RpdmVJbmRleCAtIDE7IF9pID49IDA7IF9pIC09IDEpIHtcbiAgICAgICAgICBpZiAoc2xpZGVzW19pXSAmJiAhYnJlYWtMb29wKSB7XG4gICAgICAgICAgICBzbGlkZVNpemUgKz0gc2xpZGVzW19pXS5zd2lwZXJTbGlkZVNpemU7XG4gICAgICAgICAgICBzcHYgKz0gMTtcbiAgICAgICAgICAgIGlmIChzbGlkZVNpemUgPiBzd2lwZXJTaXplKSBicmVha0xvb3AgPSB0cnVlO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZm9yICh2YXIgX2kyID0gYWN0aXZlSW5kZXggKyAxOyBfaTIgPCBzbGlkZXMubGVuZ3RoOyBfaTIgKz0gMSkge1xuICAgICAgICAgIGlmIChzbGlkZXNHcmlkW19pMl0gLSBzbGlkZXNHcmlkW2FjdGl2ZUluZGV4XSA8IHN3aXBlclNpemUpIHtcbiAgICAgICAgICAgIHNwdiArPSAxO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gc3B2O1xuICAgIH07XG5cbiAgICBfcHJvdG8udXBkYXRlID0gZnVuY3Rpb24gdXBkYXRlKCkge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICBpZiAoIXN3aXBlciB8fCBzd2lwZXIuZGVzdHJveWVkKSByZXR1cm47XG4gICAgICB2YXIgc25hcEdyaWQgPSBzd2lwZXIuc25hcEdyaWQsXG4gICAgICAgICAgcGFyYW1zID0gc3dpcGVyLnBhcmFtczsgLy8gQnJlYWtwb2ludHNcblxuICAgICAgaWYgKHBhcmFtcy5icmVha3BvaW50cykge1xuICAgICAgICBzd2lwZXIuc2V0QnJlYWtwb2ludCgpO1xuICAgICAgfVxuXG4gICAgICBzd2lwZXIudXBkYXRlU2l6ZSgpO1xuICAgICAgc3dpcGVyLnVwZGF0ZVNsaWRlcygpO1xuICAgICAgc3dpcGVyLnVwZGF0ZVByb2dyZXNzKCk7XG4gICAgICBzd2lwZXIudXBkYXRlU2xpZGVzQ2xhc3NlcygpO1xuXG4gICAgICBmdW5jdGlvbiBzZXRUcmFuc2xhdGUoKSB7XG4gICAgICAgIHZhciB0cmFuc2xhdGVWYWx1ZSA9IHN3aXBlci5ydGxUcmFuc2xhdGUgPyBzd2lwZXIudHJhbnNsYXRlICogLTEgOiBzd2lwZXIudHJhbnNsYXRlO1xuICAgICAgICB2YXIgbmV3VHJhbnNsYXRlID0gTWF0aC5taW4oTWF0aC5tYXgodHJhbnNsYXRlVmFsdWUsIHN3aXBlci5tYXhUcmFuc2xhdGUoKSksIHN3aXBlci5taW5UcmFuc2xhdGUoKSk7XG4gICAgICAgIHN3aXBlci5zZXRUcmFuc2xhdGUobmV3VHJhbnNsYXRlKTtcbiAgICAgICAgc3dpcGVyLnVwZGF0ZUFjdGl2ZUluZGV4KCk7XG4gICAgICAgIHN3aXBlci51cGRhdGVTbGlkZXNDbGFzc2VzKCk7XG4gICAgICB9XG5cbiAgICAgIHZhciB0cmFuc2xhdGVkO1xuXG4gICAgICBpZiAoc3dpcGVyLnBhcmFtcy5mcmVlTW9kZSkge1xuICAgICAgICBzZXRUcmFuc2xhdGUoKTtcblxuICAgICAgICBpZiAoc3dpcGVyLnBhcmFtcy5hdXRvSGVpZ2h0KSB7XG4gICAgICAgICAgc3dpcGVyLnVwZGF0ZUF1dG9IZWlnaHQoKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKChzd2lwZXIucGFyYW1zLnNsaWRlc1BlclZpZXcgPT09ICdhdXRvJyB8fCBzd2lwZXIucGFyYW1zLnNsaWRlc1BlclZpZXcgPiAxKSAmJiBzd2lwZXIuaXNFbmQgJiYgIXN3aXBlci5wYXJhbXMuY2VudGVyZWRTbGlkZXMpIHtcbiAgICAgICAgICB0cmFuc2xhdGVkID0gc3dpcGVyLnNsaWRlVG8oc3dpcGVyLnNsaWRlcy5sZW5ndGggLSAxLCAwLCBmYWxzZSwgdHJ1ZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdHJhbnNsYXRlZCA9IHN3aXBlci5zbGlkZVRvKHN3aXBlci5hY3RpdmVJbmRleCwgMCwgZmFsc2UsIHRydWUpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCF0cmFuc2xhdGVkKSB7XG4gICAgICAgICAgc2V0VHJhbnNsYXRlKCk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHBhcmFtcy53YXRjaE92ZXJmbG93ICYmIHNuYXBHcmlkICE9PSBzd2lwZXIuc25hcEdyaWQpIHtcbiAgICAgICAgc3dpcGVyLmNoZWNrT3ZlcmZsb3coKTtcbiAgICAgIH1cblxuICAgICAgc3dpcGVyLmVtaXQoJ3VwZGF0ZScpO1xuICAgIH07XG5cbiAgICBfcHJvdG8uY2hhbmdlRGlyZWN0aW9uID0gZnVuY3Rpb24gY2hhbmdlRGlyZWN0aW9uKG5ld0RpcmVjdGlvbiwgbmVlZFVwZGF0ZSkge1xuICAgICAgaWYgKG5lZWRVcGRhdGUgPT09IHZvaWQgMCkge1xuICAgICAgICBuZWVkVXBkYXRlID0gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICB2YXIgY3VycmVudERpcmVjdGlvbiA9IHN3aXBlci5wYXJhbXMuZGlyZWN0aW9uO1xuXG4gICAgICBpZiAoIW5ld0RpcmVjdGlvbikge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcbiAgICAgICAgbmV3RGlyZWN0aW9uID0gY3VycmVudERpcmVjdGlvbiA9PT0gJ2hvcml6b250YWwnID8gJ3ZlcnRpY2FsJyA6ICdob3Jpem9udGFsJztcbiAgICAgIH1cblxuICAgICAgaWYgKG5ld0RpcmVjdGlvbiA9PT0gY3VycmVudERpcmVjdGlvbiB8fCBuZXdEaXJlY3Rpb24gIT09ICdob3Jpem9udGFsJyAmJiBuZXdEaXJlY3Rpb24gIT09ICd2ZXJ0aWNhbCcpIHtcbiAgICAgICAgcmV0dXJuIHN3aXBlcjtcbiAgICAgIH1cblxuICAgICAgc3dpcGVyLiRlbC5yZW1vdmVDbGFzcyhcIlwiICsgc3dpcGVyLnBhcmFtcy5jb250YWluZXJNb2RpZmllckNsYXNzICsgY3VycmVudERpcmVjdGlvbikuYWRkQ2xhc3MoXCJcIiArIHN3aXBlci5wYXJhbXMuY29udGFpbmVyTW9kaWZpZXJDbGFzcyArIG5ld0RpcmVjdGlvbik7XG4gICAgICBzd2lwZXIuZW1pdENvbnRhaW5lckNsYXNzZXMoKTtcbiAgICAgIHN3aXBlci5wYXJhbXMuZGlyZWN0aW9uID0gbmV3RGlyZWN0aW9uO1xuICAgICAgc3dpcGVyLnNsaWRlcy5lYWNoKGZ1bmN0aW9uIChzbGlkZUVsKSB7XG4gICAgICAgIGlmIChuZXdEaXJlY3Rpb24gPT09ICd2ZXJ0aWNhbCcpIHtcbiAgICAgICAgICBzbGlkZUVsLnN0eWxlLndpZHRoID0gJyc7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc2xpZGVFbC5zdHlsZS5oZWlnaHQgPSAnJztcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICBzd2lwZXIuZW1pdCgnY2hhbmdlRGlyZWN0aW9uJyk7XG4gICAgICBpZiAobmVlZFVwZGF0ZSkgc3dpcGVyLnVwZGF0ZSgpO1xuICAgICAgcmV0dXJuIHN3aXBlcjtcbiAgICB9O1xuXG4gICAgX3Byb3RvLmluaXQgPSBmdW5jdGlvbiBpbml0KCkge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICBpZiAoc3dpcGVyLmluaXRpYWxpemVkKSByZXR1cm47XG4gICAgICBzd2lwZXIuZW1pdCgnYmVmb3JlSW5pdCcpOyAvLyBTZXQgYnJlYWtwb2ludFxuXG4gICAgICBpZiAoc3dpcGVyLnBhcmFtcy5icmVha3BvaW50cykge1xuICAgICAgICBzd2lwZXIuc2V0QnJlYWtwb2ludCgpO1xuICAgICAgfSAvLyBBZGQgQ2xhc3Nlc1xuXG5cbiAgICAgIHN3aXBlci5hZGRDbGFzc2VzKCk7IC8vIENyZWF0ZSBsb29wXG5cbiAgICAgIGlmIChzd2lwZXIucGFyYW1zLmxvb3ApIHtcbiAgICAgICAgc3dpcGVyLmxvb3BDcmVhdGUoKTtcbiAgICAgIH0gLy8gVXBkYXRlIHNpemVcblxuXG4gICAgICBzd2lwZXIudXBkYXRlU2l6ZSgpOyAvLyBVcGRhdGUgc2xpZGVzXG5cbiAgICAgIHN3aXBlci51cGRhdGVTbGlkZXMoKTtcblxuICAgICAgaWYgKHN3aXBlci5wYXJhbXMud2F0Y2hPdmVyZmxvdykge1xuICAgICAgICBzd2lwZXIuY2hlY2tPdmVyZmxvdygpO1xuICAgICAgfSAvLyBTZXQgR3JhYiBDdXJzb3JcblxuXG4gICAgICBpZiAoc3dpcGVyLnBhcmFtcy5ncmFiQ3Vyc29yKSB7XG4gICAgICAgIHN3aXBlci5zZXRHcmFiQ3Vyc29yKCk7XG4gICAgICB9XG5cbiAgICAgIGlmIChzd2lwZXIucGFyYW1zLnByZWxvYWRJbWFnZXMpIHtcbiAgICAgICAgc3dpcGVyLnByZWxvYWRJbWFnZXMoKTtcbiAgICAgIH0gLy8gU2xpZGUgVG8gSW5pdGlhbCBTbGlkZVxuXG5cbiAgICAgIGlmIChzd2lwZXIucGFyYW1zLmxvb3ApIHtcbiAgICAgICAgc3dpcGVyLnNsaWRlVG8oc3dpcGVyLnBhcmFtcy5pbml0aWFsU2xpZGUgKyBzd2lwZXIubG9vcGVkU2xpZGVzLCAwLCBzd2lwZXIucGFyYW1zLnJ1bkNhbGxiYWNrc09uSW5pdCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzd2lwZXIuc2xpZGVUbyhzd2lwZXIucGFyYW1zLmluaXRpYWxTbGlkZSwgMCwgc3dpcGVyLnBhcmFtcy5ydW5DYWxsYmFja3NPbkluaXQpO1xuICAgICAgfSAvLyBBdHRhY2ggZXZlbnRzXG5cblxuICAgICAgc3dpcGVyLmF0dGFjaEV2ZW50cygpOyAvLyBJbml0IEZsYWdcblxuICAgICAgc3dpcGVyLmluaXRpYWxpemVkID0gdHJ1ZTsgLy8gRW1pdFxuXG4gICAgICBzd2lwZXIuZW1pdCgnaW5pdCcpO1xuICAgIH07XG5cbiAgICBfcHJvdG8uZGVzdHJveSA9IGZ1bmN0aW9uIGRlc3Ryb3koZGVsZXRlSW5zdGFuY2UsIGNsZWFuU3R5bGVzKSB7XG4gICAgICBpZiAoZGVsZXRlSW5zdGFuY2UgPT09IHZvaWQgMCkge1xuICAgICAgICBkZWxldGVJbnN0YW5jZSA9IHRydWU7XG4gICAgICB9XG5cbiAgICAgIGlmIChjbGVhblN0eWxlcyA9PT0gdm9pZCAwKSB7XG4gICAgICAgIGNsZWFuU3R5bGVzID0gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICB2YXIgcGFyYW1zID0gc3dpcGVyLnBhcmFtcyxcbiAgICAgICAgICAkZWwgPSBzd2lwZXIuJGVsLFxuICAgICAgICAgICR3cmFwcGVyRWwgPSBzd2lwZXIuJHdyYXBwZXJFbCxcbiAgICAgICAgICBzbGlkZXMgPSBzd2lwZXIuc2xpZGVzO1xuXG4gICAgICBpZiAodHlwZW9mIHN3aXBlci5wYXJhbXMgPT09ICd1bmRlZmluZWQnIHx8IHN3aXBlci5kZXN0cm95ZWQpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9XG5cbiAgICAgIHN3aXBlci5lbWl0KCdiZWZvcmVEZXN0cm95Jyk7IC8vIEluaXQgRmxhZ1xuXG4gICAgICBzd2lwZXIuaW5pdGlhbGl6ZWQgPSBmYWxzZTsgLy8gRGV0YWNoIGV2ZW50c1xuXG4gICAgICBzd2lwZXIuZGV0YWNoRXZlbnRzKCk7IC8vIERlc3Ryb3kgbG9vcFxuXG4gICAgICBpZiAocGFyYW1zLmxvb3ApIHtcbiAgICAgICAgc3dpcGVyLmxvb3BEZXN0cm95KCk7XG4gICAgICB9IC8vIENsZWFudXAgc3R5bGVzXG5cblxuICAgICAgaWYgKGNsZWFuU3R5bGVzKSB7XG4gICAgICAgIHN3aXBlci5yZW1vdmVDbGFzc2VzKCk7XG4gICAgICAgICRlbC5yZW1vdmVBdHRyKCdzdHlsZScpO1xuICAgICAgICAkd3JhcHBlckVsLnJlbW92ZUF0dHIoJ3N0eWxlJyk7XG5cbiAgICAgICAgaWYgKHNsaWRlcyAmJiBzbGlkZXMubGVuZ3RoKSB7XG4gICAgICAgICAgc2xpZGVzLnJlbW92ZUNsYXNzKFtwYXJhbXMuc2xpZGVWaXNpYmxlQ2xhc3MsIHBhcmFtcy5zbGlkZUFjdGl2ZUNsYXNzLCBwYXJhbXMuc2xpZGVOZXh0Q2xhc3MsIHBhcmFtcy5zbGlkZVByZXZDbGFzc10uam9pbignICcpKS5yZW1vdmVBdHRyKCdzdHlsZScpLnJlbW92ZUF0dHIoJ2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4Jyk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgc3dpcGVyLmVtaXQoJ2Rlc3Ryb3knKTsgLy8gRGV0YWNoIGVtaXR0ZXIgZXZlbnRzXG5cbiAgICAgIE9iamVjdC5rZXlzKHN3aXBlci5ldmVudHNMaXN0ZW5lcnMpLmZvckVhY2goZnVuY3Rpb24gKGV2ZW50TmFtZSkge1xuICAgICAgICBzd2lwZXIub2ZmKGV2ZW50TmFtZSk7XG4gICAgICB9KTtcblxuICAgICAgaWYgKGRlbGV0ZUluc3RhbmNlICE9PSBmYWxzZSkge1xuICAgICAgICBzd2lwZXIuJGVsWzBdLnN3aXBlciA9IG51bGw7XG4gICAgICAgIGRlbGV0ZVByb3BzKHN3aXBlcik7XG4gICAgICB9XG5cbiAgICAgIHN3aXBlci5kZXN0cm95ZWQgPSB0cnVlO1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfTtcblxuICAgIFN3aXBlci5leHRlbmREZWZhdWx0cyA9IGZ1bmN0aW9uIGV4dGVuZERlZmF1bHRzKG5ld0RlZmF1bHRzKSB7XG4gICAgICBleHRlbmQkMShleHRlbmRlZERlZmF1bHRzLCBuZXdEZWZhdWx0cyk7XG4gICAgfTtcblxuICAgIFN3aXBlci5pbnN0YWxsTW9kdWxlID0gZnVuY3Rpb24gaW5zdGFsbE1vZHVsZShtb2R1bGUpIHtcbiAgICAgIGlmICghU3dpcGVyLnByb3RvdHlwZS5tb2R1bGVzKSBTd2lwZXIucHJvdG90eXBlLm1vZHVsZXMgPSB7fTtcbiAgICAgIHZhciBuYW1lID0gbW9kdWxlLm5hbWUgfHwgT2JqZWN0LmtleXMoU3dpcGVyLnByb3RvdHlwZS5tb2R1bGVzKS5sZW5ndGggKyBcIl9cIiArIG5vdygpO1xuICAgICAgU3dpcGVyLnByb3RvdHlwZS5tb2R1bGVzW25hbWVdID0gbW9kdWxlO1xuICAgIH07XG5cbiAgICBTd2lwZXIudXNlID0gZnVuY3Rpb24gdXNlKG1vZHVsZSkge1xuICAgICAgaWYgKEFycmF5LmlzQXJyYXkobW9kdWxlKSkge1xuICAgICAgICBtb2R1bGUuZm9yRWFjaChmdW5jdGlvbiAobSkge1xuICAgICAgICAgIHJldHVybiBTd2lwZXIuaW5zdGFsbE1vZHVsZShtKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBTd2lwZXI7XG4gICAgICB9XG5cbiAgICAgIFN3aXBlci5pbnN0YWxsTW9kdWxlKG1vZHVsZSk7XG4gICAgICByZXR1cm4gU3dpcGVyO1xuICAgIH07XG5cbiAgICBfY3JlYXRlQ2xhc3MoU3dpcGVyLCBudWxsLCBbe1xuICAgICAga2V5OiBcImV4dGVuZGVkRGVmYXVsdHNcIixcbiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgICByZXR1cm4gZXh0ZW5kZWREZWZhdWx0cztcbiAgICAgIH1cbiAgICB9LCB7XG4gICAgICBrZXk6IFwiZGVmYXVsdHNcIixcbiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgICByZXR1cm4gZGVmYXVsdHM7XG4gICAgICB9XG4gICAgfV0pO1xuXG4gICAgcmV0dXJuIFN3aXBlcjtcbiAgfSgpO1xuXG4gIE9iamVjdC5rZXlzKHByb3RvdHlwZXMpLmZvckVhY2goZnVuY3Rpb24gKHByb3RvdHlwZUdyb3VwKSB7XG4gICAgT2JqZWN0LmtleXMocHJvdG90eXBlc1twcm90b3R5cGVHcm91cF0pLmZvckVhY2goZnVuY3Rpb24gKHByb3RvTWV0aG9kKSB7XG4gICAgICBTd2lwZXIucHJvdG90eXBlW3Byb3RvTWV0aG9kXSA9IHByb3RvdHlwZXNbcHJvdG90eXBlR3JvdXBdW3Byb3RvTWV0aG9kXTtcbiAgICB9KTtcbiAgfSk7XG4gIFN3aXBlci51c2UoW1Jlc2l6ZSwgT2JzZXJ2ZXIkMV0pO1xuXG4gIHZhciBWaXJ0dWFsID0ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKGZvcmNlKSB7XG4gICAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICAgIHZhciBfc3dpcGVyJHBhcmFtcyA9IHN3aXBlci5wYXJhbXMsXG4gICAgICAgICAgc2xpZGVzUGVyVmlldyA9IF9zd2lwZXIkcGFyYW1zLnNsaWRlc1BlclZpZXcsXG4gICAgICAgICAgc2xpZGVzUGVyR3JvdXAgPSBfc3dpcGVyJHBhcmFtcy5zbGlkZXNQZXJHcm91cCxcbiAgICAgICAgICBjZW50ZXJlZFNsaWRlcyA9IF9zd2lwZXIkcGFyYW1zLmNlbnRlcmVkU2xpZGVzO1xuICAgICAgdmFyIF9zd2lwZXIkcGFyYW1zJHZpcnR1YSA9IHN3aXBlci5wYXJhbXMudmlydHVhbCxcbiAgICAgICAgICBhZGRTbGlkZXNCZWZvcmUgPSBfc3dpcGVyJHBhcmFtcyR2aXJ0dWEuYWRkU2xpZGVzQmVmb3JlLFxuICAgICAgICAgIGFkZFNsaWRlc0FmdGVyID0gX3N3aXBlciRwYXJhbXMkdmlydHVhLmFkZFNsaWRlc0FmdGVyO1xuICAgICAgdmFyIF9zd2lwZXIkdmlydHVhbCA9IHN3aXBlci52aXJ0dWFsLFxuICAgICAgICAgIHByZXZpb3VzRnJvbSA9IF9zd2lwZXIkdmlydHVhbC5mcm9tLFxuICAgICAgICAgIHByZXZpb3VzVG8gPSBfc3dpcGVyJHZpcnR1YWwudG8sXG4gICAgICAgICAgc2xpZGVzID0gX3N3aXBlciR2aXJ0dWFsLnNsaWRlcyxcbiAgICAgICAgICBwcmV2aW91c1NsaWRlc0dyaWQgPSBfc3dpcGVyJHZpcnR1YWwuc2xpZGVzR3JpZCxcbiAgICAgICAgICByZW5kZXJTbGlkZSA9IF9zd2lwZXIkdmlydHVhbC5yZW5kZXJTbGlkZSxcbiAgICAgICAgICBwcmV2aW91c09mZnNldCA9IF9zd2lwZXIkdmlydHVhbC5vZmZzZXQ7XG4gICAgICBzd2lwZXIudXBkYXRlQWN0aXZlSW5kZXgoKTtcbiAgICAgIHZhciBhY3RpdmVJbmRleCA9IHN3aXBlci5hY3RpdmVJbmRleCB8fCAwO1xuICAgICAgdmFyIG9mZnNldFByb3A7XG4gICAgICBpZiAoc3dpcGVyLnJ0bFRyYW5zbGF0ZSkgb2Zmc2V0UHJvcCA9ICdyaWdodCc7ZWxzZSBvZmZzZXRQcm9wID0gc3dpcGVyLmlzSG9yaXpvbnRhbCgpID8gJ2xlZnQnIDogJ3RvcCc7XG4gICAgICB2YXIgc2xpZGVzQWZ0ZXI7XG4gICAgICB2YXIgc2xpZGVzQmVmb3JlO1xuXG4gICAgICBpZiAoY2VudGVyZWRTbGlkZXMpIHtcbiAgICAgICAgc2xpZGVzQWZ0ZXIgPSBNYXRoLmZsb29yKHNsaWRlc1BlclZpZXcgLyAyKSArIHNsaWRlc1Blckdyb3VwICsgYWRkU2xpZGVzQWZ0ZXI7XG4gICAgICAgIHNsaWRlc0JlZm9yZSA9IE1hdGguZmxvb3Ioc2xpZGVzUGVyVmlldyAvIDIpICsgc2xpZGVzUGVyR3JvdXAgKyBhZGRTbGlkZXNCZWZvcmU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzbGlkZXNBZnRlciA9IHNsaWRlc1BlclZpZXcgKyAoc2xpZGVzUGVyR3JvdXAgLSAxKSArIGFkZFNsaWRlc0FmdGVyO1xuICAgICAgICBzbGlkZXNCZWZvcmUgPSBzbGlkZXNQZXJHcm91cCArIGFkZFNsaWRlc0JlZm9yZTtcbiAgICAgIH1cblxuICAgICAgdmFyIGZyb20gPSBNYXRoLm1heCgoYWN0aXZlSW5kZXggfHwgMCkgLSBzbGlkZXNCZWZvcmUsIDApO1xuICAgICAgdmFyIHRvID0gTWF0aC5taW4oKGFjdGl2ZUluZGV4IHx8IDApICsgc2xpZGVzQWZ0ZXIsIHNsaWRlcy5sZW5ndGggLSAxKTtcbiAgICAgIHZhciBvZmZzZXQgPSAoc3dpcGVyLnNsaWRlc0dyaWRbZnJvbV0gfHwgMCkgLSAoc3dpcGVyLnNsaWRlc0dyaWRbMF0gfHwgMCk7XG4gICAgICBleHRlbmQkMShzd2lwZXIudmlydHVhbCwge1xuICAgICAgICBmcm9tOiBmcm9tLFxuICAgICAgICB0bzogdG8sXG4gICAgICAgIG9mZnNldDogb2Zmc2V0LFxuICAgICAgICBzbGlkZXNHcmlkOiBzd2lwZXIuc2xpZGVzR3JpZFxuICAgICAgfSk7XG5cbiAgICAgIGZ1bmN0aW9uIG9uUmVuZGVyZWQoKSB7XG4gICAgICAgIHN3aXBlci51cGRhdGVTbGlkZXMoKTtcbiAgICAgICAgc3dpcGVyLnVwZGF0ZVByb2dyZXNzKCk7XG4gICAgICAgIHN3aXBlci51cGRhdGVTbGlkZXNDbGFzc2VzKCk7XG5cbiAgICAgICAgaWYgKHN3aXBlci5sYXp5ICYmIHN3aXBlci5wYXJhbXMubGF6eS5lbmFibGVkKSB7XG4gICAgICAgICAgc3dpcGVyLmxhenkubG9hZCgpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChwcmV2aW91c0Zyb20gPT09IGZyb20gJiYgcHJldmlvdXNUbyA9PT0gdG8gJiYgIWZvcmNlKSB7XG4gICAgICAgIGlmIChzd2lwZXIuc2xpZGVzR3JpZCAhPT0gcHJldmlvdXNTbGlkZXNHcmlkICYmIG9mZnNldCAhPT0gcHJldmlvdXNPZmZzZXQpIHtcbiAgICAgICAgICBzd2lwZXIuc2xpZGVzLmNzcyhvZmZzZXRQcm9wLCBvZmZzZXQgKyBcInB4XCIpO1xuICAgICAgICB9XG5cbiAgICAgICAgc3dpcGVyLnVwZGF0ZVByb2dyZXNzKCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKHN3aXBlci5wYXJhbXMudmlydHVhbC5yZW5kZXJFeHRlcm5hbCkge1xuICAgICAgICBzd2lwZXIucGFyYW1zLnZpcnR1YWwucmVuZGVyRXh0ZXJuYWwuY2FsbChzd2lwZXIsIHtcbiAgICAgICAgICBvZmZzZXQ6IG9mZnNldCxcbiAgICAgICAgICBmcm9tOiBmcm9tLFxuICAgICAgICAgIHRvOiB0byxcbiAgICAgICAgICBzbGlkZXM6IGZ1bmN0aW9uIGdldFNsaWRlcygpIHtcbiAgICAgICAgICAgIHZhciBzbGlkZXNUb1JlbmRlciA9IFtdO1xuXG4gICAgICAgICAgICBmb3IgKHZhciBpID0gZnJvbTsgaSA8PSB0bzsgaSArPSAxKSB7XG4gICAgICAgICAgICAgIHNsaWRlc1RvUmVuZGVyLnB1c2goc2xpZGVzW2ldKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIHNsaWRlc1RvUmVuZGVyO1xuICAgICAgICAgIH0oKVxuICAgICAgICB9KTtcblxuICAgICAgICBpZiAoc3dpcGVyLnBhcmFtcy52aXJ0dWFsLnJlbmRlckV4dGVybmFsVXBkYXRlKSB7XG4gICAgICAgICAgb25SZW5kZXJlZCgpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB2YXIgcHJlcGVuZEluZGV4ZXMgPSBbXTtcbiAgICAgIHZhciBhcHBlbmRJbmRleGVzID0gW107XG5cbiAgICAgIGlmIChmb3JjZSkge1xuICAgICAgICBzd2lwZXIuJHdyYXBwZXJFbC5maW5kKFwiLlwiICsgc3dpcGVyLnBhcmFtcy5zbGlkZUNsYXNzKS5yZW1vdmUoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGZvciAodmFyIGkgPSBwcmV2aW91c0Zyb207IGkgPD0gcHJldmlvdXNUbzsgaSArPSAxKSB7XG4gICAgICAgICAgaWYgKGkgPCBmcm9tIHx8IGkgPiB0bykge1xuICAgICAgICAgICAgc3dpcGVyLiR3cmFwcGVyRWwuZmluZChcIi5cIiArIHN3aXBlci5wYXJhbXMuc2xpZGVDbGFzcyArIFwiW2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4PVxcXCJcIiArIGkgKyBcIlxcXCJdXCIpLnJlbW92ZSgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgc2xpZGVzLmxlbmd0aDsgX2kgKz0gMSkge1xuICAgICAgICBpZiAoX2kgPj0gZnJvbSAmJiBfaSA8PSB0bykge1xuICAgICAgICAgIGlmICh0eXBlb2YgcHJldmlvdXNUbyA9PT0gJ3VuZGVmaW5lZCcgfHwgZm9yY2UpIHtcbiAgICAgICAgICAgIGFwcGVuZEluZGV4ZXMucHVzaChfaSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmIChfaSA+IHByZXZpb3VzVG8pIGFwcGVuZEluZGV4ZXMucHVzaChfaSk7XG4gICAgICAgICAgICBpZiAoX2kgPCBwcmV2aW91c0Zyb20pIHByZXBlbmRJbmRleGVzLnB1c2goX2kpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBhcHBlbmRJbmRleGVzLmZvckVhY2goZnVuY3Rpb24gKGluZGV4KSB7XG4gICAgICAgIHN3aXBlci4kd3JhcHBlckVsLmFwcGVuZChyZW5kZXJTbGlkZShzbGlkZXNbaW5kZXhdLCBpbmRleCkpO1xuICAgICAgfSk7XG4gICAgICBwcmVwZW5kSW5kZXhlcy5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICAgIHJldHVybiBiIC0gYTtcbiAgICAgIH0pLmZvckVhY2goZnVuY3Rpb24gKGluZGV4KSB7XG4gICAgICAgIHN3aXBlci4kd3JhcHBlckVsLnByZXBlbmQocmVuZGVyU2xpZGUoc2xpZGVzW2luZGV4XSwgaW5kZXgpKTtcbiAgICAgIH0pO1xuICAgICAgc3dpcGVyLiR3cmFwcGVyRWwuY2hpbGRyZW4oJy5zd2lwZXItc2xpZGUnKS5jc3Mob2Zmc2V0UHJvcCwgb2Zmc2V0ICsgXCJweFwiKTtcbiAgICAgIG9uUmVuZGVyZWQoKTtcbiAgICB9LFxuICAgIHJlbmRlclNsaWRlOiBmdW5jdGlvbiByZW5kZXJTbGlkZShzbGlkZSwgaW5kZXgpIHtcbiAgICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgICAgdmFyIHBhcmFtcyA9IHN3aXBlci5wYXJhbXMudmlydHVhbDtcblxuICAgICAgaWYgKHBhcmFtcy5jYWNoZSAmJiBzd2lwZXIudmlydHVhbC5jYWNoZVtpbmRleF0pIHtcbiAgICAgICAgcmV0dXJuIHN3aXBlci52aXJ0dWFsLmNhY2hlW2luZGV4XTtcbiAgICAgIH1cblxuICAgICAgdmFyICRzbGlkZUVsID0gcGFyYW1zLnJlbmRlclNsaWRlID8gJChwYXJhbXMucmVuZGVyU2xpZGUuY2FsbChzd2lwZXIsIHNsaWRlLCBpbmRleCkpIDogJChcIjxkaXYgY2xhc3M9XFxcIlwiICsgc3dpcGVyLnBhcmFtcy5zbGlkZUNsYXNzICsgXCJcXFwiIGRhdGEtc3dpcGVyLXNsaWRlLWluZGV4PVxcXCJcIiArIGluZGV4ICsgXCJcXFwiPlwiICsgc2xpZGUgKyBcIjwvZGl2PlwiKTtcbiAgICAgIGlmICghJHNsaWRlRWwuYXR0cignZGF0YS1zd2lwZXItc2xpZGUtaW5kZXgnKSkgJHNsaWRlRWwuYXR0cignZGF0YS1zd2lwZXItc2xpZGUtaW5kZXgnLCBpbmRleCk7XG4gICAgICBpZiAocGFyYW1zLmNhY2hlKSBzd2lwZXIudmlydHVhbC5jYWNoZVtpbmRleF0gPSAkc2xpZGVFbDtcbiAgICAgIHJldHVybiAkc2xpZGVFbDtcbiAgICB9LFxuICAgIGFwcGVuZFNsaWRlOiBmdW5jdGlvbiBhcHBlbmRTbGlkZShzbGlkZXMpIHtcbiAgICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuXG4gICAgICBpZiAodHlwZW9mIHNsaWRlcyA9PT0gJ29iamVjdCcgJiYgJ2xlbmd0aCcgaW4gc2xpZGVzKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc2xpZGVzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgICAgaWYgKHNsaWRlc1tpXSkgc3dpcGVyLnZpcnR1YWwuc2xpZGVzLnB1c2goc2xpZGVzW2ldKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc3dpcGVyLnZpcnR1YWwuc2xpZGVzLnB1c2goc2xpZGVzKTtcbiAgICAgIH1cblxuICAgICAgc3dpcGVyLnZpcnR1YWwudXBkYXRlKHRydWUpO1xuICAgIH0sXG4gICAgcHJlcGVuZFNsaWRlOiBmdW5jdGlvbiBwcmVwZW5kU2xpZGUoc2xpZGVzKSB7XG4gICAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICAgIHZhciBhY3RpdmVJbmRleCA9IHN3aXBlci5hY3RpdmVJbmRleDtcbiAgICAgIHZhciBuZXdBY3RpdmVJbmRleCA9IGFjdGl2ZUluZGV4ICsgMTtcbiAgICAgIHZhciBudW1iZXJPZk5ld1NsaWRlcyA9IDE7XG5cbiAgICAgIGlmIChBcnJheS5pc0FycmF5KHNsaWRlcykpIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzbGlkZXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgICBpZiAoc2xpZGVzW2ldKSBzd2lwZXIudmlydHVhbC5zbGlkZXMudW5zaGlmdChzbGlkZXNbaV0pO1xuICAgICAgICB9XG5cbiAgICAgICAgbmV3QWN0aXZlSW5kZXggPSBhY3RpdmVJbmRleCArIHNsaWRlcy5sZW5ndGg7XG4gICAgICAgIG51bWJlck9mTmV3U2xpZGVzID0gc2xpZGVzLmxlbmd0aDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHN3aXBlci52aXJ0dWFsLnNsaWRlcy51bnNoaWZ0KHNsaWRlcyk7XG4gICAgICB9XG5cbiAgICAgIGlmIChzd2lwZXIucGFyYW1zLnZpcnR1YWwuY2FjaGUpIHtcbiAgICAgICAgdmFyIGNhY2hlID0gc3dpcGVyLnZpcnR1YWwuY2FjaGU7XG4gICAgICAgIHZhciBuZXdDYWNoZSA9IHt9O1xuICAgICAgICBPYmplY3Qua2V5cyhjYWNoZSkuZm9yRWFjaChmdW5jdGlvbiAoY2FjaGVkSW5kZXgpIHtcbiAgICAgICAgICB2YXIgJGNhY2hlZEVsID0gY2FjaGVbY2FjaGVkSW5kZXhdO1xuICAgICAgICAgIHZhciBjYWNoZWRFbEluZGV4ID0gJGNhY2hlZEVsLmF0dHIoJ2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4Jyk7XG5cbiAgICAgICAgICBpZiAoY2FjaGVkRWxJbmRleCkge1xuICAgICAgICAgICAgJGNhY2hlZEVsLmF0dHIoJ2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4JywgcGFyc2VJbnQoY2FjaGVkRWxJbmRleCwgMTApICsgMSk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgbmV3Q2FjaGVbcGFyc2VJbnQoY2FjaGVkSW5kZXgsIDEwKSArIG51bWJlck9mTmV3U2xpZGVzXSA9ICRjYWNoZWRFbDtcbiAgICAgICAgfSk7XG4gICAgICAgIHN3aXBlci52aXJ0dWFsLmNhY2hlID0gbmV3Q2FjaGU7XG4gICAgICB9XG5cbiAgICAgIHN3aXBlci52aXJ0dWFsLnVwZGF0ZSh0cnVlKTtcbiAgICAgIHN3aXBlci5zbGlkZVRvKG5ld0FjdGl2ZUluZGV4LCAwKTtcbiAgICB9LFxuICAgIHJlbW92ZVNsaWRlOiBmdW5jdGlvbiByZW1vdmVTbGlkZShzbGlkZXNJbmRleGVzKSB7XG4gICAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICAgIGlmICh0eXBlb2Ygc2xpZGVzSW5kZXhlcyA9PT0gJ3VuZGVmaW5lZCcgfHwgc2xpZGVzSW5kZXhlcyA9PT0gbnVsbCkgcmV0dXJuO1xuICAgICAgdmFyIGFjdGl2ZUluZGV4ID0gc3dpcGVyLmFjdGl2ZUluZGV4O1xuXG4gICAgICBpZiAoQXJyYXkuaXNBcnJheShzbGlkZXNJbmRleGVzKSkge1xuICAgICAgICBmb3IgKHZhciBpID0gc2xpZGVzSW5kZXhlcy5sZW5ndGggLSAxOyBpID49IDA7IGkgLT0gMSkge1xuICAgICAgICAgIHN3aXBlci52aXJ0dWFsLnNsaWRlcy5zcGxpY2Uoc2xpZGVzSW5kZXhlc1tpXSwgMSk7XG5cbiAgICAgICAgICBpZiAoc3dpcGVyLnBhcmFtcy52aXJ0dWFsLmNhY2hlKSB7XG4gICAgICAgICAgICBkZWxldGUgc3dpcGVyLnZpcnR1YWwuY2FjaGVbc2xpZGVzSW5kZXhlc1tpXV07XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHNsaWRlc0luZGV4ZXNbaV0gPCBhY3RpdmVJbmRleCkgYWN0aXZlSW5kZXggLT0gMTtcbiAgICAgICAgICBhY3RpdmVJbmRleCA9IE1hdGgubWF4KGFjdGl2ZUluZGV4LCAwKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc3dpcGVyLnZpcnR1YWwuc2xpZGVzLnNwbGljZShzbGlkZXNJbmRleGVzLCAxKTtcblxuICAgICAgICBpZiAoc3dpcGVyLnBhcmFtcy52aXJ0dWFsLmNhY2hlKSB7XG4gICAgICAgICAgZGVsZXRlIHN3aXBlci52aXJ0dWFsLmNhY2hlW3NsaWRlc0luZGV4ZXNdO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHNsaWRlc0luZGV4ZXMgPCBhY3RpdmVJbmRleCkgYWN0aXZlSW5kZXggLT0gMTtcbiAgICAgICAgYWN0aXZlSW5kZXggPSBNYXRoLm1heChhY3RpdmVJbmRleCwgMCk7XG4gICAgICB9XG5cbiAgICAgIHN3aXBlci52aXJ0dWFsLnVwZGF0ZSh0cnVlKTtcbiAgICAgIHN3aXBlci5zbGlkZVRvKGFjdGl2ZUluZGV4LCAwKTtcbiAgICB9LFxuICAgIHJlbW92ZUFsbFNsaWRlczogZnVuY3Rpb24gcmVtb3ZlQWxsU2xpZGVzKCkge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICBzd2lwZXIudmlydHVhbC5zbGlkZXMgPSBbXTtcblxuICAgICAgaWYgKHN3aXBlci5wYXJhbXMudmlydHVhbC5jYWNoZSkge1xuICAgICAgICBzd2lwZXIudmlydHVhbC5jYWNoZSA9IHt9O1xuICAgICAgfVxuXG4gICAgICBzd2lwZXIudmlydHVhbC51cGRhdGUodHJ1ZSk7XG4gICAgICBzd2lwZXIuc2xpZGVUbygwLCAwKTtcbiAgICB9XG4gIH07XG4gIHZhciBWaXJ0dWFsJDEgPSB7XG4gICAgbmFtZTogJ3ZpcnR1YWwnLFxuICAgIHBhcmFtczoge1xuICAgICAgdmlydHVhbDoge1xuICAgICAgICBlbmFibGVkOiBmYWxzZSxcbiAgICAgICAgc2xpZGVzOiBbXSxcbiAgICAgICAgY2FjaGU6IHRydWUsXG4gICAgICAgIHJlbmRlclNsaWRlOiBudWxsLFxuICAgICAgICByZW5kZXJFeHRlcm5hbDogbnVsbCxcbiAgICAgICAgcmVuZGVyRXh0ZXJuYWxVcGRhdGU6IHRydWUsXG4gICAgICAgIGFkZFNsaWRlc0JlZm9yZTogMCxcbiAgICAgICAgYWRkU2xpZGVzQWZ0ZXI6IDBcbiAgICAgIH1cbiAgICB9LFxuICAgIGNyZWF0ZTogZnVuY3Rpb24gY3JlYXRlKCkge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICBiaW5kTW9kdWxlTWV0aG9kcyhzd2lwZXIsIHtcbiAgICAgICAgdmlydHVhbDogX2V4dGVuZHMoX2V4dGVuZHMoe30sIFZpcnR1YWwpLCB7fSwge1xuICAgICAgICAgIHNsaWRlczogc3dpcGVyLnBhcmFtcy52aXJ0dWFsLnNsaWRlcyxcbiAgICAgICAgICBjYWNoZToge31cbiAgICAgICAgfSlcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgb246IHtcbiAgICAgIGJlZm9yZUluaXQ6IGZ1bmN0aW9uIGJlZm9yZUluaXQoc3dpcGVyKSB7XG4gICAgICAgIGlmICghc3dpcGVyLnBhcmFtcy52aXJ0dWFsLmVuYWJsZWQpIHJldHVybjtcbiAgICAgICAgc3dpcGVyLmNsYXNzTmFtZXMucHVzaChzd2lwZXIucGFyYW1zLmNvbnRhaW5lck1vZGlmaWVyQ2xhc3MgKyBcInZpcnR1YWxcIik7XG4gICAgICAgIHZhciBvdmVyd3JpdGVQYXJhbXMgPSB7XG4gICAgICAgICAgd2F0Y2hTbGlkZXNQcm9ncmVzczogdHJ1ZVxuICAgICAgICB9O1xuICAgICAgICBleHRlbmQkMShzd2lwZXIucGFyYW1zLCBvdmVyd3JpdGVQYXJhbXMpO1xuICAgICAgICBleHRlbmQkMShzd2lwZXIub3JpZ2luYWxQYXJhbXMsIG92ZXJ3cml0ZVBhcmFtcyk7XG5cbiAgICAgICAgaWYgKCFzd2lwZXIucGFyYW1zLmluaXRpYWxTbGlkZSkge1xuICAgICAgICAgIHN3aXBlci52aXJ0dWFsLnVwZGF0ZSgpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgc2V0VHJhbnNsYXRlOiBmdW5jdGlvbiBzZXRUcmFuc2xhdGUoc3dpcGVyKSB7XG4gICAgICAgIGlmICghc3dpcGVyLnBhcmFtcy52aXJ0dWFsLmVuYWJsZWQpIHJldHVybjtcbiAgICAgICAgc3dpcGVyLnZpcnR1YWwudXBkYXRlKCk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIHZhciBLZXlib2FyZCA9IHtcbiAgICBoYW5kbGU6IGZ1bmN0aW9uIGhhbmRsZShldmVudCkge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICB2YXIgd2luZG93ID0gZ2V0V2luZG93KCk7XG4gICAgICB2YXIgZG9jdW1lbnQgPSBnZXREb2N1bWVudCgpO1xuICAgICAgdmFyIHJ0bCA9IHN3aXBlci5ydGxUcmFuc2xhdGU7XG4gICAgICB2YXIgZSA9IGV2ZW50O1xuICAgICAgaWYgKGUub3JpZ2luYWxFdmVudCkgZSA9IGUub3JpZ2luYWxFdmVudDsgLy8ganF1ZXJ5IGZpeFxuXG4gICAgICB2YXIga2MgPSBlLmtleUNvZGUgfHwgZS5jaGFyQ29kZTtcbiAgICAgIHZhciBwYWdlVXBEb3duID0gc3dpcGVyLnBhcmFtcy5rZXlib2FyZC5wYWdlVXBEb3duO1xuICAgICAgdmFyIGlzUGFnZVVwID0gcGFnZVVwRG93biAmJiBrYyA9PT0gMzM7XG4gICAgICB2YXIgaXNQYWdlRG93biA9IHBhZ2VVcERvd24gJiYga2MgPT09IDM0O1xuICAgICAgdmFyIGlzQXJyb3dMZWZ0ID0ga2MgPT09IDM3O1xuICAgICAgdmFyIGlzQXJyb3dSaWdodCA9IGtjID09PSAzOTtcbiAgICAgIHZhciBpc0Fycm93VXAgPSBrYyA9PT0gMzg7XG4gICAgICB2YXIgaXNBcnJvd0Rvd24gPSBrYyA9PT0gNDA7IC8vIERpcmVjdGlvbnMgbG9ja3NcblxuICAgICAgaWYgKCFzd2lwZXIuYWxsb3dTbGlkZU5leHQgJiYgKHN3aXBlci5pc0hvcml6b250YWwoKSAmJiBpc0Fycm93UmlnaHQgfHwgc3dpcGVyLmlzVmVydGljYWwoKSAmJiBpc0Fycm93RG93biB8fCBpc1BhZ2VEb3duKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIGlmICghc3dpcGVyLmFsbG93U2xpZGVQcmV2ICYmIChzd2lwZXIuaXNIb3Jpem9udGFsKCkgJiYgaXNBcnJvd0xlZnQgfHwgc3dpcGVyLmlzVmVydGljYWwoKSAmJiBpc0Fycm93VXAgfHwgaXNQYWdlVXApKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgaWYgKGUuc2hpZnRLZXkgfHwgZS5hbHRLZXkgfHwgZS5jdHJsS2V5IHx8IGUubWV0YUtleSkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgfVxuXG4gICAgICBpZiAoZG9jdW1lbnQuYWN0aXZlRWxlbWVudCAmJiBkb2N1bWVudC5hY3RpdmVFbGVtZW50Lm5vZGVOYW1lICYmIChkb2N1bWVudC5hY3RpdmVFbGVtZW50Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09ICdpbnB1dCcgfHwgZG9jdW1lbnQuYWN0aXZlRWxlbWVudC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSAndGV4dGFyZWEnKSkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgfVxuXG4gICAgICBpZiAoc3dpcGVyLnBhcmFtcy5rZXlib2FyZC5vbmx5SW5WaWV3cG9ydCAmJiAoaXNQYWdlVXAgfHwgaXNQYWdlRG93biB8fCBpc0Fycm93TGVmdCB8fCBpc0Fycm93UmlnaHQgfHwgaXNBcnJvd1VwIHx8IGlzQXJyb3dEb3duKSkge1xuICAgICAgICB2YXIgaW5WaWV3ID0gZmFsc2U7IC8vIENoZWNrIHRoYXQgc3dpcGVyIHNob3VsZCBiZSBpbnNpZGUgb2YgdmlzaWJsZSBhcmVhIG9mIHdpbmRvd1xuXG4gICAgICAgIGlmIChzd2lwZXIuJGVsLnBhcmVudHMoXCIuXCIgKyBzd2lwZXIucGFyYW1zLnNsaWRlQ2xhc3MpLmxlbmd0aCA+IDAgJiYgc3dpcGVyLiRlbC5wYXJlbnRzKFwiLlwiICsgc3dpcGVyLnBhcmFtcy5zbGlkZUFjdGl2ZUNsYXNzKS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIHdpbmRvd1dpZHRoID0gd2luZG93LmlubmVyV2lkdGg7XG4gICAgICAgIHZhciB3aW5kb3dIZWlnaHQgPSB3aW5kb3cuaW5uZXJIZWlnaHQ7XG4gICAgICAgIHZhciBzd2lwZXJPZmZzZXQgPSBzd2lwZXIuJGVsLm9mZnNldCgpO1xuICAgICAgICBpZiAocnRsKSBzd2lwZXJPZmZzZXQubGVmdCAtPSBzd2lwZXIuJGVsWzBdLnNjcm9sbExlZnQ7XG4gICAgICAgIHZhciBzd2lwZXJDb29yZCA9IFtbc3dpcGVyT2Zmc2V0LmxlZnQsIHN3aXBlck9mZnNldC50b3BdLCBbc3dpcGVyT2Zmc2V0LmxlZnQgKyBzd2lwZXIud2lkdGgsIHN3aXBlck9mZnNldC50b3BdLCBbc3dpcGVyT2Zmc2V0LmxlZnQsIHN3aXBlck9mZnNldC50b3AgKyBzd2lwZXIuaGVpZ2h0XSwgW3N3aXBlck9mZnNldC5sZWZ0ICsgc3dpcGVyLndpZHRoLCBzd2lwZXJPZmZzZXQudG9wICsgc3dpcGVyLmhlaWdodF1dO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc3dpcGVyQ29vcmQubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgICB2YXIgcG9pbnQgPSBzd2lwZXJDb29yZFtpXTtcblxuICAgICAgICAgIGlmIChwb2ludFswXSA+PSAwICYmIHBvaW50WzBdIDw9IHdpbmRvd1dpZHRoICYmIHBvaW50WzFdID49IDAgJiYgcG9pbnRbMV0gPD0gd2luZG93SGVpZ2h0KSB7XG4gICAgICAgICAgICBpblZpZXcgPSB0cnVlO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmICghaW5WaWV3KSByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgfVxuXG4gICAgICBpZiAoc3dpcGVyLmlzSG9yaXpvbnRhbCgpKSB7XG4gICAgICAgIGlmIChpc1BhZ2VVcCB8fCBpc1BhZ2VEb3duIHx8IGlzQXJyb3dMZWZ0IHx8IGlzQXJyb3dSaWdodCkge1xuICAgICAgICAgIGlmIChlLnByZXZlbnREZWZhdWx0KSBlLnByZXZlbnREZWZhdWx0KCk7ZWxzZSBlLnJldHVyblZhbHVlID0gZmFsc2U7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoKGlzUGFnZURvd24gfHwgaXNBcnJvd1JpZ2h0KSAmJiAhcnRsIHx8IChpc1BhZ2VVcCB8fCBpc0Fycm93TGVmdCkgJiYgcnRsKSBzd2lwZXIuc2xpZGVOZXh0KCk7XG4gICAgICAgIGlmICgoaXNQYWdlVXAgfHwgaXNBcnJvd0xlZnQpICYmICFydGwgfHwgKGlzUGFnZURvd24gfHwgaXNBcnJvd1JpZ2h0KSAmJiBydGwpIHN3aXBlci5zbGlkZVByZXYoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChpc1BhZ2VVcCB8fCBpc1BhZ2VEb3duIHx8IGlzQXJyb3dVcCB8fCBpc0Fycm93RG93bikge1xuICAgICAgICAgIGlmIChlLnByZXZlbnREZWZhdWx0KSBlLnByZXZlbnREZWZhdWx0KCk7ZWxzZSBlLnJldHVyblZhbHVlID0gZmFsc2U7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaXNQYWdlRG93biB8fCBpc0Fycm93RG93bikgc3dpcGVyLnNsaWRlTmV4dCgpO1xuICAgICAgICBpZiAoaXNQYWdlVXAgfHwgaXNBcnJvd1VwKSBzd2lwZXIuc2xpZGVQcmV2KCk7XG4gICAgICB9XG5cbiAgICAgIHN3aXBlci5lbWl0KCdrZXlQcmVzcycsIGtjKTtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfSxcbiAgICBlbmFibGU6IGZ1bmN0aW9uIGVuYWJsZSgpIHtcbiAgICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgICAgdmFyIGRvY3VtZW50ID0gZ2V0RG9jdW1lbnQoKTtcbiAgICAgIGlmIChzd2lwZXIua2V5Ym9hcmQuZW5hYmxlZCkgcmV0dXJuO1xuICAgICAgJChkb2N1bWVudCkub24oJ2tleWRvd24nLCBzd2lwZXIua2V5Ym9hcmQuaGFuZGxlKTtcbiAgICAgIHN3aXBlci5rZXlib2FyZC5lbmFibGVkID0gdHJ1ZTtcbiAgICB9LFxuICAgIGRpc2FibGU6IGZ1bmN0aW9uIGRpc2FibGUoKSB7XG4gICAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICAgIHZhciBkb2N1bWVudCA9IGdldERvY3VtZW50KCk7XG4gICAgICBpZiAoIXN3aXBlci5rZXlib2FyZC5lbmFibGVkKSByZXR1cm47XG4gICAgICAkKGRvY3VtZW50KS5vZmYoJ2tleWRvd24nLCBzd2lwZXIua2V5Ym9hcmQuaGFuZGxlKTtcbiAgICAgIHN3aXBlci5rZXlib2FyZC5lbmFibGVkID0gZmFsc2U7XG4gICAgfVxuICB9O1xuICB2YXIgS2V5Ym9hcmQkMSA9IHtcbiAgICBuYW1lOiAna2V5Ym9hcmQnLFxuICAgIHBhcmFtczoge1xuICAgICAga2V5Ym9hcmQ6IHtcbiAgICAgICAgZW5hYmxlZDogZmFsc2UsXG4gICAgICAgIG9ubHlJblZpZXdwb3J0OiB0cnVlLFxuICAgICAgICBwYWdlVXBEb3duOiB0cnVlXG4gICAgICB9XG4gICAgfSxcbiAgICBjcmVhdGU6IGZ1bmN0aW9uIGNyZWF0ZSgpIHtcbiAgICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgICAgYmluZE1vZHVsZU1ldGhvZHMoc3dpcGVyLCB7XG4gICAgICAgIGtleWJvYXJkOiBfZXh0ZW5kcyh7XG4gICAgICAgICAgZW5hYmxlZDogZmFsc2VcbiAgICAgICAgfSwgS2V5Ym9hcmQpXG4gICAgICB9KTtcbiAgICB9LFxuICAgIG9uOiB7XG4gICAgICBpbml0OiBmdW5jdGlvbiBpbml0KHN3aXBlcikge1xuICAgICAgICBpZiAoc3dpcGVyLnBhcmFtcy5rZXlib2FyZC5lbmFibGVkKSB7XG4gICAgICAgICAgc3dpcGVyLmtleWJvYXJkLmVuYWJsZSgpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgZGVzdHJveTogZnVuY3Rpb24gZGVzdHJveShzd2lwZXIpIHtcbiAgICAgICAgaWYgKHN3aXBlci5rZXlib2FyZC5lbmFibGVkKSB7XG4gICAgICAgICAgc3dpcGVyLmtleWJvYXJkLmRpc2FibGUoKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICBmdW5jdGlvbiBpc0V2ZW50U3VwcG9ydGVkKCkge1xuICAgIHZhciBkb2N1bWVudCA9IGdldERvY3VtZW50KCk7XG4gICAgdmFyIGV2ZW50TmFtZSA9ICdvbndoZWVsJztcbiAgICB2YXIgaXNTdXBwb3J0ZWQgPSAoZXZlbnROYW1lIGluIGRvY3VtZW50KTtcblxuICAgIGlmICghaXNTdXBwb3J0ZWQpIHtcbiAgICAgIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICBlbGVtZW50LnNldEF0dHJpYnV0ZShldmVudE5hbWUsICdyZXR1cm47Jyk7XG4gICAgICBpc1N1cHBvcnRlZCA9IHR5cGVvZiBlbGVtZW50W2V2ZW50TmFtZV0gPT09ICdmdW5jdGlvbic7XG4gICAgfVxuXG4gICAgaWYgKCFpc1N1cHBvcnRlZCAmJiBkb2N1bWVudC5pbXBsZW1lbnRhdGlvbiAmJiBkb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5oYXNGZWF0dXJlICYmIC8vIGFsd2F5cyByZXR1cm5zIHRydWUgaW4gbmV3ZXIgYnJvd3NlcnMgYXMgcGVyIHRoZSBzdGFuZGFyZC5cbiAgICAvLyBAc2VlIGh0dHA6Ly9kb20uc3BlYy53aGF0d2cub3JnLyNkb20tZG9taW1wbGVtZW50YXRpb24taGFzZmVhdHVyZVxuICAgIGRvY3VtZW50LmltcGxlbWVudGF0aW9uLmhhc0ZlYXR1cmUoJycsICcnKSAhPT0gdHJ1ZSkge1xuICAgICAgLy8gVGhpcyBpcyB0aGUgb25seSB3YXkgdG8gdGVzdCBzdXBwb3J0IGZvciB0aGUgYHdoZWVsYCBldmVudCBpbiBJRTkrLlxuICAgICAgaXNTdXBwb3J0ZWQgPSBkb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5oYXNGZWF0dXJlKCdFdmVudHMud2hlZWwnLCAnMy4wJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGlzU3VwcG9ydGVkO1xuICB9XG5cbiAgdmFyIE1vdXNld2hlZWwgPSB7XG4gICAgbGFzdFNjcm9sbFRpbWU6IG5vdygpLFxuICAgIGxhc3RFdmVudEJlZm9yZVNuYXA6IHVuZGVmaW5lZCxcbiAgICByZWNlbnRXaGVlbEV2ZW50czogW10sXG4gICAgZXZlbnQ6IGZ1bmN0aW9uIGV2ZW50KCkge1xuICAgICAgdmFyIHdpbmRvdyA9IGdldFdpbmRvdygpO1xuICAgICAgaWYgKHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ2ZpcmVmb3gnKSA+IC0xKSByZXR1cm4gJ0RPTU1vdXNlU2Nyb2xsJztcbiAgICAgIHJldHVybiBpc0V2ZW50U3VwcG9ydGVkKCkgPyAnd2hlZWwnIDogJ21vdXNld2hlZWwnO1xuICAgIH0sXG4gICAgbm9ybWFsaXplOiBmdW5jdGlvbiBub3JtYWxpemUoZSkge1xuICAgICAgLy8gUmVhc29uYWJsZSBkZWZhdWx0c1xuICAgICAgdmFyIFBJWEVMX1NURVAgPSAxMDtcbiAgICAgIHZhciBMSU5FX0hFSUdIVCA9IDQwO1xuICAgICAgdmFyIFBBR0VfSEVJR0hUID0gODAwO1xuICAgICAgdmFyIHNYID0gMDtcbiAgICAgIHZhciBzWSA9IDA7IC8vIHNwaW5YLCBzcGluWVxuXG4gICAgICB2YXIgcFggPSAwO1xuICAgICAgdmFyIHBZID0gMDsgLy8gcGl4ZWxYLCBwaXhlbFlcbiAgICAgIC8vIExlZ2FjeVxuXG4gICAgICBpZiAoJ2RldGFpbCcgaW4gZSkge1xuICAgICAgICBzWSA9IGUuZGV0YWlsO1xuICAgICAgfVxuXG4gICAgICBpZiAoJ3doZWVsRGVsdGEnIGluIGUpIHtcbiAgICAgICAgc1kgPSAtZS53aGVlbERlbHRhIC8gMTIwO1xuICAgICAgfVxuXG4gICAgICBpZiAoJ3doZWVsRGVsdGFZJyBpbiBlKSB7XG4gICAgICAgIHNZID0gLWUud2hlZWxEZWx0YVkgLyAxMjA7XG4gICAgICB9XG5cbiAgICAgIGlmICgnd2hlZWxEZWx0YVgnIGluIGUpIHtcbiAgICAgICAgc1ggPSAtZS53aGVlbERlbHRhWCAvIDEyMDtcbiAgICAgIH0gLy8gc2lkZSBzY3JvbGxpbmcgb24gRkYgd2l0aCBET01Nb3VzZVNjcm9sbFxuXG5cbiAgICAgIGlmICgnYXhpcycgaW4gZSAmJiBlLmF4aXMgPT09IGUuSE9SSVpPTlRBTF9BWElTKSB7XG4gICAgICAgIHNYID0gc1k7XG4gICAgICAgIHNZID0gMDtcbiAgICAgIH1cblxuICAgICAgcFggPSBzWCAqIFBJWEVMX1NURVA7XG4gICAgICBwWSA9IHNZICogUElYRUxfU1RFUDtcblxuICAgICAgaWYgKCdkZWx0YVknIGluIGUpIHtcbiAgICAgICAgcFkgPSBlLmRlbHRhWTtcbiAgICAgIH1cblxuICAgICAgaWYgKCdkZWx0YVgnIGluIGUpIHtcbiAgICAgICAgcFggPSBlLmRlbHRhWDtcbiAgICAgIH1cblxuICAgICAgaWYgKGUuc2hpZnRLZXkgJiYgIXBYKSB7XG4gICAgICAgIC8vIGlmIHVzZXIgc2Nyb2xscyB3aXRoIHNoaWZ0IGhlIHdhbnRzIGhvcml6b250YWwgc2Nyb2xsXG4gICAgICAgIHBYID0gcFk7XG4gICAgICAgIHBZID0gMDtcbiAgICAgIH1cblxuICAgICAgaWYgKChwWCB8fCBwWSkgJiYgZS5kZWx0YU1vZGUpIHtcbiAgICAgICAgaWYgKGUuZGVsdGFNb2RlID09PSAxKSB7XG4gICAgICAgICAgLy8gZGVsdGEgaW4gTElORSB1bml0c1xuICAgICAgICAgIHBYICo9IExJTkVfSEVJR0hUO1xuICAgICAgICAgIHBZICo9IExJTkVfSEVJR0hUO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIGRlbHRhIGluIFBBR0UgdW5pdHNcbiAgICAgICAgICBwWCAqPSBQQUdFX0hFSUdIVDtcbiAgICAgICAgICBwWSAqPSBQQUdFX0hFSUdIVDtcbiAgICAgICAgfVxuICAgICAgfSAvLyBGYWxsLWJhY2sgaWYgc3BpbiBjYW5ub3QgYmUgZGV0ZXJtaW5lZFxuXG5cbiAgICAgIGlmIChwWCAmJiAhc1gpIHtcbiAgICAgICAgc1ggPSBwWCA8IDEgPyAtMSA6IDE7XG4gICAgICB9XG5cbiAgICAgIGlmIChwWSAmJiAhc1kpIHtcbiAgICAgICAgc1kgPSBwWSA8IDEgPyAtMSA6IDE7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIHNwaW5YOiBzWCxcbiAgICAgICAgc3Bpblk6IHNZLFxuICAgICAgICBwaXhlbFg6IHBYLFxuICAgICAgICBwaXhlbFk6IHBZXG4gICAgICB9O1xuICAgIH0sXG4gICAgaGFuZGxlTW91c2VFbnRlcjogZnVuY3Rpb24gaGFuZGxlTW91c2VFbnRlcigpIHtcbiAgICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgICAgc3dpcGVyLm1vdXNlRW50ZXJlZCA9IHRydWU7XG4gICAgfSxcbiAgICBoYW5kbGVNb3VzZUxlYXZlOiBmdW5jdGlvbiBoYW5kbGVNb3VzZUxlYXZlKCkge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICBzd2lwZXIubW91c2VFbnRlcmVkID0gZmFsc2U7XG4gICAgfSxcbiAgICBoYW5kbGU6IGZ1bmN0aW9uIGhhbmRsZShldmVudCkge1xuICAgICAgdmFyIGUgPSBldmVudDtcbiAgICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgICAgdmFyIHBhcmFtcyA9IHN3aXBlci5wYXJhbXMubW91c2V3aGVlbDtcblxuICAgICAgaWYgKHN3aXBlci5wYXJhbXMuY3NzTW9kZSkge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB9XG5cbiAgICAgIHZhciB0YXJnZXQgPSBzd2lwZXIuJGVsO1xuXG4gICAgICBpZiAoc3dpcGVyLnBhcmFtcy5tb3VzZXdoZWVsLmV2ZW50c1RhcmdldCAhPT0gJ2NvbnRhaW5lcicpIHtcbiAgICAgICAgdGFyZ2V0ID0gJChzd2lwZXIucGFyYW1zLm1vdXNld2hlZWwuZXZlbnRzVGFyZ2V0KTtcbiAgICAgIH1cblxuICAgICAgaWYgKCFzd2lwZXIubW91c2VFbnRlcmVkICYmICF0YXJnZXRbMF0uY29udGFpbnMoZS50YXJnZXQpICYmICFwYXJhbXMucmVsZWFzZU9uRWRnZXMpIHJldHVybiB0cnVlO1xuICAgICAgaWYgKGUub3JpZ2luYWxFdmVudCkgZSA9IGUub3JpZ2luYWxFdmVudDsgLy8ganF1ZXJ5IGZpeFxuXG4gICAgICB2YXIgZGVsdGEgPSAwO1xuICAgICAgdmFyIHJ0bEZhY3RvciA9IHN3aXBlci5ydGxUcmFuc2xhdGUgPyAtMSA6IDE7XG4gICAgICB2YXIgZGF0YSA9IE1vdXNld2hlZWwubm9ybWFsaXplKGUpO1xuXG4gICAgICBpZiAocGFyYW1zLmZvcmNlVG9BeGlzKSB7XG4gICAgICAgIGlmIChzd2lwZXIuaXNIb3Jpem9udGFsKCkpIHtcbiAgICAgICAgICBpZiAoTWF0aC5hYnMoZGF0YS5waXhlbFgpID4gTWF0aC5hYnMoZGF0YS5waXhlbFkpKSBkZWx0YSA9IC1kYXRhLnBpeGVsWCAqIHJ0bEZhY3RvcjtlbHNlIHJldHVybiB0cnVlO1xuICAgICAgICB9IGVsc2UgaWYgKE1hdGguYWJzKGRhdGEucGl4ZWxZKSA+IE1hdGguYWJzKGRhdGEucGl4ZWxYKSkgZGVsdGEgPSAtZGF0YS5waXhlbFk7ZWxzZSByZXR1cm4gdHJ1ZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGRlbHRhID0gTWF0aC5hYnMoZGF0YS5waXhlbFgpID4gTWF0aC5hYnMoZGF0YS5waXhlbFkpID8gLWRhdGEucGl4ZWxYICogcnRsRmFjdG9yIDogLWRhdGEucGl4ZWxZO1xuICAgICAgfVxuXG4gICAgICBpZiAoZGVsdGEgPT09IDApIHJldHVybiB0cnVlO1xuICAgICAgaWYgKHBhcmFtcy5pbnZlcnQpIGRlbHRhID0gLWRlbHRhO1xuXG4gICAgICBpZiAoIXN3aXBlci5wYXJhbXMuZnJlZU1vZGUpIHtcbiAgICAgICAgLy8gUmVnaXN0ZXIgdGhlIG5ldyBldmVudCBpbiBhIHZhcmlhYmxlIHdoaWNoIHN0b3JlcyB0aGUgcmVsZXZhbnQgZGF0YVxuICAgICAgICB2YXIgbmV3RXZlbnQgPSB7XG4gICAgICAgICAgdGltZTogbm93KCksXG4gICAgICAgICAgZGVsdGE6IE1hdGguYWJzKGRlbHRhKSxcbiAgICAgICAgICBkaXJlY3Rpb246IE1hdGguc2lnbihkZWx0YSksXG4gICAgICAgICAgcmF3OiBldmVudFxuICAgICAgICB9OyAvLyBLZWVwIHRoZSBtb3N0IHJlY2VudCBldmVudHNcblxuICAgICAgICB2YXIgcmVjZW50V2hlZWxFdmVudHMgPSBzd2lwZXIubW91c2V3aGVlbC5yZWNlbnRXaGVlbEV2ZW50cztcblxuICAgICAgICBpZiAocmVjZW50V2hlZWxFdmVudHMubGVuZ3RoID49IDIpIHtcbiAgICAgICAgICByZWNlbnRXaGVlbEV2ZW50cy5zaGlmdCgpOyAvLyBvbmx5IHN0b3JlIHRoZSBsYXN0IE4gZXZlbnRzXG4gICAgICAgIH1cblxuICAgICAgICB2YXIgcHJldkV2ZW50ID0gcmVjZW50V2hlZWxFdmVudHMubGVuZ3RoID8gcmVjZW50V2hlZWxFdmVudHNbcmVjZW50V2hlZWxFdmVudHMubGVuZ3RoIC0gMV0gOiB1bmRlZmluZWQ7XG4gICAgICAgIHJlY2VudFdoZWVsRXZlbnRzLnB1c2gobmV3RXZlbnQpOyAvLyBJZiB0aGVyZSBpcyBhdCBsZWFzdCBvbmUgcHJldmlvdXMgcmVjb3JkZWQgZXZlbnQ6XG4gICAgICAgIC8vICAgSWYgZGlyZWN0aW9uIGhhcyBjaGFuZ2VkIG9yXG4gICAgICAgIC8vICAgaWYgdGhlIHNjcm9sbCBpcyBxdWlja2VyIHRoYW4gdGhlIHByZXZpb3VzIG9uZTpcbiAgICAgICAgLy8gICAgIEFuaW1hdGUgdGhlIHNsaWRlci5cbiAgICAgICAgLy8gRWxzZSAodGhpcyBpcyB0aGUgZmlyc3QgdGltZSB0aGUgd2hlZWwgaXMgbW92ZWQpOlxuICAgICAgICAvLyAgICAgQW5pbWF0ZSB0aGUgc2xpZGVyLlxuXG4gICAgICAgIGlmIChwcmV2RXZlbnQpIHtcbiAgICAgICAgICBpZiAobmV3RXZlbnQuZGlyZWN0aW9uICE9PSBwcmV2RXZlbnQuZGlyZWN0aW9uIHx8IG5ld0V2ZW50LmRlbHRhID4gcHJldkV2ZW50LmRlbHRhIHx8IG5ld0V2ZW50LnRpbWUgPiBwcmV2RXZlbnQudGltZSArIDE1MCkge1xuICAgICAgICAgICAgc3dpcGVyLm1vdXNld2hlZWwuYW5pbWF0ZVNsaWRlcihuZXdFdmVudCk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHN3aXBlci5tb3VzZXdoZWVsLmFuaW1hdGVTbGlkZXIobmV3RXZlbnQpO1xuICAgICAgICB9IC8vIElmIGl0J3MgdGltZSB0byByZWxlYXNlIHRoZSBzY3JvbGw6XG4gICAgICAgIC8vICAgUmV0dXJuIG5vdyBzbyB5b3UgZG9uJ3QgaGl0IHRoZSBwcmV2ZW50RGVmYXVsdC5cblxuXG4gICAgICAgIGlmIChzd2lwZXIubW91c2V3aGVlbC5yZWxlYXNlU2Nyb2xsKG5ld0V2ZW50KSkge1xuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBGcmVlbW9kZSBvciBzY3JvbGxDb250YWluZXI6XG4gICAgICAgIC8vIElmIHdlIHJlY2VudGx5IHNuYXBwZWQgYWZ0ZXIgYSBtb21lbnR1bSBzY3JvbGwsIHRoZW4gaWdub3JlIHdoZWVsIGV2ZW50c1xuICAgICAgICAvLyB0byBnaXZlIHRpbWUgZm9yIHRoZSBkZWNlbGVyYXRpb24gdG8gZmluaXNoLiBTdG9wIGlnbm9yaW5nIGFmdGVyIDUwMCBtc2Vjc1xuICAgICAgICAvLyBvciBpZiBpdCdzIGEgbmV3IHNjcm9sbCAobGFyZ2VyIGRlbHRhIG9yIGludmVyc2Ugc2lnbiBhcyBsYXN0IGV2ZW50IGJlZm9yZVxuICAgICAgICAvLyBhbiBlbmQtb2YtbW9tZW50dW0gc25hcCkuXG4gICAgICAgIHZhciBfbmV3RXZlbnQgPSB7XG4gICAgICAgICAgdGltZTogbm93KCksXG4gICAgICAgICAgZGVsdGE6IE1hdGguYWJzKGRlbHRhKSxcbiAgICAgICAgICBkaXJlY3Rpb246IE1hdGguc2lnbihkZWx0YSlcbiAgICAgICAgfTtcbiAgICAgICAgdmFyIGxhc3RFdmVudEJlZm9yZVNuYXAgPSBzd2lwZXIubW91c2V3aGVlbC5sYXN0RXZlbnRCZWZvcmVTbmFwO1xuICAgICAgICB2YXIgaWdub3JlV2hlZWxFdmVudHMgPSBsYXN0RXZlbnRCZWZvcmVTbmFwICYmIF9uZXdFdmVudC50aW1lIDwgbGFzdEV2ZW50QmVmb3JlU25hcC50aW1lICsgNTAwICYmIF9uZXdFdmVudC5kZWx0YSA8PSBsYXN0RXZlbnRCZWZvcmVTbmFwLmRlbHRhICYmIF9uZXdFdmVudC5kaXJlY3Rpb24gPT09IGxhc3RFdmVudEJlZm9yZVNuYXAuZGlyZWN0aW9uO1xuXG4gICAgICAgIGlmICghaWdub3JlV2hlZWxFdmVudHMpIHtcbiAgICAgICAgICBzd2lwZXIubW91c2V3aGVlbC5sYXN0RXZlbnRCZWZvcmVTbmFwID0gdW5kZWZpbmVkO1xuXG4gICAgICAgICAgaWYgKHN3aXBlci5wYXJhbXMubG9vcCkge1xuICAgICAgICAgICAgc3dpcGVyLmxvb3BGaXgoKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICB2YXIgcG9zaXRpb24gPSBzd2lwZXIuZ2V0VHJhbnNsYXRlKCkgKyBkZWx0YSAqIHBhcmFtcy5zZW5zaXRpdml0eTtcbiAgICAgICAgICB2YXIgd2FzQmVnaW5uaW5nID0gc3dpcGVyLmlzQmVnaW5uaW5nO1xuICAgICAgICAgIHZhciB3YXNFbmQgPSBzd2lwZXIuaXNFbmQ7XG4gICAgICAgICAgaWYgKHBvc2l0aW9uID49IHN3aXBlci5taW5UcmFuc2xhdGUoKSkgcG9zaXRpb24gPSBzd2lwZXIubWluVHJhbnNsYXRlKCk7XG4gICAgICAgICAgaWYgKHBvc2l0aW9uIDw9IHN3aXBlci5tYXhUcmFuc2xhdGUoKSkgcG9zaXRpb24gPSBzd2lwZXIubWF4VHJhbnNsYXRlKCk7XG4gICAgICAgICAgc3dpcGVyLnNldFRyYW5zaXRpb24oMCk7XG4gICAgICAgICAgc3dpcGVyLnNldFRyYW5zbGF0ZShwb3NpdGlvbik7XG4gICAgICAgICAgc3dpcGVyLnVwZGF0ZVByb2dyZXNzKCk7XG4gICAgICAgICAgc3dpcGVyLnVwZGF0ZUFjdGl2ZUluZGV4KCk7XG4gICAgICAgICAgc3dpcGVyLnVwZGF0ZVNsaWRlc0NsYXNzZXMoKTtcblxuICAgICAgICAgIGlmICghd2FzQmVnaW5uaW5nICYmIHN3aXBlci5pc0JlZ2lubmluZyB8fCAhd2FzRW5kICYmIHN3aXBlci5pc0VuZCkge1xuICAgICAgICAgICAgc3dpcGVyLnVwZGF0ZVNsaWRlc0NsYXNzZXMoKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoc3dpcGVyLnBhcmFtcy5mcmVlTW9kZVN0aWNreSkge1xuICAgICAgICAgICAgLy8gV2hlbiB3aGVlbCBzY3JvbGxpbmcgc3RhcnRzIHdpdGggc3RpY2t5IChha2Egc25hcCkgZW5hYmxlZCwgdGhlbiBkZXRlY3RcbiAgICAgICAgICAgIC8vIHRoZSBlbmQgb2YgYSBtb21lbnR1bSBzY3JvbGwgYnkgc3RvcmluZyByZWNlbnQgKE49MTU/KSB3aGVlbCBldmVudHMuXG4gICAgICAgICAgICAvLyAxLiBkbyBhbGwgTiBldmVudHMgaGF2ZSBkZWNyZWFzaW5nIG9yIHNhbWUgKGFic29sdXRlIHZhbHVlKSBkZWx0YT9cbiAgICAgICAgICAgIC8vIDIuIGRpZCBhbGwgTiBldmVudHMgYXJyaXZlIGluIHRoZSBsYXN0IE0gKE09NTAwPykgbXNlY3M/XG4gICAgICAgICAgICAvLyAzLiBkb2VzIHRoZSBlYXJsaWVzdCBldmVudCBoYXZlIGFuIChhYnNvbHV0ZSB2YWx1ZSkgZGVsdGEgdGhhdCdzXG4gICAgICAgICAgICAvLyAgICBhdCBsZWFzdCBQIChQPTE/KSBsYXJnZXIgdGhhbiB0aGUgbW9zdCByZWNlbnQgZXZlbnQncyBkZWx0YT9cbiAgICAgICAgICAgIC8vIDQuIGRvZXMgdGhlIGxhdGVzdCBldmVudCBoYXZlIGEgZGVsdGEgdGhhdCdzIHNtYWxsZXIgdGhhbiBRIChRPTY/KSBwaXhlbHM/XG4gICAgICAgICAgICAvLyBJZiAxLTQgYXJlIFwieWVzXCIgdGhlbiB3ZSdyZSBuZWFyIHRoZSBlbmQgb2YgYSBtb21lbnR1bSBzY3JvbGwgZGVjZWxlcmF0aW9uLlxuICAgICAgICAgICAgLy8gU25hcCBpbW1lZGlhdGVseSBhbmQgaWdub3JlIHJlbWFpbmluZyB3aGVlbCBldmVudHMgaW4gdGhpcyBzY3JvbGwuXG4gICAgICAgICAgICAvLyBTZWUgY29tbWVudCBhYm92ZSBmb3IgXCJyZW1haW5pbmcgd2hlZWwgZXZlbnRzIGluIHRoaXMgc2Nyb2xsXCIgZGV0ZXJtaW5hdGlvbi5cbiAgICAgICAgICAgIC8vIElmIDEtNCBhcmVuJ3Qgc2F0aXNmaWVkLCB0aGVuIHdhaXQgdG8gc25hcCB1bnRpbCA1MDBtcyBhZnRlciB0aGUgbGFzdCBldmVudC5cbiAgICAgICAgICAgIGNsZWFyVGltZW91dChzd2lwZXIubW91c2V3aGVlbC50aW1lb3V0KTtcbiAgICAgICAgICAgIHN3aXBlci5tb3VzZXdoZWVsLnRpbWVvdXQgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICB2YXIgX3JlY2VudFdoZWVsRXZlbnRzID0gc3dpcGVyLm1vdXNld2hlZWwucmVjZW50V2hlZWxFdmVudHM7XG5cbiAgICAgICAgICAgIGlmIChfcmVjZW50V2hlZWxFdmVudHMubGVuZ3RoID49IDE1KSB7XG4gICAgICAgICAgICAgIF9yZWNlbnRXaGVlbEV2ZW50cy5zaGlmdCgpOyAvLyBvbmx5IHN0b3JlIHRoZSBsYXN0IE4gZXZlbnRzXG5cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIF9wcmV2RXZlbnQgPSBfcmVjZW50V2hlZWxFdmVudHMubGVuZ3RoID8gX3JlY2VudFdoZWVsRXZlbnRzW19yZWNlbnRXaGVlbEV2ZW50cy5sZW5ndGggLSAxXSA6IHVuZGVmaW5lZDtcblxuICAgICAgICAgICAgdmFyIGZpcnN0RXZlbnQgPSBfcmVjZW50V2hlZWxFdmVudHNbMF07XG5cbiAgICAgICAgICAgIF9yZWNlbnRXaGVlbEV2ZW50cy5wdXNoKF9uZXdFdmVudCk7XG5cbiAgICAgICAgICAgIGlmIChfcHJldkV2ZW50ICYmIChfbmV3RXZlbnQuZGVsdGEgPiBfcHJldkV2ZW50LmRlbHRhIHx8IF9uZXdFdmVudC5kaXJlY3Rpb24gIT09IF9wcmV2RXZlbnQuZGlyZWN0aW9uKSkge1xuICAgICAgICAgICAgICAvLyBJbmNyZWFzaW5nIG9yIHJldmVyc2Utc2lnbiBkZWx0YSBtZWFucyB0aGUgdXNlciBzdGFydGVkIHNjcm9sbGluZyBhZ2Fpbi4gQ2xlYXIgdGhlIHdoZWVsIGV2ZW50IGxvZy5cbiAgICAgICAgICAgICAgX3JlY2VudFdoZWVsRXZlbnRzLnNwbGljZSgwKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoX3JlY2VudFdoZWVsRXZlbnRzLmxlbmd0aCA+PSAxNSAmJiBfbmV3RXZlbnQudGltZSAtIGZpcnN0RXZlbnQudGltZSA8IDUwMCAmJiBmaXJzdEV2ZW50LmRlbHRhIC0gX25ld0V2ZW50LmRlbHRhID49IDEgJiYgX25ld0V2ZW50LmRlbHRhIDw9IDYpIHtcbiAgICAgICAgICAgICAgLy8gV2UncmUgYXQgdGhlIGVuZCBvZiB0aGUgZGVjZWxlcmF0aW9uIG9mIGEgbW9tZW50dW0gc2Nyb2xsLCBzbyB0aGVyZSdzIG5vIG5lZWRcbiAgICAgICAgICAgICAgLy8gdG8gd2FpdCBmb3IgbW9yZSBldmVudHMuIFNuYXAgQVNBUCBvbiB0aGUgbmV4dCB0aWNrLlxuICAgICAgICAgICAgICAvLyBBbHNvLCBiZWNhdXNlIHRoZXJlJ3Mgc29tZSByZW1haW5pbmcgbW9tZW50dW0gd2UnbGwgYmlhcyB0aGUgc25hcCBpbiB0aGVcbiAgICAgICAgICAgICAgLy8gZGlyZWN0aW9uIG9mIHRoZSBvbmdvaW5nIHNjcm9sbCBiZWNhdXNlIGl0J3MgYmV0dGVyIFVYIGZvciB0aGUgc2Nyb2xsIHRvIHNuYXBcbiAgICAgICAgICAgICAgLy8gaW4gdGhlIHNhbWUgZGlyZWN0aW9uIGFzIHRoZSBzY3JvbGwgaW5zdGVhZCBvZiByZXZlcnNpbmcgdG8gc25hcC4gIFRoZXJlZm9yZSxcbiAgICAgICAgICAgICAgLy8gaWYgaXQncyBhbHJlYWR5IHNjcm9sbGVkIG1vcmUgdGhhbiAyMCUgaW4gdGhlIGN1cnJlbnQgZGlyZWN0aW9uLCBrZWVwIGdvaW5nLlxuICAgICAgICAgICAgICB2YXIgc25hcFRvVGhyZXNob2xkID0gZGVsdGEgPiAwID8gMC44IDogMC4yO1xuICAgICAgICAgICAgICBzd2lwZXIubW91c2V3aGVlbC5sYXN0RXZlbnRCZWZvcmVTbmFwID0gX25ld0V2ZW50O1xuXG4gICAgICAgICAgICAgIF9yZWNlbnRXaGVlbEV2ZW50cy5zcGxpY2UoMCk7XG5cbiAgICAgICAgICAgICAgc3dpcGVyLm1vdXNld2hlZWwudGltZW91dCA9IG5leHRUaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBzd2lwZXIuc2xpZGVUb0Nsb3Nlc3Qoc3dpcGVyLnBhcmFtcy5zcGVlZCwgdHJ1ZSwgdW5kZWZpbmVkLCBzbmFwVG9UaHJlc2hvbGQpO1xuICAgICAgICAgICAgICB9LCAwKTsgLy8gbm8gZGVsYXk7IG1vdmUgb24gbmV4dCB0aWNrXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICghc3dpcGVyLm1vdXNld2hlZWwudGltZW91dCkge1xuICAgICAgICAgICAgICAvLyBpZiB3ZSBnZXQgaGVyZSwgdGhlbiB3ZSBoYXZlbid0IGRldGVjdGVkIHRoZSBlbmQgb2YgYSBtb21lbnR1bSBzY3JvbGwsIHNvXG4gICAgICAgICAgICAgIC8vIHdlJ2xsIGNvbnNpZGVyIGEgc2Nyb2xsIFwiY29tcGxldGVcIiB3aGVuIHRoZXJlIGhhdmVuJ3QgYmVlbiBhbnkgd2hlZWwgZXZlbnRzXG4gICAgICAgICAgICAgIC8vIGZvciA1MDBtcy5cbiAgICAgICAgICAgICAgc3dpcGVyLm1vdXNld2hlZWwudGltZW91dCA9IG5leHRUaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgc25hcFRvVGhyZXNob2xkID0gMC41O1xuICAgICAgICAgICAgICAgIHN3aXBlci5tb3VzZXdoZWVsLmxhc3RFdmVudEJlZm9yZVNuYXAgPSBfbmV3RXZlbnQ7XG5cbiAgICAgICAgICAgICAgICBfcmVjZW50V2hlZWxFdmVudHMuc3BsaWNlKDApO1xuXG4gICAgICAgICAgICAgICAgc3dpcGVyLnNsaWRlVG9DbG9zZXN0KHN3aXBlci5wYXJhbXMuc3BlZWQsIHRydWUsIHVuZGVmaW5lZCwgc25hcFRvVGhyZXNob2xkKTtcbiAgICAgICAgICAgICAgfSwgNTAwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IC8vIEVtaXQgZXZlbnRcblxuXG4gICAgICAgICAgaWYgKCFpZ25vcmVXaGVlbEV2ZW50cykgc3dpcGVyLmVtaXQoJ3Njcm9sbCcsIGUpOyAvLyBTdG9wIGF1dG9wbGF5XG5cbiAgICAgICAgICBpZiAoc3dpcGVyLnBhcmFtcy5hdXRvcGxheSAmJiBzd2lwZXIucGFyYW1zLmF1dG9wbGF5RGlzYWJsZU9uSW50ZXJhY3Rpb24pIHN3aXBlci5hdXRvcGxheS5zdG9wKCk7IC8vIFJldHVybiBwYWdlIHNjcm9sbCBvbiBlZGdlIHBvc2l0aW9uc1xuXG4gICAgICAgICAgaWYgKHBvc2l0aW9uID09PSBzd2lwZXIubWluVHJhbnNsYXRlKCkgfHwgcG9zaXRpb24gPT09IHN3aXBlci5tYXhUcmFuc2xhdGUoKSkgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKGUucHJldmVudERlZmF1bHQpIGUucHJldmVudERlZmF1bHQoKTtlbHNlIGUucmV0dXJuVmFsdWUgPSBmYWxzZTtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9LFxuICAgIGFuaW1hdGVTbGlkZXI6IGZ1bmN0aW9uIGFuaW1hdGVTbGlkZXIobmV3RXZlbnQpIHtcbiAgICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgICAgdmFyIHdpbmRvdyA9IGdldFdpbmRvdygpO1xuXG4gICAgICBpZiAodGhpcy5wYXJhbXMubW91c2V3aGVlbC50aHJlc2hvbGREZWx0YSAmJiBuZXdFdmVudC5kZWx0YSA8IHRoaXMucGFyYW1zLm1vdXNld2hlZWwudGhyZXNob2xkRGVsdGEpIHtcbiAgICAgICAgLy8gUHJldmVudCBpZiBkZWx0YSBvZiB3aGVlbCBzY3JvbGwgZGVsdGEgaXMgYmVsb3cgY29uZmlndXJlZCB0aHJlc2hvbGRcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5wYXJhbXMubW91c2V3aGVlbC50aHJlc2hvbGRUaW1lICYmIG5vdygpIC0gc3dpcGVyLm1vdXNld2hlZWwubGFzdFNjcm9sbFRpbWUgPCB0aGlzLnBhcmFtcy5tb3VzZXdoZWVsLnRocmVzaG9sZFRpbWUpIHtcbiAgICAgICAgLy8gUHJldmVudCBpZiB0aW1lIGJldHdlZW4gc2Nyb2xscyBpcyBiZWxvdyBjb25maWd1cmVkIHRocmVzaG9sZFxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9IC8vIElmIHRoZSBtb3ZlbWVudCBpcyBOT1QgYmlnIGVub3VnaCBhbmRcbiAgICAgIC8vIGlmIHRoZSBsYXN0IHRpbWUgdGhlIHVzZXIgc2Nyb2xsZWQgd2FzIHRvbyBjbG9zZSB0byB0aGUgY3VycmVudCBvbmUgKGF2b2lkIGNvbnRpbnVvdXNseSB0cmlnZ2VyaW5nIHRoZSBzbGlkZXIpOlxuICAgICAgLy8gICBEb24ndCBnbyBhbnkgZnVydGhlciAoYXZvaWQgaW5zaWduaWZpY2FudCBzY3JvbGwgbW92ZW1lbnQpLlxuXG5cbiAgICAgIGlmIChuZXdFdmVudC5kZWx0YSA+PSA2ICYmIG5vdygpIC0gc3dpcGVyLm1vdXNld2hlZWwubGFzdFNjcm9sbFRpbWUgPCA2MCkge1xuICAgICAgICAvLyBSZXR1cm4gZmFsc2UgYXMgYSBkZWZhdWx0XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfSAvLyBJZiB1c2VyIGlzIHNjcm9sbGluZyB0b3dhcmRzIHRoZSBlbmQ6XG4gICAgICAvLyAgIElmIHRoZSBzbGlkZXIgaGFzbid0IGhpdCB0aGUgbGF0ZXN0IHNsaWRlIG9yXG4gICAgICAvLyAgIGlmIHRoZSBzbGlkZXIgaXMgYSBsb29wIGFuZFxuICAgICAgLy8gICBpZiB0aGUgc2xpZGVyIGlzbid0IG1vdmluZyByaWdodCBub3c6XG4gICAgICAvLyAgICAgR28gdG8gbmV4dCBzbGlkZSBhbmRcbiAgICAgIC8vICAgICBlbWl0IGEgc2Nyb2xsIGV2ZW50LlxuICAgICAgLy8gRWxzZSAodGhlIHVzZXIgaXMgc2Nyb2xsaW5nIHRvd2FyZHMgdGhlIGJlZ2lubmluZykgYW5kXG4gICAgICAvLyBpZiB0aGUgc2xpZGVyIGhhc24ndCBoaXQgdGhlIGZpcnN0IHNsaWRlIG9yXG4gICAgICAvLyBpZiB0aGUgc2xpZGVyIGlzIGEgbG9vcCBhbmRcbiAgICAgIC8vIGlmIHRoZSBzbGlkZXIgaXNuJ3QgbW92aW5nIHJpZ2h0IG5vdzpcbiAgICAgIC8vICAgR28gdG8gcHJldiBzbGlkZSBhbmRcbiAgICAgIC8vICAgZW1pdCBhIHNjcm9sbCBldmVudC5cblxuXG4gICAgICBpZiAobmV3RXZlbnQuZGlyZWN0aW9uIDwgMCkge1xuICAgICAgICBpZiAoKCFzd2lwZXIuaXNFbmQgfHwgc3dpcGVyLnBhcmFtcy5sb29wKSAmJiAhc3dpcGVyLmFuaW1hdGluZykge1xuICAgICAgICAgIHN3aXBlci5zbGlkZU5leHQoKTtcbiAgICAgICAgICBzd2lwZXIuZW1pdCgnc2Nyb2xsJywgbmV3RXZlbnQucmF3KTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmICgoIXN3aXBlci5pc0JlZ2lubmluZyB8fCBzd2lwZXIucGFyYW1zLmxvb3ApICYmICFzd2lwZXIuYW5pbWF0aW5nKSB7XG4gICAgICAgIHN3aXBlci5zbGlkZVByZXYoKTtcbiAgICAgICAgc3dpcGVyLmVtaXQoJ3Njcm9sbCcsIG5ld0V2ZW50LnJhdyk7XG4gICAgICB9IC8vIElmIHlvdSBnb3QgaGVyZSBpcyBiZWNhdXNlIGFuIGFuaW1hdGlvbiBoYXMgYmVlbiB0cmlnZ2VyZWQgc28gc3RvcmUgdGhlIGN1cnJlbnQgdGltZVxuXG5cbiAgICAgIHN3aXBlci5tb3VzZXdoZWVsLmxhc3RTY3JvbGxUaW1lID0gbmV3IHdpbmRvdy5EYXRlKCkuZ2V0VGltZSgpOyAvLyBSZXR1cm4gZmFsc2UgYXMgYSBkZWZhdWx0XG5cbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9LFxuICAgIHJlbGVhc2VTY3JvbGw6IGZ1bmN0aW9uIHJlbGVhc2VTY3JvbGwobmV3RXZlbnQpIHtcbiAgICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgICAgdmFyIHBhcmFtcyA9IHN3aXBlci5wYXJhbXMubW91c2V3aGVlbDtcblxuICAgICAgaWYgKG5ld0V2ZW50LmRpcmVjdGlvbiA8IDApIHtcbiAgICAgICAgaWYgKHN3aXBlci5pc0VuZCAmJiAhc3dpcGVyLnBhcmFtcy5sb29wICYmIHBhcmFtcy5yZWxlYXNlT25FZGdlcykge1xuICAgICAgICAgIC8vIFJldHVybiB0cnVlIHRvIGFuaW1hdGUgc2Nyb2xsIG9uIGVkZ2VzXG4gICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAoc3dpcGVyLmlzQmVnaW5uaW5nICYmICFzd2lwZXIucGFyYW1zLmxvb3AgJiYgcGFyYW1zLnJlbGVhc2VPbkVkZ2VzKSB7XG4gICAgICAgIC8vIFJldHVybiB0cnVlIHRvIGFuaW1hdGUgc2Nyb2xsIG9uIGVkZ2VzXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSxcbiAgICBlbmFibGU6IGZ1bmN0aW9uIGVuYWJsZSgpIHtcbiAgICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgICAgdmFyIGV2ZW50ID0gTW91c2V3aGVlbC5ldmVudCgpO1xuXG4gICAgICBpZiAoc3dpcGVyLnBhcmFtcy5jc3NNb2RlKSB7XG4gICAgICAgIHN3aXBlci53cmFwcGVyRWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudCwgc3dpcGVyLm1vdXNld2hlZWwuaGFuZGxlKTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG5cbiAgICAgIGlmICghZXZlbnQpIHJldHVybiBmYWxzZTtcbiAgICAgIGlmIChzd2lwZXIubW91c2V3aGVlbC5lbmFibGVkKSByZXR1cm4gZmFsc2U7XG4gICAgICB2YXIgdGFyZ2V0ID0gc3dpcGVyLiRlbDtcblxuICAgICAgaWYgKHN3aXBlci5wYXJhbXMubW91c2V3aGVlbC5ldmVudHNUYXJnZXQgIT09ICdjb250YWluZXInKSB7XG4gICAgICAgIHRhcmdldCA9ICQoc3dpcGVyLnBhcmFtcy5tb3VzZXdoZWVsLmV2ZW50c1RhcmdldCk7XG4gICAgICB9XG5cbiAgICAgIHRhcmdldC5vbignbW91c2VlbnRlcicsIHN3aXBlci5tb3VzZXdoZWVsLmhhbmRsZU1vdXNlRW50ZXIpO1xuICAgICAgdGFyZ2V0Lm9uKCdtb3VzZWxlYXZlJywgc3dpcGVyLm1vdXNld2hlZWwuaGFuZGxlTW91c2VMZWF2ZSk7XG4gICAgICB0YXJnZXQub24oZXZlbnQsIHN3aXBlci5tb3VzZXdoZWVsLmhhbmRsZSk7XG4gICAgICBzd2lwZXIubW91c2V3aGVlbC5lbmFibGVkID0gdHJ1ZTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0sXG4gICAgZGlzYWJsZTogZnVuY3Rpb24gZGlzYWJsZSgpIHtcbiAgICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgICAgdmFyIGV2ZW50ID0gTW91c2V3aGVlbC5ldmVudCgpO1xuXG4gICAgICBpZiAoc3dpcGVyLnBhcmFtcy5jc3NNb2RlKSB7XG4gICAgICAgIHN3aXBlci53cmFwcGVyRWwuYWRkRXZlbnRMaXN0ZW5lcihldmVudCwgc3dpcGVyLm1vdXNld2hlZWwuaGFuZGxlKTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG5cbiAgICAgIGlmICghZXZlbnQpIHJldHVybiBmYWxzZTtcbiAgICAgIGlmICghc3dpcGVyLm1vdXNld2hlZWwuZW5hYmxlZCkgcmV0dXJuIGZhbHNlO1xuICAgICAgdmFyIHRhcmdldCA9IHN3aXBlci4kZWw7XG5cbiAgICAgIGlmIChzd2lwZXIucGFyYW1zLm1vdXNld2hlZWwuZXZlbnRzVGFyZ2V0ICE9PSAnY29udGFpbmVyJykge1xuICAgICAgICB0YXJnZXQgPSAkKHN3aXBlci5wYXJhbXMubW91c2V3aGVlbC5ldmVudHNUYXJnZXQpO1xuICAgICAgfVxuXG4gICAgICB0YXJnZXQub2ZmKGV2ZW50LCBzd2lwZXIubW91c2V3aGVlbC5oYW5kbGUpO1xuICAgICAgc3dpcGVyLm1vdXNld2hlZWwuZW5hYmxlZCA9IGZhbHNlO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9O1xuICB2YXIgTW91c2V3aGVlbCQxID0ge1xuICAgIG5hbWU6ICdtb3VzZXdoZWVsJyxcbiAgICBwYXJhbXM6IHtcbiAgICAgIG1vdXNld2hlZWw6IHtcbiAgICAgICAgZW5hYmxlZDogZmFsc2UsXG4gICAgICAgIHJlbGVhc2VPbkVkZ2VzOiBmYWxzZSxcbiAgICAgICAgaW52ZXJ0OiBmYWxzZSxcbiAgICAgICAgZm9yY2VUb0F4aXM6IGZhbHNlLFxuICAgICAgICBzZW5zaXRpdml0eTogMSxcbiAgICAgICAgZXZlbnRzVGFyZ2V0OiAnY29udGFpbmVyJyxcbiAgICAgICAgdGhyZXNob2xkRGVsdGE6IG51bGwsXG4gICAgICAgIHRocmVzaG9sZFRpbWU6IG51bGxcbiAgICAgIH1cbiAgICB9LFxuICAgIGNyZWF0ZTogZnVuY3Rpb24gY3JlYXRlKCkge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICBiaW5kTW9kdWxlTWV0aG9kcyhzd2lwZXIsIHtcbiAgICAgICAgbW91c2V3aGVlbDoge1xuICAgICAgICAgIGVuYWJsZWQ6IGZhbHNlLFxuICAgICAgICAgIGxhc3RTY3JvbGxUaW1lOiBub3coKSxcbiAgICAgICAgICBsYXN0RXZlbnRCZWZvcmVTbmFwOiB1bmRlZmluZWQsXG4gICAgICAgICAgcmVjZW50V2hlZWxFdmVudHM6IFtdLFxuICAgICAgICAgIGVuYWJsZTogTW91c2V3aGVlbC5lbmFibGUsXG4gICAgICAgICAgZGlzYWJsZTogTW91c2V3aGVlbC5kaXNhYmxlLFxuICAgICAgICAgIGhhbmRsZTogTW91c2V3aGVlbC5oYW5kbGUsXG4gICAgICAgICAgaGFuZGxlTW91c2VFbnRlcjogTW91c2V3aGVlbC5oYW5kbGVNb3VzZUVudGVyLFxuICAgICAgICAgIGhhbmRsZU1vdXNlTGVhdmU6IE1vdXNld2hlZWwuaGFuZGxlTW91c2VMZWF2ZSxcbiAgICAgICAgICBhbmltYXRlU2xpZGVyOiBNb3VzZXdoZWVsLmFuaW1hdGVTbGlkZXIsXG4gICAgICAgICAgcmVsZWFzZVNjcm9sbDogTW91c2V3aGVlbC5yZWxlYXNlU2Nyb2xsXG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0sXG4gICAgb246IHtcbiAgICAgIGluaXQ6IGZ1bmN0aW9uIGluaXQoc3dpcGVyKSB7XG4gICAgICAgIGlmICghc3dpcGVyLnBhcmFtcy5tb3VzZXdoZWVsLmVuYWJsZWQgJiYgc3dpcGVyLnBhcmFtcy5jc3NNb2RlKSB7XG4gICAgICAgICAgc3dpcGVyLm1vdXNld2hlZWwuZGlzYWJsZSgpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHN3aXBlci5wYXJhbXMubW91c2V3aGVlbC5lbmFibGVkKSBzd2lwZXIubW91c2V3aGVlbC5lbmFibGUoKTtcbiAgICAgIH0sXG4gICAgICBkZXN0cm95OiBmdW5jdGlvbiBkZXN0cm95KHN3aXBlcikge1xuICAgICAgICBpZiAoc3dpcGVyLnBhcmFtcy5jc3NNb2RlKSB7XG4gICAgICAgICAgc3dpcGVyLm1vdXNld2hlZWwuZW5hYmxlKCk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoc3dpcGVyLm1vdXNld2hlZWwuZW5hYmxlZCkgc3dpcGVyLm1vdXNld2hlZWwuZGlzYWJsZSgpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICB2YXIgTmF2aWdhdGlvbiA9IHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZSgpIHtcbiAgICAgIC8vIFVwZGF0ZSBOYXZpZ2F0aW9uIEJ1dHRvbnNcbiAgICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgICAgdmFyIHBhcmFtcyA9IHN3aXBlci5wYXJhbXMubmF2aWdhdGlvbjtcbiAgICAgIGlmIChzd2lwZXIucGFyYW1zLmxvb3ApIHJldHVybjtcbiAgICAgIHZhciBfc3dpcGVyJG5hdmlnYXRpb24gPSBzd2lwZXIubmF2aWdhdGlvbixcbiAgICAgICAgICAkbmV4dEVsID0gX3N3aXBlciRuYXZpZ2F0aW9uLiRuZXh0RWwsXG4gICAgICAgICAgJHByZXZFbCA9IF9zd2lwZXIkbmF2aWdhdGlvbi4kcHJldkVsO1xuXG4gICAgICBpZiAoJHByZXZFbCAmJiAkcHJldkVsLmxlbmd0aCA+IDApIHtcbiAgICAgICAgaWYgKHN3aXBlci5pc0JlZ2lubmluZykge1xuICAgICAgICAgICRwcmV2RWwuYWRkQ2xhc3MocGFyYW1zLmRpc2FibGVkQ2xhc3MpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICRwcmV2RWwucmVtb3ZlQ2xhc3MocGFyYW1zLmRpc2FibGVkQ2xhc3MpO1xuICAgICAgICB9XG5cbiAgICAgICAgJHByZXZFbFtzd2lwZXIucGFyYW1zLndhdGNoT3ZlcmZsb3cgJiYgc3dpcGVyLmlzTG9ja2VkID8gJ2FkZENsYXNzJyA6ICdyZW1vdmVDbGFzcyddKHBhcmFtcy5sb2NrQ2xhc3MpO1xuICAgICAgfVxuXG4gICAgICBpZiAoJG5leHRFbCAmJiAkbmV4dEVsLmxlbmd0aCA+IDApIHtcbiAgICAgICAgaWYgKHN3aXBlci5pc0VuZCkge1xuICAgICAgICAgICRuZXh0RWwuYWRkQ2xhc3MocGFyYW1zLmRpc2FibGVkQ2xhc3MpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICRuZXh0RWwucmVtb3ZlQ2xhc3MocGFyYW1zLmRpc2FibGVkQ2xhc3MpO1xuICAgICAgICB9XG5cbiAgICAgICAgJG5leHRFbFtzd2lwZXIucGFyYW1zLndhdGNoT3ZlcmZsb3cgJiYgc3dpcGVyLmlzTG9ja2VkID8gJ2FkZENsYXNzJyA6ICdyZW1vdmVDbGFzcyddKHBhcmFtcy5sb2NrQ2xhc3MpO1xuICAgICAgfVxuICAgIH0sXG4gICAgb25QcmV2Q2xpY2s6IGZ1bmN0aW9uIG9uUHJldkNsaWNrKGUpIHtcbiAgICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgaWYgKHN3aXBlci5pc0JlZ2lubmluZyAmJiAhc3dpcGVyLnBhcmFtcy5sb29wKSByZXR1cm47XG4gICAgICBzd2lwZXIuc2xpZGVQcmV2KCk7XG4gICAgfSxcbiAgICBvbk5leHRDbGljazogZnVuY3Rpb24gb25OZXh0Q2xpY2soZSkge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBpZiAoc3dpcGVyLmlzRW5kICYmICFzd2lwZXIucGFyYW1zLmxvb3ApIHJldHVybjtcbiAgICAgIHN3aXBlci5zbGlkZU5leHQoKTtcbiAgICB9LFxuICAgIGluaXQ6IGZ1bmN0aW9uIGluaXQoKSB7XG4gICAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICAgIHZhciBwYXJhbXMgPSBzd2lwZXIucGFyYW1zLm5hdmlnYXRpb247XG4gICAgICBpZiAoIShwYXJhbXMubmV4dEVsIHx8IHBhcmFtcy5wcmV2RWwpKSByZXR1cm47XG4gICAgICB2YXIgJG5leHRFbDtcbiAgICAgIHZhciAkcHJldkVsO1xuXG4gICAgICBpZiAocGFyYW1zLm5leHRFbCkge1xuICAgICAgICAkbmV4dEVsID0gJChwYXJhbXMubmV4dEVsKTtcblxuICAgICAgICBpZiAoc3dpcGVyLnBhcmFtcy51bmlxdWVOYXZFbGVtZW50cyAmJiB0eXBlb2YgcGFyYW1zLm5leHRFbCA9PT0gJ3N0cmluZycgJiYgJG5leHRFbC5sZW5ndGggPiAxICYmIHN3aXBlci4kZWwuZmluZChwYXJhbXMubmV4dEVsKS5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICAkbmV4dEVsID0gc3dpcGVyLiRlbC5maW5kKHBhcmFtcy5uZXh0RWwpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChwYXJhbXMucHJldkVsKSB7XG4gICAgICAgICRwcmV2RWwgPSAkKHBhcmFtcy5wcmV2RWwpO1xuXG4gICAgICAgIGlmIChzd2lwZXIucGFyYW1zLnVuaXF1ZU5hdkVsZW1lbnRzICYmIHR5cGVvZiBwYXJhbXMucHJldkVsID09PSAnc3RyaW5nJyAmJiAkcHJldkVsLmxlbmd0aCA+IDEgJiYgc3dpcGVyLiRlbC5maW5kKHBhcmFtcy5wcmV2RWwpLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICAgICRwcmV2RWwgPSBzd2lwZXIuJGVsLmZpbmQocGFyYW1zLnByZXZFbCk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKCRuZXh0RWwgJiYgJG5leHRFbC5sZW5ndGggPiAwKSB7XG4gICAgICAgICRuZXh0RWwub24oJ2NsaWNrJywgc3dpcGVyLm5hdmlnYXRpb24ub25OZXh0Q2xpY2spO1xuICAgICAgfVxuXG4gICAgICBpZiAoJHByZXZFbCAmJiAkcHJldkVsLmxlbmd0aCA+IDApIHtcbiAgICAgICAgJHByZXZFbC5vbignY2xpY2snLCBzd2lwZXIubmF2aWdhdGlvbi5vblByZXZDbGljayk7XG4gICAgICB9XG5cbiAgICAgIGV4dGVuZCQxKHN3aXBlci5uYXZpZ2F0aW9uLCB7XG4gICAgICAgICRuZXh0RWw6ICRuZXh0RWwsXG4gICAgICAgIG5leHRFbDogJG5leHRFbCAmJiAkbmV4dEVsWzBdLFxuICAgICAgICAkcHJldkVsOiAkcHJldkVsLFxuICAgICAgICBwcmV2RWw6ICRwcmV2RWwgJiYgJHByZXZFbFswXVxuICAgICAgfSk7XG4gICAgfSxcbiAgICBkZXN0cm95OiBmdW5jdGlvbiBkZXN0cm95KCkge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICB2YXIgX3N3aXBlciRuYXZpZ2F0aW9uMiA9IHN3aXBlci5uYXZpZ2F0aW9uLFxuICAgICAgICAgICRuZXh0RWwgPSBfc3dpcGVyJG5hdmlnYXRpb24yLiRuZXh0RWwsXG4gICAgICAgICAgJHByZXZFbCA9IF9zd2lwZXIkbmF2aWdhdGlvbjIuJHByZXZFbDtcblxuICAgICAgaWYgKCRuZXh0RWwgJiYgJG5leHRFbC5sZW5ndGgpIHtcbiAgICAgICAgJG5leHRFbC5vZmYoJ2NsaWNrJywgc3dpcGVyLm5hdmlnYXRpb24ub25OZXh0Q2xpY2spO1xuICAgICAgICAkbmV4dEVsLnJlbW92ZUNsYXNzKHN3aXBlci5wYXJhbXMubmF2aWdhdGlvbi5kaXNhYmxlZENsYXNzKTtcbiAgICAgIH1cblxuICAgICAgaWYgKCRwcmV2RWwgJiYgJHByZXZFbC5sZW5ndGgpIHtcbiAgICAgICAgJHByZXZFbC5vZmYoJ2NsaWNrJywgc3dpcGVyLm5hdmlnYXRpb24ub25QcmV2Q2xpY2spO1xuICAgICAgICAkcHJldkVsLnJlbW92ZUNsYXNzKHN3aXBlci5wYXJhbXMubmF2aWdhdGlvbi5kaXNhYmxlZENsYXNzKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG4gIHZhciBOYXZpZ2F0aW9uJDEgPSB7XG4gICAgbmFtZTogJ25hdmlnYXRpb24nLFxuICAgIHBhcmFtczoge1xuICAgICAgbmF2aWdhdGlvbjoge1xuICAgICAgICBuZXh0RWw6IG51bGwsXG4gICAgICAgIHByZXZFbDogbnVsbCxcbiAgICAgICAgaGlkZU9uQ2xpY2s6IGZhbHNlLFxuICAgICAgICBkaXNhYmxlZENsYXNzOiAnc3dpcGVyLWJ1dHRvbi1kaXNhYmxlZCcsXG4gICAgICAgIGhpZGRlbkNsYXNzOiAnc3dpcGVyLWJ1dHRvbi1oaWRkZW4nLFxuICAgICAgICBsb2NrQ2xhc3M6ICdzd2lwZXItYnV0dG9uLWxvY2snXG4gICAgICB9XG4gICAgfSxcbiAgICBjcmVhdGU6IGZ1bmN0aW9uIGNyZWF0ZSgpIHtcbiAgICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgICAgYmluZE1vZHVsZU1ldGhvZHMoc3dpcGVyLCB7XG4gICAgICAgIG5hdmlnYXRpb246IF9leHRlbmRzKHt9LCBOYXZpZ2F0aW9uKVxuICAgICAgfSk7XG4gICAgfSxcbiAgICBvbjoge1xuICAgICAgaW5pdDogZnVuY3Rpb24gaW5pdChzd2lwZXIpIHtcbiAgICAgICAgc3dpcGVyLm5hdmlnYXRpb24uaW5pdCgpO1xuICAgICAgICBzd2lwZXIubmF2aWdhdGlvbi51cGRhdGUoKTtcbiAgICAgIH0sXG4gICAgICB0b0VkZ2U6IGZ1bmN0aW9uIHRvRWRnZShzd2lwZXIpIHtcbiAgICAgICAgc3dpcGVyLm5hdmlnYXRpb24udXBkYXRlKCk7XG4gICAgICB9LFxuICAgICAgZnJvbUVkZ2U6IGZ1bmN0aW9uIGZyb21FZGdlKHN3aXBlcikge1xuICAgICAgICBzd2lwZXIubmF2aWdhdGlvbi51cGRhdGUoKTtcbiAgICAgIH0sXG4gICAgICBkZXN0cm95OiBmdW5jdGlvbiBkZXN0cm95KHN3aXBlcikge1xuICAgICAgICBzd2lwZXIubmF2aWdhdGlvbi5kZXN0cm95KCk7XG4gICAgICB9LFxuICAgICAgY2xpY2s6IGZ1bmN0aW9uIGNsaWNrKHN3aXBlciwgZSkge1xuICAgICAgICB2YXIgX3N3aXBlciRuYXZpZ2F0aW9uMyA9IHN3aXBlci5uYXZpZ2F0aW9uLFxuICAgICAgICAgICAgJG5leHRFbCA9IF9zd2lwZXIkbmF2aWdhdGlvbjMuJG5leHRFbCxcbiAgICAgICAgICAgICRwcmV2RWwgPSBfc3dpcGVyJG5hdmlnYXRpb24zLiRwcmV2RWw7XG5cbiAgICAgICAgaWYgKHN3aXBlci5wYXJhbXMubmF2aWdhdGlvbi5oaWRlT25DbGljayAmJiAhJChlLnRhcmdldCkuaXMoJHByZXZFbCkgJiYgISQoZS50YXJnZXQpLmlzKCRuZXh0RWwpKSB7XG4gICAgICAgICAgdmFyIGlzSGlkZGVuO1xuXG4gICAgICAgICAgaWYgKCRuZXh0RWwpIHtcbiAgICAgICAgICAgIGlzSGlkZGVuID0gJG5leHRFbC5oYXNDbGFzcyhzd2lwZXIucGFyYW1zLm5hdmlnYXRpb24uaGlkZGVuQ2xhc3MpO1xuICAgICAgICAgIH0gZWxzZSBpZiAoJHByZXZFbCkge1xuICAgICAgICAgICAgaXNIaWRkZW4gPSAkcHJldkVsLmhhc0NsYXNzKHN3aXBlci5wYXJhbXMubmF2aWdhdGlvbi5oaWRkZW5DbGFzcyk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKGlzSGlkZGVuID09PSB0cnVlKSB7XG4gICAgICAgICAgICBzd2lwZXIuZW1pdCgnbmF2aWdhdGlvblNob3cnKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc3dpcGVyLmVtaXQoJ25hdmlnYXRpb25IaWRlJyk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKCRuZXh0RWwpIHtcbiAgICAgICAgICAgICRuZXh0RWwudG9nZ2xlQ2xhc3Moc3dpcGVyLnBhcmFtcy5uYXZpZ2F0aW9uLmhpZGRlbkNsYXNzKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoJHByZXZFbCkge1xuICAgICAgICAgICAgJHByZXZFbC50b2dnbGVDbGFzcyhzd2lwZXIucGFyYW1zLm5hdmlnYXRpb24uaGlkZGVuQ2xhc3MpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICB2YXIgUGFnaW5hdGlvbiA9IHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZSgpIHtcbiAgICAgIC8vIFJlbmRlciB8fCBVcGRhdGUgUGFnaW5hdGlvbiBidWxsZXRzL2l0ZW1zXG4gICAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICAgIHZhciBydGwgPSBzd2lwZXIucnRsO1xuICAgICAgdmFyIHBhcmFtcyA9IHN3aXBlci5wYXJhbXMucGFnaW5hdGlvbjtcbiAgICAgIGlmICghcGFyYW1zLmVsIHx8ICFzd2lwZXIucGFnaW5hdGlvbi5lbCB8fCAhc3dpcGVyLnBhZ2luYXRpb24uJGVsIHx8IHN3aXBlci5wYWdpbmF0aW9uLiRlbC5sZW5ndGggPT09IDApIHJldHVybjtcbiAgICAgIHZhciBzbGlkZXNMZW5ndGggPSBzd2lwZXIudmlydHVhbCAmJiBzd2lwZXIucGFyYW1zLnZpcnR1YWwuZW5hYmxlZCA/IHN3aXBlci52aXJ0dWFsLnNsaWRlcy5sZW5ndGggOiBzd2lwZXIuc2xpZGVzLmxlbmd0aDtcbiAgICAgIHZhciAkZWwgPSBzd2lwZXIucGFnaW5hdGlvbi4kZWw7IC8vIEN1cnJlbnQvVG90YWxcblxuICAgICAgdmFyIGN1cnJlbnQ7XG4gICAgICB2YXIgdG90YWwgPSBzd2lwZXIucGFyYW1zLmxvb3AgPyBNYXRoLmNlaWwoKHNsaWRlc0xlbmd0aCAtIHN3aXBlci5sb29wZWRTbGlkZXMgKiAyKSAvIHN3aXBlci5wYXJhbXMuc2xpZGVzUGVyR3JvdXApIDogc3dpcGVyLnNuYXBHcmlkLmxlbmd0aDtcblxuICAgICAgaWYgKHN3aXBlci5wYXJhbXMubG9vcCkge1xuICAgICAgICBjdXJyZW50ID0gTWF0aC5jZWlsKChzd2lwZXIuYWN0aXZlSW5kZXggLSBzd2lwZXIubG9vcGVkU2xpZGVzKSAvIHN3aXBlci5wYXJhbXMuc2xpZGVzUGVyR3JvdXApO1xuXG4gICAgICAgIGlmIChjdXJyZW50ID4gc2xpZGVzTGVuZ3RoIC0gMSAtIHN3aXBlci5sb29wZWRTbGlkZXMgKiAyKSB7XG4gICAgICAgICAgY3VycmVudCAtPSBzbGlkZXNMZW5ndGggLSBzd2lwZXIubG9vcGVkU2xpZGVzICogMjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjdXJyZW50ID4gdG90YWwgLSAxKSBjdXJyZW50IC09IHRvdGFsO1xuICAgICAgICBpZiAoY3VycmVudCA8IDAgJiYgc3dpcGVyLnBhcmFtcy5wYWdpbmF0aW9uVHlwZSAhPT0gJ2J1bGxldHMnKSBjdXJyZW50ID0gdG90YWwgKyBjdXJyZW50O1xuICAgICAgfSBlbHNlIGlmICh0eXBlb2Ygc3dpcGVyLnNuYXBJbmRleCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgY3VycmVudCA9IHN3aXBlci5zbmFwSW5kZXg7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjdXJyZW50ID0gc3dpcGVyLmFjdGl2ZUluZGV4IHx8IDA7XG4gICAgICB9IC8vIFR5cGVzXG5cblxuICAgICAgaWYgKHBhcmFtcy50eXBlID09PSAnYnVsbGV0cycgJiYgc3dpcGVyLnBhZ2luYXRpb24uYnVsbGV0cyAmJiBzd2lwZXIucGFnaW5hdGlvbi5idWxsZXRzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgdmFyIGJ1bGxldHMgPSBzd2lwZXIucGFnaW5hdGlvbi5idWxsZXRzO1xuICAgICAgICB2YXIgZmlyc3RJbmRleDtcbiAgICAgICAgdmFyIGxhc3RJbmRleDtcbiAgICAgICAgdmFyIG1pZEluZGV4O1xuXG4gICAgICAgIGlmIChwYXJhbXMuZHluYW1pY0J1bGxldHMpIHtcbiAgICAgICAgICBzd2lwZXIucGFnaW5hdGlvbi5idWxsZXRTaXplID0gYnVsbGV0cy5lcSgwKVtzd2lwZXIuaXNIb3Jpem9udGFsKCkgPyAnb3V0ZXJXaWR0aCcgOiAnb3V0ZXJIZWlnaHQnXSh0cnVlKTtcbiAgICAgICAgICAkZWwuY3NzKHN3aXBlci5pc0hvcml6b250YWwoKSA/ICd3aWR0aCcgOiAnaGVpZ2h0Jywgc3dpcGVyLnBhZ2luYXRpb24uYnVsbGV0U2l6ZSAqIChwYXJhbXMuZHluYW1pY01haW5CdWxsZXRzICsgNCkgKyBcInB4XCIpO1xuXG4gICAgICAgICAgaWYgKHBhcmFtcy5keW5hbWljTWFpbkJ1bGxldHMgPiAxICYmIHN3aXBlci5wcmV2aW91c0luZGV4ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHN3aXBlci5wYWdpbmF0aW9uLmR5bmFtaWNCdWxsZXRJbmRleCArPSBjdXJyZW50IC0gc3dpcGVyLnByZXZpb3VzSW5kZXg7XG5cbiAgICAgICAgICAgIGlmIChzd2lwZXIucGFnaW5hdGlvbi5keW5hbWljQnVsbGV0SW5kZXggPiBwYXJhbXMuZHluYW1pY01haW5CdWxsZXRzIC0gMSkge1xuICAgICAgICAgICAgICBzd2lwZXIucGFnaW5hdGlvbi5keW5hbWljQnVsbGV0SW5kZXggPSBwYXJhbXMuZHluYW1pY01haW5CdWxsZXRzIC0gMTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoc3dpcGVyLnBhZ2luYXRpb24uZHluYW1pY0J1bGxldEluZGV4IDwgMCkge1xuICAgICAgICAgICAgICBzd2lwZXIucGFnaW5hdGlvbi5keW5hbWljQnVsbGV0SW5kZXggPSAwO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIGZpcnN0SW5kZXggPSBjdXJyZW50IC0gc3dpcGVyLnBhZ2luYXRpb24uZHluYW1pY0J1bGxldEluZGV4O1xuICAgICAgICAgIGxhc3RJbmRleCA9IGZpcnN0SW5kZXggKyAoTWF0aC5taW4oYnVsbGV0cy5sZW5ndGgsIHBhcmFtcy5keW5hbWljTWFpbkJ1bGxldHMpIC0gMSk7XG4gICAgICAgICAgbWlkSW5kZXggPSAobGFzdEluZGV4ICsgZmlyc3RJbmRleCkgLyAyO1xuICAgICAgICB9XG5cbiAgICAgICAgYnVsbGV0cy5yZW1vdmVDbGFzcyhwYXJhbXMuYnVsbGV0QWN0aXZlQ2xhc3MgKyBcIiBcIiArIHBhcmFtcy5idWxsZXRBY3RpdmVDbGFzcyArIFwiLW5leHQgXCIgKyBwYXJhbXMuYnVsbGV0QWN0aXZlQ2xhc3MgKyBcIi1uZXh0LW5leHQgXCIgKyBwYXJhbXMuYnVsbGV0QWN0aXZlQ2xhc3MgKyBcIi1wcmV2IFwiICsgcGFyYW1zLmJ1bGxldEFjdGl2ZUNsYXNzICsgXCItcHJldi1wcmV2IFwiICsgcGFyYW1zLmJ1bGxldEFjdGl2ZUNsYXNzICsgXCItbWFpblwiKTtcblxuICAgICAgICBpZiAoJGVsLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgICBidWxsZXRzLmVhY2goZnVuY3Rpb24gKGJ1bGxldCkge1xuICAgICAgICAgICAgdmFyICRidWxsZXQgPSAkKGJ1bGxldCk7XG4gICAgICAgICAgICB2YXIgYnVsbGV0SW5kZXggPSAkYnVsbGV0LmluZGV4KCk7XG5cbiAgICAgICAgICAgIGlmIChidWxsZXRJbmRleCA9PT0gY3VycmVudCkge1xuICAgICAgICAgICAgICAkYnVsbGV0LmFkZENsYXNzKHBhcmFtcy5idWxsZXRBY3RpdmVDbGFzcyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChwYXJhbXMuZHluYW1pY0J1bGxldHMpIHtcbiAgICAgICAgICAgICAgaWYgKGJ1bGxldEluZGV4ID49IGZpcnN0SW5kZXggJiYgYnVsbGV0SW5kZXggPD0gbGFzdEluZGV4KSB7XG4gICAgICAgICAgICAgICAgJGJ1bGxldC5hZGRDbGFzcyhwYXJhbXMuYnVsbGV0QWN0aXZlQ2xhc3MgKyBcIi1tYWluXCIpO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgaWYgKGJ1bGxldEluZGV4ID09PSBmaXJzdEluZGV4KSB7XG4gICAgICAgICAgICAgICAgJGJ1bGxldC5wcmV2KCkuYWRkQ2xhc3MocGFyYW1zLmJ1bGxldEFjdGl2ZUNsYXNzICsgXCItcHJldlwiKS5wcmV2KCkuYWRkQ2xhc3MocGFyYW1zLmJ1bGxldEFjdGl2ZUNsYXNzICsgXCItcHJldi1wcmV2XCIpO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgaWYgKGJ1bGxldEluZGV4ID09PSBsYXN0SW5kZXgpIHtcbiAgICAgICAgICAgICAgICAkYnVsbGV0Lm5leHQoKS5hZGRDbGFzcyhwYXJhbXMuYnVsbGV0QWN0aXZlQ2xhc3MgKyBcIi1uZXh0XCIpLm5leHQoKS5hZGRDbGFzcyhwYXJhbXMuYnVsbGV0QWN0aXZlQ2xhc3MgKyBcIi1uZXh0LW5leHRcIik7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YXIgJGJ1bGxldCA9IGJ1bGxldHMuZXEoY3VycmVudCk7XG4gICAgICAgICAgdmFyIGJ1bGxldEluZGV4ID0gJGJ1bGxldC5pbmRleCgpO1xuICAgICAgICAgICRidWxsZXQuYWRkQ2xhc3MocGFyYW1zLmJ1bGxldEFjdGl2ZUNsYXNzKTtcblxuICAgICAgICAgIGlmIChwYXJhbXMuZHluYW1pY0J1bGxldHMpIHtcbiAgICAgICAgICAgIHZhciAkZmlyc3REaXNwbGF5ZWRCdWxsZXQgPSBidWxsZXRzLmVxKGZpcnN0SW5kZXgpO1xuICAgICAgICAgICAgdmFyICRsYXN0RGlzcGxheWVkQnVsbGV0ID0gYnVsbGV0cy5lcShsYXN0SW5kZXgpO1xuXG4gICAgICAgICAgICBmb3IgKHZhciBpID0gZmlyc3RJbmRleDsgaSA8PSBsYXN0SW5kZXg7IGkgKz0gMSkge1xuICAgICAgICAgICAgICBidWxsZXRzLmVxKGkpLmFkZENsYXNzKHBhcmFtcy5idWxsZXRBY3RpdmVDbGFzcyArIFwiLW1haW5cIik7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChzd2lwZXIucGFyYW1zLmxvb3ApIHtcbiAgICAgICAgICAgICAgaWYgKGJ1bGxldEluZGV4ID49IGJ1bGxldHMubGVuZ3RoIC0gcGFyYW1zLmR5bmFtaWNNYWluQnVsbGV0cykge1xuICAgICAgICAgICAgICAgIGZvciAodmFyIF9pID0gcGFyYW1zLmR5bmFtaWNNYWluQnVsbGV0czsgX2kgPj0gMDsgX2kgLT0gMSkge1xuICAgICAgICAgICAgICAgICAgYnVsbGV0cy5lcShidWxsZXRzLmxlbmd0aCAtIF9pKS5hZGRDbGFzcyhwYXJhbXMuYnVsbGV0QWN0aXZlQ2xhc3MgKyBcIi1tYWluXCIpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGJ1bGxldHMuZXEoYnVsbGV0cy5sZW5ndGggLSBwYXJhbXMuZHluYW1pY01haW5CdWxsZXRzIC0gMSkuYWRkQ2xhc3MocGFyYW1zLmJ1bGxldEFjdGl2ZUNsYXNzICsgXCItcHJldlwiKTtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAkZmlyc3REaXNwbGF5ZWRCdWxsZXQucHJldigpLmFkZENsYXNzKHBhcmFtcy5idWxsZXRBY3RpdmVDbGFzcyArIFwiLXByZXZcIikucHJldigpLmFkZENsYXNzKHBhcmFtcy5idWxsZXRBY3RpdmVDbGFzcyArIFwiLXByZXYtcHJldlwiKTtcbiAgICAgICAgICAgICAgICAkbGFzdERpc3BsYXllZEJ1bGxldC5uZXh0KCkuYWRkQ2xhc3MocGFyYW1zLmJ1bGxldEFjdGl2ZUNsYXNzICsgXCItbmV4dFwiKS5uZXh0KCkuYWRkQ2xhc3MocGFyYW1zLmJ1bGxldEFjdGl2ZUNsYXNzICsgXCItbmV4dC1uZXh0XCIpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAkZmlyc3REaXNwbGF5ZWRCdWxsZXQucHJldigpLmFkZENsYXNzKHBhcmFtcy5idWxsZXRBY3RpdmVDbGFzcyArIFwiLXByZXZcIikucHJldigpLmFkZENsYXNzKHBhcmFtcy5idWxsZXRBY3RpdmVDbGFzcyArIFwiLXByZXYtcHJldlwiKTtcbiAgICAgICAgICAgICAgJGxhc3REaXNwbGF5ZWRCdWxsZXQubmV4dCgpLmFkZENsYXNzKHBhcmFtcy5idWxsZXRBY3RpdmVDbGFzcyArIFwiLW5leHRcIikubmV4dCgpLmFkZENsYXNzKHBhcmFtcy5idWxsZXRBY3RpdmVDbGFzcyArIFwiLW5leHQtbmV4dFwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAocGFyYW1zLmR5bmFtaWNCdWxsZXRzKSB7XG4gICAgICAgICAgdmFyIGR5bmFtaWNCdWxsZXRzTGVuZ3RoID0gTWF0aC5taW4oYnVsbGV0cy5sZW5ndGgsIHBhcmFtcy5keW5hbWljTWFpbkJ1bGxldHMgKyA0KTtcbiAgICAgICAgICB2YXIgYnVsbGV0c09mZnNldCA9IChzd2lwZXIucGFnaW5hdGlvbi5idWxsZXRTaXplICogZHluYW1pY0J1bGxldHNMZW5ndGggLSBzd2lwZXIucGFnaW5hdGlvbi5idWxsZXRTaXplKSAvIDIgLSBtaWRJbmRleCAqIHN3aXBlci5wYWdpbmF0aW9uLmJ1bGxldFNpemU7XG4gICAgICAgICAgdmFyIG9mZnNldFByb3AgPSBydGwgPyAncmlnaHQnIDogJ2xlZnQnO1xuICAgICAgICAgIGJ1bGxldHMuY3NzKHN3aXBlci5pc0hvcml6b250YWwoKSA/IG9mZnNldFByb3AgOiAndG9wJywgYnVsbGV0c09mZnNldCArIFwicHhcIik7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHBhcmFtcy50eXBlID09PSAnZnJhY3Rpb24nKSB7XG4gICAgICAgICRlbC5maW5kKFwiLlwiICsgcGFyYW1zLmN1cnJlbnRDbGFzcykudGV4dChwYXJhbXMuZm9ybWF0RnJhY3Rpb25DdXJyZW50KGN1cnJlbnQgKyAxKSk7XG4gICAgICAgICRlbC5maW5kKFwiLlwiICsgcGFyYW1zLnRvdGFsQ2xhc3MpLnRleHQocGFyYW1zLmZvcm1hdEZyYWN0aW9uVG90YWwodG90YWwpKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHBhcmFtcy50eXBlID09PSAncHJvZ3Jlc3NiYXInKSB7XG4gICAgICAgIHZhciBwcm9ncmVzc2JhckRpcmVjdGlvbjtcblxuICAgICAgICBpZiAocGFyYW1zLnByb2dyZXNzYmFyT3Bwb3NpdGUpIHtcbiAgICAgICAgICBwcm9ncmVzc2JhckRpcmVjdGlvbiA9IHN3aXBlci5pc0hvcml6b250YWwoKSA/ICd2ZXJ0aWNhbCcgOiAnaG9yaXpvbnRhbCc7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcHJvZ3Jlc3NiYXJEaXJlY3Rpb24gPSBzd2lwZXIuaXNIb3Jpem9udGFsKCkgPyAnaG9yaXpvbnRhbCcgOiAndmVydGljYWwnO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIHNjYWxlID0gKGN1cnJlbnQgKyAxKSAvIHRvdGFsO1xuICAgICAgICB2YXIgc2NhbGVYID0gMTtcbiAgICAgICAgdmFyIHNjYWxlWSA9IDE7XG5cbiAgICAgICAgaWYgKHByb2dyZXNzYmFyRGlyZWN0aW9uID09PSAnaG9yaXpvbnRhbCcpIHtcbiAgICAgICAgICBzY2FsZVggPSBzY2FsZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzY2FsZVkgPSBzY2FsZTtcbiAgICAgICAgfVxuXG4gICAgICAgICRlbC5maW5kKFwiLlwiICsgcGFyYW1zLnByb2dyZXNzYmFyRmlsbENsYXNzKS50cmFuc2Zvcm0oXCJ0cmFuc2xhdGUzZCgwLDAsMCkgc2NhbGVYKFwiICsgc2NhbGVYICsgXCIpIHNjYWxlWShcIiArIHNjYWxlWSArIFwiKVwiKS50cmFuc2l0aW9uKHN3aXBlci5wYXJhbXMuc3BlZWQpO1xuICAgICAgfVxuXG4gICAgICBpZiAocGFyYW1zLnR5cGUgPT09ICdjdXN0b20nICYmIHBhcmFtcy5yZW5kZXJDdXN0b20pIHtcbiAgICAgICAgJGVsLmh0bWwocGFyYW1zLnJlbmRlckN1c3RvbShzd2lwZXIsIGN1cnJlbnQgKyAxLCB0b3RhbCkpO1xuICAgICAgICBzd2lwZXIuZW1pdCgncGFnaW5hdGlvblJlbmRlcicsICRlbFswXSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzd2lwZXIuZW1pdCgncGFnaW5hdGlvblVwZGF0ZScsICRlbFswXSk7XG4gICAgICB9XG5cbiAgICAgICRlbFtzd2lwZXIucGFyYW1zLndhdGNoT3ZlcmZsb3cgJiYgc3dpcGVyLmlzTG9ja2VkID8gJ2FkZENsYXNzJyA6ICdyZW1vdmVDbGFzcyddKHBhcmFtcy5sb2NrQ2xhc3MpO1xuICAgIH0sXG4gICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICAvLyBSZW5kZXIgQ29udGFpbmVyXG4gICAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICAgIHZhciBwYXJhbXMgPSBzd2lwZXIucGFyYW1zLnBhZ2luYXRpb247XG4gICAgICBpZiAoIXBhcmFtcy5lbCB8fCAhc3dpcGVyLnBhZ2luYXRpb24uZWwgfHwgIXN3aXBlci5wYWdpbmF0aW9uLiRlbCB8fCBzd2lwZXIucGFnaW5hdGlvbi4kZWwubGVuZ3RoID09PSAwKSByZXR1cm47XG4gICAgICB2YXIgc2xpZGVzTGVuZ3RoID0gc3dpcGVyLnZpcnR1YWwgJiYgc3dpcGVyLnBhcmFtcy52aXJ0dWFsLmVuYWJsZWQgPyBzd2lwZXIudmlydHVhbC5zbGlkZXMubGVuZ3RoIDogc3dpcGVyLnNsaWRlcy5sZW5ndGg7XG4gICAgICB2YXIgJGVsID0gc3dpcGVyLnBhZ2luYXRpb24uJGVsO1xuICAgICAgdmFyIHBhZ2luYXRpb25IVE1MID0gJyc7XG5cbiAgICAgIGlmIChwYXJhbXMudHlwZSA9PT0gJ2J1bGxldHMnKSB7XG4gICAgICAgIHZhciBudW1iZXJPZkJ1bGxldHMgPSBzd2lwZXIucGFyYW1zLmxvb3AgPyBNYXRoLmNlaWwoKHNsaWRlc0xlbmd0aCAtIHN3aXBlci5sb29wZWRTbGlkZXMgKiAyKSAvIHN3aXBlci5wYXJhbXMuc2xpZGVzUGVyR3JvdXApIDogc3dpcGVyLnNuYXBHcmlkLmxlbmd0aDtcblxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG51bWJlck9mQnVsbGV0czsgaSArPSAxKSB7XG4gICAgICAgICAgaWYgKHBhcmFtcy5yZW5kZXJCdWxsZXQpIHtcbiAgICAgICAgICAgIHBhZ2luYXRpb25IVE1MICs9IHBhcmFtcy5yZW5kZXJCdWxsZXQuY2FsbChzd2lwZXIsIGksIHBhcmFtcy5idWxsZXRDbGFzcyk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHBhZ2luYXRpb25IVE1MICs9IFwiPFwiICsgcGFyYW1zLmJ1bGxldEVsZW1lbnQgKyBcIiBjbGFzcz1cXFwiXCIgKyBwYXJhbXMuYnVsbGV0Q2xhc3MgKyBcIlxcXCI+PC9cIiArIHBhcmFtcy5idWxsZXRFbGVtZW50ICsgXCI+XCI7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgJGVsLmh0bWwocGFnaW5hdGlvbkhUTUwpO1xuICAgICAgICBzd2lwZXIucGFnaW5hdGlvbi5idWxsZXRzID0gJGVsLmZpbmQoXCIuXCIgKyBwYXJhbXMuYnVsbGV0Q2xhc3MpO1xuICAgICAgfVxuXG4gICAgICBpZiAocGFyYW1zLnR5cGUgPT09ICdmcmFjdGlvbicpIHtcbiAgICAgICAgaWYgKHBhcmFtcy5yZW5kZXJGcmFjdGlvbikge1xuICAgICAgICAgIHBhZ2luYXRpb25IVE1MID0gcGFyYW1zLnJlbmRlckZyYWN0aW9uLmNhbGwoc3dpcGVyLCBwYXJhbXMuY3VycmVudENsYXNzLCBwYXJhbXMudG90YWxDbGFzcyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcGFnaW5hdGlvbkhUTUwgPSBcIjxzcGFuIGNsYXNzPVxcXCJcIiArIHBhcmFtcy5jdXJyZW50Q2xhc3MgKyBcIlxcXCI+PC9zcGFuPlwiICsgJyAvICcgKyAoXCI8c3BhbiBjbGFzcz1cXFwiXCIgKyBwYXJhbXMudG90YWxDbGFzcyArIFwiXFxcIj48L3NwYW4+XCIpO1xuICAgICAgICB9XG5cbiAgICAgICAgJGVsLmh0bWwocGFnaW5hdGlvbkhUTUwpO1xuICAgICAgfVxuXG4gICAgICBpZiAocGFyYW1zLnR5cGUgPT09ICdwcm9ncmVzc2JhcicpIHtcbiAgICAgICAgaWYgKHBhcmFtcy5yZW5kZXJQcm9ncmVzc2Jhcikge1xuICAgICAgICAgIHBhZ2luYXRpb25IVE1MID0gcGFyYW1zLnJlbmRlclByb2dyZXNzYmFyLmNhbGwoc3dpcGVyLCBwYXJhbXMucHJvZ3Jlc3NiYXJGaWxsQ2xhc3MpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHBhZ2luYXRpb25IVE1MID0gXCI8c3BhbiBjbGFzcz1cXFwiXCIgKyBwYXJhbXMucHJvZ3Jlc3NiYXJGaWxsQ2xhc3MgKyBcIlxcXCI+PC9zcGFuPlwiO1xuICAgICAgICB9XG5cbiAgICAgICAgJGVsLmh0bWwocGFnaW5hdGlvbkhUTUwpO1xuICAgICAgfVxuXG4gICAgICBpZiAocGFyYW1zLnR5cGUgIT09ICdjdXN0b20nKSB7XG4gICAgICAgIHN3aXBlci5lbWl0KCdwYWdpbmF0aW9uUmVuZGVyJywgc3dpcGVyLnBhZ2luYXRpb24uJGVsWzBdKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGluaXQ6IGZ1bmN0aW9uIGluaXQoKSB7XG4gICAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICAgIHZhciBwYXJhbXMgPSBzd2lwZXIucGFyYW1zLnBhZ2luYXRpb247XG4gICAgICBpZiAoIXBhcmFtcy5lbCkgcmV0dXJuO1xuICAgICAgdmFyICRlbCA9ICQocGFyYW1zLmVsKTtcbiAgICAgIGlmICgkZWwubGVuZ3RoID09PSAwKSByZXR1cm47XG5cbiAgICAgIGlmIChzd2lwZXIucGFyYW1zLnVuaXF1ZU5hdkVsZW1lbnRzICYmIHR5cGVvZiBwYXJhbXMuZWwgPT09ICdzdHJpbmcnICYmICRlbC5sZW5ndGggPiAxKSB7XG4gICAgICAgICRlbCA9IHN3aXBlci4kZWwuZmluZChwYXJhbXMuZWwpO1xuICAgICAgfVxuXG4gICAgICBpZiAocGFyYW1zLnR5cGUgPT09ICdidWxsZXRzJyAmJiBwYXJhbXMuY2xpY2thYmxlKSB7XG4gICAgICAgICRlbC5hZGRDbGFzcyhwYXJhbXMuY2xpY2thYmxlQ2xhc3MpO1xuICAgICAgfVxuXG4gICAgICAkZWwuYWRkQ2xhc3MocGFyYW1zLm1vZGlmaWVyQ2xhc3MgKyBwYXJhbXMudHlwZSk7XG5cbiAgICAgIGlmIChwYXJhbXMudHlwZSA9PT0gJ2J1bGxldHMnICYmIHBhcmFtcy5keW5hbWljQnVsbGV0cykge1xuICAgICAgICAkZWwuYWRkQ2xhc3MoXCJcIiArIHBhcmFtcy5tb2RpZmllckNsYXNzICsgcGFyYW1zLnR5cGUgKyBcIi1keW5hbWljXCIpO1xuICAgICAgICBzd2lwZXIucGFnaW5hdGlvbi5keW5hbWljQnVsbGV0SW5kZXggPSAwO1xuXG4gICAgICAgIGlmIChwYXJhbXMuZHluYW1pY01haW5CdWxsZXRzIDwgMSkge1xuICAgICAgICAgIHBhcmFtcy5keW5hbWljTWFpbkJ1bGxldHMgPSAxO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChwYXJhbXMudHlwZSA9PT0gJ3Byb2dyZXNzYmFyJyAmJiBwYXJhbXMucHJvZ3Jlc3NiYXJPcHBvc2l0ZSkge1xuICAgICAgICAkZWwuYWRkQ2xhc3MocGFyYW1zLnByb2dyZXNzYmFyT3Bwb3NpdGVDbGFzcyk7XG4gICAgICB9XG5cbiAgICAgIGlmIChwYXJhbXMuY2xpY2thYmxlKSB7XG4gICAgICAgICRlbC5vbignY2xpY2snLCBcIi5cIiArIHBhcmFtcy5idWxsZXRDbGFzcywgZnVuY3Rpb24gb25DbGljayhlKSB7XG4gICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgIHZhciBpbmRleCA9ICQodGhpcykuaW5kZXgoKSAqIHN3aXBlci5wYXJhbXMuc2xpZGVzUGVyR3JvdXA7XG4gICAgICAgICAgaWYgKHN3aXBlci5wYXJhbXMubG9vcCkgaW5kZXggKz0gc3dpcGVyLmxvb3BlZFNsaWRlcztcbiAgICAgICAgICBzd2lwZXIuc2xpZGVUbyhpbmRleCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICBleHRlbmQkMShzd2lwZXIucGFnaW5hdGlvbiwge1xuICAgICAgICAkZWw6ICRlbCxcbiAgICAgICAgZWw6ICRlbFswXVxuICAgICAgfSk7XG4gICAgfSxcbiAgICBkZXN0cm95OiBmdW5jdGlvbiBkZXN0cm95KCkge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICB2YXIgcGFyYW1zID0gc3dpcGVyLnBhcmFtcy5wYWdpbmF0aW9uO1xuICAgICAgaWYgKCFwYXJhbXMuZWwgfHwgIXN3aXBlci5wYWdpbmF0aW9uLmVsIHx8ICFzd2lwZXIucGFnaW5hdGlvbi4kZWwgfHwgc3dpcGVyLnBhZ2luYXRpb24uJGVsLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuICAgICAgdmFyICRlbCA9IHN3aXBlci5wYWdpbmF0aW9uLiRlbDtcbiAgICAgICRlbC5yZW1vdmVDbGFzcyhwYXJhbXMuaGlkZGVuQ2xhc3MpO1xuICAgICAgJGVsLnJlbW92ZUNsYXNzKHBhcmFtcy5tb2RpZmllckNsYXNzICsgcGFyYW1zLnR5cGUpO1xuICAgICAgaWYgKHN3aXBlci5wYWdpbmF0aW9uLmJ1bGxldHMpIHN3aXBlci5wYWdpbmF0aW9uLmJ1bGxldHMucmVtb3ZlQ2xhc3MocGFyYW1zLmJ1bGxldEFjdGl2ZUNsYXNzKTtcblxuICAgICAgaWYgKHBhcmFtcy5jbGlja2FibGUpIHtcbiAgICAgICAgJGVsLm9mZignY2xpY2snLCBcIi5cIiArIHBhcmFtcy5idWxsZXRDbGFzcyk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuICB2YXIgUGFnaW5hdGlvbiQxID0ge1xuICAgIG5hbWU6ICdwYWdpbmF0aW9uJyxcbiAgICBwYXJhbXM6IHtcbiAgICAgIHBhZ2luYXRpb246IHtcbiAgICAgICAgZWw6IG51bGwsXG4gICAgICAgIGJ1bGxldEVsZW1lbnQ6ICdzcGFuJyxcbiAgICAgICAgY2xpY2thYmxlOiBmYWxzZSxcbiAgICAgICAgaGlkZU9uQ2xpY2s6IGZhbHNlLFxuICAgICAgICByZW5kZXJCdWxsZXQ6IG51bGwsXG4gICAgICAgIHJlbmRlclByb2dyZXNzYmFyOiBudWxsLFxuICAgICAgICByZW5kZXJGcmFjdGlvbjogbnVsbCxcbiAgICAgICAgcmVuZGVyQ3VzdG9tOiBudWxsLFxuICAgICAgICBwcm9ncmVzc2Jhck9wcG9zaXRlOiBmYWxzZSxcbiAgICAgICAgdHlwZTogJ2J1bGxldHMnLFxuICAgICAgICAvLyAnYnVsbGV0cycgb3IgJ3Byb2dyZXNzYmFyJyBvciAnZnJhY3Rpb24nIG9yICdjdXN0b20nXG4gICAgICAgIGR5bmFtaWNCdWxsZXRzOiBmYWxzZSxcbiAgICAgICAgZHluYW1pY01haW5CdWxsZXRzOiAxLFxuICAgICAgICBmb3JtYXRGcmFjdGlvbkN1cnJlbnQ6IGZ1bmN0aW9uIGZvcm1hdEZyYWN0aW9uQ3VycmVudChudW1iZXIpIHtcbiAgICAgICAgICByZXR1cm4gbnVtYmVyO1xuICAgICAgICB9LFxuICAgICAgICBmb3JtYXRGcmFjdGlvblRvdGFsOiBmdW5jdGlvbiBmb3JtYXRGcmFjdGlvblRvdGFsKG51bWJlcikge1xuICAgICAgICAgIHJldHVybiBudW1iZXI7XG4gICAgICAgIH0sXG4gICAgICAgIGJ1bGxldENsYXNzOiAnc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0JyxcbiAgICAgICAgYnVsbGV0QWN0aXZlQ2xhc3M6ICdzd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtYWN0aXZlJyxcbiAgICAgICAgbW9kaWZpZXJDbGFzczogJ3N3aXBlci1wYWdpbmF0aW9uLScsXG4gICAgICAgIC8vIE5FV1xuICAgICAgICBjdXJyZW50Q2xhc3M6ICdzd2lwZXItcGFnaW5hdGlvbi1jdXJyZW50JyxcbiAgICAgICAgdG90YWxDbGFzczogJ3N3aXBlci1wYWdpbmF0aW9uLXRvdGFsJyxcbiAgICAgICAgaGlkZGVuQ2xhc3M6ICdzd2lwZXItcGFnaW5hdGlvbi1oaWRkZW4nLFxuICAgICAgICBwcm9ncmVzc2JhckZpbGxDbGFzczogJ3N3aXBlci1wYWdpbmF0aW9uLXByb2dyZXNzYmFyLWZpbGwnLFxuICAgICAgICBwcm9ncmVzc2Jhck9wcG9zaXRlQ2xhc3M6ICdzd2lwZXItcGFnaW5hdGlvbi1wcm9ncmVzc2Jhci1vcHBvc2l0ZScsXG4gICAgICAgIGNsaWNrYWJsZUNsYXNzOiAnc3dpcGVyLXBhZ2luYXRpb24tY2xpY2thYmxlJyxcbiAgICAgICAgLy8gTkVXXG4gICAgICAgIGxvY2tDbGFzczogJ3N3aXBlci1wYWdpbmF0aW9uLWxvY2snXG4gICAgICB9XG4gICAgfSxcbiAgICBjcmVhdGU6IGZ1bmN0aW9uIGNyZWF0ZSgpIHtcbiAgICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgICAgYmluZE1vZHVsZU1ldGhvZHMoc3dpcGVyLCB7XG4gICAgICAgIHBhZ2luYXRpb246IF9leHRlbmRzKHtcbiAgICAgICAgICBkeW5hbWljQnVsbGV0SW5kZXg6IDBcbiAgICAgICAgfSwgUGFnaW5hdGlvbilcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgb246IHtcbiAgICAgIGluaXQ6IGZ1bmN0aW9uIGluaXQoc3dpcGVyKSB7XG4gICAgICAgIHN3aXBlci5wYWdpbmF0aW9uLmluaXQoKTtcbiAgICAgICAgc3dpcGVyLnBhZ2luYXRpb24ucmVuZGVyKCk7XG4gICAgICAgIHN3aXBlci5wYWdpbmF0aW9uLnVwZGF0ZSgpO1xuICAgICAgfSxcbiAgICAgIGFjdGl2ZUluZGV4Q2hhbmdlOiBmdW5jdGlvbiBhY3RpdmVJbmRleENoYW5nZShzd2lwZXIpIHtcbiAgICAgICAgaWYgKHN3aXBlci5wYXJhbXMubG9vcCkge1xuICAgICAgICAgIHN3aXBlci5wYWdpbmF0aW9uLnVwZGF0ZSgpO1xuICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiBzd2lwZXIuc25hcEluZGV4ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgIHN3aXBlci5wYWdpbmF0aW9uLnVwZGF0ZSgpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgc25hcEluZGV4Q2hhbmdlOiBmdW5jdGlvbiBzbmFwSW5kZXhDaGFuZ2Uoc3dpcGVyKSB7XG4gICAgICAgIGlmICghc3dpcGVyLnBhcmFtcy5sb29wKSB7XG4gICAgICAgICAgc3dpcGVyLnBhZ2luYXRpb24udXBkYXRlKCk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBzbGlkZXNMZW5ndGhDaGFuZ2U6IGZ1bmN0aW9uIHNsaWRlc0xlbmd0aENoYW5nZShzd2lwZXIpIHtcbiAgICAgICAgaWYgKHN3aXBlci5wYXJhbXMubG9vcCkge1xuICAgICAgICAgIHN3aXBlci5wYWdpbmF0aW9uLnJlbmRlcigpO1xuICAgICAgICAgIHN3aXBlci5wYWdpbmF0aW9uLnVwZGF0ZSgpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgc25hcEdyaWRMZW5ndGhDaGFuZ2U6IGZ1bmN0aW9uIHNuYXBHcmlkTGVuZ3RoQ2hhbmdlKHN3aXBlcikge1xuICAgICAgICBpZiAoIXN3aXBlci5wYXJhbXMubG9vcCkge1xuICAgICAgICAgIHN3aXBlci5wYWdpbmF0aW9uLnJlbmRlcigpO1xuICAgICAgICAgIHN3aXBlci5wYWdpbmF0aW9uLnVwZGF0ZSgpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgZGVzdHJveTogZnVuY3Rpb24gZGVzdHJveShzd2lwZXIpIHtcbiAgICAgICAgc3dpcGVyLnBhZ2luYXRpb24uZGVzdHJveSgpO1xuICAgICAgfSxcbiAgICAgIGNsaWNrOiBmdW5jdGlvbiBjbGljayhzd2lwZXIsIGUpIHtcbiAgICAgICAgaWYgKHN3aXBlci5wYXJhbXMucGFnaW5hdGlvbi5lbCAmJiBzd2lwZXIucGFyYW1zLnBhZ2luYXRpb24uaGlkZU9uQ2xpY2sgJiYgc3dpcGVyLnBhZ2luYXRpb24uJGVsLmxlbmd0aCA+IDAgJiYgISQoZS50YXJnZXQpLmhhc0NsYXNzKHN3aXBlci5wYXJhbXMucGFnaW5hdGlvbi5idWxsZXRDbGFzcykpIHtcbiAgICAgICAgICB2YXIgaXNIaWRkZW4gPSBzd2lwZXIucGFnaW5hdGlvbi4kZWwuaGFzQ2xhc3Moc3dpcGVyLnBhcmFtcy5wYWdpbmF0aW9uLmhpZGRlbkNsYXNzKTtcblxuICAgICAgICAgIGlmIChpc0hpZGRlbiA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgc3dpcGVyLmVtaXQoJ3BhZ2luYXRpb25TaG93Jyk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHN3aXBlci5lbWl0KCdwYWdpbmF0aW9uSGlkZScpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHN3aXBlci5wYWdpbmF0aW9uLiRlbC50b2dnbGVDbGFzcyhzd2lwZXIucGFyYW1zLnBhZ2luYXRpb24uaGlkZGVuQ2xhc3MpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIHZhciBTY3JvbGxiYXIgPSB7XG4gICAgc2V0VHJhbnNsYXRlOiBmdW5jdGlvbiBzZXRUcmFuc2xhdGUoKSB7XG4gICAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICAgIGlmICghc3dpcGVyLnBhcmFtcy5zY3JvbGxiYXIuZWwgfHwgIXN3aXBlci5zY3JvbGxiYXIuZWwpIHJldHVybjtcbiAgICAgIHZhciBzY3JvbGxiYXIgPSBzd2lwZXIuc2Nyb2xsYmFyLFxuICAgICAgICAgIHJ0bCA9IHN3aXBlci5ydGxUcmFuc2xhdGUsXG4gICAgICAgICAgcHJvZ3Jlc3MgPSBzd2lwZXIucHJvZ3Jlc3M7XG4gICAgICB2YXIgZHJhZ1NpemUgPSBzY3JvbGxiYXIuZHJhZ1NpemUsXG4gICAgICAgICAgdHJhY2tTaXplID0gc2Nyb2xsYmFyLnRyYWNrU2l6ZSxcbiAgICAgICAgICAkZHJhZ0VsID0gc2Nyb2xsYmFyLiRkcmFnRWwsXG4gICAgICAgICAgJGVsID0gc2Nyb2xsYmFyLiRlbDtcbiAgICAgIHZhciBwYXJhbXMgPSBzd2lwZXIucGFyYW1zLnNjcm9sbGJhcjtcbiAgICAgIHZhciBuZXdTaXplID0gZHJhZ1NpemU7XG4gICAgICB2YXIgbmV3UG9zID0gKHRyYWNrU2l6ZSAtIGRyYWdTaXplKSAqIHByb2dyZXNzO1xuXG4gICAgICBpZiAocnRsKSB7XG4gICAgICAgIG5ld1BvcyA9IC1uZXdQb3M7XG5cbiAgICAgICAgaWYgKG5ld1BvcyA+IDApIHtcbiAgICAgICAgICBuZXdTaXplID0gZHJhZ1NpemUgLSBuZXdQb3M7XG4gICAgICAgICAgbmV3UG9zID0gMDtcbiAgICAgICAgfSBlbHNlIGlmICgtbmV3UG9zICsgZHJhZ1NpemUgPiB0cmFja1NpemUpIHtcbiAgICAgICAgICBuZXdTaXplID0gdHJhY2tTaXplICsgbmV3UG9zO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKG5ld1BvcyA8IDApIHtcbiAgICAgICAgbmV3U2l6ZSA9IGRyYWdTaXplICsgbmV3UG9zO1xuICAgICAgICBuZXdQb3MgPSAwO1xuICAgICAgfSBlbHNlIGlmIChuZXdQb3MgKyBkcmFnU2l6ZSA+IHRyYWNrU2l6ZSkge1xuICAgICAgICBuZXdTaXplID0gdHJhY2tTaXplIC0gbmV3UG9zO1xuICAgICAgfVxuXG4gICAgICBpZiAoc3dpcGVyLmlzSG9yaXpvbnRhbCgpKSB7XG4gICAgICAgICRkcmFnRWwudHJhbnNmb3JtKFwidHJhbnNsYXRlM2QoXCIgKyBuZXdQb3MgKyBcInB4LCAwLCAwKVwiKTtcbiAgICAgICAgJGRyYWdFbFswXS5zdHlsZS53aWR0aCA9IG5ld1NpemUgKyBcInB4XCI7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAkZHJhZ0VsLnRyYW5zZm9ybShcInRyYW5zbGF0ZTNkKDBweCwgXCIgKyBuZXdQb3MgKyBcInB4LCAwKVwiKTtcbiAgICAgICAgJGRyYWdFbFswXS5zdHlsZS5oZWlnaHQgPSBuZXdTaXplICsgXCJweFwiO1xuICAgICAgfVxuXG4gICAgICBpZiAocGFyYW1zLmhpZGUpIHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHN3aXBlci5zY3JvbGxiYXIudGltZW91dCk7XG4gICAgICAgICRlbFswXS5zdHlsZS5vcGFjaXR5ID0gMTtcbiAgICAgICAgc3dpcGVyLnNjcm9sbGJhci50aW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgJGVsWzBdLnN0eWxlLm9wYWNpdHkgPSAwO1xuICAgICAgICAgICRlbC50cmFuc2l0aW9uKDQwMCk7XG4gICAgICAgIH0sIDEwMDApO1xuICAgICAgfVxuICAgIH0sXG4gICAgc2V0VHJhbnNpdGlvbjogZnVuY3Rpb24gc2V0VHJhbnNpdGlvbihkdXJhdGlvbikge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICBpZiAoIXN3aXBlci5wYXJhbXMuc2Nyb2xsYmFyLmVsIHx8ICFzd2lwZXIuc2Nyb2xsYmFyLmVsKSByZXR1cm47XG4gICAgICBzd2lwZXIuc2Nyb2xsYmFyLiRkcmFnRWwudHJhbnNpdGlvbihkdXJhdGlvbik7XG4gICAgfSxcbiAgICB1cGRhdGVTaXplOiBmdW5jdGlvbiB1cGRhdGVTaXplKCkge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICBpZiAoIXN3aXBlci5wYXJhbXMuc2Nyb2xsYmFyLmVsIHx8ICFzd2lwZXIuc2Nyb2xsYmFyLmVsKSByZXR1cm47XG4gICAgICB2YXIgc2Nyb2xsYmFyID0gc3dpcGVyLnNjcm9sbGJhcjtcbiAgICAgIHZhciAkZHJhZ0VsID0gc2Nyb2xsYmFyLiRkcmFnRWwsXG4gICAgICAgICAgJGVsID0gc2Nyb2xsYmFyLiRlbDtcbiAgICAgICRkcmFnRWxbMF0uc3R5bGUud2lkdGggPSAnJztcbiAgICAgICRkcmFnRWxbMF0uc3R5bGUuaGVpZ2h0ID0gJyc7XG4gICAgICB2YXIgdHJhY2tTaXplID0gc3dpcGVyLmlzSG9yaXpvbnRhbCgpID8gJGVsWzBdLm9mZnNldFdpZHRoIDogJGVsWzBdLm9mZnNldEhlaWdodDtcbiAgICAgIHZhciBkaXZpZGVyID0gc3dpcGVyLnNpemUgLyBzd2lwZXIudmlydHVhbFNpemU7XG4gICAgICB2YXIgbW92ZURpdmlkZXIgPSBkaXZpZGVyICogKHRyYWNrU2l6ZSAvIHN3aXBlci5zaXplKTtcbiAgICAgIHZhciBkcmFnU2l6ZTtcblxuICAgICAgaWYgKHN3aXBlci5wYXJhbXMuc2Nyb2xsYmFyLmRyYWdTaXplID09PSAnYXV0bycpIHtcbiAgICAgICAgZHJhZ1NpemUgPSB0cmFja1NpemUgKiBkaXZpZGVyO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZHJhZ1NpemUgPSBwYXJzZUludChzd2lwZXIucGFyYW1zLnNjcm9sbGJhci5kcmFnU2l6ZSwgMTApO1xuICAgICAgfVxuXG4gICAgICBpZiAoc3dpcGVyLmlzSG9yaXpvbnRhbCgpKSB7XG4gICAgICAgICRkcmFnRWxbMF0uc3R5bGUud2lkdGggPSBkcmFnU2l6ZSArIFwicHhcIjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgICRkcmFnRWxbMF0uc3R5bGUuaGVpZ2h0ID0gZHJhZ1NpemUgKyBcInB4XCI7XG4gICAgICB9XG5cbiAgICAgIGlmIChkaXZpZGVyID49IDEpIHtcbiAgICAgICAgJGVsWzBdLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAkZWxbMF0uc3R5bGUuZGlzcGxheSA9ICcnO1xuICAgICAgfVxuXG4gICAgICBpZiAoc3dpcGVyLnBhcmFtcy5zY3JvbGxiYXIuaGlkZSkge1xuICAgICAgICAkZWxbMF0uc3R5bGUub3BhY2l0eSA9IDA7XG4gICAgICB9XG5cbiAgICAgIGV4dGVuZCQxKHNjcm9sbGJhciwge1xuICAgICAgICB0cmFja1NpemU6IHRyYWNrU2l6ZSxcbiAgICAgICAgZGl2aWRlcjogZGl2aWRlcixcbiAgICAgICAgbW92ZURpdmlkZXI6IG1vdmVEaXZpZGVyLFxuICAgICAgICBkcmFnU2l6ZTogZHJhZ1NpemVcbiAgICAgIH0pO1xuICAgICAgc2Nyb2xsYmFyLiRlbFtzd2lwZXIucGFyYW1zLndhdGNoT3ZlcmZsb3cgJiYgc3dpcGVyLmlzTG9ja2VkID8gJ2FkZENsYXNzJyA6ICdyZW1vdmVDbGFzcyddKHN3aXBlci5wYXJhbXMuc2Nyb2xsYmFyLmxvY2tDbGFzcyk7XG4gICAgfSxcbiAgICBnZXRQb2ludGVyUG9zaXRpb246IGZ1bmN0aW9uIGdldFBvaW50ZXJQb3NpdGlvbihlKSB7XG4gICAgICB2YXIgc3dpcGVyID0gdGhpcztcblxuICAgICAgaWYgKHN3aXBlci5pc0hvcml6b250YWwoKSkge1xuICAgICAgICByZXR1cm4gZS50eXBlID09PSAndG91Y2hzdGFydCcgfHwgZS50eXBlID09PSAndG91Y2htb3ZlJyA/IGUudGFyZ2V0VG91Y2hlc1swXS5jbGllbnRYIDogZS5jbGllbnRYO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZS50eXBlID09PSAndG91Y2hzdGFydCcgfHwgZS50eXBlID09PSAndG91Y2htb3ZlJyA/IGUudGFyZ2V0VG91Y2hlc1swXS5jbGllbnRZIDogZS5jbGllbnRZO1xuICAgIH0sXG4gICAgc2V0RHJhZ1Bvc2l0aW9uOiBmdW5jdGlvbiBzZXREcmFnUG9zaXRpb24oZSkge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICB2YXIgc2Nyb2xsYmFyID0gc3dpcGVyLnNjcm9sbGJhcixcbiAgICAgICAgICBydGwgPSBzd2lwZXIucnRsVHJhbnNsYXRlO1xuICAgICAgdmFyICRlbCA9IHNjcm9sbGJhci4kZWwsXG4gICAgICAgICAgZHJhZ1NpemUgPSBzY3JvbGxiYXIuZHJhZ1NpemUsXG4gICAgICAgICAgdHJhY2tTaXplID0gc2Nyb2xsYmFyLnRyYWNrU2l6ZSxcbiAgICAgICAgICBkcmFnU3RhcnRQb3MgPSBzY3JvbGxiYXIuZHJhZ1N0YXJ0UG9zO1xuICAgICAgdmFyIHBvc2l0aW9uUmF0aW87XG4gICAgICBwb3NpdGlvblJhdGlvID0gKHNjcm9sbGJhci5nZXRQb2ludGVyUG9zaXRpb24oZSkgLSAkZWwub2Zmc2V0KClbc3dpcGVyLmlzSG9yaXpvbnRhbCgpID8gJ2xlZnQnIDogJ3RvcCddIC0gKGRyYWdTdGFydFBvcyAhPT0gbnVsbCA/IGRyYWdTdGFydFBvcyA6IGRyYWdTaXplIC8gMikpIC8gKHRyYWNrU2l6ZSAtIGRyYWdTaXplKTtcbiAgICAgIHBvc2l0aW9uUmF0aW8gPSBNYXRoLm1heChNYXRoLm1pbihwb3NpdGlvblJhdGlvLCAxKSwgMCk7XG5cbiAgICAgIGlmIChydGwpIHtcbiAgICAgICAgcG9zaXRpb25SYXRpbyA9IDEgLSBwb3NpdGlvblJhdGlvO1xuICAgICAgfVxuXG4gICAgICB2YXIgcG9zaXRpb24gPSBzd2lwZXIubWluVHJhbnNsYXRlKCkgKyAoc3dpcGVyLm1heFRyYW5zbGF0ZSgpIC0gc3dpcGVyLm1pblRyYW5zbGF0ZSgpKSAqIHBvc2l0aW9uUmF0aW87XG4gICAgICBzd2lwZXIudXBkYXRlUHJvZ3Jlc3MocG9zaXRpb24pO1xuICAgICAgc3dpcGVyLnNldFRyYW5zbGF0ZShwb3NpdGlvbik7XG4gICAgICBzd2lwZXIudXBkYXRlQWN0aXZlSW5kZXgoKTtcbiAgICAgIHN3aXBlci51cGRhdGVTbGlkZXNDbGFzc2VzKCk7XG4gICAgfSxcbiAgICBvbkRyYWdTdGFydDogZnVuY3Rpb24gb25EcmFnU3RhcnQoZSkge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICB2YXIgcGFyYW1zID0gc3dpcGVyLnBhcmFtcy5zY3JvbGxiYXI7XG4gICAgICB2YXIgc2Nyb2xsYmFyID0gc3dpcGVyLnNjcm9sbGJhcixcbiAgICAgICAgICAkd3JhcHBlckVsID0gc3dpcGVyLiR3cmFwcGVyRWw7XG4gICAgICB2YXIgJGVsID0gc2Nyb2xsYmFyLiRlbCxcbiAgICAgICAgICAkZHJhZ0VsID0gc2Nyb2xsYmFyLiRkcmFnRWw7XG4gICAgICBzd2lwZXIuc2Nyb2xsYmFyLmlzVG91Y2hlZCA9IHRydWU7XG4gICAgICBzd2lwZXIuc2Nyb2xsYmFyLmRyYWdTdGFydFBvcyA9IGUudGFyZ2V0ID09PSAkZHJhZ0VsWzBdIHx8IGUudGFyZ2V0ID09PSAkZHJhZ0VsID8gc2Nyb2xsYmFyLmdldFBvaW50ZXJQb3NpdGlvbihlKSAtIGUudGFyZ2V0LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpW3N3aXBlci5pc0hvcml6b250YWwoKSA/ICdsZWZ0JyA6ICd0b3AnXSA6IG51bGw7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgJHdyYXBwZXJFbC50cmFuc2l0aW9uKDEwMCk7XG4gICAgICAkZHJhZ0VsLnRyYW5zaXRpb24oMTAwKTtcbiAgICAgIHNjcm9sbGJhci5zZXREcmFnUG9zaXRpb24oZSk7XG4gICAgICBjbGVhclRpbWVvdXQoc3dpcGVyLnNjcm9sbGJhci5kcmFnVGltZW91dCk7XG4gICAgICAkZWwudHJhbnNpdGlvbigwKTtcblxuICAgICAgaWYgKHBhcmFtcy5oaWRlKSB7XG4gICAgICAgICRlbC5jc3MoJ29wYWNpdHknLCAxKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHN3aXBlci5wYXJhbXMuY3NzTW9kZSkge1xuICAgICAgICBzd2lwZXIuJHdyYXBwZXJFbC5jc3MoJ3Njcm9sbC1zbmFwLXR5cGUnLCAnbm9uZScpO1xuICAgICAgfVxuXG4gICAgICBzd2lwZXIuZW1pdCgnc2Nyb2xsYmFyRHJhZ1N0YXJ0JywgZSk7XG4gICAgfSxcbiAgICBvbkRyYWdNb3ZlOiBmdW5jdGlvbiBvbkRyYWdNb3ZlKGUpIHtcbiAgICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgICAgdmFyIHNjcm9sbGJhciA9IHN3aXBlci5zY3JvbGxiYXIsXG4gICAgICAgICAgJHdyYXBwZXJFbCA9IHN3aXBlci4kd3JhcHBlckVsO1xuICAgICAgdmFyICRlbCA9IHNjcm9sbGJhci4kZWwsXG4gICAgICAgICAgJGRyYWdFbCA9IHNjcm9sbGJhci4kZHJhZ0VsO1xuICAgICAgaWYgKCFzd2lwZXIuc2Nyb2xsYmFyLmlzVG91Y2hlZCkgcmV0dXJuO1xuICAgICAgaWYgKGUucHJldmVudERlZmF1bHQpIGUucHJldmVudERlZmF1bHQoKTtlbHNlIGUucmV0dXJuVmFsdWUgPSBmYWxzZTtcbiAgICAgIHNjcm9sbGJhci5zZXREcmFnUG9zaXRpb24oZSk7XG4gICAgICAkd3JhcHBlckVsLnRyYW5zaXRpb24oMCk7XG4gICAgICAkZWwudHJhbnNpdGlvbigwKTtcbiAgICAgICRkcmFnRWwudHJhbnNpdGlvbigwKTtcbiAgICAgIHN3aXBlci5lbWl0KCdzY3JvbGxiYXJEcmFnTW92ZScsIGUpO1xuICAgIH0sXG4gICAgb25EcmFnRW5kOiBmdW5jdGlvbiBvbkRyYWdFbmQoZSkge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICB2YXIgcGFyYW1zID0gc3dpcGVyLnBhcmFtcy5zY3JvbGxiYXI7XG4gICAgICB2YXIgc2Nyb2xsYmFyID0gc3dpcGVyLnNjcm9sbGJhcixcbiAgICAgICAgICAkd3JhcHBlckVsID0gc3dpcGVyLiR3cmFwcGVyRWw7XG4gICAgICB2YXIgJGVsID0gc2Nyb2xsYmFyLiRlbDtcbiAgICAgIGlmICghc3dpcGVyLnNjcm9sbGJhci5pc1RvdWNoZWQpIHJldHVybjtcbiAgICAgIHN3aXBlci5zY3JvbGxiYXIuaXNUb3VjaGVkID0gZmFsc2U7XG5cbiAgICAgIGlmIChzd2lwZXIucGFyYW1zLmNzc01vZGUpIHtcbiAgICAgICAgc3dpcGVyLiR3cmFwcGVyRWwuY3NzKCdzY3JvbGwtc25hcC10eXBlJywgJycpO1xuICAgICAgICAkd3JhcHBlckVsLnRyYW5zaXRpb24oJycpO1xuICAgICAgfVxuXG4gICAgICBpZiAocGFyYW1zLmhpZGUpIHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHN3aXBlci5zY3JvbGxiYXIuZHJhZ1RpbWVvdXQpO1xuICAgICAgICBzd2lwZXIuc2Nyb2xsYmFyLmRyYWdUaW1lb3V0ID0gbmV4dFRpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICAgICRlbC5jc3MoJ29wYWNpdHknLCAwKTtcbiAgICAgICAgICAkZWwudHJhbnNpdGlvbig0MDApO1xuICAgICAgICB9LCAxMDAwKTtcbiAgICAgIH1cblxuICAgICAgc3dpcGVyLmVtaXQoJ3Njcm9sbGJhckRyYWdFbmQnLCBlKTtcblxuICAgICAgaWYgKHBhcmFtcy5zbmFwT25SZWxlYXNlKSB7XG4gICAgICAgIHN3aXBlci5zbGlkZVRvQ2xvc2VzdCgpO1xuICAgICAgfVxuICAgIH0sXG4gICAgZW5hYmxlRHJhZ2dhYmxlOiBmdW5jdGlvbiBlbmFibGVEcmFnZ2FibGUoKSB7XG4gICAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICAgIGlmICghc3dpcGVyLnBhcmFtcy5zY3JvbGxiYXIuZWwpIHJldHVybjtcbiAgICAgIHZhciBkb2N1bWVudCA9IGdldERvY3VtZW50KCk7XG4gICAgICB2YXIgc2Nyb2xsYmFyID0gc3dpcGVyLnNjcm9sbGJhcixcbiAgICAgICAgICB0b3VjaEV2ZW50c1RvdWNoID0gc3dpcGVyLnRvdWNoRXZlbnRzVG91Y2gsXG4gICAgICAgICAgdG91Y2hFdmVudHNEZXNrdG9wID0gc3dpcGVyLnRvdWNoRXZlbnRzRGVza3RvcCxcbiAgICAgICAgICBwYXJhbXMgPSBzd2lwZXIucGFyYW1zLFxuICAgICAgICAgIHN1cHBvcnQgPSBzd2lwZXIuc3VwcG9ydDtcbiAgICAgIHZhciAkZWwgPSBzY3JvbGxiYXIuJGVsO1xuICAgICAgdmFyIHRhcmdldCA9ICRlbFswXTtcbiAgICAgIHZhciBhY3RpdmVMaXN0ZW5lciA9IHN1cHBvcnQucGFzc2l2ZUxpc3RlbmVyICYmIHBhcmFtcy5wYXNzaXZlTGlzdGVuZXJzID8ge1xuICAgICAgICBwYXNzaXZlOiBmYWxzZSxcbiAgICAgICAgY2FwdHVyZTogZmFsc2VcbiAgICAgIH0gOiBmYWxzZTtcbiAgICAgIHZhciBwYXNzaXZlTGlzdGVuZXIgPSBzdXBwb3J0LnBhc3NpdmVMaXN0ZW5lciAmJiBwYXJhbXMucGFzc2l2ZUxpc3RlbmVycyA/IHtcbiAgICAgICAgcGFzc2l2ZTogdHJ1ZSxcbiAgICAgICAgY2FwdHVyZTogZmFsc2VcbiAgICAgIH0gOiBmYWxzZTtcblxuICAgICAgaWYgKCFzdXBwb3J0LnRvdWNoKSB7XG4gICAgICAgIHRhcmdldC5hZGRFdmVudExpc3RlbmVyKHRvdWNoRXZlbnRzRGVza3RvcC5zdGFydCwgc3dpcGVyLnNjcm9sbGJhci5vbkRyYWdTdGFydCwgYWN0aXZlTGlzdGVuZXIpO1xuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKHRvdWNoRXZlbnRzRGVza3RvcC5tb3ZlLCBzd2lwZXIuc2Nyb2xsYmFyLm9uRHJhZ01vdmUsIGFjdGl2ZUxpc3RlbmVyKTtcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcih0b3VjaEV2ZW50c0Rlc2t0b3AuZW5kLCBzd2lwZXIuc2Nyb2xsYmFyLm9uRHJhZ0VuZCwgcGFzc2l2ZUxpc3RlbmVyKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRhcmdldC5hZGRFdmVudExpc3RlbmVyKHRvdWNoRXZlbnRzVG91Y2guc3RhcnQsIHN3aXBlci5zY3JvbGxiYXIub25EcmFnU3RhcnQsIGFjdGl2ZUxpc3RlbmVyKTtcbiAgICAgICAgdGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIodG91Y2hFdmVudHNUb3VjaC5tb3ZlLCBzd2lwZXIuc2Nyb2xsYmFyLm9uRHJhZ01vdmUsIGFjdGl2ZUxpc3RlbmVyKTtcbiAgICAgICAgdGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIodG91Y2hFdmVudHNUb3VjaC5lbmQsIHN3aXBlci5zY3JvbGxiYXIub25EcmFnRW5kLCBwYXNzaXZlTGlzdGVuZXIpO1xuICAgICAgfVxuICAgIH0sXG4gICAgZGlzYWJsZURyYWdnYWJsZTogZnVuY3Rpb24gZGlzYWJsZURyYWdnYWJsZSgpIHtcbiAgICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgICAgaWYgKCFzd2lwZXIucGFyYW1zLnNjcm9sbGJhci5lbCkgcmV0dXJuO1xuICAgICAgdmFyIGRvY3VtZW50ID0gZ2V0RG9jdW1lbnQoKTtcbiAgICAgIHZhciBzY3JvbGxiYXIgPSBzd2lwZXIuc2Nyb2xsYmFyLFxuICAgICAgICAgIHRvdWNoRXZlbnRzVG91Y2ggPSBzd2lwZXIudG91Y2hFdmVudHNUb3VjaCxcbiAgICAgICAgICB0b3VjaEV2ZW50c0Rlc2t0b3AgPSBzd2lwZXIudG91Y2hFdmVudHNEZXNrdG9wLFxuICAgICAgICAgIHBhcmFtcyA9IHN3aXBlci5wYXJhbXMsXG4gICAgICAgICAgc3VwcG9ydCA9IHN3aXBlci5zdXBwb3J0O1xuICAgICAgdmFyICRlbCA9IHNjcm9sbGJhci4kZWw7XG4gICAgICB2YXIgdGFyZ2V0ID0gJGVsWzBdO1xuICAgICAgdmFyIGFjdGl2ZUxpc3RlbmVyID0gc3VwcG9ydC5wYXNzaXZlTGlzdGVuZXIgJiYgcGFyYW1zLnBhc3NpdmVMaXN0ZW5lcnMgPyB7XG4gICAgICAgIHBhc3NpdmU6IGZhbHNlLFxuICAgICAgICBjYXB0dXJlOiBmYWxzZVxuICAgICAgfSA6IGZhbHNlO1xuICAgICAgdmFyIHBhc3NpdmVMaXN0ZW5lciA9IHN1cHBvcnQucGFzc2l2ZUxpc3RlbmVyICYmIHBhcmFtcy5wYXNzaXZlTGlzdGVuZXJzID8ge1xuICAgICAgICBwYXNzaXZlOiB0cnVlLFxuICAgICAgICBjYXB0dXJlOiBmYWxzZVxuICAgICAgfSA6IGZhbHNlO1xuXG4gICAgICBpZiAoIXN1cHBvcnQudG91Y2gpIHtcbiAgICAgICAgdGFyZ2V0LnJlbW92ZUV2ZW50TGlzdGVuZXIodG91Y2hFdmVudHNEZXNrdG9wLnN0YXJ0LCBzd2lwZXIuc2Nyb2xsYmFyLm9uRHJhZ1N0YXJ0LCBhY3RpdmVMaXN0ZW5lcik7XG4gICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIodG91Y2hFdmVudHNEZXNrdG9wLm1vdmUsIHN3aXBlci5zY3JvbGxiYXIub25EcmFnTW92ZSwgYWN0aXZlTGlzdGVuZXIpO1xuICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKHRvdWNoRXZlbnRzRGVza3RvcC5lbmQsIHN3aXBlci5zY3JvbGxiYXIub25EcmFnRW5kLCBwYXNzaXZlTGlzdGVuZXIpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGFyZ2V0LnJlbW92ZUV2ZW50TGlzdGVuZXIodG91Y2hFdmVudHNUb3VjaC5zdGFydCwgc3dpcGVyLnNjcm9sbGJhci5vbkRyYWdTdGFydCwgYWN0aXZlTGlzdGVuZXIpO1xuICAgICAgICB0YXJnZXQucmVtb3ZlRXZlbnRMaXN0ZW5lcih0b3VjaEV2ZW50c1RvdWNoLm1vdmUsIHN3aXBlci5zY3JvbGxiYXIub25EcmFnTW92ZSwgYWN0aXZlTGlzdGVuZXIpO1xuICAgICAgICB0YXJnZXQucmVtb3ZlRXZlbnRMaXN0ZW5lcih0b3VjaEV2ZW50c1RvdWNoLmVuZCwgc3dpcGVyLnNjcm9sbGJhci5vbkRyYWdFbmQsIHBhc3NpdmVMaXN0ZW5lcik7XG4gICAgICB9XG4gICAgfSxcbiAgICBpbml0OiBmdW5jdGlvbiBpbml0KCkge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICBpZiAoIXN3aXBlci5wYXJhbXMuc2Nyb2xsYmFyLmVsKSByZXR1cm47XG4gICAgICB2YXIgc2Nyb2xsYmFyID0gc3dpcGVyLnNjcm9sbGJhcixcbiAgICAgICAgICAkc3dpcGVyRWwgPSBzd2lwZXIuJGVsO1xuICAgICAgdmFyIHBhcmFtcyA9IHN3aXBlci5wYXJhbXMuc2Nyb2xsYmFyO1xuICAgICAgdmFyICRlbCA9ICQocGFyYW1zLmVsKTtcblxuICAgICAgaWYgKHN3aXBlci5wYXJhbXMudW5pcXVlTmF2RWxlbWVudHMgJiYgdHlwZW9mIHBhcmFtcy5lbCA9PT0gJ3N0cmluZycgJiYgJGVsLmxlbmd0aCA+IDEgJiYgJHN3aXBlckVsLmZpbmQocGFyYW1zLmVsKS5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgJGVsID0gJHN3aXBlckVsLmZpbmQocGFyYW1zLmVsKTtcbiAgICAgIH1cblxuICAgICAgdmFyICRkcmFnRWwgPSAkZWwuZmluZChcIi5cIiArIHN3aXBlci5wYXJhbXMuc2Nyb2xsYmFyLmRyYWdDbGFzcyk7XG5cbiAgICAgIGlmICgkZHJhZ0VsLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAkZHJhZ0VsID0gJChcIjxkaXYgY2xhc3M9XFxcIlwiICsgc3dpcGVyLnBhcmFtcy5zY3JvbGxiYXIuZHJhZ0NsYXNzICsgXCJcXFwiPjwvZGl2PlwiKTtcbiAgICAgICAgJGVsLmFwcGVuZCgkZHJhZ0VsKTtcbiAgICAgIH1cblxuICAgICAgZXh0ZW5kJDEoc2Nyb2xsYmFyLCB7XG4gICAgICAgICRlbDogJGVsLFxuICAgICAgICBlbDogJGVsWzBdLFxuICAgICAgICAkZHJhZ0VsOiAkZHJhZ0VsLFxuICAgICAgICBkcmFnRWw6ICRkcmFnRWxbMF1cbiAgICAgIH0pO1xuXG4gICAgICBpZiAocGFyYW1zLmRyYWdnYWJsZSkge1xuICAgICAgICBzY3JvbGxiYXIuZW5hYmxlRHJhZ2dhYmxlKCk7XG4gICAgICB9XG4gICAgfSxcbiAgICBkZXN0cm95OiBmdW5jdGlvbiBkZXN0cm95KCkge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICBzd2lwZXIuc2Nyb2xsYmFyLmRpc2FibGVEcmFnZ2FibGUoKTtcbiAgICB9XG4gIH07XG4gIHZhciBTY3JvbGxiYXIkMSA9IHtcbiAgICBuYW1lOiAnc2Nyb2xsYmFyJyxcbiAgICBwYXJhbXM6IHtcbiAgICAgIHNjcm9sbGJhcjoge1xuICAgICAgICBlbDogbnVsbCxcbiAgICAgICAgZHJhZ1NpemU6ICdhdXRvJyxcbiAgICAgICAgaGlkZTogZmFsc2UsXG4gICAgICAgIGRyYWdnYWJsZTogZmFsc2UsXG4gICAgICAgIHNuYXBPblJlbGVhc2U6IHRydWUsXG4gICAgICAgIGxvY2tDbGFzczogJ3N3aXBlci1zY3JvbGxiYXItbG9jaycsXG4gICAgICAgIGRyYWdDbGFzczogJ3N3aXBlci1zY3JvbGxiYXItZHJhZydcbiAgICAgIH1cbiAgICB9LFxuICAgIGNyZWF0ZTogZnVuY3Rpb24gY3JlYXRlKCkge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICBiaW5kTW9kdWxlTWV0aG9kcyhzd2lwZXIsIHtcbiAgICAgICAgc2Nyb2xsYmFyOiBfZXh0ZW5kcyh7XG4gICAgICAgICAgaXNUb3VjaGVkOiBmYWxzZSxcbiAgICAgICAgICB0aW1lb3V0OiBudWxsLFxuICAgICAgICAgIGRyYWdUaW1lb3V0OiBudWxsXG4gICAgICAgIH0sIFNjcm9sbGJhcilcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgb246IHtcbiAgICAgIGluaXQ6IGZ1bmN0aW9uIGluaXQoc3dpcGVyKSB7XG4gICAgICAgIHN3aXBlci5zY3JvbGxiYXIuaW5pdCgpO1xuICAgICAgICBzd2lwZXIuc2Nyb2xsYmFyLnVwZGF0ZVNpemUoKTtcbiAgICAgICAgc3dpcGVyLnNjcm9sbGJhci5zZXRUcmFuc2xhdGUoKTtcbiAgICAgIH0sXG4gICAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShzd2lwZXIpIHtcbiAgICAgICAgc3dpcGVyLnNjcm9sbGJhci51cGRhdGVTaXplKCk7XG4gICAgICB9LFxuICAgICAgcmVzaXplOiBmdW5jdGlvbiByZXNpemUoc3dpcGVyKSB7XG4gICAgICAgIHN3aXBlci5zY3JvbGxiYXIudXBkYXRlU2l6ZSgpO1xuICAgICAgfSxcbiAgICAgIG9ic2VydmVyVXBkYXRlOiBmdW5jdGlvbiBvYnNlcnZlclVwZGF0ZShzd2lwZXIpIHtcbiAgICAgICAgc3dpcGVyLnNjcm9sbGJhci51cGRhdGVTaXplKCk7XG4gICAgICB9LFxuICAgICAgc2V0VHJhbnNsYXRlOiBmdW5jdGlvbiBzZXRUcmFuc2xhdGUoc3dpcGVyKSB7XG4gICAgICAgIHN3aXBlci5zY3JvbGxiYXIuc2V0VHJhbnNsYXRlKCk7XG4gICAgICB9LFxuICAgICAgc2V0VHJhbnNpdGlvbjogZnVuY3Rpb24gc2V0VHJhbnNpdGlvbihzd2lwZXIsIGR1cmF0aW9uKSB7XG4gICAgICAgIHN3aXBlci5zY3JvbGxiYXIuc2V0VHJhbnNpdGlvbihkdXJhdGlvbik7XG4gICAgICB9LFxuICAgICAgZGVzdHJveTogZnVuY3Rpb24gZGVzdHJveShzd2lwZXIpIHtcbiAgICAgICAgc3dpcGVyLnNjcm9sbGJhci5kZXN0cm95KCk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIHZhciBQYXJhbGxheCA9IHtcbiAgICBzZXRUcmFuc2Zvcm06IGZ1bmN0aW9uIHNldFRyYW5zZm9ybShlbCwgcHJvZ3Jlc3MpIHtcbiAgICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgICAgdmFyIHJ0bCA9IHN3aXBlci5ydGw7XG4gICAgICB2YXIgJGVsID0gJChlbCk7XG4gICAgICB2YXIgcnRsRmFjdG9yID0gcnRsID8gLTEgOiAxO1xuICAgICAgdmFyIHAgPSAkZWwuYXR0cignZGF0YS1zd2lwZXItcGFyYWxsYXgnKSB8fCAnMCc7XG4gICAgICB2YXIgeCA9ICRlbC5hdHRyKCdkYXRhLXN3aXBlci1wYXJhbGxheC14Jyk7XG4gICAgICB2YXIgeSA9ICRlbC5hdHRyKCdkYXRhLXN3aXBlci1wYXJhbGxheC15Jyk7XG4gICAgICB2YXIgc2NhbGUgPSAkZWwuYXR0cignZGF0YS1zd2lwZXItcGFyYWxsYXgtc2NhbGUnKTtcbiAgICAgIHZhciBvcGFjaXR5ID0gJGVsLmF0dHIoJ2RhdGEtc3dpcGVyLXBhcmFsbGF4LW9wYWNpdHknKTtcblxuICAgICAgaWYgKHggfHwgeSkge1xuICAgICAgICB4ID0geCB8fCAnMCc7XG4gICAgICAgIHkgPSB5IHx8ICcwJztcbiAgICAgIH0gZWxzZSBpZiAoc3dpcGVyLmlzSG9yaXpvbnRhbCgpKSB7XG4gICAgICAgIHggPSBwO1xuICAgICAgICB5ID0gJzAnO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgeSA9IHA7XG4gICAgICAgIHggPSAnMCc7XG4gICAgICB9XG5cbiAgICAgIGlmICh4LmluZGV4T2YoJyUnKSA+PSAwKSB7XG4gICAgICAgIHggPSBwYXJzZUludCh4LCAxMCkgKiBwcm9ncmVzcyAqIHJ0bEZhY3RvciArIFwiJVwiO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgeCA9IHggKiBwcm9ncmVzcyAqIHJ0bEZhY3RvciArIFwicHhcIjtcbiAgICAgIH1cblxuICAgICAgaWYgKHkuaW5kZXhPZignJScpID49IDApIHtcbiAgICAgICAgeSA9IHBhcnNlSW50KHksIDEwKSAqIHByb2dyZXNzICsgXCIlXCI7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB5ID0geSAqIHByb2dyZXNzICsgXCJweFwiO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIG9wYWNpdHkgIT09ICd1bmRlZmluZWQnICYmIG9wYWNpdHkgIT09IG51bGwpIHtcbiAgICAgICAgdmFyIGN1cnJlbnRPcGFjaXR5ID0gb3BhY2l0eSAtIChvcGFjaXR5IC0gMSkgKiAoMSAtIE1hdGguYWJzKHByb2dyZXNzKSk7XG4gICAgICAgICRlbFswXS5zdHlsZS5vcGFjaXR5ID0gY3VycmVudE9wYWNpdHk7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2Ygc2NhbGUgPT09ICd1bmRlZmluZWQnIHx8IHNjYWxlID09PSBudWxsKSB7XG4gICAgICAgICRlbC50cmFuc2Zvcm0oXCJ0cmFuc2xhdGUzZChcIiArIHggKyBcIiwgXCIgKyB5ICsgXCIsIDBweClcIik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgY3VycmVudFNjYWxlID0gc2NhbGUgLSAoc2NhbGUgLSAxKSAqICgxIC0gTWF0aC5hYnMocHJvZ3Jlc3MpKTtcbiAgICAgICAgJGVsLnRyYW5zZm9ybShcInRyYW5zbGF0ZTNkKFwiICsgeCArIFwiLCBcIiArIHkgKyBcIiwgMHB4KSBzY2FsZShcIiArIGN1cnJlbnRTY2FsZSArIFwiKVwiKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIHNldFRyYW5zbGF0ZTogZnVuY3Rpb24gc2V0VHJhbnNsYXRlKCkge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICB2YXIgJGVsID0gc3dpcGVyLiRlbCxcbiAgICAgICAgICBzbGlkZXMgPSBzd2lwZXIuc2xpZGVzLFxuICAgICAgICAgIHByb2dyZXNzID0gc3dpcGVyLnByb2dyZXNzLFxuICAgICAgICAgIHNuYXBHcmlkID0gc3dpcGVyLnNuYXBHcmlkO1xuICAgICAgJGVsLmNoaWxkcmVuKCdbZGF0YS1zd2lwZXItcGFyYWxsYXhdLCBbZGF0YS1zd2lwZXItcGFyYWxsYXgteF0sIFtkYXRhLXN3aXBlci1wYXJhbGxheC15XSwgW2RhdGEtc3dpcGVyLXBhcmFsbGF4LW9wYWNpdHldLCBbZGF0YS1zd2lwZXItcGFyYWxsYXgtc2NhbGVdJykuZWFjaChmdW5jdGlvbiAoZWwpIHtcbiAgICAgICAgc3dpcGVyLnBhcmFsbGF4LnNldFRyYW5zZm9ybShlbCwgcHJvZ3Jlc3MpO1xuICAgICAgfSk7XG4gICAgICBzbGlkZXMuZWFjaChmdW5jdGlvbiAoc2xpZGVFbCwgc2xpZGVJbmRleCkge1xuICAgICAgICB2YXIgc2xpZGVQcm9ncmVzcyA9IHNsaWRlRWwucHJvZ3Jlc3M7XG5cbiAgICAgICAgaWYgKHN3aXBlci5wYXJhbXMuc2xpZGVzUGVyR3JvdXAgPiAxICYmIHN3aXBlci5wYXJhbXMuc2xpZGVzUGVyVmlldyAhPT0gJ2F1dG8nKSB7XG4gICAgICAgICAgc2xpZGVQcm9ncmVzcyArPSBNYXRoLmNlaWwoc2xpZGVJbmRleCAvIDIpIC0gcHJvZ3Jlc3MgKiAoc25hcEdyaWQubGVuZ3RoIC0gMSk7XG4gICAgICAgIH1cblxuICAgICAgICBzbGlkZVByb2dyZXNzID0gTWF0aC5taW4oTWF0aC5tYXgoc2xpZGVQcm9ncmVzcywgLTEpLCAxKTtcbiAgICAgICAgJChzbGlkZUVsKS5maW5kKCdbZGF0YS1zd2lwZXItcGFyYWxsYXhdLCBbZGF0YS1zd2lwZXItcGFyYWxsYXgteF0sIFtkYXRhLXN3aXBlci1wYXJhbGxheC15XSwgW2RhdGEtc3dpcGVyLXBhcmFsbGF4LW9wYWNpdHldLCBbZGF0YS1zd2lwZXItcGFyYWxsYXgtc2NhbGVdJykuZWFjaChmdW5jdGlvbiAoZWwpIHtcbiAgICAgICAgICBzd2lwZXIucGFyYWxsYXguc2V0VHJhbnNmb3JtKGVsLCBzbGlkZVByb2dyZXNzKTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIHNldFRyYW5zaXRpb246IGZ1bmN0aW9uIHNldFRyYW5zaXRpb24oZHVyYXRpb24pIHtcbiAgICAgIGlmIChkdXJhdGlvbiA9PT0gdm9pZCAwKSB7XG4gICAgICAgIGR1cmF0aW9uID0gdGhpcy5wYXJhbXMuc3BlZWQ7XG4gICAgICB9XG5cbiAgICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgICAgdmFyICRlbCA9IHN3aXBlci4kZWw7XG4gICAgICAkZWwuZmluZCgnW2RhdGEtc3dpcGVyLXBhcmFsbGF4XSwgW2RhdGEtc3dpcGVyLXBhcmFsbGF4LXhdLCBbZGF0YS1zd2lwZXItcGFyYWxsYXgteV0sIFtkYXRhLXN3aXBlci1wYXJhbGxheC1vcGFjaXR5XSwgW2RhdGEtc3dpcGVyLXBhcmFsbGF4LXNjYWxlXScpLmVhY2goZnVuY3Rpb24gKHBhcmFsbGF4RWwpIHtcbiAgICAgICAgdmFyICRwYXJhbGxheEVsID0gJChwYXJhbGxheEVsKTtcbiAgICAgICAgdmFyIHBhcmFsbGF4RHVyYXRpb24gPSBwYXJzZUludCgkcGFyYWxsYXhFbC5hdHRyKCdkYXRhLXN3aXBlci1wYXJhbGxheC1kdXJhdGlvbicpLCAxMCkgfHwgZHVyYXRpb247XG4gICAgICAgIGlmIChkdXJhdGlvbiA9PT0gMCkgcGFyYWxsYXhEdXJhdGlvbiA9IDA7XG4gICAgICAgICRwYXJhbGxheEVsLnRyYW5zaXRpb24ocGFyYWxsYXhEdXJhdGlvbik7XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG4gIHZhciBQYXJhbGxheCQxID0ge1xuICAgIG5hbWU6ICdwYXJhbGxheCcsXG4gICAgcGFyYW1zOiB7XG4gICAgICBwYXJhbGxheDoge1xuICAgICAgICBlbmFibGVkOiBmYWxzZVxuICAgICAgfVxuICAgIH0sXG4gICAgY3JlYXRlOiBmdW5jdGlvbiBjcmVhdGUoKSB7XG4gICAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICAgIGJpbmRNb2R1bGVNZXRob2RzKHN3aXBlciwge1xuICAgICAgICBwYXJhbGxheDogX2V4dGVuZHMoe30sIFBhcmFsbGF4KVxuICAgICAgfSk7XG4gICAgfSxcbiAgICBvbjoge1xuICAgICAgYmVmb3JlSW5pdDogZnVuY3Rpb24gYmVmb3JlSW5pdChzd2lwZXIpIHtcbiAgICAgICAgaWYgKCFzd2lwZXIucGFyYW1zLnBhcmFsbGF4LmVuYWJsZWQpIHJldHVybjtcbiAgICAgICAgc3dpcGVyLnBhcmFtcy53YXRjaFNsaWRlc1Byb2dyZXNzID0gdHJ1ZTtcbiAgICAgICAgc3dpcGVyLm9yaWdpbmFsUGFyYW1zLndhdGNoU2xpZGVzUHJvZ3Jlc3MgPSB0cnVlO1xuICAgICAgfSxcbiAgICAgIGluaXQ6IGZ1bmN0aW9uIGluaXQoc3dpcGVyKSB7XG4gICAgICAgIGlmICghc3dpcGVyLnBhcmFtcy5wYXJhbGxheC5lbmFibGVkKSByZXR1cm47XG4gICAgICAgIHN3aXBlci5wYXJhbGxheC5zZXRUcmFuc2xhdGUoKTtcbiAgICAgIH0sXG4gICAgICBzZXRUcmFuc2xhdGU6IGZ1bmN0aW9uIHNldFRyYW5zbGF0ZShzd2lwZXIpIHtcbiAgICAgICAgaWYgKCFzd2lwZXIucGFyYW1zLnBhcmFsbGF4LmVuYWJsZWQpIHJldHVybjtcbiAgICAgICAgc3dpcGVyLnBhcmFsbGF4LnNldFRyYW5zbGF0ZSgpO1xuICAgICAgfSxcbiAgICAgIHNldFRyYW5zaXRpb246IGZ1bmN0aW9uIHNldFRyYW5zaXRpb24oc3dpcGVyLCBkdXJhdGlvbikge1xuICAgICAgICBpZiAoIXN3aXBlci5wYXJhbXMucGFyYWxsYXguZW5hYmxlZCkgcmV0dXJuO1xuICAgICAgICBzd2lwZXIucGFyYWxsYXguc2V0VHJhbnNpdGlvbihkdXJhdGlvbik7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIHZhciBab29tID0ge1xuICAgIC8vIENhbGMgU2NhbGUgRnJvbSBNdWx0aS10b3VjaGVzXG4gICAgZ2V0RGlzdGFuY2VCZXR3ZWVuVG91Y2hlczogZnVuY3Rpb24gZ2V0RGlzdGFuY2VCZXR3ZWVuVG91Y2hlcyhlKSB7XG4gICAgICBpZiAoZS50YXJnZXRUb3VjaGVzLmxlbmd0aCA8IDIpIHJldHVybiAxO1xuICAgICAgdmFyIHgxID0gZS50YXJnZXRUb3VjaGVzWzBdLnBhZ2VYO1xuICAgICAgdmFyIHkxID0gZS50YXJnZXRUb3VjaGVzWzBdLnBhZ2VZO1xuICAgICAgdmFyIHgyID0gZS50YXJnZXRUb3VjaGVzWzFdLnBhZ2VYO1xuICAgICAgdmFyIHkyID0gZS50YXJnZXRUb3VjaGVzWzFdLnBhZ2VZO1xuICAgICAgdmFyIGRpc3RhbmNlID0gTWF0aC5zcXJ0KE1hdGgucG93KHgyIC0geDEsIDIpICsgTWF0aC5wb3coeTIgLSB5MSwgMikpO1xuICAgICAgcmV0dXJuIGRpc3RhbmNlO1xuICAgIH0sXG4gICAgLy8gRXZlbnRzXG4gICAgb25HZXN0dXJlU3RhcnQ6IGZ1bmN0aW9uIG9uR2VzdHVyZVN0YXJ0KGUpIHtcbiAgICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgICAgdmFyIHN1cHBvcnQgPSBzd2lwZXIuc3VwcG9ydDtcbiAgICAgIHZhciBwYXJhbXMgPSBzd2lwZXIucGFyYW1zLnpvb207XG4gICAgICB2YXIgem9vbSA9IHN3aXBlci56b29tO1xuICAgICAgdmFyIGdlc3R1cmUgPSB6b29tLmdlc3R1cmU7XG4gICAgICB6b29tLmZha2VHZXN0dXJlVG91Y2hlZCA9IGZhbHNlO1xuICAgICAgem9vbS5mYWtlR2VzdHVyZU1vdmVkID0gZmFsc2U7XG5cbiAgICAgIGlmICghc3VwcG9ydC5nZXN0dXJlcykge1xuICAgICAgICBpZiAoZS50eXBlICE9PSAndG91Y2hzdGFydCcgfHwgZS50eXBlID09PSAndG91Y2hzdGFydCcgJiYgZS50YXJnZXRUb3VjaGVzLmxlbmd0aCA8IDIpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICB6b29tLmZha2VHZXN0dXJlVG91Y2hlZCA9IHRydWU7XG4gICAgICAgIGdlc3R1cmUuc2NhbGVTdGFydCA9IFpvb20uZ2V0RGlzdGFuY2VCZXR3ZWVuVG91Y2hlcyhlKTtcbiAgICAgIH1cblxuICAgICAgaWYgKCFnZXN0dXJlLiRzbGlkZUVsIHx8ICFnZXN0dXJlLiRzbGlkZUVsLmxlbmd0aCkge1xuICAgICAgICBnZXN0dXJlLiRzbGlkZUVsID0gJChlLnRhcmdldCkuY2xvc2VzdChcIi5cIiArIHN3aXBlci5wYXJhbXMuc2xpZGVDbGFzcyk7XG4gICAgICAgIGlmIChnZXN0dXJlLiRzbGlkZUVsLmxlbmd0aCA9PT0gMCkgZ2VzdHVyZS4kc2xpZGVFbCA9IHN3aXBlci5zbGlkZXMuZXEoc3dpcGVyLmFjdGl2ZUluZGV4KTtcbiAgICAgICAgZ2VzdHVyZS4kaW1hZ2VFbCA9IGdlc3R1cmUuJHNsaWRlRWwuZmluZCgnaW1nLCBzdmcsIGNhbnZhcywgcGljdHVyZSwgLnN3aXBlci16b29tLXRhcmdldCcpO1xuICAgICAgICBnZXN0dXJlLiRpbWFnZVdyYXBFbCA9IGdlc3R1cmUuJGltYWdlRWwucGFyZW50KFwiLlwiICsgcGFyYW1zLmNvbnRhaW5lckNsYXNzKTtcbiAgICAgICAgZ2VzdHVyZS5tYXhSYXRpbyA9IGdlc3R1cmUuJGltYWdlV3JhcEVsLmF0dHIoJ2RhdGEtc3dpcGVyLXpvb20nKSB8fCBwYXJhbXMubWF4UmF0aW87XG5cbiAgICAgICAgaWYgKGdlc3R1cmUuJGltYWdlV3JhcEVsLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgIGdlc3R1cmUuJGltYWdlRWwgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChnZXN0dXJlLiRpbWFnZUVsKSB7XG4gICAgICAgIGdlc3R1cmUuJGltYWdlRWwudHJhbnNpdGlvbigwKTtcbiAgICAgIH1cblxuICAgICAgc3dpcGVyLnpvb20uaXNTY2FsaW5nID0gdHJ1ZTtcbiAgICB9LFxuICAgIG9uR2VzdHVyZUNoYW5nZTogZnVuY3Rpb24gb25HZXN0dXJlQ2hhbmdlKGUpIHtcbiAgICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgICAgdmFyIHN1cHBvcnQgPSBzd2lwZXIuc3VwcG9ydDtcbiAgICAgIHZhciBwYXJhbXMgPSBzd2lwZXIucGFyYW1zLnpvb207XG4gICAgICB2YXIgem9vbSA9IHN3aXBlci56b29tO1xuICAgICAgdmFyIGdlc3R1cmUgPSB6b29tLmdlc3R1cmU7XG5cbiAgICAgIGlmICghc3VwcG9ydC5nZXN0dXJlcykge1xuICAgICAgICBpZiAoZS50eXBlICE9PSAndG91Y2htb3ZlJyB8fCBlLnR5cGUgPT09ICd0b3VjaG1vdmUnICYmIGUudGFyZ2V0VG91Y2hlcy5sZW5ndGggPCAyKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgem9vbS5mYWtlR2VzdHVyZU1vdmVkID0gdHJ1ZTtcbiAgICAgICAgZ2VzdHVyZS5zY2FsZU1vdmUgPSBab29tLmdldERpc3RhbmNlQmV0d2VlblRvdWNoZXMoZSk7XG4gICAgICB9XG5cbiAgICAgIGlmICghZ2VzdHVyZS4kaW1hZ2VFbCB8fCBnZXN0dXJlLiRpbWFnZUVsLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBpZiAoZS50eXBlID09PSAnZ2VzdHVyZWNoYW5nZScpIHpvb20ub25HZXN0dXJlU3RhcnQoZSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKHN1cHBvcnQuZ2VzdHVyZXMpIHtcbiAgICAgICAgem9vbS5zY2FsZSA9IGUuc2NhbGUgKiB6b29tLmN1cnJlbnRTY2FsZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHpvb20uc2NhbGUgPSBnZXN0dXJlLnNjYWxlTW92ZSAvIGdlc3R1cmUuc2NhbGVTdGFydCAqIHpvb20uY3VycmVudFNjYWxlO1xuICAgICAgfVxuXG4gICAgICBpZiAoem9vbS5zY2FsZSA+IGdlc3R1cmUubWF4UmF0aW8pIHtcbiAgICAgICAgem9vbS5zY2FsZSA9IGdlc3R1cmUubWF4UmF0aW8gLSAxICsgTWF0aC5wb3coem9vbS5zY2FsZSAtIGdlc3R1cmUubWF4UmF0aW8gKyAxLCAwLjUpO1xuICAgICAgfVxuXG4gICAgICBpZiAoem9vbS5zY2FsZSA8IHBhcmFtcy5taW5SYXRpbykge1xuICAgICAgICB6b29tLnNjYWxlID0gcGFyYW1zLm1pblJhdGlvICsgMSAtIE1hdGgucG93KHBhcmFtcy5taW5SYXRpbyAtIHpvb20uc2NhbGUgKyAxLCAwLjUpO1xuICAgICAgfVxuXG4gICAgICBnZXN0dXJlLiRpbWFnZUVsLnRyYW5zZm9ybShcInRyYW5zbGF0ZTNkKDAsMCwwKSBzY2FsZShcIiArIHpvb20uc2NhbGUgKyBcIilcIik7XG4gICAgfSxcbiAgICBvbkdlc3R1cmVFbmQ6IGZ1bmN0aW9uIG9uR2VzdHVyZUVuZChlKSB7XG4gICAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICAgIHZhciBkZXZpY2UgPSBzd2lwZXIuZGV2aWNlO1xuICAgICAgdmFyIHN1cHBvcnQgPSBzd2lwZXIuc3VwcG9ydDtcbiAgICAgIHZhciBwYXJhbXMgPSBzd2lwZXIucGFyYW1zLnpvb207XG4gICAgICB2YXIgem9vbSA9IHN3aXBlci56b29tO1xuICAgICAgdmFyIGdlc3R1cmUgPSB6b29tLmdlc3R1cmU7XG5cbiAgICAgIGlmICghc3VwcG9ydC5nZXN0dXJlcykge1xuICAgICAgICBpZiAoIXpvb20uZmFrZUdlc3R1cmVUb3VjaGVkIHx8ICF6b29tLmZha2VHZXN0dXJlTW92ZWQpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZS50eXBlICE9PSAndG91Y2hlbmQnIHx8IGUudHlwZSA9PT0gJ3RvdWNoZW5kJyAmJiBlLmNoYW5nZWRUb3VjaGVzLmxlbmd0aCA8IDIgJiYgIWRldmljZS5hbmRyb2lkKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgem9vbS5mYWtlR2VzdHVyZVRvdWNoZWQgPSBmYWxzZTtcbiAgICAgICAgem9vbS5mYWtlR2VzdHVyZU1vdmVkID0gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIGlmICghZ2VzdHVyZS4kaW1hZ2VFbCB8fCBnZXN0dXJlLiRpbWFnZUVsLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuICAgICAgem9vbS5zY2FsZSA9IE1hdGgubWF4KE1hdGgubWluKHpvb20uc2NhbGUsIGdlc3R1cmUubWF4UmF0aW8pLCBwYXJhbXMubWluUmF0aW8pO1xuICAgICAgZ2VzdHVyZS4kaW1hZ2VFbC50cmFuc2l0aW9uKHN3aXBlci5wYXJhbXMuc3BlZWQpLnRyYW5zZm9ybShcInRyYW5zbGF0ZTNkKDAsMCwwKSBzY2FsZShcIiArIHpvb20uc2NhbGUgKyBcIilcIik7XG4gICAgICB6b29tLmN1cnJlbnRTY2FsZSA9IHpvb20uc2NhbGU7XG4gICAgICB6b29tLmlzU2NhbGluZyA9IGZhbHNlO1xuICAgICAgaWYgKHpvb20uc2NhbGUgPT09IDEpIGdlc3R1cmUuJHNsaWRlRWwgPSB1bmRlZmluZWQ7XG4gICAgfSxcbiAgICBvblRvdWNoU3RhcnQ6IGZ1bmN0aW9uIG9uVG91Y2hTdGFydChlKSB7XG4gICAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICAgIHZhciBkZXZpY2UgPSBzd2lwZXIuZGV2aWNlO1xuICAgICAgdmFyIHpvb20gPSBzd2lwZXIuem9vbTtcbiAgICAgIHZhciBnZXN0dXJlID0gem9vbS5nZXN0dXJlLFxuICAgICAgICAgIGltYWdlID0gem9vbS5pbWFnZTtcbiAgICAgIGlmICghZ2VzdHVyZS4kaW1hZ2VFbCB8fCBnZXN0dXJlLiRpbWFnZUVsLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuICAgICAgaWYgKGltYWdlLmlzVG91Y2hlZCkgcmV0dXJuO1xuICAgICAgaWYgKGRldmljZS5hbmRyb2lkICYmIGUuY2FuY2VsYWJsZSkgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgaW1hZ2UuaXNUb3VjaGVkID0gdHJ1ZTtcbiAgICAgIGltYWdlLnRvdWNoZXNTdGFydC54ID0gZS50eXBlID09PSAndG91Y2hzdGFydCcgPyBlLnRhcmdldFRvdWNoZXNbMF0ucGFnZVggOiBlLnBhZ2VYO1xuICAgICAgaW1hZ2UudG91Y2hlc1N0YXJ0LnkgPSBlLnR5cGUgPT09ICd0b3VjaHN0YXJ0JyA/IGUudGFyZ2V0VG91Y2hlc1swXS5wYWdlWSA6IGUucGFnZVk7XG4gICAgfSxcbiAgICBvblRvdWNoTW92ZTogZnVuY3Rpb24gb25Ub3VjaE1vdmUoZSkge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICB2YXIgem9vbSA9IHN3aXBlci56b29tO1xuICAgICAgdmFyIGdlc3R1cmUgPSB6b29tLmdlc3R1cmUsXG4gICAgICAgICAgaW1hZ2UgPSB6b29tLmltYWdlLFxuICAgICAgICAgIHZlbG9jaXR5ID0gem9vbS52ZWxvY2l0eTtcbiAgICAgIGlmICghZ2VzdHVyZS4kaW1hZ2VFbCB8fCBnZXN0dXJlLiRpbWFnZUVsLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuICAgICAgc3dpcGVyLmFsbG93Q2xpY2sgPSBmYWxzZTtcbiAgICAgIGlmICghaW1hZ2UuaXNUb3VjaGVkIHx8ICFnZXN0dXJlLiRzbGlkZUVsKSByZXR1cm47XG5cbiAgICAgIGlmICghaW1hZ2UuaXNNb3ZlZCkge1xuICAgICAgICBpbWFnZS53aWR0aCA9IGdlc3R1cmUuJGltYWdlRWxbMF0ub2Zmc2V0V2lkdGg7XG4gICAgICAgIGltYWdlLmhlaWdodCA9IGdlc3R1cmUuJGltYWdlRWxbMF0ub2Zmc2V0SGVpZ2h0O1xuICAgICAgICBpbWFnZS5zdGFydFggPSBnZXRUcmFuc2xhdGUoZ2VzdHVyZS4kaW1hZ2VXcmFwRWxbMF0sICd4JykgfHwgMDtcbiAgICAgICAgaW1hZ2Uuc3RhcnRZID0gZ2V0VHJhbnNsYXRlKGdlc3R1cmUuJGltYWdlV3JhcEVsWzBdLCAneScpIHx8IDA7XG4gICAgICAgIGdlc3R1cmUuc2xpZGVXaWR0aCA9IGdlc3R1cmUuJHNsaWRlRWxbMF0ub2Zmc2V0V2lkdGg7XG4gICAgICAgIGdlc3R1cmUuc2xpZGVIZWlnaHQgPSBnZXN0dXJlLiRzbGlkZUVsWzBdLm9mZnNldEhlaWdodDtcbiAgICAgICAgZ2VzdHVyZS4kaW1hZ2VXcmFwRWwudHJhbnNpdGlvbigwKTtcblxuICAgICAgICBpZiAoc3dpcGVyLnJ0bCkge1xuICAgICAgICAgIGltYWdlLnN0YXJ0WCA9IC1pbWFnZS5zdGFydFg7XG4gICAgICAgICAgaW1hZ2Uuc3RhcnRZID0gLWltYWdlLnN0YXJ0WTtcbiAgICAgICAgfVxuICAgICAgfSAvLyBEZWZpbmUgaWYgd2UgbmVlZCBpbWFnZSBkcmFnXG5cblxuICAgICAgdmFyIHNjYWxlZFdpZHRoID0gaW1hZ2Uud2lkdGggKiB6b29tLnNjYWxlO1xuICAgICAgdmFyIHNjYWxlZEhlaWdodCA9IGltYWdlLmhlaWdodCAqIHpvb20uc2NhbGU7XG4gICAgICBpZiAoc2NhbGVkV2lkdGggPCBnZXN0dXJlLnNsaWRlV2lkdGggJiYgc2NhbGVkSGVpZ2h0IDwgZ2VzdHVyZS5zbGlkZUhlaWdodCkgcmV0dXJuO1xuICAgICAgaW1hZ2UubWluWCA9IE1hdGgubWluKGdlc3R1cmUuc2xpZGVXaWR0aCAvIDIgLSBzY2FsZWRXaWR0aCAvIDIsIDApO1xuICAgICAgaW1hZ2UubWF4WCA9IC1pbWFnZS5taW5YO1xuICAgICAgaW1hZ2UubWluWSA9IE1hdGgubWluKGdlc3R1cmUuc2xpZGVIZWlnaHQgLyAyIC0gc2NhbGVkSGVpZ2h0IC8gMiwgMCk7XG4gICAgICBpbWFnZS5tYXhZID0gLWltYWdlLm1pblk7XG4gICAgICBpbWFnZS50b3VjaGVzQ3VycmVudC54ID0gZS50eXBlID09PSAndG91Y2htb3ZlJyA/IGUudGFyZ2V0VG91Y2hlc1swXS5wYWdlWCA6IGUucGFnZVg7XG4gICAgICBpbWFnZS50b3VjaGVzQ3VycmVudC55ID0gZS50eXBlID09PSAndG91Y2htb3ZlJyA/IGUudGFyZ2V0VG91Y2hlc1swXS5wYWdlWSA6IGUucGFnZVk7XG5cbiAgICAgIGlmICghaW1hZ2UuaXNNb3ZlZCAmJiAhem9vbS5pc1NjYWxpbmcpIHtcbiAgICAgICAgaWYgKHN3aXBlci5pc0hvcml6b250YWwoKSAmJiAoTWF0aC5mbG9vcihpbWFnZS5taW5YKSA9PT0gTWF0aC5mbG9vcihpbWFnZS5zdGFydFgpICYmIGltYWdlLnRvdWNoZXNDdXJyZW50LnggPCBpbWFnZS50b3VjaGVzU3RhcnQueCB8fCBNYXRoLmZsb29yKGltYWdlLm1heFgpID09PSBNYXRoLmZsb29yKGltYWdlLnN0YXJ0WCkgJiYgaW1hZ2UudG91Y2hlc0N1cnJlbnQueCA+IGltYWdlLnRvdWNoZXNTdGFydC54KSkge1xuICAgICAgICAgIGltYWdlLmlzVG91Y2hlZCA9IGZhbHNlO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICghc3dpcGVyLmlzSG9yaXpvbnRhbCgpICYmIChNYXRoLmZsb29yKGltYWdlLm1pblkpID09PSBNYXRoLmZsb29yKGltYWdlLnN0YXJ0WSkgJiYgaW1hZ2UudG91Y2hlc0N1cnJlbnQueSA8IGltYWdlLnRvdWNoZXNTdGFydC55IHx8IE1hdGguZmxvb3IoaW1hZ2UubWF4WSkgPT09IE1hdGguZmxvb3IoaW1hZ2Uuc3RhcnRZKSAmJiBpbWFnZS50b3VjaGVzQ3VycmVudC55ID4gaW1hZ2UudG91Y2hlc1N0YXJ0LnkpKSB7XG4gICAgICAgICAgaW1hZ2UuaXNUb3VjaGVkID0gZmFsc2U7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChlLmNhbmNlbGFibGUpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgfVxuXG4gICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgaW1hZ2UuaXNNb3ZlZCA9IHRydWU7XG4gICAgICBpbWFnZS5jdXJyZW50WCA9IGltYWdlLnRvdWNoZXNDdXJyZW50LnggLSBpbWFnZS50b3VjaGVzU3RhcnQueCArIGltYWdlLnN0YXJ0WDtcbiAgICAgIGltYWdlLmN1cnJlbnRZID0gaW1hZ2UudG91Y2hlc0N1cnJlbnQueSAtIGltYWdlLnRvdWNoZXNTdGFydC55ICsgaW1hZ2Uuc3RhcnRZO1xuXG4gICAgICBpZiAoaW1hZ2UuY3VycmVudFggPCBpbWFnZS5taW5YKSB7XG4gICAgICAgIGltYWdlLmN1cnJlbnRYID0gaW1hZ2UubWluWCArIDEgLSBNYXRoLnBvdyhpbWFnZS5taW5YIC0gaW1hZ2UuY3VycmVudFggKyAxLCAwLjgpO1xuICAgICAgfVxuXG4gICAgICBpZiAoaW1hZ2UuY3VycmVudFggPiBpbWFnZS5tYXhYKSB7XG4gICAgICAgIGltYWdlLmN1cnJlbnRYID0gaW1hZ2UubWF4WCAtIDEgKyBNYXRoLnBvdyhpbWFnZS5jdXJyZW50WCAtIGltYWdlLm1heFggKyAxLCAwLjgpO1xuICAgICAgfVxuXG4gICAgICBpZiAoaW1hZ2UuY3VycmVudFkgPCBpbWFnZS5taW5ZKSB7XG4gICAgICAgIGltYWdlLmN1cnJlbnRZID0gaW1hZ2UubWluWSArIDEgLSBNYXRoLnBvdyhpbWFnZS5taW5ZIC0gaW1hZ2UuY3VycmVudFkgKyAxLCAwLjgpO1xuICAgICAgfVxuXG4gICAgICBpZiAoaW1hZ2UuY3VycmVudFkgPiBpbWFnZS5tYXhZKSB7XG4gICAgICAgIGltYWdlLmN1cnJlbnRZID0gaW1hZ2UubWF4WSAtIDEgKyBNYXRoLnBvdyhpbWFnZS5jdXJyZW50WSAtIGltYWdlLm1heFkgKyAxLCAwLjgpO1xuICAgICAgfSAvLyBWZWxvY2l0eVxuXG5cbiAgICAgIGlmICghdmVsb2NpdHkucHJldlBvc2l0aW9uWCkgdmVsb2NpdHkucHJldlBvc2l0aW9uWCA9IGltYWdlLnRvdWNoZXNDdXJyZW50Lng7XG4gICAgICBpZiAoIXZlbG9jaXR5LnByZXZQb3NpdGlvblkpIHZlbG9jaXR5LnByZXZQb3NpdGlvblkgPSBpbWFnZS50b3VjaGVzQ3VycmVudC55O1xuICAgICAgaWYgKCF2ZWxvY2l0eS5wcmV2VGltZSkgdmVsb2NpdHkucHJldlRpbWUgPSBEYXRlLm5vdygpO1xuICAgICAgdmVsb2NpdHkueCA9IChpbWFnZS50b3VjaGVzQ3VycmVudC54IC0gdmVsb2NpdHkucHJldlBvc2l0aW9uWCkgLyAoRGF0ZS5ub3coKSAtIHZlbG9jaXR5LnByZXZUaW1lKSAvIDI7XG4gICAgICB2ZWxvY2l0eS55ID0gKGltYWdlLnRvdWNoZXNDdXJyZW50LnkgLSB2ZWxvY2l0eS5wcmV2UG9zaXRpb25ZKSAvIChEYXRlLm5vdygpIC0gdmVsb2NpdHkucHJldlRpbWUpIC8gMjtcbiAgICAgIGlmIChNYXRoLmFicyhpbWFnZS50b3VjaGVzQ3VycmVudC54IC0gdmVsb2NpdHkucHJldlBvc2l0aW9uWCkgPCAyKSB2ZWxvY2l0eS54ID0gMDtcbiAgICAgIGlmIChNYXRoLmFicyhpbWFnZS50b3VjaGVzQ3VycmVudC55IC0gdmVsb2NpdHkucHJldlBvc2l0aW9uWSkgPCAyKSB2ZWxvY2l0eS55ID0gMDtcbiAgICAgIHZlbG9jaXR5LnByZXZQb3NpdGlvblggPSBpbWFnZS50b3VjaGVzQ3VycmVudC54O1xuICAgICAgdmVsb2NpdHkucHJldlBvc2l0aW9uWSA9IGltYWdlLnRvdWNoZXNDdXJyZW50Lnk7XG4gICAgICB2ZWxvY2l0eS5wcmV2VGltZSA9IERhdGUubm93KCk7XG4gICAgICBnZXN0dXJlLiRpbWFnZVdyYXBFbC50cmFuc2Zvcm0oXCJ0cmFuc2xhdGUzZChcIiArIGltYWdlLmN1cnJlbnRYICsgXCJweCwgXCIgKyBpbWFnZS5jdXJyZW50WSArIFwicHgsMClcIik7XG4gICAgfSxcbiAgICBvblRvdWNoRW5kOiBmdW5jdGlvbiBvblRvdWNoRW5kKCkge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICB2YXIgem9vbSA9IHN3aXBlci56b29tO1xuICAgICAgdmFyIGdlc3R1cmUgPSB6b29tLmdlc3R1cmUsXG4gICAgICAgICAgaW1hZ2UgPSB6b29tLmltYWdlLFxuICAgICAgICAgIHZlbG9jaXR5ID0gem9vbS52ZWxvY2l0eTtcbiAgICAgIGlmICghZ2VzdHVyZS4kaW1hZ2VFbCB8fCBnZXN0dXJlLiRpbWFnZUVsLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuXG4gICAgICBpZiAoIWltYWdlLmlzVG91Y2hlZCB8fCAhaW1hZ2UuaXNNb3ZlZCkge1xuICAgICAgICBpbWFnZS5pc1RvdWNoZWQgPSBmYWxzZTtcbiAgICAgICAgaW1hZ2UuaXNNb3ZlZCA9IGZhbHNlO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGltYWdlLmlzVG91Y2hlZCA9IGZhbHNlO1xuICAgICAgaW1hZ2UuaXNNb3ZlZCA9IGZhbHNlO1xuICAgICAgdmFyIG1vbWVudHVtRHVyYXRpb25YID0gMzAwO1xuICAgICAgdmFyIG1vbWVudHVtRHVyYXRpb25ZID0gMzAwO1xuICAgICAgdmFyIG1vbWVudHVtRGlzdGFuY2VYID0gdmVsb2NpdHkueCAqIG1vbWVudHVtRHVyYXRpb25YO1xuICAgICAgdmFyIG5ld1Bvc2l0aW9uWCA9IGltYWdlLmN1cnJlbnRYICsgbW9tZW50dW1EaXN0YW5jZVg7XG4gICAgICB2YXIgbW9tZW50dW1EaXN0YW5jZVkgPSB2ZWxvY2l0eS55ICogbW9tZW50dW1EdXJhdGlvblk7XG4gICAgICB2YXIgbmV3UG9zaXRpb25ZID0gaW1hZ2UuY3VycmVudFkgKyBtb21lbnR1bURpc3RhbmNlWTsgLy8gRml4IGR1cmF0aW9uXG5cbiAgICAgIGlmICh2ZWxvY2l0eS54ICE9PSAwKSBtb21lbnR1bUR1cmF0aW9uWCA9IE1hdGguYWJzKChuZXdQb3NpdGlvblggLSBpbWFnZS5jdXJyZW50WCkgLyB2ZWxvY2l0eS54KTtcbiAgICAgIGlmICh2ZWxvY2l0eS55ICE9PSAwKSBtb21lbnR1bUR1cmF0aW9uWSA9IE1hdGguYWJzKChuZXdQb3NpdGlvblkgLSBpbWFnZS5jdXJyZW50WSkgLyB2ZWxvY2l0eS55KTtcbiAgICAgIHZhciBtb21lbnR1bUR1cmF0aW9uID0gTWF0aC5tYXgobW9tZW50dW1EdXJhdGlvblgsIG1vbWVudHVtRHVyYXRpb25ZKTtcbiAgICAgIGltYWdlLmN1cnJlbnRYID0gbmV3UG9zaXRpb25YO1xuICAgICAgaW1hZ2UuY3VycmVudFkgPSBuZXdQb3NpdGlvblk7IC8vIERlZmluZSBpZiB3ZSBuZWVkIGltYWdlIGRyYWdcblxuICAgICAgdmFyIHNjYWxlZFdpZHRoID0gaW1hZ2Uud2lkdGggKiB6b29tLnNjYWxlO1xuICAgICAgdmFyIHNjYWxlZEhlaWdodCA9IGltYWdlLmhlaWdodCAqIHpvb20uc2NhbGU7XG4gICAgICBpbWFnZS5taW5YID0gTWF0aC5taW4oZ2VzdHVyZS5zbGlkZVdpZHRoIC8gMiAtIHNjYWxlZFdpZHRoIC8gMiwgMCk7XG4gICAgICBpbWFnZS5tYXhYID0gLWltYWdlLm1pblg7XG4gICAgICBpbWFnZS5taW5ZID0gTWF0aC5taW4oZ2VzdHVyZS5zbGlkZUhlaWdodCAvIDIgLSBzY2FsZWRIZWlnaHQgLyAyLCAwKTtcbiAgICAgIGltYWdlLm1heFkgPSAtaW1hZ2UubWluWTtcbiAgICAgIGltYWdlLmN1cnJlbnRYID0gTWF0aC5tYXgoTWF0aC5taW4oaW1hZ2UuY3VycmVudFgsIGltYWdlLm1heFgpLCBpbWFnZS5taW5YKTtcbiAgICAgIGltYWdlLmN1cnJlbnRZID0gTWF0aC5tYXgoTWF0aC5taW4oaW1hZ2UuY3VycmVudFksIGltYWdlLm1heFkpLCBpbWFnZS5taW5ZKTtcbiAgICAgIGdlc3R1cmUuJGltYWdlV3JhcEVsLnRyYW5zaXRpb24obW9tZW50dW1EdXJhdGlvbikudHJhbnNmb3JtKFwidHJhbnNsYXRlM2QoXCIgKyBpbWFnZS5jdXJyZW50WCArIFwicHgsIFwiICsgaW1hZ2UuY3VycmVudFkgKyBcInB4LDApXCIpO1xuICAgIH0sXG4gICAgb25UcmFuc2l0aW9uRW5kOiBmdW5jdGlvbiBvblRyYW5zaXRpb25FbmQoKSB7XG4gICAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICAgIHZhciB6b29tID0gc3dpcGVyLnpvb207XG4gICAgICB2YXIgZ2VzdHVyZSA9IHpvb20uZ2VzdHVyZTtcblxuICAgICAgaWYgKGdlc3R1cmUuJHNsaWRlRWwgJiYgc3dpcGVyLnByZXZpb3VzSW5kZXggIT09IHN3aXBlci5hY3RpdmVJbmRleCkge1xuICAgICAgICBpZiAoZ2VzdHVyZS4kaW1hZ2VFbCkge1xuICAgICAgICAgIGdlc3R1cmUuJGltYWdlRWwudHJhbnNmb3JtKCd0cmFuc2xhdGUzZCgwLDAsMCkgc2NhbGUoMSknKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChnZXN0dXJlLiRpbWFnZVdyYXBFbCkge1xuICAgICAgICAgIGdlc3R1cmUuJGltYWdlV3JhcEVsLnRyYW5zZm9ybSgndHJhbnNsYXRlM2QoMCwwLDApJyk7XG4gICAgICAgIH1cblxuICAgICAgICB6b29tLnNjYWxlID0gMTtcbiAgICAgICAgem9vbS5jdXJyZW50U2NhbGUgPSAxO1xuICAgICAgICBnZXN0dXJlLiRzbGlkZUVsID0gdW5kZWZpbmVkO1xuICAgICAgICBnZXN0dXJlLiRpbWFnZUVsID0gdW5kZWZpbmVkO1xuICAgICAgICBnZXN0dXJlLiRpbWFnZVdyYXBFbCA9IHVuZGVmaW5lZDtcbiAgICAgIH1cbiAgICB9LFxuICAgIC8vIFRvZ2dsZSBab29tXG4gICAgdG9nZ2xlOiBmdW5jdGlvbiB0b2dnbGUoZSkge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICB2YXIgem9vbSA9IHN3aXBlci56b29tO1xuXG4gICAgICBpZiAoem9vbS5zY2FsZSAmJiB6b29tLnNjYWxlICE9PSAxKSB7XG4gICAgICAgIC8vIFpvb20gT3V0XG4gICAgICAgIHpvb20ub3V0KCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBab29tIEluXG4gICAgICAgIHpvb20uaW4oZSk7XG4gICAgICB9XG4gICAgfSxcbiAgICBpbjogZnVuY3Rpb24gX2luKGUpIHtcbiAgICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgICAgdmFyIHpvb20gPSBzd2lwZXIuem9vbTtcbiAgICAgIHZhciBwYXJhbXMgPSBzd2lwZXIucGFyYW1zLnpvb207XG4gICAgICB2YXIgZ2VzdHVyZSA9IHpvb20uZ2VzdHVyZSxcbiAgICAgICAgICBpbWFnZSA9IHpvb20uaW1hZ2U7XG5cbiAgICAgIGlmICghZ2VzdHVyZS4kc2xpZGVFbCkge1xuICAgICAgICBpZiAoc3dpcGVyLnBhcmFtcy52aXJ0dWFsICYmIHN3aXBlci5wYXJhbXMudmlydHVhbC5lbmFibGVkICYmIHN3aXBlci52aXJ0dWFsKSB7XG4gICAgICAgICAgZ2VzdHVyZS4kc2xpZGVFbCA9IHN3aXBlci4kd3JhcHBlckVsLmNoaWxkcmVuKFwiLlwiICsgc3dpcGVyLnBhcmFtcy5zbGlkZUFjdGl2ZUNsYXNzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBnZXN0dXJlLiRzbGlkZUVsID0gc3dpcGVyLnNsaWRlcy5lcShzd2lwZXIuYWN0aXZlSW5kZXgpO1xuICAgICAgICB9XG5cbiAgICAgICAgZ2VzdHVyZS4kaW1hZ2VFbCA9IGdlc3R1cmUuJHNsaWRlRWwuZmluZCgnaW1nLCBzdmcsIGNhbnZhcywgcGljdHVyZSwgLnN3aXBlci16b29tLXRhcmdldCcpO1xuICAgICAgICBnZXN0dXJlLiRpbWFnZVdyYXBFbCA9IGdlc3R1cmUuJGltYWdlRWwucGFyZW50KFwiLlwiICsgcGFyYW1zLmNvbnRhaW5lckNsYXNzKTtcbiAgICAgIH1cblxuICAgICAgaWYgKCFnZXN0dXJlLiRpbWFnZUVsIHx8IGdlc3R1cmUuJGltYWdlRWwubGVuZ3RoID09PSAwKSByZXR1cm47XG4gICAgICBnZXN0dXJlLiRzbGlkZUVsLmFkZENsYXNzKFwiXCIgKyBwYXJhbXMuem9vbWVkU2xpZGVDbGFzcyk7XG4gICAgICB2YXIgdG91Y2hYO1xuICAgICAgdmFyIHRvdWNoWTtcbiAgICAgIHZhciBvZmZzZXRYO1xuICAgICAgdmFyIG9mZnNldFk7XG4gICAgICB2YXIgZGlmZlg7XG4gICAgICB2YXIgZGlmZlk7XG4gICAgICB2YXIgdHJhbnNsYXRlWDtcbiAgICAgIHZhciB0cmFuc2xhdGVZO1xuICAgICAgdmFyIGltYWdlV2lkdGg7XG4gICAgICB2YXIgaW1hZ2VIZWlnaHQ7XG4gICAgICB2YXIgc2NhbGVkV2lkdGg7XG4gICAgICB2YXIgc2NhbGVkSGVpZ2h0O1xuICAgICAgdmFyIHRyYW5zbGF0ZU1pblg7XG4gICAgICB2YXIgdHJhbnNsYXRlTWluWTtcbiAgICAgIHZhciB0cmFuc2xhdGVNYXhYO1xuICAgICAgdmFyIHRyYW5zbGF0ZU1heFk7XG4gICAgICB2YXIgc2xpZGVXaWR0aDtcbiAgICAgIHZhciBzbGlkZUhlaWdodDtcblxuICAgICAgaWYgKHR5cGVvZiBpbWFnZS50b3VjaGVzU3RhcnQueCA9PT0gJ3VuZGVmaW5lZCcgJiYgZSkge1xuICAgICAgICB0b3VjaFggPSBlLnR5cGUgPT09ICd0b3VjaGVuZCcgPyBlLmNoYW5nZWRUb3VjaGVzWzBdLnBhZ2VYIDogZS5wYWdlWDtcbiAgICAgICAgdG91Y2hZID0gZS50eXBlID09PSAndG91Y2hlbmQnID8gZS5jaGFuZ2VkVG91Y2hlc1swXS5wYWdlWSA6IGUucGFnZVk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0b3VjaFggPSBpbWFnZS50b3VjaGVzU3RhcnQueDtcbiAgICAgICAgdG91Y2hZID0gaW1hZ2UudG91Y2hlc1N0YXJ0Lnk7XG4gICAgICB9XG5cbiAgICAgIHpvb20uc2NhbGUgPSBnZXN0dXJlLiRpbWFnZVdyYXBFbC5hdHRyKCdkYXRhLXN3aXBlci16b29tJykgfHwgcGFyYW1zLm1heFJhdGlvO1xuICAgICAgem9vbS5jdXJyZW50U2NhbGUgPSBnZXN0dXJlLiRpbWFnZVdyYXBFbC5hdHRyKCdkYXRhLXN3aXBlci16b29tJykgfHwgcGFyYW1zLm1heFJhdGlvO1xuXG4gICAgICBpZiAoZSkge1xuICAgICAgICBzbGlkZVdpZHRoID0gZ2VzdHVyZS4kc2xpZGVFbFswXS5vZmZzZXRXaWR0aDtcbiAgICAgICAgc2xpZGVIZWlnaHQgPSBnZXN0dXJlLiRzbGlkZUVsWzBdLm9mZnNldEhlaWdodDtcbiAgICAgICAgb2Zmc2V0WCA9IGdlc3R1cmUuJHNsaWRlRWwub2Zmc2V0KCkubGVmdDtcbiAgICAgICAgb2Zmc2V0WSA9IGdlc3R1cmUuJHNsaWRlRWwub2Zmc2V0KCkudG9wO1xuICAgICAgICBkaWZmWCA9IG9mZnNldFggKyBzbGlkZVdpZHRoIC8gMiAtIHRvdWNoWDtcbiAgICAgICAgZGlmZlkgPSBvZmZzZXRZICsgc2xpZGVIZWlnaHQgLyAyIC0gdG91Y2hZO1xuICAgICAgICBpbWFnZVdpZHRoID0gZ2VzdHVyZS4kaW1hZ2VFbFswXS5vZmZzZXRXaWR0aDtcbiAgICAgICAgaW1hZ2VIZWlnaHQgPSBnZXN0dXJlLiRpbWFnZUVsWzBdLm9mZnNldEhlaWdodDtcbiAgICAgICAgc2NhbGVkV2lkdGggPSBpbWFnZVdpZHRoICogem9vbS5zY2FsZTtcbiAgICAgICAgc2NhbGVkSGVpZ2h0ID0gaW1hZ2VIZWlnaHQgKiB6b29tLnNjYWxlO1xuICAgICAgICB0cmFuc2xhdGVNaW5YID0gTWF0aC5taW4oc2xpZGVXaWR0aCAvIDIgLSBzY2FsZWRXaWR0aCAvIDIsIDApO1xuICAgICAgICB0cmFuc2xhdGVNaW5ZID0gTWF0aC5taW4oc2xpZGVIZWlnaHQgLyAyIC0gc2NhbGVkSGVpZ2h0IC8gMiwgMCk7XG4gICAgICAgIHRyYW5zbGF0ZU1heFggPSAtdHJhbnNsYXRlTWluWDtcbiAgICAgICAgdHJhbnNsYXRlTWF4WSA9IC10cmFuc2xhdGVNaW5ZO1xuICAgICAgICB0cmFuc2xhdGVYID0gZGlmZlggKiB6b29tLnNjYWxlO1xuICAgICAgICB0cmFuc2xhdGVZID0gZGlmZlkgKiB6b29tLnNjYWxlO1xuXG4gICAgICAgIGlmICh0cmFuc2xhdGVYIDwgdHJhbnNsYXRlTWluWCkge1xuICAgICAgICAgIHRyYW5zbGF0ZVggPSB0cmFuc2xhdGVNaW5YO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRyYW5zbGF0ZVggPiB0cmFuc2xhdGVNYXhYKSB7XG4gICAgICAgICAgdHJhbnNsYXRlWCA9IHRyYW5zbGF0ZU1heFg7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodHJhbnNsYXRlWSA8IHRyYW5zbGF0ZU1pblkpIHtcbiAgICAgICAgICB0cmFuc2xhdGVZID0gdHJhbnNsYXRlTWluWTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0cmFuc2xhdGVZID4gdHJhbnNsYXRlTWF4WSkge1xuICAgICAgICAgIHRyYW5zbGF0ZVkgPSB0cmFuc2xhdGVNYXhZO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0cmFuc2xhdGVYID0gMDtcbiAgICAgICAgdHJhbnNsYXRlWSA9IDA7XG4gICAgICB9XG5cbiAgICAgIGdlc3R1cmUuJGltYWdlV3JhcEVsLnRyYW5zaXRpb24oMzAwKS50cmFuc2Zvcm0oXCJ0cmFuc2xhdGUzZChcIiArIHRyYW5zbGF0ZVggKyBcInB4LCBcIiArIHRyYW5zbGF0ZVkgKyBcInB4LDApXCIpO1xuICAgICAgZ2VzdHVyZS4kaW1hZ2VFbC50cmFuc2l0aW9uKDMwMCkudHJhbnNmb3JtKFwidHJhbnNsYXRlM2QoMCwwLDApIHNjYWxlKFwiICsgem9vbS5zY2FsZSArIFwiKVwiKTtcbiAgICB9LFxuICAgIG91dDogZnVuY3Rpb24gb3V0KCkge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICB2YXIgem9vbSA9IHN3aXBlci56b29tO1xuICAgICAgdmFyIHBhcmFtcyA9IHN3aXBlci5wYXJhbXMuem9vbTtcbiAgICAgIHZhciBnZXN0dXJlID0gem9vbS5nZXN0dXJlO1xuXG4gICAgICBpZiAoIWdlc3R1cmUuJHNsaWRlRWwpIHtcbiAgICAgICAgaWYgKHN3aXBlci5wYXJhbXMudmlydHVhbCAmJiBzd2lwZXIucGFyYW1zLnZpcnR1YWwuZW5hYmxlZCAmJiBzd2lwZXIudmlydHVhbCkge1xuICAgICAgICAgIGdlc3R1cmUuJHNsaWRlRWwgPSBzd2lwZXIuJHdyYXBwZXJFbC5jaGlsZHJlbihcIi5cIiArIHN3aXBlci5wYXJhbXMuc2xpZGVBY3RpdmVDbGFzcyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgZ2VzdHVyZS4kc2xpZGVFbCA9IHN3aXBlci5zbGlkZXMuZXEoc3dpcGVyLmFjdGl2ZUluZGV4KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGdlc3R1cmUuJGltYWdlRWwgPSBnZXN0dXJlLiRzbGlkZUVsLmZpbmQoJ2ltZywgc3ZnLCBjYW52YXMsIHBpY3R1cmUsIC5zd2lwZXItem9vbS10YXJnZXQnKTtcbiAgICAgICAgZ2VzdHVyZS4kaW1hZ2VXcmFwRWwgPSBnZXN0dXJlLiRpbWFnZUVsLnBhcmVudChcIi5cIiArIHBhcmFtcy5jb250YWluZXJDbGFzcyk7XG4gICAgICB9XG5cbiAgICAgIGlmICghZ2VzdHVyZS4kaW1hZ2VFbCB8fCBnZXN0dXJlLiRpbWFnZUVsLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuICAgICAgem9vbS5zY2FsZSA9IDE7XG4gICAgICB6b29tLmN1cnJlbnRTY2FsZSA9IDE7XG4gICAgICBnZXN0dXJlLiRpbWFnZVdyYXBFbC50cmFuc2l0aW9uKDMwMCkudHJhbnNmb3JtKCd0cmFuc2xhdGUzZCgwLDAsMCknKTtcbiAgICAgIGdlc3R1cmUuJGltYWdlRWwudHJhbnNpdGlvbigzMDApLnRyYW5zZm9ybSgndHJhbnNsYXRlM2QoMCwwLDApIHNjYWxlKDEpJyk7XG4gICAgICBnZXN0dXJlLiRzbGlkZUVsLnJlbW92ZUNsYXNzKFwiXCIgKyBwYXJhbXMuem9vbWVkU2xpZGVDbGFzcyk7XG4gICAgICBnZXN0dXJlLiRzbGlkZUVsID0gdW5kZWZpbmVkO1xuICAgIH0sXG4gICAgdG9nZ2xlR2VzdHVyZXM6IGZ1bmN0aW9uIHRvZ2dsZUdlc3R1cmVzKG1ldGhvZCkge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICB2YXIgem9vbSA9IHN3aXBlci56b29tO1xuICAgICAgdmFyIHNlbGVjdG9yID0gem9vbS5zbGlkZVNlbGVjdG9yLFxuICAgICAgICAgIHBhc3NpdmUgPSB6b29tLnBhc3NpdmVMaXN0ZW5lcjtcbiAgICAgIHN3aXBlci4kd3JhcHBlckVsW21ldGhvZF0oJ2dlc3R1cmVzdGFydCcsIHNlbGVjdG9yLCB6b29tLm9uR2VzdHVyZVN0YXJ0LCBwYXNzaXZlKTtcbiAgICAgIHN3aXBlci4kd3JhcHBlckVsW21ldGhvZF0oJ2dlc3R1cmVjaGFuZ2UnLCBzZWxlY3Rvciwgem9vbS5vbkdlc3R1cmVDaGFuZ2UsIHBhc3NpdmUpO1xuICAgICAgc3dpcGVyLiR3cmFwcGVyRWxbbWV0aG9kXSgnZ2VzdHVyZWVuZCcsIHNlbGVjdG9yLCB6b29tLm9uR2VzdHVyZUVuZCwgcGFzc2l2ZSk7XG4gICAgfSxcbiAgICBlbmFibGVHZXN0dXJlczogZnVuY3Rpb24gZW5hYmxlR2VzdHVyZXMoKSB7XG4gICAgICBpZiAodGhpcy56b29tLmdlc3R1cmVzRW5hYmxlZCkgcmV0dXJuO1xuICAgICAgdGhpcy56b29tLmdlc3R1cmVzRW5hYmxlZCA9IHRydWU7XG4gICAgICB0aGlzLnpvb20udG9nZ2xlR2VzdHVyZXMoJ29uJyk7XG4gICAgfSxcbiAgICBkaXNhYmxlR2VzdHVyZXM6IGZ1bmN0aW9uIGRpc2FibGVHZXN0dXJlcygpIHtcbiAgICAgIGlmICghdGhpcy56b29tLmdlc3R1cmVzRW5hYmxlZCkgcmV0dXJuO1xuICAgICAgdGhpcy56b29tLmdlc3R1cmVzRW5hYmxlZCA9IGZhbHNlO1xuICAgICAgdGhpcy56b29tLnRvZ2dsZUdlc3R1cmVzKCdvZmYnKTtcbiAgICB9LFxuICAgIC8vIEF0dGFjaC9EZXRhY2ggRXZlbnRzXG4gICAgZW5hYmxlOiBmdW5jdGlvbiBlbmFibGUoKSB7XG4gICAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICAgIHZhciBzdXBwb3J0ID0gc3dpcGVyLnN1cHBvcnQ7XG4gICAgICB2YXIgem9vbSA9IHN3aXBlci56b29tO1xuICAgICAgaWYgKHpvb20uZW5hYmxlZCkgcmV0dXJuO1xuICAgICAgem9vbS5lbmFibGVkID0gdHJ1ZTtcbiAgICAgIHZhciBwYXNzaXZlTGlzdGVuZXIgPSBzd2lwZXIudG91Y2hFdmVudHMuc3RhcnQgPT09ICd0b3VjaHN0YXJ0JyAmJiBzdXBwb3J0LnBhc3NpdmVMaXN0ZW5lciAmJiBzd2lwZXIucGFyYW1zLnBhc3NpdmVMaXN0ZW5lcnMgPyB7XG4gICAgICAgIHBhc3NpdmU6IHRydWUsXG4gICAgICAgIGNhcHR1cmU6IGZhbHNlXG4gICAgICB9IDogZmFsc2U7XG4gICAgICB2YXIgYWN0aXZlTGlzdGVuZXJXaXRoQ2FwdHVyZSA9IHN1cHBvcnQucGFzc2l2ZUxpc3RlbmVyID8ge1xuICAgICAgICBwYXNzaXZlOiBmYWxzZSxcbiAgICAgICAgY2FwdHVyZTogdHJ1ZVxuICAgICAgfSA6IHRydWU7XG4gICAgICB2YXIgc2xpZGVTZWxlY3RvciA9IFwiLlwiICsgc3dpcGVyLnBhcmFtcy5zbGlkZUNsYXNzO1xuICAgICAgc3dpcGVyLnpvb20ucGFzc2l2ZUxpc3RlbmVyID0gcGFzc2l2ZUxpc3RlbmVyO1xuICAgICAgc3dpcGVyLnpvb20uc2xpZGVTZWxlY3RvciA9IHNsaWRlU2VsZWN0b3I7IC8vIFNjYWxlIGltYWdlXG5cbiAgICAgIGlmIChzdXBwb3J0Lmdlc3R1cmVzKSB7XG4gICAgICAgIHN3aXBlci4kd3JhcHBlckVsLm9uKHN3aXBlci50b3VjaEV2ZW50cy5zdGFydCwgc3dpcGVyLnpvb20uZW5hYmxlR2VzdHVyZXMsIHBhc3NpdmVMaXN0ZW5lcik7XG4gICAgICAgIHN3aXBlci4kd3JhcHBlckVsLm9uKHN3aXBlci50b3VjaEV2ZW50cy5lbmQsIHN3aXBlci56b29tLmRpc2FibGVHZXN0dXJlcywgcGFzc2l2ZUxpc3RlbmVyKTtcbiAgICAgIH0gZWxzZSBpZiAoc3dpcGVyLnRvdWNoRXZlbnRzLnN0YXJ0ID09PSAndG91Y2hzdGFydCcpIHtcbiAgICAgICAgc3dpcGVyLiR3cmFwcGVyRWwub24oc3dpcGVyLnRvdWNoRXZlbnRzLnN0YXJ0LCBzbGlkZVNlbGVjdG9yLCB6b29tLm9uR2VzdHVyZVN0YXJ0LCBwYXNzaXZlTGlzdGVuZXIpO1xuICAgICAgICBzd2lwZXIuJHdyYXBwZXJFbC5vbihzd2lwZXIudG91Y2hFdmVudHMubW92ZSwgc2xpZGVTZWxlY3Rvciwgem9vbS5vbkdlc3R1cmVDaGFuZ2UsIGFjdGl2ZUxpc3RlbmVyV2l0aENhcHR1cmUpO1xuICAgICAgICBzd2lwZXIuJHdyYXBwZXJFbC5vbihzd2lwZXIudG91Y2hFdmVudHMuZW5kLCBzbGlkZVNlbGVjdG9yLCB6b29tLm9uR2VzdHVyZUVuZCwgcGFzc2l2ZUxpc3RlbmVyKTtcblxuICAgICAgICBpZiAoc3dpcGVyLnRvdWNoRXZlbnRzLmNhbmNlbCkge1xuICAgICAgICAgIHN3aXBlci4kd3JhcHBlckVsLm9uKHN3aXBlci50b3VjaEV2ZW50cy5jYW5jZWwsIHNsaWRlU2VsZWN0b3IsIHpvb20ub25HZXN0dXJlRW5kLCBwYXNzaXZlTGlzdGVuZXIpO1xuICAgICAgICB9XG4gICAgICB9IC8vIE1vdmUgaW1hZ2VcblxuXG4gICAgICBzd2lwZXIuJHdyYXBwZXJFbC5vbihzd2lwZXIudG91Y2hFdmVudHMubW92ZSwgXCIuXCIgKyBzd2lwZXIucGFyYW1zLnpvb20uY29udGFpbmVyQ2xhc3MsIHpvb20ub25Ub3VjaE1vdmUsIGFjdGl2ZUxpc3RlbmVyV2l0aENhcHR1cmUpO1xuICAgIH0sXG4gICAgZGlzYWJsZTogZnVuY3Rpb24gZGlzYWJsZSgpIHtcbiAgICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgICAgdmFyIHpvb20gPSBzd2lwZXIuem9vbTtcbiAgICAgIGlmICghem9vbS5lbmFibGVkKSByZXR1cm47XG4gICAgICB2YXIgc3VwcG9ydCA9IHN3aXBlci5zdXBwb3J0O1xuICAgICAgc3dpcGVyLnpvb20uZW5hYmxlZCA9IGZhbHNlO1xuICAgICAgdmFyIHBhc3NpdmVMaXN0ZW5lciA9IHN3aXBlci50b3VjaEV2ZW50cy5zdGFydCA9PT0gJ3RvdWNoc3RhcnQnICYmIHN1cHBvcnQucGFzc2l2ZUxpc3RlbmVyICYmIHN3aXBlci5wYXJhbXMucGFzc2l2ZUxpc3RlbmVycyA/IHtcbiAgICAgICAgcGFzc2l2ZTogdHJ1ZSxcbiAgICAgICAgY2FwdHVyZTogZmFsc2VcbiAgICAgIH0gOiBmYWxzZTtcbiAgICAgIHZhciBhY3RpdmVMaXN0ZW5lcldpdGhDYXB0dXJlID0gc3VwcG9ydC5wYXNzaXZlTGlzdGVuZXIgPyB7XG4gICAgICAgIHBhc3NpdmU6IGZhbHNlLFxuICAgICAgICBjYXB0dXJlOiB0cnVlXG4gICAgICB9IDogdHJ1ZTtcbiAgICAgIHZhciBzbGlkZVNlbGVjdG9yID0gXCIuXCIgKyBzd2lwZXIucGFyYW1zLnNsaWRlQ2xhc3M7IC8vIFNjYWxlIGltYWdlXG5cbiAgICAgIGlmIChzdXBwb3J0Lmdlc3R1cmVzKSB7XG4gICAgICAgIHN3aXBlci4kd3JhcHBlckVsLm9mZihzd2lwZXIudG91Y2hFdmVudHMuc3RhcnQsIHN3aXBlci56b29tLmVuYWJsZUdlc3R1cmVzLCBwYXNzaXZlTGlzdGVuZXIpO1xuICAgICAgICBzd2lwZXIuJHdyYXBwZXJFbC5vZmYoc3dpcGVyLnRvdWNoRXZlbnRzLmVuZCwgc3dpcGVyLnpvb20uZGlzYWJsZUdlc3R1cmVzLCBwYXNzaXZlTGlzdGVuZXIpO1xuICAgICAgfSBlbHNlIGlmIChzd2lwZXIudG91Y2hFdmVudHMuc3RhcnQgPT09ICd0b3VjaHN0YXJ0Jykge1xuICAgICAgICBzd2lwZXIuJHdyYXBwZXJFbC5vZmYoc3dpcGVyLnRvdWNoRXZlbnRzLnN0YXJ0LCBzbGlkZVNlbGVjdG9yLCB6b29tLm9uR2VzdHVyZVN0YXJ0LCBwYXNzaXZlTGlzdGVuZXIpO1xuICAgICAgICBzd2lwZXIuJHdyYXBwZXJFbC5vZmYoc3dpcGVyLnRvdWNoRXZlbnRzLm1vdmUsIHNsaWRlU2VsZWN0b3IsIHpvb20ub25HZXN0dXJlQ2hhbmdlLCBhY3RpdmVMaXN0ZW5lcldpdGhDYXB0dXJlKTtcbiAgICAgICAgc3dpcGVyLiR3cmFwcGVyRWwub2ZmKHN3aXBlci50b3VjaEV2ZW50cy5lbmQsIHNsaWRlU2VsZWN0b3IsIHpvb20ub25HZXN0dXJlRW5kLCBwYXNzaXZlTGlzdGVuZXIpO1xuXG4gICAgICAgIGlmIChzd2lwZXIudG91Y2hFdmVudHMuY2FuY2VsKSB7XG4gICAgICAgICAgc3dpcGVyLiR3cmFwcGVyRWwub2ZmKHN3aXBlci50b3VjaEV2ZW50cy5jYW5jZWwsIHNsaWRlU2VsZWN0b3IsIHpvb20ub25HZXN0dXJlRW5kLCBwYXNzaXZlTGlzdGVuZXIpO1xuICAgICAgICB9XG4gICAgICB9IC8vIE1vdmUgaW1hZ2VcblxuXG4gICAgICBzd2lwZXIuJHdyYXBwZXJFbC5vZmYoc3dpcGVyLnRvdWNoRXZlbnRzLm1vdmUsIFwiLlwiICsgc3dpcGVyLnBhcmFtcy56b29tLmNvbnRhaW5lckNsYXNzLCB6b29tLm9uVG91Y2hNb3ZlLCBhY3RpdmVMaXN0ZW5lcldpdGhDYXB0dXJlKTtcbiAgICB9XG4gIH07XG4gIHZhciBab29tJDEgPSB7XG4gICAgbmFtZTogJ3pvb20nLFxuICAgIHBhcmFtczoge1xuICAgICAgem9vbToge1xuICAgICAgICBlbmFibGVkOiBmYWxzZSxcbiAgICAgICAgbWF4UmF0aW86IDMsXG4gICAgICAgIG1pblJhdGlvOiAxLFxuICAgICAgICB0b2dnbGU6IHRydWUsXG4gICAgICAgIGNvbnRhaW5lckNsYXNzOiAnc3dpcGVyLXpvb20tY29udGFpbmVyJyxcbiAgICAgICAgem9vbWVkU2xpZGVDbGFzczogJ3N3aXBlci1zbGlkZS16b29tZWQnXG4gICAgICB9XG4gICAgfSxcbiAgICBjcmVhdGU6IGZ1bmN0aW9uIGNyZWF0ZSgpIHtcbiAgICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgICAgYmluZE1vZHVsZU1ldGhvZHMoc3dpcGVyLCB7XG4gICAgICAgIHpvb206IF9leHRlbmRzKHtcbiAgICAgICAgICBlbmFibGVkOiBmYWxzZSxcbiAgICAgICAgICBzY2FsZTogMSxcbiAgICAgICAgICBjdXJyZW50U2NhbGU6IDEsXG4gICAgICAgICAgaXNTY2FsaW5nOiBmYWxzZSxcbiAgICAgICAgICBnZXN0dXJlOiB7XG4gICAgICAgICAgICAkc2xpZGVFbDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgc2xpZGVXaWR0aDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgc2xpZGVIZWlnaHQ6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICRpbWFnZUVsOiB1bmRlZmluZWQsXG4gICAgICAgICAgICAkaW1hZ2VXcmFwRWw6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIG1heFJhdGlvOiAzXG4gICAgICAgICAgfSxcbiAgICAgICAgICBpbWFnZToge1xuICAgICAgICAgICAgaXNUb3VjaGVkOiB1bmRlZmluZWQsXG4gICAgICAgICAgICBpc01vdmVkOiB1bmRlZmluZWQsXG4gICAgICAgICAgICBjdXJyZW50WDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgY3VycmVudFk6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIG1pblg6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIG1pblk6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIG1heFg6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIG1heFk6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIHdpZHRoOiB1bmRlZmluZWQsXG4gICAgICAgICAgICBoZWlnaHQ6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIHN0YXJ0WDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgc3RhcnRZOiB1bmRlZmluZWQsXG4gICAgICAgICAgICB0b3VjaGVzU3RhcnQ6IHt9LFxuICAgICAgICAgICAgdG91Y2hlc0N1cnJlbnQ6IHt9XG4gICAgICAgICAgfSxcbiAgICAgICAgICB2ZWxvY2l0eToge1xuICAgICAgICAgICAgeDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgeTogdW5kZWZpbmVkLFxuICAgICAgICAgICAgcHJldlBvc2l0aW9uWDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgcHJldlBvc2l0aW9uWTogdW5kZWZpbmVkLFxuICAgICAgICAgICAgcHJldlRpbWU6IHVuZGVmaW5lZFxuICAgICAgICAgIH1cbiAgICAgICAgfSwgWm9vbSlcbiAgICAgIH0pO1xuICAgICAgdmFyIHNjYWxlID0gMTtcbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShzd2lwZXIuem9vbSwgJ3NjYWxlJywge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgICByZXR1cm4gc2NhbGU7XG4gICAgICAgIH0sXG4gICAgICAgIHNldDogZnVuY3Rpb24gc2V0KHZhbHVlKSB7XG4gICAgICAgICAgaWYgKHNjYWxlICE9PSB2YWx1ZSkge1xuICAgICAgICAgICAgdmFyIGltYWdlRWwgPSBzd2lwZXIuem9vbS5nZXN0dXJlLiRpbWFnZUVsID8gc3dpcGVyLnpvb20uZ2VzdHVyZS4kaW1hZ2VFbFswXSA6IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIHZhciBzbGlkZUVsID0gc3dpcGVyLnpvb20uZ2VzdHVyZS4kc2xpZGVFbCA/IHN3aXBlci56b29tLmdlc3R1cmUuJHNsaWRlRWxbMF0gOiB1bmRlZmluZWQ7XG4gICAgICAgICAgICBzd2lwZXIuZW1pdCgnem9vbUNoYW5nZScsIHZhbHVlLCBpbWFnZUVsLCBzbGlkZUVsKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBzY2FsZSA9IHZhbHVlO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9LFxuICAgIG9uOiB7XG4gICAgICBpbml0OiBmdW5jdGlvbiBpbml0KHN3aXBlcikge1xuICAgICAgICBpZiAoc3dpcGVyLnBhcmFtcy56b29tLmVuYWJsZWQpIHtcbiAgICAgICAgICBzd2lwZXIuem9vbS5lbmFibGUoKTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGRlc3Ryb3k6IGZ1bmN0aW9uIGRlc3Ryb3koc3dpcGVyKSB7XG4gICAgICAgIHN3aXBlci56b29tLmRpc2FibGUoKTtcbiAgICAgIH0sXG4gICAgICB0b3VjaFN0YXJ0OiBmdW5jdGlvbiB0b3VjaFN0YXJ0KHN3aXBlciwgZSkge1xuICAgICAgICBpZiAoIXN3aXBlci56b29tLmVuYWJsZWQpIHJldHVybjtcbiAgICAgICAgc3dpcGVyLnpvb20ub25Ub3VjaFN0YXJ0KGUpO1xuICAgICAgfSxcbiAgICAgIHRvdWNoRW5kOiBmdW5jdGlvbiB0b3VjaEVuZChzd2lwZXIsIGUpIHtcbiAgICAgICAgaWYgKCFzd2lwZXIuem9vbS5lbmFibGVkKSByZXR1cm47XG4gICAgICAgIHN3aXBlci56b29tLm9uVG91Y2hFbmQoZSk7XG4gICAgICB9LFxuICAgICAgZG91YmxlVGFwOiBmdW5jdGlvbiBkb3VibGVUYXAoc3dpcGVyLCBlKSB7XG4gICAgICAgIGlmIChzd2lwZXIucGFyYW1zLnpvb20uZW5hYmxlZCAmJiBzd2lwZXIuem9vbS5lbmFibGVkICYmIHN3aXBlci5wYXJhbXMuem9vbS50b2dnbGUpIHtcbiAgICAgICAgICBzd2lwZXIuem9vbS50b2dnbGUoZSk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICB0cmFuc2l0aW9uRW5kOiBmdW5jdGlvbiB0cmFuc2l0aW9uRW5kKHN3aXBlcikge1xuICAgICAgICBpZiAoc3dpcGVyLnpvb20uZW5hYmxlZCAmJiBzd2lwZXIucGFyYW1zLnpvb20uZW5hYmxlZCkge1xuICAgICAgICAgIHN3aXBlci56b29tLm9uVHJhbnNpdGlvbkVuZCgpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgc2xpZGVDaGFuZ2U6IGZ1bmN0aW9uIHNsaWRlQ2hhbmdlKHN3aXBlcikge1xuICAgICAgICBpZiAoc3dpcGVyLnpvb20uZW5hYmxlZCAmJiBzd2lwZXIucGFyYW1zLnpvb20uZW5hYmxlZCAmJiBzd2lwZXIucGFyYW1zLmNzc01vZGUpIHtcbiAgICAgICAgICBzd2lwZXIuem9vbS5vblRyYW5zaXRpb25FbmQoKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICB2YXIgTGF6eSA9IHtcbiAgICBsb2FkSW5TbGlkZTogZnVuY3Rpb24gbG9hZEluU2xpZGUoaW5kZXgsIGxvYWRJbkR1cGxpY2F0ZSkge1xuICAgICAgaWYgKGxvYWRJbkR1cGxpY2F0ZSA9PT0gdm9pZCAwKSB7XG4gICAgICAgIGxvYWRJbkR1cGxpY2F0ZSA9IHRydWU7XG4gICAgICB9XG5cbiAgICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgICAgdmFyIHBhcmFtcyA9IHN3aXBlci5wYXJhbXMubGF6eTtcbiAgICAgIGlmICh0eXBlb2YgaW5kZXggPT09ICd1bmRlZmluZWQnKSByZXR1cm47XG4gICAgICBpZiAoc3dpcGVyLnNsaWRlcy5sZW5ndGggPT09IDApIHJldHVybjtcbiAgICAgIHZhciBpc1ZpcnR1YWwgPSBzd2lwZXIudmlydHVhbCAmJiBzd2lwZXIucGFyYW1zLnZpcnR1YWwuZW5hYmxlZDtcbiAgICAgIHZhciAkc2xpZGVFbCA9IGlzVmlydHVhbCA/IHN3aXBlci4kd3JhcHBlckVsLmNoaWxkcmVuKFwiLlwiICsgc3dpcGVyLnBhcmFtcy5zbGlkZUNsYXNzICsgXCJbZGF0YS1zd2lwZXItc2xpZGUtaW5kZXg9XFxcIlwiICsgaW5kZXggKyBcIlxcXCJdXCIpIDogc3dpcGVyLnNsaWRlcy5lcShpbmRleCk7XG4gICAgICB2YXIgJGltYWdlcyA9ICRzbGlkZUVsLmZpbmQoXCIuXCIgKyBwYXJhbXMuZWxlbWVudENsYXNzICsgXCI6bm90KC5cIiArIHBhcmFtcy5sb2FkZWRDbGFzcyArIFwiKTpub3QoLlwiICsgcGFyYW1zLmxvYWRpbmdDbGFzcyArIFwiKVwiKTtcblxuICAgICAgaWYgKCRzbGlkZUVsLmhhc0NsYXNzKHBhcmFtcy5lbGVtZW50Q2xhc3MpICYmICEkc2xpZGVFbC5oYXNDbGFzcyhwYXJhbXMubG9hZGVkQ2xhc3MpICYmICEkc2xpZGVFbC5oYXNDbGFzcyhwYXJhbXMubG9hZGluZ0NsYXNzKSkge1xuICAgICAgICAkaW1hZ2VzLnB1c2goJHNsaWRlRWxbMF0pO1xuICAgICAgfVxuXG4gICAgICBpZiAoJGltYWdlcy5sZW5ndGggPT09IDApIHJldHVybjtcbiAgICAgICRpbWFnZXMuZWFjaChmdW5jdGlvbiAoaW1hZ2VFbCkge1xuICAgICAgICB2YXIgJGltYWdlRWwgPSAkKGltYWdlRWwpO1xuICAgICAgICAkaW1hZ2VFbC5hZGRDbGFzcyhwYXJhbXMubG9hZGluZ0NsYXNzKTtcbiAgICAgICAgdmFyIGJhY2tncm91bmQgPSAkaW1hZ2VFbC5hdHRyKCdkYXRhLWJhY2tncm91bmQnKTtcbiAgICAgICAgdmFyIHNyYyA9ICRpbWFnZUVsLmF0dHIoJ2RhdGEtc3JjJyk7XG4gICAgICAgIHZhciBzcmNzZXQgPSAkaW1hZ2VFbC5hdHRyKCdkYXRhLXNyY3NldCcpO1xuICAgICAgICB2YXIgc2l6ZXMgPSAkaW1hZ2VFbC5hdHRyKCdkYXRhLXNpemVzJyk7XG4gICAgICAgIHZhciAkcGljdHVyZUVsID0gJGltYWdlRWwucGFyZW50KCdwaWN0dXJlJyk7XG4gICAgICAgIHN3aXBlci5sb2FkSW1hZ2UoJGltYWdlRWxbMF0sIHNyYyB8fCBiYWNrZ3JvdW5kLCBzcmNzZXQsIHNpemVzLCBmYWxzZSwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgIGlmICh0eXBlb2Ygc3dpcGVyID09PSAndW5kZWZpbmVkJyB8fCBzd2lwZXIgPT09IG51bGwgfHwgIXN3aXBlciB8fCBzd2lwZXIgJiYgIXN3aXBlci5wYXJhbXMgfHwgc3dpcGVyLmRlc3Ryb3llZCkgcmV0dXJuO1xuXG4gICAgICAgICAgaWYgKGJhY2tncm91bmQpIHtcbiAgICAgICAgICAgICRpbWFnZUVsLmNzcygnYmFja2dyb3VuZC1pbWFnZScsIFwidXJsKFxcXCJcIiArIGJhY2tncm91bmQgKyBcIlxcXCIpXCIpO1xuICAgICAgICAgICAgJGltYWdlRWwucmVtb3ZlQXR0cignZGF0YS1iYWNrZ3JvdW5kJyk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmIChzcmNzZXQpIHtcbiAgICAgICAgICAgICAgJGltYWdlRWwuYXR0cignc3Jjc2V0Jywgc3Jjc2V0KTtcbiAgICAgICAgICAgICAgJGltYWdlRWwucmVtb3ZlQXR0cignZGF0YS1zcmNzZXQnKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHNpemVzKSB7XG4gICAgICAgICAgICAgICRpbWFnZUVsLmF0dHIoJ3NpemVzJywgc2l6ZXMpO1xuICAgICAgICAgICAgICAkaW1hZ2VFbC5yZW1vdmVBdHRyKCdkYXRhLXNpemVzJyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICgkcGljdHVyZUVsLmxlbmd0aCkge1xuICAgICAgICAgICAgICAkcGljdHVyZUVsLmNoaWxkcmVuKCdzb3VyY2UnKS5lYWNoKGZ1bmN0aW9uIChzb3VyY2VFbCkge1xuICAgICAgICAgICAgICAgIHZhciAkc291cmNlID0gJChzb3VyY2VFbCk7XG5cbiAgICAgICAgICAgICAgICBpZiAoJHNvdXJjZS5hdHRyKCdkYXRhLXNyY3NldCcpKSB7XG4gICAgICAgICAgICAgICAgICAkc291cmNlLmF0dHIoJ3NyY3NldCcsICRzb3VyY2UuYXR0cignZGF0YS1zcmNzZXQnKSk7XG4gICAgICAgICAgICAgICAgICAkc291cmNlLnJlbW92ZUF0dHIoJ2RhdGEtc3Jjc2V0Jyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHNyYykge1xuICAgICAgICAgICAgICAkaW1hZ2VFbC5hdHRyKCdzcmMnLCBzcmMpO1xuICAgICAgICAgICAgICAkaW1hZ2VFbC5yZW1vdmVBdHRyKCdkYXRhLXNyYycpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgICRpbWFnZUVsLmFkZENsYXNzKHBhcmFtcy5sb2FkZWRDbGFzcykucmVtb3ZlQ2xhc3MocGFyYW1zLmxvYWRpbmdDbGFzcyk7XG4gICAgICAgICAgJHNsaWRlRWwuZmluZChcIi5cIiArIHBhcmFtcy5wcmVsb2FkZXJDbGFzcykucmVtb3ZlKCk7XG5cbiAgICAgICAgICBpZiAoc3dpcGVyLnBhcmFtcy5sb29wICYmIGxvYWRJbkR1cGxpY2F0ZSkge1xuICAgICAgICAgICAgdmFyIHNsaWRlT3JpZ2luYWxJbmRleCA9ICRzbGlkZUVsLmF0dHIoJ2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4Jyk7XG5cbiAgICAgICAgICAgIGlmICgkc2xpZGVFbC5oYXNDbGFzcyhzd2lwZXIucGFyYW1zLnNsaWRlRHVwbGljYXRlQ2xhc3MpKSB7XG4gICAgICAgICAgICAgIHZhciBvcmlnaW5hbFNsaWRlID0gc3dpcGVyLiR3cmFwcGVyRWwuY2hpbGRyZW4oXCJbZGF0YS1zd2lwZXItc2xpZGUtaW5kZXg9XFxcIlwiICsgc2xpZGVPcmlnaW5hbEluZGV4ICsgXCJcXFwiXTpub3QoLlwiICsgc3dpcGVyLnBhcmFtcy5zbGlkZUR1cGxpY2F0ZUNsYXNzICsgXCIpXCIpO1xuICAgICAgICAgICAgICBzd2lwZXIubGF6eS5sb2FkSW5TbGlkZShvcmlnaW5hbFNsaWRlLmluZGV4KCksIGZhbHNlKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHZhciBkdXBsaWNhdGVkU2xpZGUgPSBzd2lwZXIuJHdyYXBwZXJFbC5jaGlsZHJlbihcIi5cIiArIHN3aXBlci5wYXJhbXMuc2xpZGVEdXBsaWNhdGVDbGFzcyArIFwiW2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4PVxcXCJcIiArIHNsaWRlT3JpZ2luYWxJbmRleCArIFwiXFxcIl1cIik7XG4gICAgICAgICAgICAgIHN3aXBlci5sYXp5LmxvYWRJblNsaWRlKGR1cGxpY2F0ZWRTbGlkZS5pbmRleCgpLCBmYWxzZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgc3dpcGVyLmVtaXQoJ2xhenlJbWFnZVJlYWR5JywgJHNsaWRlRWxbMF0sICRpbWFnZUVsWzBdKTtcblxuICAgICAgICAgIGlmIChzd2lwZXIucGFyYW1zLmF1dG9IZWlnaHQpIHtcbiAgICAgICAgICAgIHN3aXBlci51cGRhdGVBdXRvSGVpZ2h0KCk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgc3dpcGVyLmVtaXQoJ2xhenlJbWFnZUxvYWQnLCAkc2xpZGVFbFswXSwgJGltYWdlRWxbMF0pO1xuICAgICAgfSk7XG4gICAgfSxcbiAgICBsb2FkOiBmdW5jdGlvbiBsb2FkKCkge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICB2YXIgJHdyYXBwZXJFbCA9IHN3aXBlci4kd3JhcHBlckVsLFxuICAgICAgICAgIHN3aXBlclBhcmFtcyA9IHN3aXBlci5wYXJhbXMsXG4gICAgICAgICAgc2xpZGVzID0gc3dpcGVyLnNsaWRlcyxcbiAgICAgICAgICBhY3RpdmVJbmRleCA9IHN3aXBlci5hY3RpdmVJbmRleDtcbiAgICAgIHZhciBpc1ZpcnR1YWwgPSBzd2lwZXIudmlydHVhbCAmJiBzd2lwZXJQYXJhbXMudmlydHVhbC5lbmFibGVkO1xuICAgICAgdmFyIHBhcmFtcyA9IHN3aXBlclBhcmFtcy5sYXp5O1xuICAgICAgdmFyIHNsaWRlc1BlclZpZXcgPSBzd2lwZXJQYXJhbXMuc2xpZGVzUGVyVmlldztcblxuICAgICAgaWYgKHNsaWRlc1BlclZpZXcgPT09ICdhdXRvJykge1xuICAgICAgICBzbGlkZXNQZXJWaWV3ID0gMDtcbiAgICAgIH1cblxuICAgICAgZnVuY3Rpb24gc2xpZGVFeGlzdChpbmRleCkge1xuICAgICAgICBpZiAoaXNWaXJ0dWFsKSB7XG4gICAgICAgICAgaWYgKCR3cmFwcGVyRWwuY2hpbGRyZW4oXCIuXCIgKyBzd2lwZXJQYXJhbXMuc2xpZGVDbGFzcyArIFwiW2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4PVxcXCJcIiArIGluZGV4ICsgXCJcXFwiXVwiKS5sZW5ndGgpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChzbGlkZXNbaW5kZXhdKSByZXR1cm4gdHJ1ZTtcblxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIGZ1bmN0aW9uIHNsaWRlSW5kZXgoc2xpZGVFbCkge1xuICAgICAgICBpZiAoaXNWaXJ0dWFsKSB7XG4gICAgICAgICAgcmV0dXJuICQoc2xpZGVFbCkuYXR0cignZGF0YS1zd2lwZXItc2xpZGUtaW5kZXgnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiAkKHNsaWRlRWwpLmluZGV4KCk7XG4gICAgICB9XG5cbiAgICAgIGlmICghc3dpcGVyLmxhenkuaW5pdGlhbEltYWdlTG9hZGVkKSBzd2lwZXIubGF6eS5pbml0aWFsSW1hZ2VMb2FkZWQgPSB0cnVlO1xuXG4gICAgICBpZiAoc3dpcGVyLnBhcmFtcy53YXRjaFNsaWRlc1Zpc2liaWxpdHkpIHtcbiAgICAgICAgJHdyYXBwZXJFbC5jaGlsZHJlbihcIi5cIiArIHN3aXBlclBhcmFtcy5zbGlkZVZpc2libGVDbGFzcykuZWFjaChmdW5jdGlvbiAoc2xpZGVFbCkge1xuICAgICAgICAgIHZhciBpbmRleCA9IGlzVmlydHVhbCA/ICQoc2xpZGVFbCkuYXR0cignZGF0YS1zd2lwZXItc2xpZGUtaW5kZXgnKSA6ICQoc2xpZGVFbCkuaW5kZXgoKTtcbiAgICAgICAgICBzd2lwZXIubGF6eS5sb2FkSW5TbGlkZShpbmRleCk7XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIGlmIChzbGlkZXNQZXJWaWV3ID4gMSkge1xuICAgICAgICBmb3IgKHZhciBpID0gYWN0aXZlSW5kZXg7IGkgPCBhY3RpdmVJbmRleCArIHNsaWRlc1BlclZpZXc7IGkgKz0gMSkge1xuICAgICAgICAgIGlmIChzbGlkZUV4aXN0KGkpKSBzd2lwZXIubGF6eS5sb2FkSW5TbGlkZShpKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc3dpcGVyLmxhenkubG9hZEluU2xpZGUoYWN0aXZlSW5kZXgpO1xuICAgICAgfVxuXG4gICAgICBpZiAocGFyYW1zLmxvYWRQcmV2TmV4dCkge1xuICAgICAgICBpZiAoc2xpZGVzUGVyVmlldyA+IDEgfHwgcGFyYW1zLmxvYWRQcmV2TmV4dEFtb3VudCAmJiBwYXJhbXMubG9hZFByZXZOZXh0QW1vdW50ID4gMSkge1xuICAgICAgICAgIHZhciBhbW91bnQgPSBwYXJhbXMubG9hZFByZXZOZXh0QW1vdW50O1xuICAgICAgICAgIHZhciBzcHYgPSBzbGlkZXNQZXJWaWV3O1xuICAgICAgICAgIHZhciBtYXhJbmRleCA9IE1hdGgubWluKGFjdGl2ZUluZGV4ICsgc3B2ICsgTWF0aC5tYXgoYW1vdW50LCBzcHYpLCBzbGlkZXMubGVuZ3RoKTtcbiAgICAgICAgICB2YXIgbWluSW5kZXggPSBNYXRoLm1heChhY3RpdmVJbmRleCAtIE1hdGgubWF4KHNwdiwgYW1vdW50KSwgMCk7IC8vIE5leHQgU2xpZGVzXG5cbiAgICAgICAgICBmb3IgKHZhciBfaSA9IGFjdGl2ZUluZGV4ICsgc2xpZGVzUGVyVmlldzsgX2kgPCBtYXhJbmRleDsgX2kgKz0gMSkge1xuICAgICAgICAgICAgaWYgKHNsaWRlRXhpc3QoX2kpKSBzd2lwZXIubGF6eS5sb2FkSW5TbGlkZShfaSk7XG4gICAgICAgICAgfSAvLyBQcmV2IFNsaWRlc1xuXG5cbiAgICAgICAgICBmb3IgKHZhciBfaTIgPSBtaW5JbmRleDsgX2kyIDwgYWN0aXZlSW5kZXg7IF9pMiArPSAxKSB7XG4gICAgICAgICAgICBpZiAoc2xpZGVFeGlzdChfaTIpKSBzd2lwZXIubGF6eS5sb2FkSW5TbGlkZShfaTIpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YXIgbmV4dFNsaWRlID0gJHdyYXBwZXJFbC5jaGlsZHJlbihcIi5cIiArIHN3aXBlclBhcmFtcy5zbGlkZU5leHRDbGFzcyk7XG4gICAgICAgICAgaWYgKG5leHRTbGlkZS5sZW5ndGggPiAwKSBzd2lwZXIubGF6eS5sb2FkSW5TbGlkZShzbGlkZUluZGV4KG5leHRTbGlkZSkpO1xuICAgICAgICAgIHZhciBwcmV2U2xpZGUgPSAkd3JhcHBlckVsLmNoaWxkcmVuKFwiLlwiICsgc3dpcGVyUGFyYW1zLnNsaWRlUHJldkNsYXNzKTtcbiAgICAgICAgICBpZiAocHJldlNsaWRlLmxlbmd0aCA+IDApIHN3aXBlci5sYXp5LmxvYWRJblNsaWRlKHNsaWRlSW5kZXgocHJldlNsaWRlKSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH07XG4gIHZhciBMYXp5JDEgPSB7XG4gICAgbmFtZTogJ2xhenknLFxuICAgIHBhcmFtczoge1xuICAgICAgbGF6eToge1xuICAgICAgICBlbmFibGVkOiBmYWxzZSxcbiAgICAgICAgbG9hZFByZXZOZXh0OiBmYWxzZSxcbiAgICAgICAgbG9hZFByZXZOZXh0QW1vdW50OiAxLFxuICAgICAgICBsb2FkT25UcmFuc2l0aW9uU3RhcnQ6IGZhbHNlLFxuICAgICAgICBlbGVtZW50Q2xhc3M6ICdzd2lwZXItbGF6eScsXG4gICAgICAgIGxvYWRpbmdDbGFzczogJ3N3aXBlci1sYXp5LWxvYWRpbmcnLFxuICAgICAgICBsb2FkZWRDbGFzczogJ3N3aXBlci1sYXp5LWxvYWRlZCcsXG4gICAgICAgIHByZWxvYWRlckNsYXNzOiAnc3dpcGVyLWxhenktcHJlbG9hZGVyJ1xuICAgICAgfVxuICAgIH0sXG4gICAgY3JlYXRlOiBmdW5jdGlvbiBjcmVhdGUoKSB7XG4gICAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICAgIGJpbmRNb2R1bGVNZXRob2RzKHN3aXBlciwge1xuICAgICAgICBsYXp5OiBfZXh0ZW5kcyh7XG4gICAgICAgICAgaW5pdGlhbEltYWdlTG9hZGVkOiBmYWxzZVxuICAgICAgICB9LCBMYXp5KVxuICAgICAgfSk7XG4gICAgfSxcbiAgICBvbjoge1xuICAgICAgYmVmb3JlSW5pdDogZnVuY3Rpb24gYmVmb3JlSW5pdChzd2lwZXIpIHtcbiAgICAgICAgaWYgKHN3aXBlci5wYXJhbXMubGF6eS5lbmFibGVkICYmIHN3aXBlci5wYXJhbXMucHJlbG9hZEltYWdlcykge1xuICAgICAgICAgIHN3aXBlci5wYXJhbXMucHJlbG9hZEltYWdlcyA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgaW5pdDogZnVuY3Rpb24gaW5pdChzd2lwZXIpIHtcbiAgICAgICAgaWYgKHN3aXBlci5wYXJhbXMubGF6eS5lbmFibGVkICYmICFzd2lwZXIucGFyYW1zLmxvb3AgJiYgc3dpcGVyLnBhcmFtcy5pbml0aWFsU2xpZGUgPT09IDApIHtcbiAgICAgICAgICBzd2lwZXIubGF6eS5sb2FkKCk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBzY3JvbGw6IGZ1bmN0aW9uIHNjcm9sbChzd2lwZXIpIHtcbiAgICAgICAgaWYgKHN3aXBlci5wYXJhbXMuZnJlZU1vZGUgJiYgIXN3aXBlci5wYXJhbXMuZnJlZU1vZGVTdGlja3kpIHtcbiAgICAgICAgICBzd2lwZXIubGF6eS5sb2FkKCk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICByZXNpemU6IGZ1bmN0aW9uIHJlc2l6ZShzd2lwZXIpIHtcbiAgICAgICAgaWYgKHN3aXBlci5wYXJhbXMubGF6eS5lbmFibGVkKSB7XG4gICAgICAgICAgc3dpcGVyLmxhenkubG9hZCgpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgc2Nyb2xsYmFyRHJhZ01vdmU6IGZ1bmN0aW9uIHNjcm9sbGJhckRyYWdNb3ZlKHN3aXBlcikge1xuICAgICAgICBpZiAoc3dpcGVyLnBhcmFtcy5sYXp5LmVuYWJsZWQpIHtcbiAgICAgICAgICBzd2lwZXIubGF6eS5sb2FkKCk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICB0cmFuc2l0aW9uU3RhcnQ6IGZ1bmN0aW9uIHRyYW5zaXRpb25TdGFydChzd2lwZXIpIHtcbiAgICAgICAgaWYgKHN3aXBlci5wYXJhbXMubGF6eS5lbmFibGVkKSB7XG4gICAgICAgICAgaWYgKHN3aXBlci5wYXJhbXMubGF6eS5sb2FkT25UcmFuc2l0aW9uU3RhcnQgfHwgIXN3aXBlci5wYXJhbXMubGF6eS5sb2FkT25UcmFuc2l0aW9uU3RhcnQgJiYgIXN3aXBlci5sYXp5LmluaXRpYWxJbWFnZUxvYWRlZCkge1xuICAgICAgICAgICAgc3dpcGVyLmxhenkubG9hZCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHRyYW5zaXRpb25FbmQ6IGZ1bmN0aW9uIHRyYW5zaXRpb25FbmQoc3dpcGVyKSB7XG4gICAgICAgIGlmIChzd2lwZXIucGFyYW1zLmxhenkuZW5hYmxlZCAmJiAhc3dpcGVyLnBhcmFtcy5sYXp5LmxvYWRPblRyYW5zaXRpb25TdGFydCkge1xuICAgICAgICAgIHN3aXBlci5sYXp5LmxvYWQoKTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHNsaWRlQ2hhbmdlOiBmdW5jdGlvbiBzbGlkZUNoYW5nZShzd2lwZXIpIHtcbiAgICAgICAgaWYgKHN3aXBlci5wYXJhbXMubGF6eS5lbmFibGVkICYmIHN3aXBlci5wYXJhbXMuY3NzTW9kZSkge1xuICAgICAgICAgIHN3aXBlci5sYXp5LmxvYWQoKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICB2YXIgQ29udHJvbGxlciA9IHtcbiAgICBMaW5lYXJTcGxpbmU6IGZ1bmN0aW9uIExpbmVhclNwbGluZSh4LCB5KSB7XG4gICAgICB2YXIgYmluYXJ5U2VhcmNoID0gZnVuY3Rpb24gc2VhcmNoKCkge1xuICAgICAgICB2YXIgbWF4SW5kZXg7XG4gICAgICAgIHZhciBtaW5JbmRleDtcbiAgICAgICAgdmFyIGd1ZXNzO1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGFycmF5LCB2YWwpIHtcbiAgICAgICAgICBtaW5JbmRleCA9IC0xO1xuICAgICAgICAgIG1heEluZGV4ID0gYXJyYXkubGVuZ3RoO1xuXG4gICAgICAgICAgd2hpbGUgKG1heEluZGV4IC0gbWluSW5kZXggPiAxKSB7XG4gICAgICAgICAgICBndWVzcyA9IG1heEluZGV4ICsgbWluSW5kZXggPj4gMTtcblxuICAgICAgICAgICAgaWYgKGFycmF5W2d1ZXNzXSA8PSB2YWwpIHtcbiAgICAgICAgICAgICAgbWluSW5kZXggPSBndWVzcztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIG1heEluZGV4ID0gZ3Vlc3M7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIG1heEluZGV4O1xuICAgICAgICB9O1xuICAgICAgfSgpO1xuXG4gICAgICB0aGlzLnggPSB4O1xuICAgICAgdGhpcy55ID0geTtcbiAgICAgIHRoaXMubGFzdEluZGV4ID0geC5sZW5ndGggLSAxOyAvLyBHaXZlbiBhbiB4IHZhbHVlICh4MiksIHJldHVybiB0aGUgZXhwZWN0ZWQgeTIgdmFsdWU6XG4gICAgICAvLyAoeDEseTEpIGlzIHRoZSBrbm93biBwb2ludCBiZWZvcmUgZ2l2ZW4gdmFsdWUsXG4gICAgICAvLyAoeDMseTMpIGlzIHRoZSBrbm93biBwb2ludCBhZnRlciBnaXZlbiB2YWx1ZS5cblxuICAgICAgdmFyIGkxO1xuICAgICAgdmFyIGkzO1xuXG4gICAgICB0aGlzLmludGVycG9sYXRlID0gZnVuY3Rpb24gaW50ZXJwb2xhdGUoeDIpIHtcbiAgICAgICAgaWYgKCF4MikgcmV0dXJuIDA7IC8vIEdldCB0aGUgaW5kZXhlcyBvZiB4MSBhbmQgeDMgKHRoZSBhcnJheSBpbmRleGVzIGJlZm9yZSBhbmQgYWZ0ZXIgZ2l2ZW4geDIpOlxuXG4gICAgICAgIGkzID0gYmluYXJ5U2VhcmNoKHRoaXMueCwgeDIpO1xuICAgICAgICBpMSA9IGkzIC0gMTsgLy8gV2UgaGF2ZSBvdXIgaW5kZXhlcyBpMSAmIGkzLCBzbyB3ZSBjYW4gY2FsY3VsYXRlIGFscmVhZHk6XG4gICAgICAgIC8vIHkyIDo9ICgoeDLiiJJ4MSkgw5cgKHkz4oiSeTEpKSDDtyAoeDPiiJJ4MSkgKyB5MVxuXG4gICAgICAgIHJldHVybiAoeDIgLSB0aGlzLnhbaTFdKSAqICh0aGlzLnlbaTNdIC0gdGhpcy55W2kxXSkgLyAodGhpcy54W2kzXSAtIHRoaXMueFtpMV0pICsgdGhpcy55W2kxXTtcbiAgICAgIH07XG5cbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH0sXG4gICAgLy8geHh4OiBmb3Igbm93IGkgd2lsbCBqdXN0IHNhdmUgb25lIHNwbGluZSBmdW5jdGlvbiB0byB0b1xuICAgIGdldEludGVycG9sYXRlRnVuY3Rpb246IGZ1bmN0aW9uIGdldEludGVycG9sYXRlRnVuY3Rpb24oYykge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG5cbiAgICAgIGlmICghc3dpcGVyLmNvbnRyb2xsZXIuc3BsaW5lKSB7XG4gICAgICAgIHN3aXBlci5jb250cm9sbGVyLnNwbGluZSA9IHN3aXBlci5wYXJhbXMubG9vcCA/IG5ldyBDb250cm9sbGVyLkxpbmVhclNwbGluZShzd2lwZXIuc2xpZGVzR3JpZCwgYy5zbGlkZXNHcmlkKSA6IG5ldyBDb250cm9sbGVyLkxpbmVhclNwbGluZShzd2lwZXIuc25hcEdyaWQsIGMuc25hcEdyaWQpO1xuICAgICAgfVxuICAgIH0sXG4gICAgc2V0VHJhbnNsYXRlOiBmdW5jdGlvbiBzZXRUcmFuc2xhdGUoX3NldFRyYW5zbGF0ZSwgYnlDb250cm9sbGVyKSB7XG4gICAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICAgIHZhciBjb250cm9sbGVkID0gc3dpcGVyLmNvbnRyb2xsZXIuY29udHJvbDtcbiAgICAgIHZhciBtdWx0aXBsaWVyO1xuICAgICAgdmFyIGNvbnRyb2xsZWRUcmFuc2xhdGU7XG4gICAgICB2YXIgU3dpcGVyID0gc3dpcGVyLmNvbnN0cnVjdG9yO1xuXG4gICAgICBmdW5jdGlvbiBzZXRDb250cm9sbGVkVHJhbnNsYXRlKGMpIHtcbiAgICAgICAgLy8gdGhpcyB3aWxsIGNyZWF0ZSBhbiBJbnRlcnBvbGF0ZSBmdW5jdGlvbiBiYXNlZCBvbiB0aGUgc25hcEdyaWRzXG4gICAgICAgIC8vIHggaXMgdGhlIEdyaWQgb2YgdGhlIHNjcm9sbGVkIHNjcm9sbGVyIGFuZCB5IHdpbGwgYmUgdGhlIGNvbnRyb2xsZWQgc2Nyb2xsZXJcbiAgICAgICAgLy8gaXQgbWFrZXMgc2Vuc2UgdG8gY3JlYXRlIHRoaXMgb25seSBvbmNlIGFuZCByZWNhbGwgaXQgZm9yIHRoZSBpbnRlcnBvbGF0aW9uXG4gICAgICAgIC8vIHRoZSBmdW5jdGlvbiBkb2VzIGEgbG90IG9mIHZhbHVlIGNhY2hpbmcgZm9yIHBlcmZvcm1hbmNlXG4gICAgICAgIHZhciB0cmFuc2xhdGUgPSBzd2lwZXIucnRsVHJhbnNsYXRlID8gLXN3aXBlci50cmFuc2xhdGUgOiBzd2lwZXIudHJhbnNsYXRlO1xuXG4gICAgICAgIGlmIChzd2lwZXIucGFyYW1zLmNvbnRyb2xsZXIuYnkgPT09ICdzbGlkZScpIHtcbiAgICAgICAgICBzd2lwZXIuY29udHJvbGxlci5nZXRJbnRlcnBvbGF0ZUZ1bmN0aW9uKGMpOyAvLyBpIGFtIG5vdCBzdXJlIHdoeSB0aGUgdmFsdWVzIGhhdmUgdG8gYmUgbXVsdGlwbGljYXRlZCB0aGlzIHdheSwgdHJpZWQgdG8gaW52ZXJ0IHRoZSBzbmFwR3JpZFxuICAgICAgICAgIC8vIGJ1dCBpdCBkaWQgbm90IHdvcmsgb3V0XG5cbiAgICAgICAgICBjb250cm9sbGVkVHJhbnNsYXRlID0gLXN3aXBlci5jb250cm9sbGVyLnNwbGluZS5pbnRlcnBvbGF0ZSgtdHJhbnNsYXRlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICghY29udHJvbGxlZFRyYW5zbGF0ZSB8fCBzd2lwZXIucGFyYW1zLmNvbnRyb2xsZXIuYnkgPT09ICdjb250YWluZXInKSB7XG4gICAgICAgICAgbXVsdGlwbGllciA9IChjLm1heFRyYW5zbGF0ZSgpIC0gYy5taW5UcmFuc2xhdGUoKSkgLyAoc3dpcGVyLm1heFRyYW5zbGF0ZSgpIC0gc3dpcGVyLm1pblRyYW5zbGF0ZSgpKTtcbiAgICAgICAgICBjb250cm9sbGVkVHJhbnNsYXRlID0gKHRyYW5zbGF0ZSAtIHN3aXBlci5taW5UcmFuc2xhdGUoKSkgKiBtdWx0aXBsaWVyICsgYy5taW5UcmFuc2xhdGUoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChzd2lwZXIucGFyYW1zLmNvbnRyb2xsZXIuaW52ZXJzZSkge1xuICAgICAgICAgIGNvbnRyb2xsZWRUcmFuc2xhdGUgPSBjLm1heFRyYW5zbGF0ZSgpIC0gY29udHJvbGxlZFRyYW5zbGF0ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGMudXBkYXRlUHJvZ3Jlc3MoY29udHJvbGxlZFRyYW5zbGF0ZSk7XG4gICAgICAgIGMuc2V0VHJhbnNsYXRlKGNvbnRyb2xsZWRUcmFuc2xhdGUsIHN3aXBlcik7XG4gICAgICAgIGMudXBkYXRlQWN0aXZlSW5kZXgoKTtcbiAgICAgICAgYy51cGRhdGVTbGlkZXNDbGFzc2VzKCk7XG4gICAgICB9XG5cbiAgICAgIGlmIChBcnJheS5pc0FycmF5KGNvbnRyb2xsZWQpKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY29udHJvbGxlZC5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICAgIGlmIChjb250cm9sbGVkW2ldICE9PSBieUNvbnRyb2xsZXIgJiYgY29udHJvbGxlZFtpXSBpbnN0YW5jZW9mIFN3aXBlcikge1xuICAgICAgICAgICAgc2V0Q29udHJvbGxlZFRyYW5zbGF0ZShjb250cm9sbGVkW2ldKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAoY29udHJvbGxlZCBpbnN0YW5jZW9mIFN3aXBlciAmJiBieUNvbnRyb2xsZXIgIT09IGNvbnRyb2xsZWQpIHtcbiAgICAgICAgc2V0Q29udHJvbGxlZFRyYW5zbGF0ZShjb250cm9sbGVkKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIHNldFRyYW5zaXRpb246IGZ1bmN0aW9uIHNldFRyYW5zaXRpb24oZHVyYXRpb24sIGJ5Q29udHJvbGxlcikge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICB2YXIgU3dpcGVyID0gc3dpcGVyLmNvbnN0cnVjdG9yO1xuICAgICAgdmFyIGNvbnRyb2xsZWQgPSBzd2lwZXIuY29udHJvbGxlci5jb250cm9sO1xuICAgICAgdmFyIGk7XG5cbiAgICAgIGZ1bmN0aW9uIHNldENvbnRyb2xsZWRUcmFuc2l0aW9uKGMpIHtcbiAgICAgICAgYy5zZXRUcmFuc2l0aW9uKGR1cmF0aW9uLCBzd2lwZXIpO1xuXG4gICAgICAgIGlmIChkdXJhdGlvbiAhPT0gMCkge1xuICAgICAgICAgIGMudHJhbnNpdGlvblN0YXJ0KCk7XG5cbiAgICAgICAgICBpZiAoYy5wYXJhbXMuYXV0b0hlaWdodCkge1xuICAgICAgICAgICAgbmV4dFRpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICBjLnVwZGF0ZUF1dG9IZWlnaHQoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGMuJHdyYXBwZXJFbC50cmFuc2l0aW9uRW5kKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmICghY29udHJvbGxlZCkgcmV0dXJuO1xuXG4gICAgICAgICAgICBpZiAoYy5wYXJhbXMubG9vcCAmJiBzd2lwZXIucGFyYW1zLmNvbnRyb2xsZXIuYnkgPT09ICdzbGlkZScpIHtcbiAgICAgICAgICAgICAgYy5sb29wRml4KCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGMudHJhbnNpdGlvbkVuZCgpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChBcnJheS5pc0FycmF5KGNvbnRyb2xsZWQpKSB7XG4gICAgICAgIGZvciAoaSA9IDA7IGkgPCBjb250cm9sbGVkLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgICAgaWYgKGNvbnRyb2xsZWRbaV0gIT09IGJ5Q29udHJvbGxlciAmJiBjb250cm9sbGVkW2ldIGluc3RhbmNlb2YgU3dpcGVyKSB7XG4gICAgICAgICAgICBzZXRDb250cm9sbGVkVHJhbnNpdGlvbihjb250cm9sbGVkW2ldKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAoY29udHJvbGxlZCBpbnN0YW5jZW9mIFN3aXBlciAmJiBieUNvbnRyb2xsZXIgIT09IGNvbnRyb2xsZWQpIHtcbiAgICAgICAgc2V0Q29udHJvbGxlZFRyYW5zaXRpb24oY29udHJvbGxlZCk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuICB2YXIgQ29udHJvbGxlciQxID0ge1xuICAgIG5hbWU6ICdjb250cm9sbGVyJyxcbiAgICBwYXJhbXM6IHtcbiAgICAgIGNvbnRyb2xsZXI6IHtcbiAgICAgICAgY29udHJvbDogdW5kZWZpbmVkLFxuICAgICAgICBpbnZlcnNlOiBmYWxzZSxcbiAgICAgICAgYnk6ICdzbGlkZScgLy8gb3IgJ2NvbnRhaW5lcidcblxuICAgICAgfVxuICAgIH0sXG4gICAgY3JlYXRlOiBmdW5jdGlvbiBjcmVhdGUoKSB7XG4gICAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICAgIGJpbmRNb2R1bGVNZXRob2RzKHN3aXBlciwge1xuICAgICAgICBjb250cm9sbGVyOiBfZXh0ZW5kcyh7XG4gICAgICAgICAgY29udHJvbDogc3dpcGVyLnBhcmFtcy5jb250cm9sbGVyLmNvbnRyb2xcbiAgICAgICAgfSwgQ29udHJvbGxlcilcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgb246IHtcbiAgICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKHN3aXBlcikge1xuICAgICAgICBpZiAoIXN3aXBlci5jb250cm9sbGVyLmNvbnRyb2wpIHJldHVybjtcblxuICAgICAgICBpZiAoc3dpcGVyLmNvbnRyb2xsZXIuc3BsaW5lKSB7XG4gICAgICAgICAgc3dpcGVyLmNvbnRyb2xsZXIuc3BsaW5lID0gdW5kZWZpbmVkO1xuICAgICAgICAgIGRlbGV0ZSBzd2lwZXIuY29udHJvbGxlci5zcGxpbmU7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICByZXNpemU6IGZ1bmN0aW9uIHJlc2l6ZShzd2lwZXIpIHtcbiAgICAgICAgaWYgKCFzd2lwZXIuY29udHJvbGxlci5jb250cm9sKSByZXR1cm47XG5cbiAgICAgICAgaWYgKHN3aXBlci5jb250cm9sbGVyLnNwbGluZSkge1xuICAgICAgICAgIHN3aXBlci5jb250cm9sbGVyLnNwbGluZSA9IHVuZGVmaW5lZDtcbiAgICAgICAgICBkZWxldGUgc3dpcGVyLmNvbnRyb2xsZXIuc3BsaW5lO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgb2JzZXJ2ZXJVcGRhdGU6IGZ1bmN0aW9uIG9ic2VydmVyVXBkYXRlKHN3aXBlcikge1xuICAgICAgICBpZiAoIXN3aXBlci5jb250cm9sbGVyLmNvbnRyb2wpIHJldHVybjtcblxuICAgICAgICBpZiAoc3dpcGVyLmNvbnRyb2xsZXIuc3BsaW5lKSB7XG4gICAgICAgICAgc3dpcGVyLmNvbnRyb2xsZXIuc3BsaW5lID0gdW5kZWZpbmVkO1xuICAgICAgICAgIGRlbGV0ZSBzd2lwZXIuY29udHJvbGxlci5zcGxpbmU7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBzZXRUcmFuc2xhdGU6IGZ1bmN0aW9uIHNldFRyYW5zbGF0ZShzd2lwZXIsIHRyYW5zbGF0ZSwgYnlDb250cm9sbGVyKSB7XG4gICAgICAgIGlmICghc3dpcGVyLmNvbnRyb2xsZXIuY29udHJvbCkgcmV0dXJuO1xuICAgICAgICBzd2lwZXIuY29udHJvbGxlci5zZXRUcmFuc2xhdGUodHJhbnNsYXRlLCBieUNvbnRyb2xsZXIpO1xuICAgICAgfSxcbiAgICAgIHNldFRyYW5zaXRpb246IGZ1bmN0aW9uIHNldFRyYW5zaXRpb24oc3dpcGVyLCBkdXJhdGlvbiwgYnlDb250cm9sbGVyKSB7XG4gICAgICAgIGlmICghc3dpcGVyLmNvbnRyb2xsZXIuY29udHJvbCkgcmV0dXJuO1xuICAgICAgICBzd2lwZXIuY29udHJvbGxlci5zZXRUcmFuc2l0aW9uKGR1cmF0aW9uLCBieUNvbnRyb2xsZXIpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICB2YXIgQTExeSA9IHtcbiAgICBnZXRSYW5kb21OdW1iZXI6IGZ1bmN0aW9uIGdldFJhbmRvbU51bWJlcihzaXplKSB7XG4gICAgICBpZiAoc2l6ZSA9PT0gdm9pZCAwKSB7XG4gICAgICAgIHNpemUgPSAxNjtcbiAgICAgIH1cblxuICAgICAgdmFyIHJhbmRvbUNoYXIgPSBmdW5jdGlvbiByYW5kb21DaGFyKCkge1xuICAgICAgICByZXR1cm4gTWF0aC5yb3VuZCgxNiAqIE1hdGgucmFuZG9tKCkpLnRvU3RyaW5nKDE2KTtcbiAgICAgIH07XG5cbiAgICAgIHJldHVybiAneCcucmVwZWF0KHNpemUpLnJlcGxhY2UoL3gvZywgcmFuZG9tQ2hhcik7XG4gICAgfSxcbiAgICBtYWtlRWxGb2N1c2FibGU6IGZ1bmN0aW9uIG1ha2VFbEZvY3VzYWJsZSgkZWwpIHtcbiAgICAgICRlbC5hdHRyKCd0YWJJbmRleCcsICcwJyk7XG4gICAgICByZXR1cm4gJGVsO1xuICAgIH0sXG4gICAgbWFrZUVsTm90Rm9jdXNhYmxlOiBmdW5jdGlvbiBtYWtlRWxOb3RGb2N1c2FibGUoJGVsKSB7XG4gICAgICAkZWwuYXR0cigndGFiSW5kZXgnLCAnLTEnKTtcbiAgICAgIHJldHVybiAkZWw7XG4gICAgfSxcbiAgICBhZGRFbFJvbGU6IGZ1bmN0aW9uIGFkZEVsUm9sZSgkZWwsIHJvbGUpIHtcbiAgICAgICRlbC5hdHRyKCdyb2xlJywgcm9sZSk7XG4gICAgICByZXR1cm4gJGVsO1xuICAgIH0sXG4gICAgYWRkRWxSb2xlRGVzY3JpcHRpb246IGZ1bmN0aW9uIGFkZEVsUm9sZURlc2NyaXB0aW9uKCRlbCwgZGVzY3JpcHRpb24pIHtcbiAgICAgICRlbC5hdHRyKCdhcmlhLXJvbGUtZGVzY3JpcHRpb24nLCBkZXNjcmlwdGlvbik7XG4gICAgICByZXR1cm4gJGVsO1xuICAgIH0sXG4gICAgYWRkRWxDb250cm9sczogZnVuY3Rpb24gYWRkRWxDb250cm9scygkZWwsIGNvbnRyb2xzKSB7XG4gICAgICAkZWwuYXR0cignYXJpYS1jb250cm9scycsIGNvbnRyb2xzKTtcbiAgICAgIHJldHVybiAkZWw7XG4gICAgfSxcbiAgICBhZGRFbExhYmVsOiBmdW5jdGlvbiBhZGRFbExhYmVsKCRlbCwgbGFiZWwpIHtcbiAgICAgICRlbC5hdHRyKCdhcmlhLWxhYmVsJywgbGFiZWwpO1xuICAgICAgcmV0dXJuICRlbDtcbiAgICB9LFxuICAgIGFkZEVsSWQ6IGZ1bmN0aW9uIGFkZEVsSWQoJGVsLCBpZCkge1xuICAgICAgJGVsLmF0dHIoJ2lkJywgaWQpO1xuICAgICAgcmV0dXJuICRlbDtcbiAgICB9LFxuICAgIGFkZEVsTGl2ZTogZnVuY3Rpb24gYWRkRWxMaXZlKCRlbCwgbGl2ZSkge1xuICAgICAgJGVsLmF0dHIoJ2FyaWEtbGl2ZScsIGxpdmUpO1xuICAgICAgcmV0dXJuICRlbDtcbiAgICB9LFxuICAgIGRpc2FibGVFbDogZnVuY3Rpb24gZGlzYWJsZUVsKCRlbCkge1xuICAgICAgJGVsLmF0dHIoJ2FyaWEtZGlzYWJsZWQnLCB0cnVlKTtcbiAgICAgIHJldHVybiAkZWw7XG4gICAgfSxcbiAgICBlbmFibGVFbDogZnVuY3Rpb24gZW5hYmxlRWwoJGVsKSB7XG4gICAgICAkZWwuYXR0cignYXJpYS1kaXNhYmxlZCcsIGZhbHNlKTtcbiAgICAgIHJldHVybiAkZWw7XG4gICAgfSxcbiAgICBvbkVudGVyS2V5OiBmdW5jdGlvbiBvbkVudGVyS2V5KGUpIHtcbiAgICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgICAgdmFyIHBhcmFtcyA9IHN3aXBlci5wYXJhbXMuYTExeTtcbiAgICAgIGlmIChlLmtleUNvZGUgIT09IDEzKSByZXR1cm47XG4gICAgICB2YXIgJHRhcmdldEVsID0gJChlLnRhcmdldCk7XG5cbiAgICAgIGlmIChzd2lwZXIubmF2aWdhdGlvbiAmJiBzd2lwZXIubmF2aWdhdGlvbi4kbmV4dEVsICYmICR0YXJnZXRFbC5pcyhzd2lwZXIubmF2aWdhdGlvbi4kbmV4dEVsKSkge1xuICAgICAgICBpZiAoIShzd2lwZXIuaXNFbmQgJiYgIXN3aXBlci5wYXJhbXMubG9vcCkpIHtcbiAgICAgICAgICBzd2lwZXIuc2xpZGVOZXh0KCk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoc3dpcGVyLmlzRW5kKSB7XG4gICAgICAgICAgc3dpcGVyLmExMXkubm90aWZ5KHBhcmFtcy5sYXN0U2xpZGVNZXNzYWdlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzd2lwZXIuYTExeS5ub3RpZnkocGFyYW1zLm5leHRTbGlkZU1lc3NhZ2UpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChzd2lwZXIubmF2aWdhdGlvbiAmJiBzd2lwZXIubmF2aWdhdGlvbi4kcHJldkVsICYmICR0YXJnZXRFbC5pcyhzd2lwZXIubmF2aWdhdGlvbi4kcHJldkVsKSkge1xuICAgICAgICBpZiAoIShzd2lwZXIuaXNCZWdpbm5pbmcgJiYgIXN3aXBlci5wYXJhbXMubG9vcCkpIHtcbiAgICAgICAgICBzd2lwZXIuc2xpZGVQcmV2KCk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoc3dpcGVyLmlzQmVnaW5uaW5nKSB7XG4gICAgICAgICAgc3dpcGVyLmExMXkubm90aWZ5KHBhcmFtcy5maXJzdFNsaWRlTWVzc2FnZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc3dpcGVyLmExMXkubm90aWZ5KHBhcmFtcy5wcmV2U2xpZGVNZXNzYWdlKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoc3dpcGVyLnBhZ2luYXRpb24gJiYgJHRhcmdldEVsLmlzKFwiLlwiICsgc3dpcGVyLnBhcmFtcy5wYWdpbmF0aW9uLmJ1bGxldENsYXNzKSkge1xuICAgICAgICAkdGFyZ2V0RWxbMF0uY2xpY2soKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIG5vdGlmeTogZnVuY3Rpb24gbm90aWZ5KG1lc3NhZ2UpIHtcbiAgICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgICAgdmFyIG5vdGlmaWNhdGlvbiA9IHN3aXBlci5hMTF5LmxpdmVSZWdpb247XG4gICAgICBpZiAobm90aWZpY2F0aW9uLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuICAgICAgbm90aWZpY2F0aW9uLmh0bWwoJycpO1xuICAgICAgbm90aWZpY2F0aW9uLmh0bWwobWVzc2FnZSk7XG4gICAgfSxcbiAgICB1cGRhdGVOYXZpZ2F0aW9uOiBmdW5jdGlvbiB1cGRhdGVOYXZpZ2F0aW9uKCkge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICBpZiAoc3dpcGVyLnBhcmFtcy5sb29wIHx8ICFzd2lwZXIubmF2aWdhdGlvbikgcmV0dXJuO1xuICAgICAgdmFyIF9zd2lwZXIkbmF2aWdhdGlvbiA9IHN3aXBlci5uYXZpZ2F0aW9uLFxuICAgICAgICAgICRuZXh0RWwgPSBfc3dpcGVyJG5hdmlnYXRpb24uJG5leHRFbCxcbiAgICAgICAgICAkcHJldkVsID0gX3N3aXBlciRuYXZpZ2F0aW9uLiRwcmV2RWw7XG5cbiAgICAgIGlmICgkcHJldkVsICYmICRwcmV2RWwubGVuZ3RoID4gMCkge1xuICAgICAgICBpZiAoc3dpcGVyLmlzQmVnaW5uaW5nKSB7XG4gICAgICAgICAgc3dpcGVyLmExMXkuZGlzYWJsZUVsKCRwcmV2RWwpO1xuICAgICAgICAgIHN3aXBlci5hMTF5Lm1ha2VFbE5vdEZvY3VzYWJsZSgkcHJldkVsKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzd2lwZXIuYTExeS5lbmFibGVFbCgkcHJldkVsKTtcbiAgICAgICAgICBzd2lwZXIuYTExeS5tYWtlRWxGb2N1c2FibGUoJHByZXZFbCk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKCRuZXh0RWwgJiYgJG5leHRFbC5sZW5ndGggPiAwKSB7XG4gICAgICAgIGlmIChzd2lwZXIuaXNFbmQpIHtcbiAgICAgICAgICBzd2lwZXIuYTExeS5kaXNhYmxlRWwoJG5leHRFbCk7XG4gICAgICAgICAgc3dpcGVyLmExMXkubWFrZUVsTm90Rm9jdXNhYmxlKCRuZXh0RWwpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHN3aXBlci5hMTF5LmVuYWJsZUVsKCRuZXh0RWwpO1xuICAgICAgICAgIHN3aXBlci5hMTF5Lm1ha2VFbEZvY3VzYWJsZSgkbmV4dEVsKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgdXBkYXRlUGFnaW5hdGlvbjogZnVuY3Rpb24gdXBkYXRlUGFnaW5hdGlvbigpIHtcbiAgICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgICAgdmFyIHBhcmFtcyA9IHN3aXBlci5wYXJhbXMuYTExeTtcblxuICAgICAgaWYgKHN3aXBlci5wYWdpbmF0aW9uICYmIHN3aXBlci5wYXJhbXMucGFnaW5hdGlvbi5jbGlja2FibGUgJiYgc3dpcGVyLnBhZ2luYXRpb24uYnVsbGV0cyAmJiBzd2lwZXIucGFnaW5hdGlvbi5idWxsZXRzLmxlbmd0aCkge1xuICAgICAgICBzd2lwZXIucGFnaW5hdGlvbi5idWxsZXRzLmVhY2goZnVuY3Rpb24gKGJ1bGxldEVsKSB7XG4gICAgICAgICAgdmFyICRidWxsZXRFbCA9ICQoYnVsbGV0RWwpO1xuICAgICAgICAgIHN3aXBlci5hMTF5Lm1ha2VFbEZvY3VzYWJsZSgkYnVsbGV0RWwpO1xuXG4gICAgICAgICAgaWYgKCFzd2lwZXIucGFyYW1zLnBhZ2luYXRpb24ucmVuZGVyQnVsbGV0KSB7XG4gICAgICAgICAgICBzd2lwZXIuYTExeS5hZGRFbFJvbGUoJGJ1bGxldEVsLCAnYnV0dG9uJyk7XG4gICAgICAgICAgICBzd2lwZXIuYTExeS5hZGRFbExhYmVsKCRidWxsZXRFbCwgcGFyYW1zLnBhZ2luYXRpb25CdWxsZXRNZXNzYWdlLnJlcGxhY2UoL1xce1xce2luZGV4XFx9XFx9LywgJGJ1bGxldEVsLmluZGV4KCkgKyAxKSk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGluaXQ6IGZ1bmN0aW9uIGluaXQoKSB7XG4gICAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICAgIHZhciBwYXJhbXMgPSBzd2lwZXIucGFyYW1zLmExMXk7XG4gICAgICBzd2lwZXIuJGVsLmFwcGVuZChzd2lwZXIuYTExeS5saXZlUmVnaW9uKTsgLy8gQ29udGFpbmVyXG5cbiAgICAgIHZhciAkY29udGFpbmVyRWwgPSBzd2lwZXIuJGVsO1xuXG4gICAgICBpZiAocGFyYW1zLmNvbnRhaW5lclJvbGVEZXNjcmlwdGlvbk1lc3NhZ2UpIHtcbiAgICAgICAgc3dpcGVyLmExMXkuYWRkRWxSb2xlRGVzY3JpcHRpb24oJGNvbnRhaW5lckVsLCBwYXJhbXMuY29udGFpbmVyUm9sZURlc2NyaXB0aW9uTWVzc2FnZSk7XG4gICAgICB9XG5cbiAgICAgIGlmIChwYXJhbXMuY29udGFpbmVyTWVzc2FnZSkge1xuICAgICAgICBzd2lwZXIuYTExeS5hZGRFbExhYmVsKCRjb250YWluZXJFbCwgcGFyYW1zLmNvbnRhaW5lck1lc3NhZ2UpO1xuICAgICAgfSAvLyBXcmFwcGVyXG5cblxuICAgICAgdmFyICR3cmFwcGVyRWwgPSBzd2lwZXIuJHdyYXBwZXJFbDtcbiAgICAgIHZhciB3cmFwcGVySWQgPSAkd3JhcHBlckVsLmF0dHIoJ2lkJykgfHwgXCJzd2lwZXItd3JhcHBlci1cIiArIHN3aXBlci5hMTF5LmdldFJhbmRvbU51bWJlcigxNik7XG4gICAgICB2YXIgbGl2ZTtcbiAgICAgIHN3aXBlci5hMTF5LmFkZEVsSWQoJHdyYXBwZXJFbCwgd3JhcHBlcklkKTtcblxuICAgICAgaWYgKHN3aXBlci5wYXJhbXMuYXV0b3BsYXkgJiYgc3dpcGVyLnBhcmFtcy5hdXRvcGxheS5lbmFibGVkKSB7XG4gICAgICAgIGxpdmUgPSAnb2ZmJztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGxpdmUgPSAncG9saXRlJztcbiAgICAgIH1cblxuICAgICAgc3dpcGVyLmExMXkuYWRkRWxMaXZlKCR3cmFwcGVyRWwsIGxpdmUpOyAvLyBTbGlkZVxuXG4gICAgICBpZiAocGFyYW1zLml0ZW1Sb2xlRGVzY3JpcHRpb25NZXNzYWdlKSB7XG4gICAgICAgIHN3aXBlci5hMTF5LmFkZEVsUm9sZURlc2NyaXB0aW9uKCQoc3dpcGVyLnNsaWRlcyksIHBhcmFtcy5pdGVtUm9sZURlc2NyaXB0aW9uTWVzc2FnZSk7XG4gICAgICB9XG5cbiAgICAgIHN3aXBlci5hMTF5LmFkZEVsUm9sZSgkKHN3aXBlci5zbGlkZXMpLCAnZ3JvdXAnKTtcbiAgICAgIHN3aXBlci5zbGlkZXMuZWFjaChmdW5jdGlvbiAoc2xpZGVFbCkge1xuICAgICAgICB2YXIgJHNsaWRlRWwgPSAkKHNsaWRlRWwpO1xuICAgICAgICBzd2lwZXIuYTExeS5hZGRFbExhYmVsKCRzbGlkZUVsLCAkc2xpZGVFbC5pbmRleCgpICsgMSArIFwiIC8gXCIgKyBzd2lwZXIuc2xpZGVzLmxlbmd0aCk7XG4gICAgICB9KTsgLy8gTmF2aWdhdGlvblxuXG4gICAgICB2YXIgJG5leHRFbDtcbiAgICAgIHZhciAkcHJldkVsO1xuXG4gICAgICBpZiAoc3dpcGVyLm5hdmlnYXRpb24gJiYgc3dpcGVyLm5hdmlnYXRpb24uJG5leHRFbCkge1xuICAgICAgICAkbmV4dEVsID0gc3dpcGVyLm5hdmlnYXRpb24uJG5leHRFbDtcbiAgICAgIH1cblxuICAgICAgaWYgKHN3aXBlci5uYXZpZ2F0aW9uICYmIHN3aXBlci5uYXZpZ2F0aW9uLiRwcmV2RWwpIHtcbiAgICAgICAgJHByZXZFbCA9IHN3aXBlci5uYXZpZ2F0aW9uLiRwcmV2RWw7XG4gICAgICB9XG5cbiAgICAgIGlmICgkbmV4dEVsKSB7XG4gICAgICAgIHN3aXBlci5hMTF5Lm1ha2VFbEZvY3VzYWJsZSgkbmV4dEVsKTtcblxuICAgICAgICBpZiAoJG5leHRFbFswXS50YWdOYW1lICE9PSAnQlVUVE9OJykge1xuICAgICAgICAgIHN3aXBlci5hMTF5LmFkZEVsUm9sZSgkbmV4dEVsLCAnYnV0dG9uJyk7XG4gICAgICAgICAgJG5leHRFbC5vbigna2V5ZG93bicsIHN3aXBlci5hMTF5Lm9uRW50ZXJLZXkpO1xuICAgICAgICB9XG5cbiAgICAgICAgc3dpcGVyLmExMXkuYWRkRWxMYWJlbCgkbmV4dEVsLCBwYXJhbXMubmV4dFNsaWRlTWVzc2FnZSk7XG4gICAgICAgIHN3aXBlci5hMTF5LmFkZEVsQ29udHJvbHMoJG5leHRFbCwgd3JhcHBlcklkKTtcbiAgICAgIH1cblxuICAgICAgaWYgKCRwcmV2RWwpIHtcbiAgICAgICAgc3dpcGVyLmExMXkubWFrZUVsRm9jdXNhYmxlKCRwcmV2RWwpO1xuXG4gICAgICAgIGlmICgkcHJldkVsWzBdLnRhZ05hbWUgIT09ICdCVVRUT04nKSB7XG4gICAgICAgICAgc3dpcGVyLmExMXkuYWRkRWxSb2xlKCRwcmV2RWwsICdidXR0b24nKTtcbiAgICAgICAgICAkcHJldkVsLm9uKCdrZXlkb3duJywgc3dpcGVyLmExMXkub25FbnRlcktleSk7XG4gICAgICAgIH1cblxuICAgICAgICBzd2lwZXIuYTExeS5hZGRFbExhYmVsKCRwcmV2RWwsIHBhcmFtcy5wcmV2U2xpZGVNZXNzYWdlKTtcbiAgICAgICAgc3dpcGVyLmExMXkuYWRkRWxDb250cm9scygkcHJldkVsLCB3cmFwcGVySWQpO1xuICAgICAgfSAvLyBQYWdpbmF0aW9uXG5cblxuICAgICAgaWYgKHN3aXBlci5wYWdpbmF0aW9uICYmIHN3aXBlci5wYXJhbXMucGFnaW5hdGlvbi5jbGlja2FibGUgJiYgc3dpcGVyLnBhZ2luYXRpb24uYnVsbGV0cyAmJiBzd2lwZXIucGFnaW5hdGlvbi5idWxsZXRzLmxlbmd0aCkge1xuICAgICAgICBzd2lwZXIucGFnaW5hdGlvbi4kZWwub24oJ2tleWRvd24nLCBcIi5cIiArIHN3aXBlci5wYXJhbXMucGFnaW5hdGlvbi5idWxsZXRDbGFzcywgc3dpcGVyLmExMXkub25FbnRlcktleSk7XG4gICAgICB9XG4gICAgfSxcbiAgICBkZXN0cm95OiBmdW5jdGlvbiBkZXN0cm95KCkge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICBpZiAoc3dpcGVyLmExMXkubGl2ZVJlZ2lvbiAmJiBzd2lwZXIuYTExeS5saXZlUmVnaW9uLmxlbmd0aCA+IDApIHN3aXBlci5hMTF5LmxpdmVSZWdpb24ucmVtb3ZlKCk7XG4gICAgICB2YXIgJG5leHRFbDtcbiAgICAgIHZhciAkcHJldkVsO1xuXG4gICAgICBpZiAoc3dpcGVyLm5hdmlnYXRpb24gJiYgc3dpcGVyLm5hdmlnYXRpb24uJG5leHRFbCkge1xuICAgICAgICAkbmV4dEVsID0gc3dpcGVyLm5hdmlnYXRpb24uJG5leHRFbDtcbiAgICAgIH1cblxuICAgICAgaWYgKHN3aXBlci5uYXZpZ2F0aW9uICYmIHN3aXBlci5uYXZpZ2F0aW9uLiRwcmV2RWwpIHtcbiAgICAgICAgJHByZXZFbCA9IHN3aXBlci5uYXZpZ2F0aW9uLiRwcmV2RWw7XG4gICAgICB9XG5cbiAgICAgIGlmICgkbmV4dEVsKSB7XG4gICAgICAgICRuZXh0RWwub2ZmKCdrZXlkb3duJywgc3dpcGVyLmExMXkub25FbnRlcktleSk7XG4gICAgICB9XG5cbiAgICAgIGlmICgkcHJldkVsKSB7XG4gICAgICAgICRwcmV2RWwub2ZmKCdrZXlkb3duJywgc3dpcGVyLmExMXkub25FbnRlcktleSk7XG4gICAgICB9IC8vIFBhZ2luYXRpb25cblxuXG4gICAgICBpZiAoc3dpcGVyLnBhZ2luYXRpb24gJiYgc3dpcGVyLnBhcmFtcy5wYWdpbmF0aW9uLmNsaWNrYWJsZSAmJiBzd2lwZXIucGFnaW5hdGlvbi5idWxsZXRzICYmIHN3aXBlci5wYWdpbmF0aW9uLmJ1bGxldHMubGVuZ3RoKSB7XG4gICAgICAgIHN3aXBlci5wYWdpbmF0aW9uLiRlbC5vZmYoJ2tleWRvd24nLCBcIi5cIiArIHN3aXBlci5wYXJhbXMucGFnaW5hdGlvbi5idWxsZXRDbGFzcywgc3dpcGVyLmExMXkub25FbnRlcktleSk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuICB2YXIgQTExeSQxID0ge1xuICAgIG5hbWU6ICdhMTF5JyxcbiAgICBwYXJhbXM6IHtcbiAgICAgIGExMXk6IHtcbiAgICAgICAgZW5hYmxlZDogdHJ1ZSxcbiAgICAgICAgbm90aWZpY2F0aW9uQ2xhc3M6ICdzd2lwZXItbm90aWZpY2F0aW9uJyxcbiAgICAgICAgcHJldlNsaWRlTWVzc2FnZTogJ1ByZXZpb3VzIHNsaWRlJyxcbiAgICAgICAgbmV4dFNsaWRlTWVzc2FnZTogJ05leHQgc2xpZGUnLFxuICAgICAgICBmaXJzdFNsaWRlTWVzc2FnZTogJ1RoaXMgaXMgdGhlIGZpcnN0IHNsaWRlJyxcbiAgICAgICAgbGFzdFNsaWRlTWVzc2FnZTogJ1RoaXMgaXMgdGhlIGxhc3Qgc2xpZGUnLFxuICAgICAgICBwYWdpbmF0aW9uQnVsbGV0TWVzc2FnZTogJ0dvIHRvIHNsaWRlIHt7aW5kZXh9fScsXG4gICAgICAgIGNvbnRhaW5lck1lc3NhZ2U6IG51bGwsXG4gICAgICAgIGNvbnRhaW5lclJvbGVEZXNjcmlwdGlvbk1lc3NhZ2U6IG51bGwsXG4gICAgICAgIGl0ZW1Sb2xlRGVzY3JpcHRpb25NZXNzYWdlOiBudWxsXG4gICAgICB9XG4gICAgfSxcbiAgICBjcmVhdGU6IGZ1bmN0aW9uIGNyZWF0ZSgpIHtcbiAgICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgICAgYmluZE1vZHVsZU1ldGhvZHMoc3dpcGVyLCB7XG4gICAgICAgIGExMXk6IF9leHRlbmRzKF9leHRlbmRzKHt9LCBBMTF5KSwge30sIHtcbiAgICAgICAgICBsaXZlUmVnaW9uOiAkKFwiPHNwYW4gY2xhc3M9XFxcIlwiICsgc3dpcGVyLnBhcmFtcy5hMTF5Lm5vdGlmaWNhdGlvbkNsYXNzICsgXCJcXFwiIGFyaWEtbGl2ZT1cXFwiYXNzZXJ0aXZlXFxcIiBhcmlhLWF0b21pYz1cXFwidHJ1ZVxcXCI+PC9zcGFuPlwiKVxuICAgICAgICB9KVxuICAgICAgfSk7XG4gICAgfSxcbiAgICBvbjoge1xuICAgICAgaW5pdDogZnVuY3Rpb24gaW5pdChzd2lwZXIpIHtcbiAgICAgICAgaWYgKCFzd2lwZXIucGFyYW1zLmExMXkuZW5hYmxlZCkgcmV0dXJuO1xuICAgICAgICBzd2lwZXIuYTExeS5pbml0KCk7XG4gICAgICAgIHN3aXBlci5hMTF5LnVwZGF0ZU5hdmlnYXRpb24oKTtcbiAgICAgIH0sXG4gICAgICB0b0VkZ2U6IGZ1bmN0aW9uIHRvRWRnZShzd2lwZXIpIHtcbiAgICAgICAgaWYgKCFzd2lwZXIucGFyYW1zLmExMXkuZW5hYmxlZCkgcmV0dXJuO1xuICAgICAgICBzd2lwZXIuYTExeS51cGRhdGVOYXZpZ2F0aW9uKCk7XG4gICAgICB9LFxuICAgICAgZnJvbUVkZ2U6IGZ1bmN0aW9uIGZyb21FZGdlKHN3aXBlcikge1xuICAgICAgICBpZiAoIXN3aXBlci5wYXJhbXMuYTExeS5lbmFibGVkKSByZXR1cm47XG4gICAgICAgIHN3aXBlci5hMTF5LnVwZGF0ZU5hdmlnYXRpb24oKTtcbiAgICAgIH0sXG4gICAgICBwYWdpbmF0aW9uVXBkYXRlOiBmdW5jdGlvbiBwYWdpbmF0aW9uVXBkYXRlKHN3aXBlcikge1xuICAgICAgICBpZiAoIXN3aXBlci5wYXJhbXMuYTExeS5lbmFibGVkKSByZXR1cm47XG4gICAgICAgIHN3aXBlci5hMTF5LnVwZGF0ZVBhZ2luYXRpb24oKTtcbiAgICAgIH0sXG4gICAgICBkZXN0cm95OiBmdW5jdGlvbiBkZXN0cm95KHN3aXBlcikge1xuICAgICAgICBpZiAoIXN3aXBlci5wYXJhbXMuYTExeS5lbmFibGVkKSByZXR1cm47XG4gICAgICAgIHN3aXBlci5hMTF5LmRlc3Ryb3koKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbiAgdmFyIEhpc3RvcnkgPSB7XG4gICAgaW5pdDogZnVuY3Rpb24gaW5pdCgpIHtcbiAgICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgICAgdmFyIHdpbmRvdyA9IGdldFdpbmRvdygpO1xuICAgICAgaWYgKCFzd2lwZXIucGFyYW1zLmhpc3RvcnkpIHJldHVybjtcblxuICAgICAgaWYgKCF3aW5kb3cuaGlzdG9yeSB8fCAhd2luZG93Lmhpc3RvcnkucHVzaFN0YXRlKSB7XG4gICAgICAgIHN3aXBlci5wYXJhbXMuaGlzdG9yeS5lbmFibGVkID0gZmFsc2U7XG4gICAgICAgIHN3aXBlci5wYXJhbXMuaGFzaE5hdmlnYXRpb24uZW5hYmxlZCA9IHRydWU7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdmFyIGhpc3RvcnkgPSBzd2lwZXIuaGlzdG9yeTtcbiAgICAgIGhpc3RvcnkuaW5pdGlhbGl6ZWQgPSB0cnVlO1xuICAgICAgaGlzdG9yeS5wYXRocyA9IEhpc3RvcnkuZ2V0UGF0aFZhbHVlcyhzd2lwZXIucGFyYW1zLnVybCk7XG4gICAgICBpZiAoIWhpc3RvcnkucGF0aHMua2V5ICYmICFoaXN0b3J5LnBhdGhzLnZhbHVlKSByZXR1cm47XG4gICAgICBoaXN0b3J5LnNjcm9sbFRvU2xpZGUoMCwgaGlzdG9yeS5wYXRocy52YWx1ZSwgc3dpcGVyLnBhcmFtcy5ydW5DYWxsYmFja3NPbkluaXQpO1xuXG4gICAgICBpZiAoIXN3aXBlci5wYXJhbXMuaGlzdG9yeS5yZXBsYWNlU3RhdGUpIHtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3BvcHN0YXRlJywgc3dpcGVyLmhpc3Rvcnkuc2V0SGlzdG9yeVBvcFN0YXRlKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGRlc3Ryb3k6IGZ1bmN0aW9uIGRlc3Ryb3koKSB7XG4gICAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICAgIHZhciB3aW5kb3cgPSBnZXRXaW5kb3coKTtcblxuICAgICAgaWYgKCFzd2lwZXIucGFyYW1zLmhpc3RvcnkucmVwbGFjZVN0YXRlKSB7XG4gICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdwb3BzdGF0ZScsIHN3aXBlci5oaXN0b3J5LnNldEhpc3RvcnlQb3BTdGF0ZSk7XG4gICAgICB9XG4gICAgfSxcbiAgICBzZXRIaXN0b3J5UG9wU3RhdGU6IGZ1bmN0aW9uIHNldEhpc3RvcnlQb3BTdGF0ZSgpIHtcbiAgICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgICAgc3dpcGVyLmhpc3RvcnkucGF0aHMgPSBIaXN0b3J5LmdldFBhdGhWYWx1ZXMoc3dpcGVyLnBhcmFtcy51cmwpO1xuICAgICAgc3dpcGVyLmhpc3Rvcnkuc2Nyb2xsVG9TbGlkZShzd2lwZXIucGFyYW1zLnNwZWVkLCBzd2lwZXIuaGlzdG9yeS5wYXRocy52YWx1ZSwgZmFsc2UpO1xuICAgIH0sXG4gICAgZ2V0UGF0aFZhbHVlczogZnVuY3Rpb24gZ2V0UGF0aFZhbHVlcyh1cmxPdmVycmlkZSkge1xuICAgICAgdmFyIHdpbmRvdyA9IGdldFdpbmRvdygpO1xuICAgICAgdmFyIGxvY2F0aW9uO1xuXG4gICAgICBpZiAodXJsT3ZlcnJpZGUpIHtcbiAgICAgICAgbG9jYXRpb24gPSBuZXcgVVJMKHVybE92ZXJyaWRlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGxvY2F0aW9uID0gd2luZG93LmxvY2F0aW9uO1xuICAgICAgfVxuXG4gICAgICB2YXIgcGF0aEFycmF5ID0gbG9jYXRpb24ucGF0aG5hbWUuc2xpY2UoMSkuc3BsaXQoJy8nKS5maWx0ZXIoZnVuY3Rpb24gKHBhcnQpIHtcbiAgICAgICAgcmV0dXJuIHBhcnQgIT09ICcnO1xuICAgICAgfSk7XG4gICAgICB2YXIgdG90YWwgPSBwYXRoQXJyYXkubGVuZ3RoO1xuICAgICAgdmFyIGtleSA9IHBhdGhBcnJheVt0b3RhbCAtIDJdO1xuICAgICAgdmFyIHZhbHVlID0gcGF0aEFycmF5W3RvdGFsIC0gMV07XG4gICAgICByZXR1cm4ge1xuICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgdmFsdWU6IHZhbHVlXG4gICAgICB9O1xuICAgIH0sXG4gICAgc2V0SGlzdG9yeTogZnVuY3Rpb24gc2V0SGlzdG9yeShrZXksIGluZGV4KSB7XG4gICAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICAgIHZhciB3aW5kb3cgPSBnZXRXaW5kb3coKTtcbiAgICAgIGlmICghc3dpcGVyLmhpc3RvcnkuaW5pdGlhbGl6ZWQgfHwgIXN3aXBlci5wYXJhbXMuaGlzdG9yeS5lbmFibGVkKSByZXR1cm47XG4gICAgICB2YXIgbG9jYXRpb247XG5cbiAgICAgIGlmIChzd2lwZXIucGFyYW1zLnVybCkge1xuICAgICAgICBsb2NhdGlvbiA9IG5ldyBVUkwoc3dpcGVyLnBhcmFtcy51cmwpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbG9jYXRpb24gPSB3aW5kb3cubG9jYXRpb247XG4gICAgICB9XG5cbiAgICAgIHZhciBzbGlkZSA9IHN3aXBlci5zbGlkZXMuZXEoaW5kZXgpO1xuICAgICAgdmFyIHZhbHVlID0gSGlzdG9yeS5zbHVnaWZ5KHNsaWRlLmF0dHIoJ2RhdGEtaGlzdG9yeScpKTtcblxuICAgICAgaWYgKCFsb2NhdGlvbi5wYXRobmFtZS5pbmNsdWRlcyhrZXkpKSB7XG4gICAgICAgIHZhbHVlID0ga2V5ICsgXCIvXCIgKyB2YWx1ZTtcbiAgICAgIH1cblxuICAgICAgdmFyIGN1cnJlbnRTdGF0ZSA9IHdpbmRvdy5oaXN0b3J5LnN0YXRlO1xuXG4gICAgICBpZiAoY3VycmVudFN0YXRlICYmIGN1cnJlbnRTdGF0ZS52YWx1ZSA9PT0gdmFsdWUpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAoc3dpcGVyLnBhcmFtcy5oaXN0b3J5LnJlcGxhY2VTdGF0ZSkge1xuICAgICAgICB3aW5kb3cuaGlzdG9yeS5yZXBsYWNlU3RhdGUoe1xuICAgICAgICAgIHZhbHVlOiB2YWx1ZVxuICAgICAgICB9LCBudWxsLCB2YWx1ZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB3aW5kb3cuaGlzdG9yeS5wdXNoU3RhdGUoe1xuICAgICAgICAgIHZhbHVlOiB2YWx1ZVxuICAgICAgICB9LCBudWxsLCB2YWx1ZSk7XG4gICAgICB9XG4gICAgfSxcbiAgICBzbHVnaWZ5OiBmdW5jdGlvbiBzbHVnaWZ5KHRleHQpIHtcbiAgICAgIHJldHVybiB0ZXh0LnRvU3RyaW5nKCkucmVwbGFjZSgvXFxzKy9nLCAnLScpLnJlcGxhY2UoL1teXFx3LV0rL2csICcnKS5yZXBsYWNlKC8tLSsvZywgJy0nKS5yZXBsYWNlKC9eLSsvLCAnJykucmVwbGFjZSgvLSskLywgJycpO1xuICAgIH0sXG4gICAgc2Nyb2xsVG9TbGlkZTogZnVuY3Rpb24gc2Nyb2xsVG9TbGlkZShzcGVlZCwgdmFsdWUsIHJ1bkNhbGxiYWNrcykge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG5cbiAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICBmb3IgKHZhciBpID0gMCwgbGVuZ3RoID0gc3dpcGVyLnNsaWRlcy5sZW5ndGg7IGkgPCBsZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICAgIHZhciBzbGlkZSA9IHN3aXBlci5zbGlkZXMuZXEoaSk7XG4gICAgICAgICAgdmFyIHNsaWRlSGlzdG9yeSA9IEhpc3Rvcnkuc2x1Z2lmeShzbGlkZS5hdHRyKCdkYXRhLWhpc3RvcnknKSk7XG5cbiAgICAgICAgICBpZiAoc2xpZGVIaXN0b3J5ID09PSB2YWx1ZSAmJiAhc2xpZGUuaGFzQ2xhc3Moc3dpcGVyLnBhcmFtcy5zbGlkZUR1cGxpY2F0ZUNsYXNzKSkge1xuICAgICAgICAgICAgdmFyIGluZGV4ID0gc2xpZGUuaW5kZXgoKTtcbiAgICAgICAgICAgIHN3aXBlci5zbGlkZVRvKGluZGV4LCBzcGVlZCwgcnVuQ2FsbGJhY2tzKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHN3aXBlci5zbGlkZVRvKDAsIHNwZWVkLCBydW5DYWxsYmFja3MpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcbiAgdmFyIEhpc3RvcnkkMSA9IHtcbiAgICBuYW1lOiAnaGlzdG9yeScsXG4gICAgcGFyYW1zOiB7XG4gICAgICBoaXN0b3J5OiB7XG4gICAgICAgIGVuYWJsZWQ6IGZhbHNlLFxuICAgICAgICByZXBsYWNlU3RhdGU6IGZhbHNlLFxuICAgICAgICBrZXk6ICdzbGlkZXMnXG4gICAgICB9XG4gICAgfSxcbiAgICBjcmVhdGU6IGZ1bmN0aW9uIGNyZWF0ZSgpIHtcbiAgICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgICAgYmluZE1vZHVsZU1ldGhvZHMoc3dpcGVyLCB7XG4gICAgICAgIGhpc3Rvcnk6IF9leHRlbmRzKHt9LCBIaXN0b3J5KVxuICAgICAgfSk7XG4gICAgfSxcbiAgICBvbjoge1xuICAgICAgaW5pdDogZnVuY3Rpb24gaW5pdChzd2lwZXIpIHtcbiAgICAgICAgaWYgKHN3aXBlci5wYXJhbXMuaGlzdG9yeS5lbmFibGVkKSB7XG4gICAgICAgICAgc3dpcGVyLmhpc3RvcnkuaW5pdCgpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgZGVzdHJveTogZnVuY3Rpb24gZGVzdHJveShzd2lwZXIpIHtcbiAgICAgICAgaWYgKHN3aXBlci5wYXJhbXMuaGlzdG9yeS5lbmFibGVkKSB7XG4gICAgICAgICAgc3dpcGVyLmhpc3RvcnkuZGVzdHJveSgpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgdHJhbnNpdGlvbkVuZDogZnVuY3Rpb24gdHJhbnNpdGlvbkVuZChzd2lwZXIpIHtcbiAgICAgICAgaWYgKHN3aXBlci5oaXN0b3J5LmluaXRpYWxpemVkKSB7XG4gICAgICAgICAgc3dpcGVyLmhpc3Rvcnkuc2V0SGlzdG9yeShzd2lwZXIucGFyYW1zLmhpc3Rvcnkua2V5LCBzd2lwZXIuYWN0aXZlSW5kZXgpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgc2xpZGVDaGFuZ2U6IGZ1bmN0aW9uIHNsaWRlQ2hhbmdlKHN3aXBlcikge1xuICAgICAgICBpZiAoc3dpcGVyLmhpc3RvcnkuaW5pdGlhbGl6ZWQgJiYgc3dpcGVyLnBhcmFtcy5jc3NNb2RlKSB7XG4gICAgICAgICAgc3dpcGVyLmhpc3Rvcnkuc2V0SGlzdG9yeShzd2lwZXIucGFyYW1zLmhpc3Rvcnkua2V5LCBzd2lwZXIuYWN0aXZlSW5kZXgpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIHZhciBIYXNoTmF2aWdhdGlvbiA9IHtcbiAgICBvbkhhc2hDYW5nZTogZnVuY3Rpb24gb25IYXNoQ2FuZ2UoKSB7XG4gICAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICAgIHZhciBkb2N1bWVudCA9IGdldERvY3VtZW50KCk7XG4gICAgICBzd2lwZXIuZW1pdCgnaGFzaENoYW5nZScpO1xuICAgICAgdmFyIG5ld0hhc2ggPSBkb2N1bWVudC5sb2NhdGlvbi5oYXNoLnJlcGxhY2UoJyMnLCAnJyk7XG4gICAgICB2YXIgYWN0aXZlU2xpZGVIYXNoID0gc3dpcGVyLnNsaWRlcy5lcShzd2lwZXIuYWN0aXZlSW5kZXgpLmF0dHIoJ2RhdGEtaGFzaCcpO1xuXG4gICAgICBpZiAobmV3SGFzaCAhPT0gYWN0aXZlU2xpZGVIYXNoKSB7XG4gICAgICAgIHZhciBuZXdJbmRleCA9IHN3aXBlci4kd3JhcHBlckVsLmNoaWxkcmVuKFwiLlwiICsgc3dpcGVyLnBhcmFtcy5zbGlkZUNsYXNzICsgXCJbZGF0YS1oYXNoPVxcXCJcIiArIG5ld0hhc2ggKyBcIlxcXCJdXCIpLmluZGV4KCk7XG4gICAgICAgIGlmICh0eXBlb2YgbmV3SW5kZXggPT09ICd1bmRlZmluZWQnKSByZXR1cm47XG4gICAgICAgIHN3aXBlci5zbGlkZVRvKG5ld0luZGV4KTtcbiAgICAgIH1cbiAgICB9LFxuICAgIHNldEhhc2g6IGZ1bmN0aW9uIHNldEhhc2goKSB7XG4gICAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICAgIHZhciB3aW5kb3cgPSBnZXRXaW5kb3coKTtcbiAgICAgIHZhciBkb2N1bWVudCA9IGdldERvY3VtZW50KCk7XG4gICAgICBpZiAoIXN3aXBlci5oYXNoTmF2aWdhdGlvbi5pbml0aWFsaXplZCB8fCAhc3dpcGVyLnBhcmFtcy5oYXNoTmF2aWdhdGlvbi5lbmFibGVkKSByZXR1cm47XG5cbiAgICAgIGlmIChzd2lwZXIucGFyYW1zLmhhc2hOYXZpZ2F0aW9uLnJlcGxhY2VTdGF0ZSAmJiB3aW5kb3cuaGlzdG9yeSAmJiB3aW5kb3cuaGlzdG9yeS5yZXBsYWNlU3RhdGUpIHtcbiAgICAgICAgd2luZG93Lmhpc3RvcnkucmVwbGFjZVN0YXRlKG51bGwsIG51bGwsIFwiI1wiICsgc3dpcGVyLnNsaWRlcy5lcShzd2lwZXIuYWN0aXZlSW5kZXgpLmF0dHIoJ2RhdGEtaGFzaCcpIHx8ICcnKTtcbiAgICAgICAgc3dpcGVyLmVtaXQoJ2hhc2hTZXQnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciBzbGlkZSA9IHN3aXBlci5zbGlkZXMuZXEoc3dpcGVyLmFjdGl2ZUluZGV4KTtcbiAgICAgICAgdmFyIGhhc2ggPSBzbGlkZS5hdHRyKCdkYXRhLWhhc2gnKSB8fCBzbGlkZS5hdHRyKCdkYXRhLWhpc3RvcnknKTtcbiAgICAgICAgZG9jdW1lbnQubG9jYXRpb24uaGFzaCA9IGhhc2ggfHwgJyc7XG4gICAgICAgIHN3aXBlci5lbWl0KCdoYXNoU2V0Jyk7XG4gICAgICB9XG4gICAgfSxcbiAgICBpbml0OiBmdW5jdGlvbiBpbml0KCkge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICB2YXIgZG9jdW1lbnQgPSBnZXREb2N1bWVudCgpO1xuICAgICAgdmFyIHdpbmRvdyA9IGdldFdpbmRvdygpO1xuICAgICAgaWYgKCFzd2lwZXIucGFyYW1zLmhhc2hOYXZpZ2F0aW9uLmVuYWJsZWQgfHwgc3dpcGVyLnBhcmFtcy5oaXN0b3J5ICYmIHN3aXBlci5wYXJhbXMuaGlzdG9yeS5lbmFibGVkKSByZXR1cm47XG4gICAgICBzd2lwZXIuaGFzaE5hdmlnYXRpb24uaW5pdGlhbGl6ZWQgPSB0cnVlO1xuICAgICAgdmFyIGhhc2ggPSBkb2N1bWVudC5sb2NhdGlvbi5oYXNoLnJlcGxhY2UoJyMnLCAnJyk7XG5cbiAgICAgIGlmIChoYXNoKSB7XG4gICAgICAgIHZhciBzcGVlZCA9IDA7XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbmd0aCA9IHN3aXBlci5zbGlkZXMubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgICB2YXIgc2xpZGUgPSBzd2lwZXIuc2xpZGVzLmVxKGkpO1xuICAgICAgICAgIHZhciBzbGlkZUhhc2ggPSBzbGlkZS5hdHRyKCdkYXRhLWhhc2gnKSB8fCBzbGlkZS5hdHRyKCdkYXRhLWhpc3RvcnknKTtcblxuICAgICAgICAgIGlmIChzbGlkZUhhc2ggPT09IGhhc2ggJiYgIXNsaWRlLmhhc0NsYXNzKHN3aXBlci5wYXJhbXMuc2xpZGVEdXBsaWNhdGVDbGFzcykpIHtcbiAgICAgICAgICAgIHZhciBpbmRleCA9IHNsaWRlLmluZGV4KCk7XG4gICAgICAgICAgICBzd2lwZXIuc2xpZGVUbyhpbmRleCwgc3BlZWQsIHN3aXBlci5wYXJhbXMucnVuQ2FsbGJhY2tzT25Jbml0LCB0cnVlKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHN3aXBlci5wYXJhbXMuaGFzaE5hdmlnYXRpb24ud2F0Y2hTdGF0ZSkge1xuICAgICAgICAkKHdpbmRvdykub24oJ2hhc2hjaGFuZ2UnLCBzd2lwZXIuaGFzaE5hdmlnYXRpb24ub25IYXNoQ2FuZ2UpO1xuICAgICAgfVxuICAgIH0sXG4gICAgZGVzdHJveTogZnVuY3Rpb24gZGVzdHJveSgpIHtcbiAgICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgICAgdmFyIHdpbmRvdyA9IGdldFdpbmRvdygpO1xuXG4gICAgICBpZiAoc3dpcGVyLnBhcmFtcy5oYXNoTmF2aWdhdGlvbi53YXRjaFN0YXRlKSB7XG4gICAgICAgICQod2luZG93KS5vZmYoJ2hhc2hjaGFuZ2UnLCBzd2lwZXIuaGFzaE5hdmlnYXRpb24ub25IYXNoQ2FuZ2UpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcbiAgdmFyIEhhc2hOYXZpZ2F0aW9uJDEgPSB7XG4gICAgbmFtZTogJ2hhc2gtbmF2aWdhdGlvbicsXG4gICAgcGFyYW1zOiB7XG4gICAgICBoYXNoTmF2aWdhdGlvbjoge1xuICAgICAgICBlbmFibGVkOiBmYWxzZSxcbiAgICAgICAgcmVwbGFjZVN0YXRlOiBmYWxzZSxcbiAgICAgICAgd2F0Y2hTdGF0ZTogZmFsc2VcbiAgICAgIH1cbiAgICB9LFxuICAgIGNyZWF0ZTogZnVuY3Rpb24gY3JlYXRlKCkge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICBiaW5kTW9kdWxlTWV0aG9kcyhzd2lwZXIsIHtcbiAgICAgICAgaGFzaE5hdmlnYXRpb246IF9leHRlbmRzKHtcbiAgICAgICAgICBpbml0aWFsaXplZDogZmFsc2VcbiAgICAgICAgfSwgSGFzaE5hdmlnYXRpb24pXG4gICAgICB9KTtcbiAgICB9LFxuICAgIG9uOiB7XG4gICAgICBpbml0OiBmdW5jdGlvbiBpbml0KHN3aXBlcikge1xuICAgICAgICBpZiAoc3dpcGVyLnBhcmFtcy5oYXNoTmF2aWdhdGlvbi5lbmFibGVkKSB7XG4gICAgICAgICAgc3dpcGVyLmhhc2hOYXZpZ2F0aW9uLmluaXQoKTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGRlc3Ryb3k6IGZ1bmN0aW9uIGRlc3Ryb3koc3dpcGVyKSB7XG4gICAgICAgIGlmIChzd2lwZXIucGFyYW1zLmhhc2hOYXZpZ2F0aW9uLmVuYWJsZWQpIHtcbiAgICAgICAgICBzd2lwZXIuaGFzaE5hdmlnYXRpb24uZGVzdHJveSgpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgdHJhbnNpdGlvbkVuZDogZnVuY3Rpb24gdHJhbnNpdGlvbkVuZChzd2lwZXIpIHtcbiAgICAgICAgaWYgKHN3aXBlci5oYXNoTmF2aWdhdGlvbi5pbml0aWFsaXplZCkge1xuICAgICAgICAgIHN3aXBlci5oYXNoTmF2aWdhdGlvbi5zZXRIYXNoKCk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBzbGlkZUNoYW5nZTogZnVuY3Rpb24gc2xpZGVDaGFuZ2Uoc3dpcGVyKSB7XG4gICAgICAgIGlmIChzd2lwZXIuaGFzaE5hdmlnYXRpb24uaW5pdGlhbGl6ZWQgJiYgc3dpcGVyLnBhcmFtcy5jc3NNb2RlKSB7XG4gICAgICAgICAgc3dpcGVyLmhhc2hOYXZpZ2F0aW9uLnNldEhhc2goKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICB2YXIgQXV0b3BsYXkgPSB7XG4gICAgcnVuOiBmdW5jdGlvbiBydW4oKSB7XG4gICAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICAgIHZhciAkYWN0aXZlU2xpZGVFbCA9IHN3aXBlci5zbGlkZXMuZXEoc3dpcGVyLmFjdGl2ZUluZGV4KTtcbiAgICAgIHZhciBkZWxheSA9IHN3aXBlci5wYXJhbXMuYXV0b3BsYXkuZGVsYXk7XG5cbiAgICAgIGlmICgkYWN0aXZlU2xpZGVFbC5hdHRyKCdkYXRhLXN3aXBlci1hdXRvcGxheScpKSB7XG4gICAgICAgIGRlbGF5ID0gJGFjdGl2ZVNsaWRlRWwuYXR0cignZGF0YS1zd2lwZXItYXV0b3BsYXknKSB8fCBzd2lwZXIucGFyYW1zLmF1dG9wbGF5LmRlbGF5O1xuICAgICAgfVxuXG4gICAgICBjbGVhclRpbWVvdXQoc3dpcGVyLmF1dG9wbGF5LnRpbWVvdXQpO1xuICAgICAgc3dpcGVyLmF1dG9wbGF5LnRpbWVvdXQgPSBuZXh0VGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmIChzd2lwZXIucGFyYW1zLmF1dG9wbGF5LnJldmVyc2VEaXJlY3Rpb24pIHtcbiAgICAgICAgICBpZiAoc3dpcGVyLnBhcmFtcy5sb29wKSB7XG4gICAgICAgICAgICBzd2lwZXIubG9vcEZpeCgpO1xuICAgICAgICAgICAgc3dpcGVyLnNsaWRlUHJldihzd2lwZXIucGFyYW1zLnNwZWVkLCB0cnVlLCB0cnVlKTtcbiAgICAgICAgICAgIHN3aXBlci5lbWl0KCdhdXRvcGxheScpO1xuICAgICAgICAgIH0gZWxzZSBpZiAoIXN3aXBlci5pc0JlZ2lubmluZykge1xuICAgICAgICAgICAgc3dpcGVyLnNsaWRlUHJldihzd2lwZXIucGFyYW1zLnNwZWVkLCB0cnVlLCB0cnVlKTtcbiAgICAgICAgICAgIHN3aXBlci5lbWl0KCdhdXRvcGxheScpO1xuICAgICAgICAgIH0gZWxzZSBpZiAoIXN3aXBlci5wYXJhbXMuYXV0b3BsYXkuc3RvcE9uTGFzdFNsaWRlKSB7XG4gICAgICAgICAgICBzd2lwZXIuc2xpZGVUbyhzd2lwZXIuc2xpZGVzLmxlbmd0aCAtIDEsIHN3aXBlci5wYXJhbXMuc3BlZWQsIHRydWUsIHRydWUpO1xuICAgICAgICAgICAgc3dpcGVyLmVtaXQoJ2F1dG9wbGF5Jyk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHN3aXBlci5hdXRvcGxheS5zdG9wKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKHN3aXBlci5wYXJhbXMubG9vcCkge1xuICAgICAgICAgIHN3aXBlci5sb29wRml4KCk7XG4gICAgICAgICAgc3dpcGVyLnNsaWRlTmV4dChzd2lwZXIucGFyYW1zLnNwZWVkLCB0cnVlLCB0cnVlKTtcbiAgICAgICAgICBzd2lwZXIuZW1pdCgnYXV0b3BsYXknKTtcbiAgICAgICAgfSBlbHNlIGlmICghc3dpcGVyLmlzRW5kKSB7XG4gICAgICAgICAgc3dpcGVyLnNsaWRlTmV4dChzd2lwZXIucGFyYW1zLnNwZWVkLCB0cnVlLCB0cnVlKTtcbiAgICAgICAgICBzd2lwZXIuZW1pdCgnYXV0b3BsYXknKTtcbiAgICAgICAgfSBlbHNlIGlmICghc3dpcGVyLnBhcmFtcy5hdXRvcGxheS5zdG9wT25MYXN0U2xpZGUpIHtcbiAgICAgICAgICBzd2lwZXIuc2xpZGVUbygwLCBzd2lwZXIucGFyYW1zLnNwZWVkLCB0cnVlLCB0cnVlKTtcbiAgICAgICAgICBzd2lwZXIuZW1pdCgnYXV0b3BsYXknKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzd2lwZXIuYXV0b3BsYXkuc3RvcCgpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHN3aXBlci5wYXJhbXMuY3NzTW9kZSAmJiBzd2lwZXIuYXV0b3BsYXkucnVubmluZykgc3dpcGVyLmF1dG9wbGF5LnJ1bigpO1xuICAgICAgfSwgZGVsYXkpO1xuICAgIH0sXG4gICAgc3RhcnQ6IGZ1bmN0aW9uIHN0YXJ0KCkge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICBpZiAodHlwZW9mIHN3aXBlci5hdXRvcGxheS50aW1lb3V0ICE9PSAndW5kZWZpbmVkJykgcmV0dXJuIGZhbHNlO1xuICAgICAgaWYgKHN3aXBlci5hdXRvcGxheS5ydW5uaW5nKSByZXR1cm4gZmFsc2U7XG4gICAgICBzd2lwZXIuYXV0b3BsYXkucnVubmluZyA9IHRydWU7XG4gICAgICBzd2lwZXIuZW1pdCgnYXV0b3BsYXlTdGFydCcpO1xuICAgICAgc3dpcGVyLmF1dG9wbGF5LnJ1bigpO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSxcbiAgICBzdG9wOiBmdW5jdGlvbiBzdG9wKCkge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICBpZiAoIXN3aXBlci5hdXRvcGxheS5ydW5uaW5nKSByZXR1cm4gZmFsc2U7XG4gICAgICBpZiAodHlwZW9mIHN3aXBlci5hdXRvcGxheS50aW1lb3V0ID09PSAndW5kZWZpbmVkJykgcmV0dXJuIGZhbHNlO1xuXG4gICAgICBpZiAoc3dpcGVyLmF1dG9wbGF5LnRpbWVvdXQpIHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHN3aXBlci5hdXRvcGxheS50aW1lb3V0KTtcbiAgICAgICAgc3dpcGVyLmF1dG9wbGF5LnRpbWVvdXQgPSB1bmRlZmluZWQ7XG4gICAgICB9XG5cbiAgICAgIHN3aXBlci5hdXRvcGxheS5ydW5uaW5nID0gZmFsc2U7XG4gICAgICBzd2lwZXIuZW1pdCgnYXV0b3BsYXlTdG9wJyk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9LFxuICAgIHBhdXNlOiBmdW5jdGlvbiBwYXVzZShzcGVlZCkge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICBpZiAoIXN3aXBlci5hdXRvcGxheS5ydW5uaW5nKSByZXR1cm47XG4gICAgICBpZiAoc3dpcGVyLmF1dG9wbGF5LnBhdXNlZCkgcmV0dXJuO1xuICAgICAgaWYgKHN3aXBlci5hdXRvcGxheS50aW1lb3V0KSBjbGVhclRpbWVvdXQoc3dpcGVyLmF1dG9wbGF5LnRpbWVvdXQpO1xuICAgICAgc3dpcGVyLmF1dG9wbGF5LnBhdXNlZCA9IHRydWU7XG5cbiAgICAgIGlmIChzcGVlZCA9PT0gMCB8fCAhc3dpcGVyLnBhcmFtcy5hdXRvcGxheS53YWl0Rm9yVHJhbnNpdGlvbikge1xuICAgICAgICBzd2lwZXIuYXV0b3BsYXkucGF1c2VkID0gZmFsc2U7XG4gICAgICAgIHN3aXBlci5hdXRvcGxheS5ydW4oKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHN3aXBlci4kd3JhcHBlckVsWzBdLmFkZEV2ZW50TGlzdGVuZXIoJ3RyYW5zaXRpb25lbmQnLCBzd2lwZXIuYXV0b3BsYXkub25UcmFuc2l0aW9uRW5kKTtcbiAgICAgICAgc3dpcGVyLiR3cmFwcGVyRWxbMF0uYWRkRXZlbnRMaXN0ZW5lcignd2Via2l0VHJhbnNpdGlvbkVuZCcsIHN3aXBlci5hdXRvcGxheS5vblRyYW5zaXRpb25FbmQpO1xuICAgICAgfVxuICAgIH0sXG4gICAgb25WaXNpYmlsaXR5Q2hhbmdlOiBmdW5jdGlvbiBvblZpc2liaWxpdHlDaGFuZ2UoKSB7XG4gICAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICAgIHZhciBkb2N1bWVudCA9IGdldERvY3VtZW50KCk7XG5cbiAgICAgIGlmIChkb2N1bWVudC52aXNpYmlsaXR5U3RhdGUgPT09ICdoaWRkZW4nICYmIHN3aXBlci5hdXRvcGxheS5ydW5uaW5nKSB7XG4gICAgICAgIHN3aXBlci5hdXRvcGxheS5wYXVzZSgpO1xuICAgICAgfVxuXG4gICAgICBpZiAoZG9jdW1lbnQudmlzaWJpbGl0eVN0YXRlID09PSAndmlzaWJsZScgJiYgc3dpcGVyLmF1dG9wbGF5LnBhdXNlZCkge1xuICAgICAgICBzd2lwZXIuYXV0b3BsYXkucnVuKCk7XG4gICAgICAgIHN3aXBlci5hdXRvcGxheS5wYXVzZWQgPSBmYWxzZTtcbiAgICAgIH1cbiAgICB9LFxuICAgIG9uVHJhbnNpdGlvbkVuZDogZnVuY3Rpb24gb25UcmFuc2l0aW9uRW5kKGUpIHtcbiAgICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgICAgaWYgKCFzd2lwZXIgfHwgc3dpcGVyLmRlc3Ryb3llZCB8fCAhc3dpcGVyLiR3cmFwcGVyRWwpIHJldHVybjtcbiAgICAgIGlmIChlLnRhcmdldCAhPT0gc3dpcGVyLiR3cmFwcGVyRWxbMF0pIHJldHVybjtcbiAgICAgIHN3aXBlci4kd3JhcHBlckVsWzBdLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RyYW5zaXRpb25lbmQnLCBzd2lwZXIuYXV0b3BsYXkub25UcmFuc2l0aW9uRW5kKTtcbiAgICAgIHN3aXBlci4kd3JhcHBlckVsWzBdLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3dlYmtpdFRyYW5zaXRpb25FbmQnLCBzd2lwZXIuYXV0b3BsYXkub25UcmFuc2l0aW9uRW5kKTtcbiAgICAgIHN3aXBlci5hdXRvcGxheS5wYXVzZWQgPSBmYWxzZTtcblxuICAgICAgaWYgKCFzd2lwZXIuYXV0b3BsYXkucnVubmluZykge1xuICAgICAgICBzd2lwZXIuYXV0b3BsYXkuc3RvcCgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc3dpcGVyLmF1dG9wbGF5LnJ1bigpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcbiAgdmFyIEF1dG9wbGF5JDEgPSB7XG4gICAgbmFtZTogJ2F1dG9wbGF5JyxcbiAgICBwYXJhbXM6IHtcbiAgICAgIGF1dG9wbGF5OiB7XG4gICAgICAgIGVuYWJsZWQ6IGZhbHNlLFxuICAgICAgICBkZWxheTogMzAwMCxcbiAgICAgICAgd2FpdEZvclRyYW5zaXRpb246IHRydWUsXG4gICAgICAgIGRpc2FibGVPbkludGVyYWN0aW9uOiB0cnVlLFxuICAgICAgICBzdG9wT25MYXN0U2xpZGU6IGZhbHNlLFxuICAgICAgICByZXZlcnNlRGlyZWN0aW9uOiBmYWxzZVxuICAgICAgfVxuICAgIH0sXG4gICAgY3JlYXRlOiBmdW5jdGlvbiBjcmVhdGUoKSB7XG4gICAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICAgIGJpbmRNb2R1bGVNZXRob2RzKHN3aXBlciwge1xuICAgICAgICBhdXRvcGxheTogX2V4dGVuZHMoX2V4dGVuZHMoe30sIEF1dG9wbGF5KSwge30sIHtcbiAgICAgICAgICBydW5uaW5nOiBmYWxzZSxcbiAgICAgICAgICBwYXVzZWQ6IGZhbHNlXG4gICAgICAgIH0pXG4gICAgICB9KTtcbiAgICB9LFxuICAgIG9uOiB7XG4gICAgICBpbml0OiBmdW5jdGlvbiBpbml0KHN3aXBlcikge1xuICAgICAgICBpZiAoc3dpcGVyLnBhcmFtcy5hdXRvcGxheS5lbmFibGVkKSB7XG4gICAgICAgICAgc3dpcGVyLmF1dG9wbGF5LnN0YXJ0KCk7XG4gICAgICAgICAgdmFyIGRvY3VtZW50ID0gZ2V0RG9jdW1lbnQoKTtcbiAgICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCd2aXNpYmlsaXR5Y2hhbmdlJywgc3dpcGVyLmF1dG9wbGF5Lm9uVmlzaWJpbGl0eUNoYW5nZSk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBiZWZvcmVUcmFuc2l0aW9uU3RhcnQ6IGZ1bmN0aW9uIGJlZm9yZVRyYW5zaXRpb25TdGFydChzd2lwZXIsIHNwZWVkLCBpbnRlcm5hbCkge1xuICAgICAgICBpZiAoc3dpcGVyLmF1dG9wbGF5LnJ1bm5pbmcpIHtcbiAgICAgICAgICBpZiAoaW50ZXJuYWwgfHwgIXN3aXBlci5wYXJhbXMuYXV0b3BsYXkuZGlzYWJsZU9uSW50ZXJhY3Rpb24pIHtcbiAgICAgICAgICAgIHN3aXBlci5hdXRvcGxheS5wYXVzZShzcGVlZCk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHN3aXBlci5hdXRvcGxheS5zdG9wKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgc2xpZGVyRmlyc3RNb3ZlOiBmdW5jdGlvbiBzbGlkZXJGaXJzdE1vdmUoc3dpcGVyKSB7XG4gICAgICAgIGlmIChzd2lwZXIuYXV0b3BsYXkucnVubmluZykge1xuICAgICAgICAgIGlmIChzd2lwZXIucGFyYW1zLmF1dG9wbGF5LmRpc2FibGVPbkludGVyYWN0aW9uKSB7XG4gICAgICAgICAgICBzd2lwZXIuYXV0b3BsYXkuc3RvcCgpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzd2lwZXIuYXV0b3BsYXkucGF1c2UoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICB0b3VjaEVuZDogZnVuY3Rpb24gdG91Y2hFbmQoc3dpcGVyKSB7XG4gICAgICAgIGlmIChzd2lwZXIucGFyYW1zLmNzc01vZGUgJiYgc3dpcGVyLmF1dG9wbGF5LnBhdXNlZCAmJiAhc3dpcGVyLnBhcmFtcy5hdXRvcGxheS5kaXNhYmxlT25JbnRlcmFjdGlvbikge1xuICAgICAgICAgIHN3aXBlci5hdXRvcGxheS5ydW4oKTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGRlc3Ryb3k6IGZ1bmN0aW9uIGRlc3Ryb3koc3dpcGVyKSB7XG4gICAgICAgIGlmIChzd2lwZXIuYXV0b3BsYXkucnVubmluZykge1xuICAgICAgICAgIHN3aXBlci5hdXRvcGxheS5zdG9wKCk7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgZG9jdW1lbnQgPSBnZXREb2N1bWVudCgpO1xuICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCd2aXNpYmlsaXR5Y2hhbmdlJywgc3dpcGVyLmF1dG9wbGF5Lm9uVmlzaWJpbGl0eUNoYW5nZSk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIHZhciBGYWRlID0ge1xuICAgIHNldFRyYW5zbGF0ZTogZnVuY3Rpb24gc2V0VHJhbnNsYXRlKCkge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICB2YXIgc2xpZGVzID0gc3dpcGVyLnNsaWRlcztcblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzbGlkZXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgdmFyICRzbGlkZUVsID0gc3dpcGVyLnNsaWRlcy5lcShpKTtcbiAgICAgICAgdmFyIG9mZnNldCA9ICRzbGlkZUVsWzBdLnN3aXBlclNsaWRlT2Zmc2V0O1xuICAgICAgICB2YXIgdHggPSAtb2Zmc2V0O1xuICAgICAgICBpZiAoIXN3aXBlci5wYXJhbXMudmlydHVhbFRyYW5zbGF0ZSkgdHggLT0gc3dpcGVyLnRyYW5zbGF0ZTtcbiAgICAgICAgdmFyIHR5ID0gMDtcblxuICAgICAgICBpZiAoIXN3aXBlci5pc0hvcml6b250YWwoKSkge1xuICAgICAgICAgIHR5ID0gdHg7XG4gICAgICAgICAgdHggPSAwO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIHNsaWRlT3BhY2l0eSA9IHN3aXBlci5wYXJhbXMuZmFkZUVmZmVjdC5jcm9zc0ZhZGUgPyBNYXRoLm1heCgxIC0gTWF0aC5hYnMoJHNsaWRlRWxbMF0ucHJvZ3Jlc3MpLCAwKSA6IDEgKyBNYXRoLm1pbihNYXRoLm1heCgkc2xpZGVFbFswXS5wcm9ncmVzcywgLTEpLCAwKTtcbiAgICAgICAgJHNsaWRlRWwuY3NzKHtcbiAgICAgICAgICBvcGFjaXR5OiBzbGlkZU9wYWNpdHlcbiAgICAgICAgfSkudHJhbnNmb3JtKFwidHJhbnNsYXRlM2QoXCIgKyB0eCArIFwicHgsIFwiICsgdHkgKyBcInB4LCAwcHgpXCIpO1xuICAgICAgfVxuICAgIH0sXG4gICAgc2V0VHJhbnNpdGlvbjogZnVuY3Rpb24gc2V0VHJhbnNpdGlvbihkdXJhdGlvbikge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICB2YXIgc2xpZGVzID0gc3dpcGVyLnNsaWRlcyxcbiAgICAgICAgICAkd3JhcHBlckVsID0gc3dpcGVyLiR3cmFwcGVyRWw7XG4gICAgICBzbGlkZXMudHJhbnNpdGlvbihkdXJhdGlvbik7XG5cbiAgICAgIGlmIChzd2lwZXIucGFyYW1zLnZpcnR1YWxUcmFuc2xhdGUgJiYgZHVyYXRpb24gIT09IDApIHtcbiAgICAgICAgdmFyIGV2ZW50VHJpZ2dlcmVkID0gZmFsc2U7XG4gICAgICAgIHNsaWRlcy50cmFuc2l0aW9uRW5kKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBpZiAoZXZlbnRUcmlnZ2VyZWQpIHJldHVybjtcbiAgICAgICAgICBpZiAoIXN3aXBlciB8fCBzd2lwZXIuZGVzdHJveWVkKSByZXR1cm47XG4gICAgICAgICAgZXZlbnRUcmlnZ2VyZWQgPSB0cnVlO1xuICAgICAgICAgIHN3aXBlci5hbmltYXRpbmcgPSBmYWxzZTtcbiAgICAgICAgICB2YXIgdHJpZ2dlckV2ZW50cyA9IFsnd2Via2l0VHJhbnNpdGlvbkVuZCcsICd0cmFuc2l0aW9uZW5kJ107XG5cbiAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRyaWdnZXJFdmVudHMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgICAgICR3cmFwcGVyRWwudHJpZ2dlcih0cmlnZ2VyRXZlbnRzW2ldKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfTtcbiAgdmFyIEVmZmVjdEZhZGUgPSB7XG4gICAgbmFtZTogJ2VmZmVjdC1mYWRlJyxcbiAgICBwYXJhbXM6IHtcbiAgICAgIGZhZGVFZmZlY3Q6IHtcbiAgICAgICAgY3Jvc3NGYWRlOiBmYWxzZVxuICAgICAgfVxuICAgIH0sXG4gICAgY3JlYXRlOiBmdW5jdGlvbiBjcmVhdGUoKSB7XG4gICAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICAgIGJpbmRNb2R1bGVNZXRob2RzKHN3aXBlciwge1xuICAgICAgICBmYWRlRWZmZWN0OiBfZXh0ZW5kcyh7fSwgRmFkZSlcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgb246IHtcbiAgICAgIGJlZm9yZUluaXQ6IGZ1bmN0aW9uIGJlZm9yZUluaXQoc3dpcGVyKSB7XG4gICAgICAgIGlmIChzd2lwZXIucGFyYW1zLmVmZmVjdCAhPT0gJ2ZhZGUnKSByZXR1cm47XG4gICAgICAgIHN3aXBlci5jbGFzc05hbWVzLnB1c2goc3dpcGVyLnBhcmFtcy5jb250YWluZXJNb2RpZmllckNsYXNzICsgXCJmYWRlXCIpO1xuICAgICAgICB2YXIgb3ZlcndyaXRlUGFyYW1zID0ge1xuICAgICAgICAgIHNsaWRlc1BlclZpZXc6IDEsXG4gICAgICAgICAgc2xpZGVzUGVyQ29sdW1uOiAxLFxuICAgICAgICAgIHNsaWRlc1Blckdyb3VwOiAxLFxuICAgICAgICAgIHdhdGNoU2xpZGVzUHJvZ3Jlc3M6IHRydWUsXG4gICAgICAgICAgc3BhY2VCZXR3ZWVuOiAwLFxuICAgICAgICAgIHZpcnR1YWxUcmFuc2xhdGU6IHRydWVcbiAgICAgICAgfTtcbiAgICAgICAgZXh0ZW5kJDEoc3dpcGVyLnBhcmFtcywgb3ZlcndyaXRlUGFyYW1zKTtcbiAgICAgICAgZXh0ZW5kJDEoc3dpcGVyLm9yaWdpbmFsUGFyYW1zLCBvdmVyd3JpdGVQYXJhbXMpO1xuICAgICAgfSxcbiAgICAgIHNldFRyYW5zbGF0ZTogZnVuY3Rpb24gc2V0VHJhbnNsYXRlKHN3aXBlcikge1xuICAgICAgICBpZiAoc3dpcGVyLnBhcmFtcy5lZmZlY3QgIT09ICdmYWRlJykgcmV0dXJuO1xuICAgICAgICBzd2lwZXIuZmFkZUVmZmVjdC5zZXRUcmFuc2xhdGUoKTtcbiAgICAgIH0sXG4gICAgICBzZXRUcmFuc2l0aW9uOiBmdW5jdGlvbiBzZXRUcmFuc2l0aW9uKHN3aXBlciwgZHVyYXRpb24pIHtcbiAgICAgICAgaWYgKHN3aXBlci5wYXJhbXMuZWZmZWN0ICE9PSAnZmFkZScpIHJldHVybjtcbiAgICAgICAgc3dpcGVyLmZhZGVFZmZlY3Quc2V0VHJhbnNpdGlvbihkdXJhdGlvbik7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIHZhciBDdWJlID0ge1xuICAgIHNldFRyYW5zbGF0ZTogZnVuY3Rpb24gc2V0VHJhbnNsYXRlKCkge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICB2YXIgJGVsID0gc3dpcGVyLiRlbCxcbiAgICAgICAgICAkd3JhcHBlckVsID0gc3dpcGVyLiR3cmFwcGVyRWwsXG4gICAgICAgICAgc2xpZGVzID0gc3dpcGVyLnNsaWRlcyxcbiAgICAgICAgICBzd2lwZXJXaWR0aCA9IHN3aXBlci53aWR0aCxcbiAgICAgICAgICBzd2lwZXJIZWlnaHQgPSBzd2lwZXIuaGVpZ2h0LFxuICAgICAgICAgIHJ0bCA9IHN3aXBlci5ydGxUcmFuc2xhdGUsXG4gICAgICAgICAgc3dpcGVyU2l6ZSA9IHN3aXBlci5zaXplLFxuICAgICAgICAgIGJyb3dzZXIgPSBzd2lwZXIuYnJvd3NlcjtcbiAgICAgIHZhciBwYXJhbXMgPSBzd2lwZXIucGFyYW1zLmN1YmVFZmZlY3Q7XG4gICAgICB2YXIgaXNIb3Jpem9udGFsID0gc3dpcGVyLmlzSG9yaXpvbnRhbCgpO1xuICAgICAgdmFyIGlzVmlydHVhbCA9IHN3aXBlci52aXJ0dWFsICYmIHN3aXBlci5wYXJhbXMudmlydHVhbC5lbmFibGVkO1xuICAgICAgdmFyIHdyYXBwZXJSb3RhdGUgPSAwO1xuICAgICAgdmFyICRjdWJlU2hhZG93RWw7XG5cbiAgICAgIGlmIChwYXJhbXMuc2hhZG93KSB7XG4gICAgICAgIGlmIChpc0hvcml6b250YWwpIHtcbiAgICAgICAgICAkY3ViZVNoYWRvd0VsID0gJHdyYXBwZXJFbC5maW5kKCcuc3dpcGVyLWN1YmUtc2hhZG93Jyk7XG5cbiAgICAgICAgICBpZiAoJGN1YmVTaGFkb3dFbC5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICRjdWJlU2hhZG93RWwgPSAkKCc8ZGl2IGNsYXNzPVwic3dpcGVyLWN1YmUtc2hhZG93XCI+PC9kaXY+Jyk7XG4gICAgICAgICAgICAkd3JhcHBlckVsLmFwcGVuZCgkY3ViZVNoYWRvd0VsKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAkY3ViZVNoYWRvd0VsLmNzcyh7XG4gICAgICAgICAgICBoZWlnaHQ6IHN3aXBlcldpZHRoICsgXCJweFwiXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgJGN1YmVTaGFkb3dFbCA9ICRlbC5maW5kKCcuc3dpcGVyLWN1YmUtc2hhZG93Jyk7XG5cbiAgICAgICAgICBpZiAoJGN1YmVTaGFkb3dFbC5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICRjdWJlU2hhZG93RWwgPSAkKCc8ZGl2IGNsYXNzPVwic3dpcGVyLWN1YmUtc2hhZG93XCI+PC9kaXY+Jyk7XG4gICAgICAgICAgICAkZWwuYXBwZW5kKCRjdWJlU2hhZG93RWwpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNsaWRlcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICB2YXIgJHNsaWRlRWwgPSBzbGlkZXMuZXEoaSk7XG4gICAgICAgIHZhciBzbGlkZUluZGV4ID0gaTtcblxuICAgICAgICBpZiAoaXNWaXJ0dWFsKSB7XG4gICAgICAgICAgc2xpZGVJbmRleCA9IHBhcnNlSW50KCRzbGlkZUVsLmF0dHIoJ2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4JyksIDEwKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBzbGlkZUFuZ2xlID0gc2xpZGVJbmRleCAqIDkwO1xuICAgICAgICB2YXIgcm91bmQgPSBNYXRoLmZsb29yKHNsaWRlQW5nbGUgLyAzNjApO1xuXG4gICAgICAgIGlmIChydGwpIHtcbiAgICAgICAgICBzbGlkZUFuZ2xlID0gLXNsaWRlQW5nbGU7XG4gICAgICAgICAgcm91bmQgPSBNYXRoLmZsb29yKC1zbGlkZUFuZ2xlIC8gMzYwKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBwcm9ncmVzcyA9IE1hdGgubWF4KE1hdGgubWluKCRzbGlkZUVsWzBdLnByb2dyZXNzLCAxKSwgLTEpO1xuICAgICAgICB2YXIgdHggPSAwO1xuICAgICAgICB2YXIgdHkgPSAwO1xuICAgICAgICB2YXIgdHogPSAwO1xuXG4gICAgICAgIGlmIChzbGlkZUluZGV4ICUgNCA9PT0gMCkge1xuICAgICAgICAgIHR4ID0gLXJvdW5kICogNCAqIHN3aXBlclNpemU7XG4gICAgICAgICAgdHogPSAwO1xuICAgICAgICB9IGVsc2UgaWYgKChzbGlkZUluZGV4IC0gMSkgJSA0ID09PSAwKSB7XG4gICAgICAgICAgdHggPSAwO1xuICAgICAgICAgIHR6ID0gLXJvdW5kICogNCAqIHN3aXBlclNpemU7XG4gICAgICAgIH0gZWxzZSBpZiAoKHNsaWRlSW5kZXggLSAyKSAlIDQgPT09IDApIHtcbiAgICAgICAgICB0eCA9IHN3aXBlclNpemUgKyByb3VuZCAqIDQgKiBzd2lwZXJTaXplO1xuICAgICAgICAgIHR6ID0gc3dpcGVyU2l6ZTtcbiAgICAgICAgfSBlbHNlIGlmICgoc2xpZGVJbmRleCAtIDMpICUgNCA9PT0gMCkge1xuICAgICAgICAgIHR4ID0gLXN3aXBlclNpemU7XG4gICAgICAgICAgdHogPSAzICogc3dpcGVyU2l6ZSArIHN3aXBlclNpemUgKiA0ICogcm91bmQ7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAocnRsKSB7XG4gICAgICAgICAgdHggPSAtdHg7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIWlzSG9yaXpvbnRhbCkge1xuICAgICAgICAgIHR5ID0gdHg7XG4gICAgICAgICAgdHggPSAwO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIHRyYW5zZm9ybSA9IFwicm90YXRlWChcIiArIChpc0hvcml6b250YWwgPyAwIDogLXNsaWRlQW5nbGUpICsgXCJkZWcpIHJvdGF0ZVkoXCIgKyAoaXNIb3Jpem9udGFsID8gc2xpZGVBbmdsZSA6IDApICsgXCJkZWcpIHRyYW5zbGF0ZTNkKFwiICsgdHggKyBcInB4LCBcIiArIHR5ICsgXCJweCwgXCIgKyB0eiArIFwicHgpXCI7XG5cbiAgICAgICAgaWYgKHByb2dyZXNzIDw9IDEgJiYgcHJvZ3Jlc3MgPiAtMSkge1xuICAgICAgICAgIHdyYXBwZXJSb3RhdGUgPSBzbGlkZUluZGV4ICogOTAgKyBwcm9ncmVzcyAqIDkwO1xuICAgICAgICAgIGlmIChydGwpIHdyYXBwZXJSb3RhdGUgPSAtc2xpZGVJbmRleCAqIDkwIC0gcHJvZ3Jlc3MgKiA5MDtcbiAgICAgICAgfVxuXG4gICAgICAgICRzbGlkZUVsLnRyYW5zZm9ybSh0cmFuc2Zvcm0pO1xuXG4gICAgICAgIGlmIChwYXJhbXMuc2xpZGVTaGFkb3dzKSB7XG4gICAgICAgICAgLy8gU2V0IHNoYWRvd3NcbiAgICAgICAgICB2YXIgc2hhZG93QmVmb3JlID0gaXNIb3Jpem9udGFsID8gJHNsaWRlRWwuZmluZCgnLnN3aXBlci1zbGlkZS1zaGFkb3ctbGVmdCcpIDogJHNsaWRlRWwuZmluZCgnLnN3aXBlci1zbGlkZS1zaGFkb3ctdG9wJyk7XG4gICAgICAgICAgdmFyIHNoYWRvd0FmdGVyID0gaXNIb3Jpem9udGFsID8gJHNsaWRlRWwuZmluZCgnLnN3aXBlci1zbGlkZS1zaGFkb3ctcmlnaHQnKSA6ICRzbGlkZUVsLmZpbmQoJy5zd2lwZXItc2xpZGUtc2hhZG93LWJvdHRvbScpO1xuXG4gICAgICAgICAgaWYgKHNoYWRvd0JlZm9yZS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHNoYWRvd0JlZm9yZSA9ICQoXCI8ZGl2IGNsYXNzPVxcXCJzd2lwZXItc2xpZGUtc2hhZG93LVwiICsgKGlzSG9yaXpvbnRhbCA/ICdsZWZ0JyA6ICd0b3AnKSArIFwiXFxcIj48L2Rpdj5cIik7XG4gICAgICAgICAgICAkc2xpZGVFbC5hcHBlbmQoc2hhZG93QmVmb3JlKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoc2hhZG93QWZ0ZXIubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICBzaGFkb3dBZnRlciA9ICQoXCI8ZGl2IGNsYXNzPVxcXCJzd2lwZXItc2xpZGUtc2hhZG93LVwiICsgKGlzSG9yaXpvbnRhbCA/ICdyaWdodCcgOiAnYm90dG9tJykgKyBcIlxcXCI+PC9kaXY+XCIpO1xuICAgICAgICAgICAgJHNsaWRlRWwuYXBwZW5kKHNoYWRvd0FmdGVyKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoc2hhZG93QmVmb3JlLmxlbmd0aCkgc2hhZG93QmVmb3JlWzBdLnN0eWxlLm9wYWNpdHkgPSBNYXRoLm1heCgtcHJvZ3Jlc3MsIDApO1xuICAgICAgICAgIGlmIChzaGFkb3dBZnRlci5sZW5ndGgpIHNoYWRvd0FmdGVyWzBdLnN0eWxlLm9wYWNpdHkgPSBNYXRoLm1heChwcm9ncmVzcywgMCk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgJHdyYXBwZXJFbC5jc3Moe1xuICAgICAgICAnLXdlYmtpdC10cmFuc2Zvcm0tb3JpZ2luJzogXCI1MCUgNTAlIC1cIiArIHN3aXBlclNpemUgLyAyICsgXCJweFwiLFxuICAgICAgICAnLW1vei10cmFuc2Zvcm0tb3JpZ2luJzogXCI1MCUgNTAlIC1cIiArIHN3aXBlclNpemUgLyAyICsgXCJweFwiLFxuICAgICAgICAnLW1zLXRyYW5zZm9ybS1vcmlnaW4nOiBcIjUwJSA1MCUgLVwiICsgc3dpcGVyU2l6ZSAvIDIgKyBcInB4XCIsXG4gICAgICAgICd0cmFuc2Zvcm0tb3JpZ2luJzogXCI1MCUgNTAlIC1cIiArIHN3aXBlclNpemUgLyAyICsgXCJweFwiXG4gICAgICB9KTtcblxuICAgICAgaWYgKHBhcmFtcy5zaGFkb3cpIHtcbiAgICAgICAgaWYgKGlzSG9yaXpvbnRhbCkge1xuICAgICAgICAgICRjdWJlU2hhZG93RWwudHJhbnNmb3JtKFwidHJhbnNsYXRlM2QoMHB4LCBcIiArIChzd2lwZXJXaWR0aCAvIDIgKyBwYXJhbXMuc2hhZG93T2Zmc2V0KSArIFwicHgsIFwiICsgLXN3aXBlcldpZHRoIC8gMiArIFwicHgpIHJvdGF0ZVgoOTBkZWcpIHJvdGF0ZVooMGRlZykgc2NhbGUoXCIgKyBwYXJhbXMuc2hhZG93U2NhbGUgKyBcIilcIik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIHNoYWRvd0FuZ2xlID0gTWF0aC5hYnMod3JhcHBlclJvdGF0ZSkgLSBNYXRoLmZsb29yKE1hdGguYWJzKHdyYXBwZXJSb3RhdGUpIC8gOTApICogOTA7XG4gICAgICAgICAgdmFyIG11bHRpcGxpZXIgPSAxLjUgLSAoTWF0aC5zaW4oc2hhZG93QW5nbGUgKiAyICogTWF0aC5QSSAvIDM2MCkgLyAyICsgTWF0aC5jb3Moc2hhZG93QW5nbGUgKiAyICogTWF0aC5QSSAvIDM2MCkgLyAyKTtcbiAgICAgICAgICB2YXIgc2NhbGUxID0gcGFyYW1zLnNoYWRvd1NjYWxlO1xuICAgICAgICAgIHZhciBzY2FsZTIgPSBwYXJhbXMuc2hhZG93U2NhbGUgLyBtdWx0aXBsaWVyO1xuICAgICAgICAgIHZhciBvZmZzZXQgPSBwYXJhbXMuc2hhZG93T2Zmc2V0O1xuICAgICAgICAgICRjdWJlU2hhZG93RWwudHJhbnNmb3JtKFwic2NhbGUzZChcIiArIHNjYWxlMSArIFwiLCAxLCBcIiArIHNjYWxlMiArIFwiKSB0cmFuc2xhdGUzZCgwcHgsIFwiICsgKHN3aXBlckhlaWdodCAvIDIgKyBvZmZzZXQpICsgXCJweCwgXCIgKyAtc3dpcGVySGVpZ2h0IC8gMiAvIHNjYWxlMiArIFwicHgpIHJvdGF0ZVgoLTkwZGVnKVwiKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICB2YXIgekZhY3RvciA9IGJyb3dzZXIuaXNTYWZhcmkgfHwgYnJvd3Nlci5pc1dlYlZpZXcgPyAtc3dpcGVyU2l6ZSAvIDIgOiAwO1xuICAgICAgJHdyYXBwZXJFbC50cmFuc2Zvcm0oXCJ0cmFuc2xhdGUzZCgwcHgsMCxcIiArIHpGYWN0b3IgKyBcInB4KSByb3RhdGVYKFwiICsgKHN3aXBlci5pc0hvcml6b250YWwoKSA/IDAgOiB3cmFwcGVyUm90YXRlKSArIFwiZGVnKSByb3RhdGVZKFwiICsgKHN3aXBlci5pc0hvcml6b250YWwoKSA/IC13cmFwcGVyUm90YXRlIDogMCkgKyBcImRlZylcIik7XG4gICAgfSxcbiAgICBzZXRUcmFuc2l0aW9uOiBmdW5jdGlvbiBzZXRUcmFuc2l0aW9uKGR1cmF0aW9uKSB7XG4gICAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICAgIHZhciAkZWwgPSBzd2lwZXIuJGVsLFxuICAgICAgICAgIHNsaWRlcyA9IHN3aXBlci5zbGlkZXM7XG4gICAgICBzbGlkZXMudHJhbnNpdGlvbihkdXJhdGlvbikuZmluZCgnLnN3aXBlci1zbGlkZS1zaGFkb3ctdG9wLCAuc3dpcGVyLXNsaWRlLXNoYWRvdy1yaWdodCwgLnN3aXBlci1zbGlkZS1zaGFkb3ctYm90dG9tLCAuc3dpcGVyLXNsaWRlLXNoYWRvdy1sZWZ0JykudHJhbnNpdGlvbihkdXJhdGlvbik7XG5cbiAgICAgIGlmIChzd2lwZXIucGFyYW1zLmN1YmVFZmZlY3Quc2hhZG93ICYmICFzd2lwZXIuaXNIb3Jpem9udGFsKCkpIHtcbiAgICAgICAgJGVsLmZpbmQoJy5zd2lwZXItY3ViZS1zaGFkb3cnKS50cmFuc2l0aW9uKGR1cmF0aW9uKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG4gIHZhciBFZmZlY3RDdWJlID0ge1xuICAgIG5hbWU6ICdlZmZlY3QtY3ViZScsXG4gICAgcGFyYW1zOiB7XG4gICAgICBjdWJlRWZmZWN0OiB7XG4gICAgICAgIHNsaWRlU2hhZG93czogdHJ1ZSxcbiAgICAgICAgc2hhZG93OiB0cnVlLFxuICAgICAgICBzaGFkb3dPZmZzZXQ6IDIwLFxuICAgICAgICBzaGFkb3dTY2FsZTogMC45NFxuICAgICAgfVxuICAgIH0sXG4gICAgY3JlYXRlOiBmdW5jdGlvbiBjcmVhdGUoKSB7XG4gICAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICAgIGJpbmRNb2R1bGVNZXRob2RzKHN3aXBlciwge1xuICAgICAgICBjdWJlRWZmZWN0OiBfZXh0ZW5kcyh7fSwgQ3ViZSlcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgb246IHtcbiAgICAgIGJlZm9yZUluaXQ6IGZ1bmN0aW9uIGJlZm9yZUluaXQoc3dpcGVyKSB7XG4gICAgICAgIGlmIChzd2lwZXIucGFyYW1zLmVmZmVjdCAhPT0gJ2N1YmUnKSByZXR1cm47XG4gICAgICAgIHN3aXBlci5jbGFzc05hbWVzLnB1c2goc3dpcGVyLnBhcmFtcy5jb250YWluZXJNb2RpZmllckNsYXNzICsgXCJjdWJlXCIpO1xuICAgICAgICBzd2lwZXIuY2xhc3NOYW1lcy5wdXNoKHN3aXBlci5wYXJhbXMuY29udGFpbmVyTW9kaWZpZXJDbGFzcyArIFwiM2RcIik7XG4gICAgICAgIHZhciBvdmVyd3JpdGVQYXJhbXMgPSB7XG4gICAgICAgICAgc2xpZGVzUGVyVmlldzogMSxcbiAgICAgICAgICBzbGlkZXNQZXJDb2x1bW46IDEsXG4gICAgICAgICAgc2xpZGVzUGVyR3JvdXA6IDEsXG4gICAgICAgICAgd2F0Y2hTbGlkZXNQcm9ncmVzczogdHJ1ZSxcbiAgICAgICAgICByZXNpc3RhbmNlUmF0aW86IDAsXG4gICAgICAgICAgc3BhY2VCZXR3ZWVuOiAwLFxuICAgICAgICAgIGNlbnRlcmVkU2xpZGVzOiBmYWxzZSxcbiAgICAgICAgICB2aXJ0dWFsVHJhbnNsYXRlOiB0cnVlXG4gICAgICAgIH07XG4gICAgICAgIGV4dGVuZCQxKHN3aXBlci5wYXJhbXMsIG92ZXJ3cml0ZVBhcmFtcyk7XG4gICAgICAgIGV4dGVuZCQxKHN3aXBlci5vcmlnaW5hbFBhcmFtcywgb3ZlcndyaXRlUGFyYW1zKTtcbiAgICAgIH0sXG4gICAgICBzZXRUcmFuc2xhdGU6IGZ1bmN0aW9uIHNldFRyYW5zbGF0ZShzd2lwZXIpIHtcbiAgICAgICAgaWYgKHN3aXBlci5wYXJhbXMuZWZmZWN0ICE9PSAnY3ViZScpIHJldHVybjtcbiAgICAgICAgc3dpcGVyLmN1YmVFZmZlY3Quc2V0VHJhbnNsYXRlKCk7XG4gICAgICB9LFxuICAgICAgc2V0VHJhbnNpdGlvbjogZnVuY3Rpb24gc2V0VHJhbnNpdGlvbihzd2lwZXIsIGR1cmF0aW9uKSB7XG4gICAgICAgIGlmIChzd2lwZXIucGFyYW1zLmVmZmVjdCAhPT0gJ2N1YmUnKSByZXR1cm47XG4gICAgICAgIHN3aXBlci5jdWJlRWZmZWN0LnNldFRyYW5zaXRpb24oZHVyYXRpb24pO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICB2YXIgRmxpcCA9IHtcbiAgICBzZXRUcmFuc2xhdGU6IGZ1bmN0aW9uIHNldFRyYW5zbGF0ZSgpIHtcbiAgICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgICAgdmFyIHNsaWRlcyA9IHN3aXBlci5zbGlkZXMsXG4gICAgICAgICAgcnRsID0gc3dpcGVyLnJ0bFRyYW5zbGF0ZTtcblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzbGlkZXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgdmFyICRzbGlkZUVsID0gc2xpZGVzLmVxKGkpO1xuICAgICAgICB2YXIgcHJvZ3Jlc3MgPSAkc2xpZGVFbFswXS5wcm9ncmVzcztcblxuICAgICAgICBpZiAoc3dpcGVyLnBhcmFtcy5mbGlwRWZmZWN0LmxpbWl0Um90YXRpb24pIHtcbiAgICAgICAgICBwcm9ncmVzcyA9IE1hdGgubWF4KE1hdGgubWluKCRzbGlkZUVsWzBdLnByb2dyZXNzLCAxKSwgLTEpO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIG9mZnNldCA9ICRzbGlkZUVsWzBdLnN3aXBlclNsaWRlT2Zmc2V0O1xuICAgICAgICB2YXIgcm90YXRlID0gLTE4MCAqIHByb2dyZXNzO1xuICAgICAgICB2YXIgcm90YXRlWSA9IHJvdGF0ZTtcbiAgICAgICAgdmFyIHJvdGF0ZVggPSAwO1xuICAgICAgICB2YXIgdHggPSAtb2Zmc2V0O1xuICAgICAgICB2YXIgdHkgPSAwO1xuXG4gICAgICAgIGlmICghc3dpcGVyLmlzSG9yaXpvbnRhbCgpKSB7XG4gICAgICAgICAgdHkgPSB0eDtcbiAgICAgICAgICB0eCA9IDA7XG4gICAgICAgICAgcm90YXRlWCA9IC1yb3RhdGVZO1xuICAgICAgICAgIHJvdGF0ZVkgPSAwO1xuICAgICAgICB9IGVsc2UgaWYgKHJ0bCkge1xuICAgICAgICAgIHJvdGF0ZVkgPSAtcm90YXRlWTtcbiAgICAgICAgfVxuXG4gICAgICAgICRzbGlkZUVsWzBdLnN0eWxlLnpJbmRleCA9IC1NYXRoLmFicyhNYXRoLnJvdW5kKHByb2dyZXNzKSkgKyBzbGlkZXMubGVuZ3RoO1xuXG4gICAgICAgIGlmIChzd2lwZXIucGFyYW1zLmZsaXBFZmZlY3Quc2xpZGVTaGFkb3dzKSB7XG4gICAgICAgICAgLy8gU2V0IHNoYWRvd3NcbiAgICAgICAgICB2YXIgc2hhZG93QmVmb3JlID0gc3dpcGVyLmlzSG9yaXpvbnRhbCgpID8gJHNsaWRlRWwuZmluZCgnLnN3aXBlci1zbGlkZS1zaGFkb3ctbGVmdCcpIDogJHNsaWRlRWwuZmluZCgnLnN3aXBlci1zbGlkZS1zaGFkb3ctdG9wJyk7XG4gICAgICAgICAgdmFyIHNoYWRvd0FmdGVyID0gc3dpcGVyLmlzSG9yaXpvbnRhbCgpID8gJHNsaWRlRWwuZmluZCgnLnN3aXBlci1zbGlkZS1zaGFkb3ctcmlnaHQnKSA6ICRzbGlkZUVsLmZpbmQoJy5zd2lwZXItc2xpZGUtc2hhZG93LWJvdHRvbScpO1xuXG4gICAgICAgICAgaWYgKHNoYWRvd0JlZm9yZS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHNoYWRvd0JlZm9yZSA9ICQoXCI8ZGl2IGNsYXNzPVxcXCJzd2lwZXItc2xpZGUtc2hhZG93LVwiICsgKHN3aXBlci5pc0hvcml6b250YWwoKSA/ICdsZWZ0JyA6ICd0b3AnKSArIFwiXFxcIj48L2Rpdj5cIik7XG4gICAgICAgICAgICAkc2xpZGVFbC5hcHBlbmQoc2hhZG93QmVmb3JlKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoc2hhZG93QWZ0ZXIubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICBzaGFkb3dBZnRlciA9ICQoXCI8ZGl2IGNsYXNzPVxcXCJzd2lwZXItc2xpZGUtc2hhZG93LVwiICsgKHN3aXBlci5pc0hvcml6b250YWwoKSA/ICdyaWdodCcgOiAnYm90dG9tJykgKyBcIlxcXCI+PC9kaXY+XCIpO1xuICAgICAgICAgICAgJHNsaWRlRWwuYXBwZW5kKHNoYWRvd0FmdGVyKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoc2hhZG93QmVmb3JlLmxlbmd0aCkgc2hhZG93QmVmb3JlWzBdLnN0eWxlLm9wYWNpdHkgPSBNYXRoLm1heCgtcHJvZ3Jlc3MsIDApO1xuICAgICAgICAgIGlmIChzaGFkb3dBZnRlci5sZW5ndGgpIHNoYWRvd0FmdGVyWzBdLnN0eWxlLm9wYWNpdHkgPSBNYXRoLm1heChwcm9ncmVzcywgMCk7XG4gICAgICAgIH1cblxuICAgICAgICAkc2xpZGVFbC50cmFuc2Zvcm0oXCJ0cmFuc2xhdGUzZChcIiArIHR4ICsgXCJweCwgXCIgKyB0eSArIFwicHgsIDBweCkgcm90YXRlWChcIiArIHJvdGF0ZVggKyBcImRlZykgcm90YXRlWShcIiArIHJvdGF0ZVkgKyBcImRlZylcIik7XG4gICAgICB9XG4gICAgfSxcbiAgICBzZXRUcmFuc2l0aW9uOiBmdW5jdGlvbiBzZXRUcmFuc2l0aW9uKGR1cmF0aW9uKSB7XG4gICAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICAgIHZhciBzbGlkZXMgPSBzd2lwZXIuc2xpZGVzLFxuICAgICAgICAgIGFjdGl2ZUluZGV4ID0gc3dpcGVyLmFjdGl2ZUluZGV4LFxuICAgICAgICAgICR3cmFwcGVyRWwgPSBzd2lwZXIuJHdyYXBwZXJFbDtcbiAgICAgIHNsaWRlcy50cmFuc2l0aW9uKGR1cmF0aW9uKS5maW5kKCcuc3dpcGVyLXNsaWRlLXNoYWRvdy10b3AsIC5zd2lwZXItc2xpZGUtc2hhZG93LXJpZ2h0LCAuc3dpcGVyLXNsaWRlLXNoYWRvdy1ib3R0b20sIC5zd2lwZXItc2xpZGUtc2hhZG93LWxlZnQnKS50cmFuc2l0aW9uKGR1cmF0aW9uKTtcblxuICAgICAgaWYgKHN3aXBlci5wYXJhbXMudmlydHVhbFRyYW5zbGF0ZSAmJiBkdXJhdGlvbiAhPT0gMCkge1xuICAgICAgICB2YXIgZXZlbnRUcmlnZ2VyZWQgPSBmYWxzZTsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG5cbiAgICAgICAgc2xpZGVzLmVxKGFjdGl2ZUluZGV4KS50cmFuc2l0aW9uRW5kKGZ1bmN0aW9uIG9uVHJhbnNpdGlvbkVuZCgpIHtcbiAgICAgICAgICBpZiAoZXZlbnRUcmlnZ2VyZWQpIHJldHVybjtcbiAgICAgICAgICBpZiAoIXN3aXBlciB8fCBzd2lwZXIuZGVzdHJveWVkKSByZXR1cm47IC8vIGlmICghJCh0aGlzKS5oYXNDbGFzcyhzd2lwZXIucGFyYW1zLnNsaWRlQWN0aXZlQ2xhc3MpKSByZXR1cm47XG5cbiAgICAgICAgICBldmVudFRyaWdnZXJlZCA9IHRydWU7XG4gICAgICAgICAgc3dpcGVyLmFuaW1hdGluZyA9IGZhbHNlO1xuICAgICAgICAgIHZhciB0cmlnZ2VyRXZlbnRzID0gWyd3ZWJraXRUcmFuc2l0aW9uRW5kJywgJ3RyYW5zaXRpb25lbmQnXTtcblxuICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdHJpZ2dlckV2ZW50cy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICAgICAgJHdyYXBwZXJFbC50cmlnZ2VyKHRyaWdnZXJFdmVudHNbaV0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuICB2YXIgRWZmZWN0RmxpcCA9IHtcbiAgICBuYW1lOiAnZWZmZWN0LWZsaXAnLFxuICAgIHBhcmFtczoge1xuICAgICAgZmxpcEVmZmVjdDoge1xuICAgICAgICBzbGlkZVNoYWRvd3M6IHRydWUsXG4gICAgICAgIGxpbWl0Um90YXRpb246IHRydWVcbiAgICAgIH1cbiAgICB9LFxuICAgIGNyZWF0ZTogZnVuY3Rpb24gY3JlYXRlKCkge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICBiaW5kTW9kdWxlTWV0aG9kcyhzd2lwZXIsIHtcbiAgICAgICAgZmxpcEVmZmVjdDogX2V4dGVuZHMoe30sIEZsaXApXG4gICAgICB9KTtcbiAgICB9LFxuICAgIG9uOiB7XG4gICAgICBiZWZvcmVJbml0OiBmdW5jdGlvbiBiZWZvcmVJbml0KHN3aXBlcikge1xuICAgICAgICBpZiAoc3dpcGVyLnBhcmFtcy5lZmZlY3QgIT09ICdmbGlwJykgcmV0dXJuO1xuICAgICAgICBzd2lwZXIuY2xhc3NOYW1lcy5wdXNoKHN3aXBlci5wYXJhbXMuY29udGFpbmVyTW9kaWZpZXJDbGFzcyArIFwiZmxpcFwiKTtcbiAgICAgICAgc3dpcGVyLmNsYXNzTmFtZXMucHVzaChzd2lwZXIucGFyYW1zLmNvbnRhaW5lck1vZGlmaWVyQ2xhc3MgKyBcIjNkXCIpO1xuICAgICAgICB2YXIgb3ZlcndyaXRlUGFyYW1zID0ge1xuICAgICAgICAgIHNsaWRlc1BlclZpZXc6IDEsXG4gICAgICAgICAgc2xpZGVzUGVyQ29sdW1uOiAxLFxuICAgICAgICAgIHNsaWRlc1Blckdyb3VwOiAxLFxuICAgICAgICAgIHdhdGNoU2xpZGVzUHJvZ3Jlc3M6IHRydWUsXG4gICAgICAgICAgc3BhY2VCZXR3ZWVuOiAwLFxuICAgICAgICAgIHZpcnR1YWxUcmFuc2xhdGU6IHRydWVcbiAgICAgICAgfTtcbiAgICAgICAgZXh0ZW5kJDEoc3dpcGVyLnBhcmFtcywgb3ZlcndyaXRlUGFyYW1zKTtcbiAgICAgICAgZXh0ZW5kJDEoc3dpcGVyLm9yaWdpbmFsUGFyYW1zLCBvdmVyd3JpdGVQYXJhbXMpO1xuICAgICAgfSxcbiAgICAgIHNldFRyYW5zbGF0ZTogZnVuY3Rpb24gc2V0VHJhbnNsYXRlKHN3aXBlcikge1xuICAgICAgICBpZiAoc3dpcGVyLnBhcmFtcy5lZmZlY3QgIT09ICdmbGlwJykgcmV0dXJuO1xuICAgICAgICBzd2lwZXIuZmxpcEVmZmVjdC5zZXRUcmFuc2xhdGUoKTtcbiAgICAgIH0sXG4gICAgICBzZXRUcmFuc2l0aW9uOiBmdW5jdGlvbiBzZXRUcmFuc2l0aW9uKHN3aXBlciwgZHVyYXRpb24pIHtcbiAgICAgICAgaWYgKHN3aXBlci5wYXJhbXMuZWZmZWN0ICE9PSAnZmxpcCcpIHJldHVybjtcbiAgICAgICAgc3dpcGVyLmZsaXBFZmZlY3Quc2V0VHJhbnNpdGlvbihkdXJhdGlvbik7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIHZhciBDb3ZlcmZsb3cgPSB7XG4gICAgc2V0VHJhbnNsYXRlOiBmdW5jdGlvbiBzZXRUcmFuc2xhdGUoKSB7XG4gICAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICAgIHZhciBzd2lwZXJXaWR0aCA9IHN3aXBlci53aWR0aCxcbiAgICAgICAgICBzd2lwZXJIZWlnaHQgPSBzd2lwZXIuaGVpZ2h0LFxuICAgICAgICAgIHNsaWRlcyA9IHN3aXBlci5zbGlkZXMsXG4gICAgICAgICAgc2xpZGVzU2l6ZXNHcmlkID0gc3dpcGVyLnNsaWRlc1NpemVzR3JpZDtcbiAgICAgIHZhciBwYXJhbXMgPSBzd2lwZXIucGFyYW1zLmNvdmVyZmxvd0VmZmVjdDtcbiAgICAgIHZhciBpc0hvcml6b250YWwgPSBzd2lwZXIuaXNIb3Jpem9udGFsKCk7XG4gICAgICB2YXIgdHJhbnNmb3JtID0gc3dpcGVyLnRyYW5zbGF0ZTtcbiAgICAgIHZhciBjZW50ZXIgPSBpc0hvcml6b250YWwgPyAtdHJhbnNmb3JtICsgc3dpcGVyV2lkdGggLyAyIDogLXRyYW5zZm9ybSArIHN3aXBlckhlaWdodCAvIDI7XG4gICAgICB2YXIgcm90YXRlID0gaXNIb3Jpem9udGFsID8gcGFyYW1zLnJvdGF0ZSA6IC1wYXJhbXMucm90YXRlO1xuICAgICAgdmFyIHRyYW5zbGF0ZSA9IHBhcmFtcy5kZXB0aDsgLy8gRWFjaCBzbGlkZSBvZmZzZXQgZnJvbSBjZW50ZXJcblxuICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbmd0aCA9IHNsaWRlcy5sZW5ndGg7IGkgPCBsZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICB2YXIgJHNsaWRlRWwgPSBzbGlkZXMuZXEoaSk7XG4gICAgICAgIHZhciBzbGlkZVNpemUgPSBzbGlkZXNTaXplc0dyaWRbaV07XG4gICAgICAgIHZhciBzbGlkZU9mZnNldCA9ICRzbGlkZUVsWzBdLnN3aXBlclNsaWRlT2Zmc2V0O1xuICAgICAgICB2YXIgb2Zmc2V0TXVsdGlwbGllciA9IChjZW50ZXIgLSBzbGlkZU9mZnNldCAtIHNsaWRlU2l6ZSAvIDIpIC8gc2xpZGVTaXplICogcGFyYW1zLm1vZGlmaWVyO1xuICAgICAgICB2YXIgcm90YXRlWSA9IGlzSG9yaXpvbnRhbCA/IHJvdGF0ZSAqIG9mZnNldE11bHRpcGxpZXIgOiAwO1xuICAgICAgICB2YXIgcm90YXRlWCA9IGlzSG9yaXpvbnRhbCA/IDAgOiByb3RhdGUgKiBvZmZzZXRNdWx0aXBsaWVyOyAvLyB2YXIgcm90YXRlWiA9IDBcblxuICAgICAgICB2YXIgdHJhbnNsYXRlWiA9IC10cmFuc2xhdGUgKiBNYXRoLmFicyhvZmZzZXRNdWx0aXBsaWVyKTtcbiAgICAgICAgdmFyIHN0cmV0Y2ggPSBwYXJhbXMuc3RyZXRjaDsgLy8gQWxsb3cgcGVyY2VudGFnZSB0byBtYWtlIGEgcmVsYXRpdmUgc3RyZXRjaCBmb3IgcmVzcG9uc2l2ZSBzbGlkZXJzXG5cbiAgICAgICAgaWYgKHR5cGVvZiBzdHJldGNoID09PSAnc3RyaW5nJyAmJiBzdHJldGNoLmluZGV4T2YoJyUnKSAhPT0gLTEpIHtcbiAgICAgICAgICBzdHJldGNoID0gcGFyc2VGbG9hdChwYXJhbXMuc3RyZXRjaCkgLyAxMDAgKiBzbGlkZVNpemU7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgdHJhbnNsYXRlWSA9IGlzSG9yaXpvbnRhbCA/IDAgOiBzdHJldGNoICogb2Zmc2V0TXVsdGlwbGllcjtcbiAgICAgICAgdmFyIHRyYW5zbGF0ZVggPSBpc0hvcml6b250YWwgPyBzdHJldGNoICogb2Zmc2V0TXVsdGlwbGllciA6IDA7XG4gICAgICAgIHZhciBzY2FsZSA9IDEgLSAoMSAtIHBhcmFtcy5zY2FsZSkgKiBNYXRoLmFicyhvZmZzZXRNdWx0aXBsaWVyKTsgLy8gRml4IGZvciB1bHRyYSBzbWFsbCB2YWx1ZXNcblxuICAgICAgICBpZiAoTWF0aC5hYnModHJhbnNsYXRlWCkgPCAwLjAwMSkgdHJhbnNsYXRlWCA9IDA7XG4gICAgICAgIGlmIChNYXRoLmFicyh0cmFuc2xhdGVZKSA8IDAuMDAxKSB0cmFuc2xhdGVZID0gMDtcbiAgICAgICAgaWYgKE1hdGguYWJzKHRyYW5zbGF0ZVopIDwgMC4wMDEpIHRyYW5zbGF0ZVogPSAwO1xuICAgICAgICBpZiAoTWF0aC5hYnMocm90YXRlWSkgPCAwLjAwMSkgcm90YXRlWSA9IDA7XG4gICAgICAgIGlmIChNYXRoLmFicyhyb3RhdGVYKSA8IDAuMDAxKSByb3RhdGVYID0gMDtcbiAgICAgICAgaWYgKE1hdGguYWJzKHNjYWxlKSA8IDAuMDAxKSBzY2FsZSA9IDA7XG4gICAgICAgIHZhciBzbGlkZVRyYW5zZm9ybSA9IFwidHJhbnNsYXRlM2QoXCIgKyB0cmFuc2xhdGVYICsgXCJweCxcIiArIHRyYW5zbGF0ZVkgKyBcInB4LFwiICsgdHJhbnNsYXRlWiArIFwicHgpICByb3RhdGVYKFwiICsgcm90YXRlWCArIFwiZGVnKSByb3RhdGVZKFwiICsgcm90YXRlWSArIFwiZGVnKSBzY2FsZShcIiArIHNjYWxlICsgXCIpXCI7XG4gICAgICAgICRzbGlkZUVsLnRyYW5zZm9ybShzbGlkZVRyYW5zZm9ybSk7XG4gICAgICAgICRzbGlkZUVsWzBdLnN0eWxlLnpJbmRleCA9IC1NYXRoLmFicyhNYXRoLnJvdW5kKG9mZnNldE11bHRpcGxpZXIpKSArIDE7XG5cbiAgICAgICAgaWYgKHBhcmFtcy5zbGlkZVNoYWRvd3MpIHtcbiAgICAgICAgICAvLyBTZXQgc2hhZG93c1xuICAgICAgICAgIHZhciAkc2hhZG93QmVmb3JlRWwgPSBpc0hvcml6b250YWwgPyAkc2xpZGVFbC5maW5kKCcuc3dpcGVyLXNsaWRlLXNoYWRvdy1sZWZ0JykgOiAkc2xpZGVFbC5maW5kKCcuc3dpcGVyLXNsaWRlLXNoYWRvdy10b3AnKTtcbiAgICAgICAgICB2YXIgJHNoYWRvd0FmdGVyRWwgPSBpc0hvcml6b250YWwgPyAkc2xpZGVFbC5maW5kKCcuc3dpcGVyLXNsaWRlLXNoYWRvdy1yaWdodCcpIDogJHNsaWRlRWwuZmluZCgnLnN3aXBlci1zbGlkZS1zaGFkb3ctYm90dG9tJyk7XG5cbiAgICAgICAgICBpZiAoJHNoYWRvd0JlZm9yZUVsLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgJHNoYWRvd0JlZm9yZUVsID0gJChcIjxkaXYgY2xhc3M9XFxcInN3aXBlci1zbGlkZS1zaGFkb3ctXCIgKyAoaXNIb3Jpem9udGFsID8gJ2xlZnQnIDogJ3RvcCcpICsgXCJcXFwiPjwvZGl2PlwiKTtcbiAgICAgICAgICAgICRzbGlkZUVsLmFwcGVuZCgkc2hhZG93QmVmb3JlRWwpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmICgkc2hhZG93QWZ0ZXJFbC5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICRzaGFkb3dBZnRlckVsID0gJChcIjxkaXYgY2xhc3M9XFxcInN3aXBlci1zbGlkZS1zaGFkb3ctXCIgKyAoaXNIb3Jpem9udGFsID8gJ3JpZ2h0JyA6ICdib3R0b20nKSArIFwiXFxcIj48L2Rpdj5cIik7XG4gICAgICAgICAgICAkc2xpZGVFbC5hcHBlbmQoJHNoYWRvd0FmdGVyRWwpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmICgkc2hhZG93QmVmb3JlRWwubGVuZ3RoKSAkc2hhZG93QmVmb3JlRWxbMF0uc3R5bGUub3BhY2l0eSA9IG9mZnNldE11bHRpcGxpZXIgPiAwID8gb2Zmc2V0TXVsdGlwbGllciA6IDA7XG4gICAgICAgICAgaWYgKCRzaGFkb3dBZnRlckVsLmxlbmd0aCkgJHNoYWRvd0FmdGVyRWxbMF0uc3R5bGUub3BhY2l0eSA9IC1vZmZzZXRNdWx0aXBsaWVyID4gMCA/IC1vZmZzZXRNdWx0aXBsaWVyIDogMDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgc2V0VHJhbnNpdGlvbjogZnVuY3Rpb24gc2V0VHJhbnNpdGlvbihkdXJhdGlvbikge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICBzd2lwZXIuc2xpZGVzLnRyYW5zaXRpb24oZHVyYXRpb24pLmZpbmQoJy5zd2lwZXItc2xpZGUtc2hhZG93LXRvcCwgLnN3aXBlci1zbGlkZS1zaGFkb3ctcmlnaHQsIC5zd2lwZXItc2xpZGUtc2hhZG93LWJvdHRvbSwgLnN3aXBlci1zbGlkZS1zaGFkb3ctbGVmdCcpLnRyYW5zaXRpb24oZHVyYXRpb24pO1xuICAgIH1cbiAgfTtcbiAgdmFyIEVmZmVjdENvdmVyZmxvdyA9IHtcbiAgICBuYW1lOiAnZWZmZWN0LWNvdmVyZmxvdycsXG4gICAgcGFyYW1zOiB7XG4gICAgICBjb3ZlcmZsb3dFZmZlY3Q6IHtcbiAgICAgICAgcm90YXRlOiA1MCxcbiAgICAgICAgc3RyZXRjaDogMCxcbiAgICAgICAgZGVwdGg6IDEwMCxcbiAgICAgICAgc2NhbGU6IDEsXG4gICAgICAgIG1vZGlmaWVyOiAxLFxuICAgICAgICBzbGlkZVNoYWRvd3M6IHRydWVcbiAgICAgIH1cbiAgICB9LFxuICAgIGNyZWF0ZTogZnVuY3Rpb24gY3JlYXRlKCkge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICBiaW5kTW9kdWxlTWV0aG9kcyhzd2lwZXIsIHtcbiAgICAgICAgY292ZXJmbG93RWZmZWN0OiBfZXh0ZW5kcyh7fSwgQ292ZXJmbG93KVxuICAgICAgfSk7XG4gICAgfSxcbiAgICBvbjoge1xuICAgICAgYmVmb3JlSW5pdDogZnVuY3Rpb24gYmVmb3JlSW5pdChzd2lwZXIpIHtcbiAgICAgICAgaWYgKHN3aXBlci5wYXJhbXMuZWZmZWN0ICE9PSAnY292ZXJmbG93JykgcmV0dXJuO1xuICAgICAgICBzd2lwZXIuY2xhc3NOYW1lcy5wdXNoKHN3aXBlci5wYXJhbXMuY29udGFpbmVyTW9kaWZpZXJDbGFzcyArIFwiY292ZXJmbG93XCIpO1xuICAgICAgICBzd2lwZXIuY2xhc3NOYW1lcy5wdXNoKHN3aXBlci5wYXJhbXMuY29udGFpbmVyTW9kaWZpZXJDbGFzcyArIFwiM2RcIik7XG4gICAgICAgIHN3aXBlci5wYXJhbXMud2F0Y2hTbGlkZXNQcm9ncmVzcyA9IHRydWU7XG4gICAgICAgIHN3aXBlci5vcmlnaW5hbFBhcmFtcy53YXRjaFNsaWRlc1Byb2dyZXNzID0gdHJ1ZTtcbiAgICAgIH0sXG4gICAgICBzZXRUcmFuc2xhdGU6IGZ1bmN0aW9uIHNldFRyYW5zbGF0ZShzd2lwZXIpIHtcbiAgICAgICAgaWYgKHN3aXBlci5wYXJhbXMuZWZmZWN0ICE9PSAnY292ZXJmbG93JykgcmV0dXJuO1xuICAgICAgICBzd2lwZXIuY292ZXJmbG93RWZmZWN0LnNldFRyYW5zbGF0ZSgpO1xuICAgICAgfSxcbiAgICAgIHNldFRyYW5zaXRpb246IGZ1bmN0aW9uIHNldFRyYW5zaXRpb24oc3dpcGVyLCBkdXJhdGlvbikge1xuICAgICAgICBpZiAoc3dpcGVyLnBhcmFtcy5lZmZlY3QgIT09ICdjb3ZlcmZsb3cnKSByZXR1cm47XG4gICAgICAgIHN3aXBlci5jb3ZlcmZsb3dFZmZlY3Quc2V0VHJhbnNpdGlvbihkdXJhdGlvbik7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIHZhciBUaHVtYnMgPSB7XG4gICAgaW5pdDogZnVuY3Rpb24gaW5pdCgpIHtcbiAgICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgICAgdmFyIHRodW1ic1BhcmFtcyA9IHN3aXBlci5wYXJhbXMudGh1bWJzO1xuICAgICAgaWYgKHN3aXBlci50aHVtYnMuaW5pdGlhbGl6ZWQpIHJldHVybiBmYWxzZTtcbiAgICAgIHN3aXBlci50aHVtYnMuaW5pdGlhbGl6ZWQgPSB0cnVlO1xuICAgICAgdmFyIFN3aXBlckNsYXNzID0gc3dpcGVyLmNvbnN0cnVjdG9yO1xuXG4gICAgICBpZiAodGh1bWJzUGFyYW1zLnN3aXBlciBpbnN0YW5jZW9mIFN3aXBlckNsYXNzKSB7XG4gICAgICAgIHN3aXBlci50aHVtYnMuc3dpcGVyID0gdGh1bWJzUGFyYW1zLnN3aXBlcjtcbiAgICAgICAgZXh0ZW5kJDEoc3dpcGVyLnRodW1icy5zd2lwZXIub3JpZ2luYWxQYXJhbXMsIHtcbiAgICAgICAgICB3YXRjaFNsaWRlc1Byb2dyZXNzOiB0cnVlLFxuICAgICAgICAgIHNsaWRlVG9DbGlja2VkU2xpZGU6IGZhbHNlXG4gICAgICAgIH0pO1xuICAgICAgICBleHRlbmQkMShzd2lwZXIudGh1bWJzLnN3aXBlci5wYXJhbXMsIHtcbiAgICAgICAgICB3YXRjaFNsaWRlc1Byb2dyZXNzOiB0cnVlLFxuICAgICAgICAgIHNsaWRlVG9DbGlja2VkU2xpZGU6IGZhbHNlXG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIGlmIChpc09iamVjdCQxKHRodW1ic1BhcmFtcy5zd2lwZXIpKSB7XG4gICAgICAgIHN3aXBlci50aHVtYnMuc3dpcGVyID0gbmV3IFN3aXBlckNsYXNzKGV4dGVuZCQxKHt9LCB0aHVtYnNQYXJhbXMuc3dpcGVyLCB7XG4gICAgICAgICAgd2F0Y2hTbGlkZXNWaXNpYmlsaXR5OiB0cnVlLFxuICAgICAgICAgIHdhdGNoU2xpZGVzUHJvZ3Jlc3M6IHRydWUsXG4gICAgICAgICAgc2xpZGVUb0NsaWNrZWRTbGlkZTogZmFsc2VcbiAgICAgICAgfSkpO1xuICAgICAgICBzd2lwZXIudGh1bWJzLnN3aXBlckNyZWF0ZWQgPSB0cnVlO1xuICAgICAgfVxuXG4gICAgICBzd2lwZXIudGh1bWJzLnN3aXBlci4kZWwuYWRkQ2xhc3Moc3dpcGVyLnBhcmFtcy50aHVtYnMudGh1bWJzQ29udGFpbmVyQ2xhc3MpO1xuICAgICAgc3dpcGVyLnRodW1icy5zd2lwZXIub24oJ3RhcCcsIHN3aXBlci50aHVtYnMub25UaHVtYkNsaWNrKTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0sXG4gICAgb25UaHVtYkNsaWNrOiBmdW5jdGlvbiBvblRodW1iQ2xpY2soKSB7XG4gICAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICAgIHZhciB0aHVtYnNTd2lwZXIgPSBzd2lwZXIudGh1bWJzLnN3aXBlcjtcbiAgICAgIGlmICghdGh1bWJzU3dpcGVyKSByZXR1cm47XG4gICAgICB2YXIgY2xpY2tlZEluZGV4ID0gdGh1bWJzU3dpcGVyLmNsaWNrZWRJbmRleDtcbiAgICAgIHZhciBjbGlja2VkU2xpZGUgPSB0aHVtYnNTd2lwZXIuY2xpY2tlZFNsaWRlO1xuICAgICAgaWYgKGNsaWNrZWRTbGlkZSAmJiAkKGNsaWNrZWRTbGlkZSkuaGFzQ2xhc3Moc3dpcGVyLnBhcmFtcy50aHVtYnMuc2xpZGVUaHVtYkFjdGl2ZUNsYXNzKSkgcmV0dXJuO1xuICAgICAgaWYgKHR5cGVvZiBjbGlja2VkSW5kZXggPT09ICd1bmRlZmluZWQnIHx8IGNsaWNrZWRJbmRleCA9PT0gbnVsbCkgcmV0dXJuO1xuICAgICAgdmFyIHNsaWRlVG9JbmRleDtcblxuICAgICAgaWYgKHRodW1ic1N3aXBlci5wYXJhbXMubG9vcCkge1xuICAgICAgICBzbGlkZVRvSW5kZXggPSBwYXJzZUludCgkKHRodW1ic1N3aXBlci5jbGlja2VkU2xpZGUpLmF0dHIoJ2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4JyksIDEwKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNsaWRlVG9JbmRleCA9IGNsaWNrZWRJbmRleDtcbiAgICAgIH1cblxuICAgICAgaWYgKHN3aXBlci5wYXJhbXMubG9vcCkge1xuICAgICAgICB2YXIgY3VycmVudEluZGV4ID0gc3dpcGVyLmFjdGl2ZUluZGV4O1xuXG4gICAgICAgIGlmIChzd2lwZXIuc2xpZGVzLmVxKGN1cnJlbnRJbmRleCkuaGFzQ2xhc3Moc3dpcGVyLnBhcmFtcy5zbGlkZUR1cGxpY2F0ZUNsYXNzKSkge1xuICAgICAgICAgIHN3aXBlci5sb29wRml4KCk7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuXG4gICAgICAgICAgc3dpcGVyLl9jbGllbnRMZWZ0ID0gc3dpcGVyLiR3cmFwcGVyRWxbMF0uY2xpZW50TGVmdDtcbiAgICAgICAgICBjdXJyZW50SW5kZXggPSBzd2lwZXIuYWN0aXZlSW5kZXg7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgcHJldkluZGV4ID0gc3dpcGVyLnNsaWRlcy5lcShjdXJyZW50SW5kZXgpLnByZXZBbGwoXCJbZGF0YS1zd2lwZXItc2xpZGUtaW5kZXg9XFxcIlwiICsgc2xpZGVUb0luZGV4ICsgXCJcXFwiXVwiKS5lcSgwKS5pbmRleCgpO1xuICAgICAgICB2YXIgbmV4dEluZGV4ID0gc3dpcGVyLnNsaWRlcy5lcShjdXJyZW50SW5kZXgpLm5leHRBbGwoXCJbZGF0YS1zd2lwZXItc2xpZGUtaW5kZXg9XFxcIlwiICsgc2xpZGVUb0luZGV4ICsgXCJcXFwiXVwiKS5lcSgwKS5pbmRleCgpO1xuICAgICAgICBpZiAodHlwZW9mIHByZXZJbmRleCA9PT0gJ3VuZGVmaW5lZCcpIHNsaWRlVG9JbmRleCA9IG5leHRJbmRleDtlbHNlIGlmICh0eXBlb2YgbmV4dEluZGV4ID09PSAndW5kZWZpbmVkJykgc2xpZGVUb0luZGV4ID0gcHJldkluZGV4O2Vsc2UgaWYgKG5leHRJbmRleCAtIGN1cnJlbnRJbmRleCA8IGN1cnJlbnRJbmRleCAtIHByZXZJbmRleCkgc2xpZGVUb0luZGV4ID0gbmV4dEluZGV4O2Vsc2Ugc2xpZGVUb0luZGV4ID0gcHJldkluZGV4O1xuICAgICAgfVxuXG4gICAgICBzd2lwZXIuc2xpZGVUbyhzbGlkZVRvSW5kZXgpO1xuICAgIH0sXG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoaW5pdGlhbCkge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICB2YXIgdGh1bWJzU3dpcGVyID0gc3dpcGVyLnRodW1icy5zd2lwZXI7XG4gICAgICBpZiAoIXRodW1ic1N3aXBlcikgcmV0dXJuO1xuICAgICAgdmFyIHNsaWRlc1BlclZpZXcgPSB0aHVtYnNTd2lwZXIucGFyYW1zLnNsaWRlc1BlclZpZXcgPT09ICdhdXRvJyA/IHRodW1ic1N3aXBlci5zbGlkZXNQZXJWaWV3RHluYW1pYygpIDogdGh1bWJzU3dpcGVyLnBhcmFtcy5zbGlkZXNQZXJWaWV3O1xuICAgICAgdmFyIGF1dG9TY3JvbGxPZmZzZXQgPSBzd2lwZXIucGFyYW1zLnRodW1icy5hdXRvU2Nyb2xsT2Zmc2V0O1xuICAgICAgdmFyIHVzZU9mZnNldCA9IGF1dG9TY3JvbGxPZmZzZXQgJiYgIXRodW1ic1N3aXBlci5wYXJhbXMubG9vcDtcblxuICAgICAgaWYgKHN3aXBlci5yZWFsSW5kZXggIT09IHRodW1ic1N3aXBlci5yZWFsSW5kZXggfHwgdXNlT2Zmc2V0KSB7XG4gICAgICAgIHZhciBjdXJyZW50VGh1bWJzSW5kZXggPSB0aHVtYnNTd2lwZXIuYWN0aXZlSW5kZXg7XG4gICAgICAgIHZhciBuZXdUaHVtYnNJbmRleDtcbiAgICAgICAgdmFyIGRpcmVjdGlvbjtcblxuICAgICAgICBpZiAodGh1bWJzU3dpcGVyLnBhcmFtcy5sb29wKSB7XG4gICAgICAgICAgaWYgKHRodW1ic1N3aXBlci5zbGlkZXMuZXEoY3VycmVudFRodW1ic0luZGV4KS5oYXNDbGFzcyh0aHVtYnNTd2lwZXIucGFyYW1zLnNsaWRlRHVwbGljYXRlQ2xhc3MpKSB7XG4gICAgICAgICAgICB0aHVtYnNTd2lwZXIubG9vcEZpeCgpOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcblxuICAgICAgICAgICAgdGh1bWJzU3dpcGVyLl9jbGllbnRMZWZ0ID0gdGh1bWJzU3dpcGVyLiR3cmFwcGVyRWxbMF0uY2xpZW50TGVmdDtcbiAgICAgICAgICAgIGN1cnJlbnRUaHVtYnNJbmRleCA9IHRodW1ic1N3aXBlci5hY3RpdmVJbmRleDtcbiAgICAgICAgICB9IC8vIEZpbmQgYWN0dWFsIHRodW1icyBpbmRleCB0byBzbGlkZSB0b1xuXG5cbiAgICAgICAgICB2YXIgcHJldlRodW1ic0luZGV4ID0gdGh1bWJzU3dpcGVyLnNsaWRlcy5lcShjdXJyZW50VGh1bWJzSW5kZXgpLnByZXZBbGwoXCJbZGF0YS1zd2lwZXItc2xpZGUtaW5kZXg9XFxcIlwiICsgc3dpcGVyLnJlYWxJbmRleCArIFwiXFxcIl1cIikuZXEoMCkuaW5kZXgoKTtcbiAgICAgICAgICB2YXIgbmV4dFRodW1ic0luZGV4ID0gdGh1bWJzU3dpcGVyLnNsaWRlcy5lcShjdXJyZW50VGh1bWJzSW5kZXgpLm5leHRBbGwoXCJbZGF0YS1zd2lwZXItc2xpZGUtaW5kZXg9XFxcIlwiICsgc3dpcGVyLnJlYWxJbmRleCArIFwiXFxcIl1cIikuZXEoMCkuaW5kZXgoKTtcbiAgICAgICAgICBpZiAodHlwZW9mIHByZXZUaHVtYnNJbmRleCA9PT0gJ3VuZGVmaW5lZCcpIG5ld1RodW1ic0luZGV4ID0gbmV4dFRodW1ic0luZGV4O2Vsc2UgaWYgKHR5cGVvZiBuZXh0VGh1bWJzSW5kZXggPT09ICd1bmRlZmluZWQnKSBuZXdUaHVtYnNJbmRleCA9IHByZXZUaHVtYnNJbmRleDtlbHNlIGlmIChuZXh0VGh1bWJzSW5kZXggLSBjdXJyZW50VGh1bWJzSW5kZXggPT09IGN1cnJlbnRUaHVtYnNJbmRleCAtIHByZXZUaHVtYnNJbmRleCkgbmV3VGh1bWJzSW5kZXggPSBjdXJyZW50VGh1bWJzSW5kZXg7ZWxzZSBpZiAobmV4dFRodW1ic0luZGV4IC0gY3VycmVudFRodW1ic0luZGV4IDwgY3VycmVudFRodW1ic0luZGV4IC0gcHJldlRodW1ic0luZGV4KSBuZXdUaHVtYnNJbmRleCA9IG5leHRUaHVtYnNJbmRleDtlbHNlIG5ld1RodW1ic0luZGV4ID0gcHJldlRodW1ic0luZGV4O1xuICAgICAgICAgIGRpcmVjdGlvbiA9IHN3aXBlci5hY3RpdmVJbmRleCA+IHN3aXBlci5wcmV2aW91c0luZGV4ID8gJ25leHQnIDogJ3ByZXYnO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG5ld1RodW1ic0luZGV4ID0gc3dpcGVyLnJlYWxJbmRleDtcbiAgICAgICAgICBkaXJlY3Rpb24gPSBuZXdUaHVtYnNJbmRleCA+IHN3aXBlci5wcmV2aW91c0luZGV4ID8gJ25leHQnIDogJ3ByZXYnO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHVzZU9mZnNldCkge1xuICAgICAgICAgIG5ld1RodW1ic0luZGV4ICs9IGRpcmVjdGlvbiA9PT0gJ25leHQnID8gYXV0b1Njcm9sbE9mZnNldCA6IC0xICogYXV0b1Njcm9sbE9mZnNldDtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aHVtYnNTd2lwZXIudmlzaWJsZVNsaWRlc0luZGV4ZXMgJiYgdGh1bWJzU3dpcGVyLnZpc2libGVTbGlkZXNJbmRleGVzLmluZGV4T2YobmV3VGh1bWJzSW5kZXgpIDwgMCkge1xuICAgICAgICAgIGlmICh0aHVtYnNTd2lwZXIucGFyYW1zLmNlbnRlcmVkU2xpZGVzKSB7XG4gICAgICAgICAgICBpZiAobmV3VGh1bWJzSW5kZXggPiBjdXJyZW50VGh1bWJzSW5kZXgpIHtcbiAgICAgICAgICAgICAgbmV3VGh1bWJzSW5kZXggPSBuZXdUaHVtYnNJbmRleCAtIE1hdGguZmxvb3Ioc2xpZGVzUGVyVmlldyAvIDIpICsgMTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIG5ld1RodW1ic0luZGV4ID0gbmV3VGh1bWJzSW5kZXggKyBNYXRoLmZsb29yKHNsaWRlc1BlclZpZXcgLyAyKSAtIDE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIGlmIChuZXdUaHVtYnNJbmRleCA+IGN1cnJlbnRUaHVtYnNJbmRleCkge1xuICAgICAgICAgICAgbmV3VGh1bWJzSW5kZXggPSBuZXdUaHVtYnNJbmRleCAtIHNsaWRlc1BlclZpZXcgKyAxO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHRodW1ic1N3aXBlci5zbGlkZVRvKG5ld1RodW1ic0luZGV4LCBpbml0aWFsID8gMCA6IHVuZGVmaW5lZCk7XG4gICAgICAgIH1cbiAgICAgIH0gLy8gQWN0aXZhdGUgdGh1bWJzXG5cblxuICAgICAgdmFyIHRodW1ic1RvQWN0aXZhdGUgPSAxO1xuICAgICAgdmFyIHRodW1iQWN0aXZlQ2xhc3MgPSBzd2lwZXIucGFyYW1zLnRodW1icy5zbGlkZVRodW1iQWN0aXZlQ2xhc3M7XG5cbiAgICAgIGlmIChzd2lwZXIucGFyYW1zLnNsaWRlc1BlclZpZXcgPiAxICYmICFzd2lwZXIucGFyYW1zLmNlbnRlcmVkU2xpZGVzKSB7XG4gICAgICAgIHRodW1ic1RvQWN0aXZhdGUgPSBzd2lwZXIucGFyYW1zLnNsaWRlc1BlclZpZXc7XG4gICAgICB9XG5cbiAgICAgIGlmICghc3dpcGVyLnBhcmFtcy50aHVtYnMubXVsdGlwbGVBY3RpdmVUaHVtYnMpIHtcbiAgICAgICAgdGh1bWJzVG9BY3RpdmF0ZSA9IDE7XG4gICAgICB9XG5cbiAgICAgIHRodW1ic1RvQWN0aXZhdGUgPSBNYXRoLmZsb29yKHRodW1ic1RvQWN0aXZhdGUpO1xuICAgICAgdGh1bWJzU3dpcGVyLnNsaWRlcy5yZW1vdmVDbGFzcyh0aHVtYkFjdGl2ZUNsYXNzKTtcblxuICAgICAgaWYgKHRodW1ic1N3aXBlci5wYXJhbXMubG9vcCB8fCB0aHVtYnNTd2lwZXIucGFyYW1zLnZpcnR1YWwgJiYgdGh1bWJzU3dpcGVyLnBhcmFtcy52aXJ0dWFsLmVuYWJsZWQpIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aHVtYnNUb0FjdGl2YXRlOyBpICs9IDEpIHtcbiAgICAgICAgICB0aHVtYnNTd2lwZXIuJHdyYXBwZXJFbC5jaGlsZHJlbihcIltkYXRhLXN3aXBlci1zbGlkZS1pbmRleD1cXFwiXCIgKyAoc3dpcGVyLnJlYWxJbmRleCArIGkpICsgXCJcXFwiXVwiKS5hZGRDbGFzcyh0aHVtYkFjdGl2ZUNsYXNzKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IHRodW1ic1RvQWN0aXZhdGU7IF9pICs9IDEpIHtcbiAgICAgICAgICB0aHVtYnNTd2lwZXIuc2xpZGVzLmVxKHN3aXBlci5yZWFsSW5kZXggKyBfaSkuYWRkQ2xhc3ModGh1bWJBY3RpdmVDbGFzcyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH07XG4gIHZhciBUaHVtYnMkMSA9IHtcbiAgICBuYW1lOiAndGh1bWJzJyxcbiAgICBwYXJhbXM6IHtcbiAgICAgIHRodW1iczoge1xuICAgICAgICBzd2lwZXI6IG51bGwsXG4gICAgICAgIG11bHRpcGxlQWN0aXZlVGh1bWJzOiB0cnVlLFxuICAgICAgICBhdXRvU2Nyb2xsT2Zmc2V0OiAwLFxuICAgICAgICBzbGlkZVRodW1iQWN0aXZlQ2xhc3M6ICdzd2lwZXItc2xpZGUtdGh1bWItYWN0aXZlJyxcbiAgICAgICAgdGh1bWJzQ29udGFpbmVyQ2xhc3M6ICdzd2lwZXItY29udGFpbmVyLXRodW1icydcbiAgICAgIH1cbiAgICB9LFxuICAgIGNyZWF0ZTogZnVuY3Rpb24gY3JlYXRlKCkge1xuICAgICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgICBiaW5kTW9kdWxlTWV0aG9kcyhzd2lwZXIsIHtcbiAgICAgICAgdGh1bWJzOiBfZXh0ZW5kcyh7XG4gICAgICAgICAgc3dpcGVyOiBudWxsLFxuICAgICAgICAgIGluaXRpYWxpemVkOiBmYWxzZVxuICAgICAgICB9LCBUaHVtYnMpXG4gICAgICB9KTtcbiAgICB9LFxuICAgIG9uOiB7XG4gICAgICBiZWZvcmVJbml0OiBmdW5jdGlvbiBiZWZvcmVJbml0KHN3aXBlcikge1xuICAgICAgICB2YXIgdGh1bWJzID0gc3dpcGVyLnBhcmFtcy50aHVtYnM7XG4gICAgICAgIGlmICghdGh1bWJzIHx8ICF0aHVtYnMuc3dpcGVyKSByZXR1cm47XG4gICAgICAgIHN3aXBlci50aHVtYnMuaW5pdCgpO1xuICAgICAgICBzd2lwZXIudGh1bWJzLnVwZGF0ZSh0cnVlKTtcbiAgICAgIH0sXG4gICAgICBzbGlkZUNoYW5nZTogZnVuY3Rpb24gc2xpZGVDaGFuZ2Uoc3dpcGVyKSB7XG4gICAgICAgIGlmICghc3dpcGVyLnRodW1icy5zd2lwZXIpIHJldHVybjtcbiAgICAgICAgc3dpcGVyLnRodW1icy51cGRhdGUoKTtcbiAgICAgIH0sXG4gICAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShzd2lwZXIpIHtcbiAgICAgICAgaWYgKCFzd2lwZXIudGh1bWJzLnN3aXBlcikgcmV0dXJuO1xuICAgICAgICBzd2lwZXIudGh1bWJzLnVwZGF0ZSgpO1xuICAgICAgfSxcbiAgICAgIHJlc2l6ZTogZnVuY3Rpb24gcmVzaXplKHN3aXBlcikge1xuICAgICAgICBpZiAoIXN3aXBlci50aHVtYnMuc3dpcGVyKSByZXR1cm47XG4gICAgICAgIHN3aXBlci50aHVtYnMudXBkYXRlKCk7XG4gICAgICB9LFxuICAgICAgb2JzZXJ2ZXJVcGRhdGU6IGZ1bmN0aW9uIG9ic2VydmVyVXBkYXRlKHN3aXBlcikge1xuICAgICAgICBpZiAoIXN3aXBlci50aHVtYnMuc3dpcGVyKSByZXR1cm47XG4gICAgICAgIHN3aXBlci50aHVtYnMudXBkYXRlKCk7XG4gICAgICB9LFxuICAgICAgc2V0VHJhbnNpdGlvbjogZnVuY3Rpb24gc2V0VHJhbnNpdGlvbihzd2lwZXIsIGR1cmF0aW9uKSB7XG4gICAgICAgIHZhciB0aHVtYnNTd2lwZXIgPSBzd2lwZXIudGh1bWJzLnN3aXBlcjtcbiAgICAgICAgaWYgKCF0aHVtYnNTd2lwZXIpIHJldHVybjtcbiAgICAgICAgdGh1bWJzU3dpcGVyLnNldFRyYW5zaXRpb24oZHVyYXRpb24pO1xuICAgICAgfSxcbiAgICAgIGJlZm9yZURlc3Ryb3k6IGZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koc3dpcGVyKSB7XG4gICAgICAgIHZhciB0aHVtYnNTd2lwZXIgPSBzd2lwZXIudGh1bWJzLnN3aXBlcjtcbiAgICAgICAgaWYgKCF0aHVtYnNTd2lwZXIpIHJldHVybjtcblxuICAgICAgICBpZiAoc3dpcGVyLnRodW1icy5zd2lwZXJDcmVhdGVkICYmIHRodW1ic1N3aXBlcikge1xuICAgICAgICAgIHRodW1ic1N3aXBlci5kZXN0cm95KCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbiAgLy8gU3dpcGVyIENsYXNzXG4gIHZhciBjb21wb25lbnRzID0gW1ZpcnR1YWwkMSwgS2V5Ym9hcmQkMSwgTW91c2V3aGVlbCQxLCBOYXZpZ2F0aW9uJDEsIFBhZ2luYXRpb24kMSwgU2Nyb2xsYmFyJDEsIFBhcmFsbGF4JDEsIFpvb20kMSwgTGF6eSQxLCBDb250cm9sbGVyJDEsIEExMXkkMSwgSGlzdG9yeSQxLCBIYXNoTmF2aWdhdGlvbiQxLCBBdXRvcGxheSQxLCBFZmZlY3RGYWRlLCBFZmZlY3RDdWJlLCBFZmZlY3RGbGlwLCBFZmZlY3RDb3ZlcmZsb3csIFRodW1icyQxXTtcbiAgU3dpcGVyLnVzZShjb21wb25lbnRzKTtcblxuICByZXR1cm4gU3dpcGVyO1xuXG59KSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3dpcGVyLWJ1bmRsZS5qcy5tYXBcbiJdLCJuYW1lcyI6WyJnbG9iYWwiLCJmYWN0b3J5IiwiZXhwb3J0cyIsIm1vZHVsZSIsImRlZmluZSIsImFtZCIsInNlbGYiLCJTd2lwZXIiLCJ0aGlzIiwiX2RlZmluZVByb3BlcnRpZXMiLCJ0YXJnZXQiLCJwcm9wcyIsImkiLCJsZW5ndGgiLCJkZXNjcmlwdG9yIiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJrZXkiLCJfZXh0ZW5kcyIsImFzc2lnbiIsImFyZ3VtZW50cyIsInNvdXJjZSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImFwcGx5IiwiaXNPYmplY3QiLCJvYmoiLCJjb25zdHJ1Y3RvciIsImV4dGVuZCIsInNyYyIsImtleXMiLCJmb3JFYWNoIiwic3NyRG9jdW1lbnQiLCJib2R5IiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJhY3RpdmVFbGVtZW50IiwiYmx1ciIsIm5vZGVOYW1lIiwicXVlcnlTZWxlY3RvciIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJnZXRFbGVtZW50QnlJZCIsImNyZWF0ZUV2ZW50IiwiaW5pdEV2ZW50IiwiY3JlYXRlRWxlbWVudCIsImNoaWxkcmVuIiwiY2hpbGROb2RlcyIsInN0eWxlIiwic2V0QXR0cmlidXRlIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJjcmVhdGVFbGVtZW50TlMiLCJpbXBvcnROb2RlIiwibG9jYXRpb24iLCJoYXNoIiwiaG9zdCIsImhvc3RuYW1lIiwiaHJlZiIsIm9yaWdpbiIsInBhdGhuYW1lIiwicHJvdG9jb2wiLCJzZWFyY2giLCJnZXREb2N1bWVudCIsImRvYyIsImRvY3VtZW50Iiwic3NyV2luZG93IiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwiaGlzdG9yeSIsInJlcGxhY2VTdGF0ZSIsInB1c2hTdGF0ZSIsImdvIiwiYmFjayIsIkN1c3RvbUV2ZW50IiwiZ2V0Q29tcHV0ZWRTdHlsZSIsImdldFByb3BlcnR5VmFsdWUiLCJJbWFnZSIsIkRhdGUiLCJzY3JlZW4iLCJzZXRUaW1lb3V0IiwiY2xlYXJUaW1lb3V0IiwibWF0Y2hNZWRpYSIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImNhbGxiYWNrIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJpZCIsImdldFdpbmRvdyIsIndpbiIsIndpbmRvdyIsIl9nZXRQcm90b3R5cGVPZiIsIm8iLCJzZXRQcm90b3R5cGVPZiIsImdldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiX3NldFByb3RvdHlwZU9mIiwicCIsIl9jb25zdHJ1Y3QiLCJQYXJlbnQiLCJhcmdzIiwiQ2xhc3MiLCJSZWZsZWN0IiwiY29uc3RydWN0Iiwic2hhbSIsIlByb3h5IiwidG9TdHJpbmciLCJlIiwiX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCIsImEiLCJwdXNoIiwiaW5zdGFuY2UiLCJGdW5jdGlvbiIsImJpbmQiLCJfd3JhcE5hdGl2ZVN1cGVyIiwiX2NhY2hlIiwiTWFwIiwidW5kZWZpbmVkIiwiZm4iLCJpbmRleE9mIiwiVHlwZUVycm9yIiwiaGFzIiwiZ2V0Iiwic2V0IiwiV3JhcHBlciIsImNyZWF0ZSIsInZhbHVlIiwiRG9tNyIsIl9BcnJheSIsInN1YkNsYXNzIiwic3VwZXJDbGFzcyIsIml0ZW1zIiwicHJvdG8iLCJfdGhpcyIsImNvbmNhdCIsIlJlZmVyZW5jZUVycm9yIiwiX2Fzc2VydFRoaXNJbml0aWFsaXplZCIsIkFycmF5IiwiYXJyYXlGbGF0IiwiYXJyIiwicmVzIiwiZWwiLCJpc0FycmF5IiwiYXJyYXlGaWx0ZXIiLCJmaWx0ZXIiLCIkIiwic2VsZWN0b3IiLCJjb250ZXh0IiwiaHRtbCIsInRyaW0iLCJ0b0NyZWF0ZSIsInRlbXBQYXJlbnQiLCJpbm5lckhUTUwiLCJxc2EiLCJub2RlVHlwZSIsInVuaXF1ZUFycmF5IiwiYXJyYXlVbmlxdWUiLCJzdXBwb3J0IiwiZGV2aWNlIiwiYnJvd3NlciIsIk1ldGhvZHMiLCJhZGRDbGFzcyIsIl9sZW4iLCJjbGFzc2VzIiwiX2tleSIsImNsYXNzTmFtZXMiLCJtYXAiLCJjIiwic3BsaXQiLCJfZWwkY2xhc3NMaXN0IiwiY2xhc3NMaXN0IiwiYWRkIiwicmVtb3ZlQ2xhc3MiLCJfbGVuMiIsIl9rZXkyIiwiX2VsJGNsYXNzTGlzdDIiLCJyZW1vdmUiLCJoYXNDbGFzcyIsIl9sZW40IiwiX2tleTQiLCJjbGFzc05hbWUiLCJjb250YWlucyIsInRvZ2dsZUNsYXNzIiwiX2xlbjMiLCJfa2V5MyIsInRvZ2dsZSIsImF0dHIiLCJhdHRycyIsImdldEF0dHJpYnV0ZSIsImF0dHJOYW1lIiwicmVtb3ZlQXR0ciIsInJlbW92ZUF0dHJpYnV0ZSIsInRyYW5zZm9ybSIsInRyYW5zaXRpb24iLCJkdXJhdGlvbiIsIm9uIiwiX2xlbjUiLCJfa2V5NSIsImV2ZW50VHlwZSIsInRhcmdldFNlbGVjdG9yIiwibGlzdGVuZXIiLCJjYXB0dXJlIiwiaGFuZGxlTGl2ZUV2ZW50IiwiZXZlbnREYXRhIiwiZG9tN0V2ZW50RGF0YSIsInVuc2hpZnQiLCJpcyIsIl9wYXJlbnRzIiwicGFyZW50cyIsImsiLCJoYW5kbGVFdmVudCIsImoiLCJldmVudHMiLCJfZXZlbnQiLCJkb203TGl2ZUxpc3RlbmVycyIsInByb3h5TGlzdGVuZXIiLCJldmVudCIsImRvbTdMaXN0ZW5lcnMiLCJvZmYiLCJfbGVuNiIsIl9rZXk2IiwiaGFuZGxlcnMiLCJoYW5kbGVyIiwiZG9tN3Byb3h5Iiwic3BsaWNlIiwidHJpZ2dlciIsIl9sZW45IiwiX2tleTkiLCJldnQiLCJkZXRhaWwiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsImRhdGEiLCJkYXRhSW5kZXgiLCJkaXNwYXRjaEV2ZW50IiwidHJhbnNpdGlvbkVuZCIsImRvbSIsImZpcmVDYWxsQmFjayIsIm91dGVyV2lkdGgiLCJpbmNsdWRlTWFyZ2lucyIsIl9zdHlsZXMiLCJzdHlsZXMiLCJvZmZzZXRXaWR0aCIsInBhcnNlRmxvYXQiLCJvdXRlckhlaWdodCIsIl9zdHlsZXMyIiwib2Zmc2V0SGVpZ2h0Iiwib2Zmc2V0IiwiYm94IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwiY2xpZW50VG9wIiwiY2xpZW50TGVmdCIsInNjcm9sbFRvcCIsInNjcm9sbFkiLCJzY3JvbGxMZWZ0Iiwic2Nyb2xsWCIsInRvcCIsImxlZnQiLCJjc3MiLCJfcHJvcCIsImVhY2giLCJpbmRleCIsInRleHQiLCJ0ZXh0Q29udGVudCIsImNvbXBhcmVXaXRoIiwibWF0Y2hlcyIsIndlYmtpdE1hdGNoZXNTZWxlY3RvciIsIm1zTWF0Y2hlc1NlbGVjdG9yIiwiY2hpbGQiLCJwcmV2aW91c1NpYmxpbmciLCJlcSIsInJldHVybkluZGV4IiwiYXBwZW5kIiwibmV3Q2hpbGQiLCJ0ZW1wRGl2IiwiZmlyc3RDaGlsZCIsImFwcGVuZENoaWxkIiwicHJlcGVuZCIsImluc2VydEJlZm9yZSIsIm5leHQiLCJuZXh0RWxlbWVudFNpYmxpbmciLCJuZXh0QWxsIiwibmV4dEVscyIsIl9uZXh0IiwicHJldiIsInByZXZpb3VzRWxlbWVudFNpYmxpbmciLCJwcmV2QWxsIiwicHJldkVscyIsIl9wcmV2IiwicGFyZW50IiwicGFyZW50Tm9kZSIsIl9wYXJlbnQiLCJjbG9zZXN0IiwiZmluZCIsImZvdW5kRWxlbWVudHMiLCJmb3VuZCIsInJlbW92ZUNoaWxkIiwibmV4dFRpY2siLCJkZWxheSIsIm5vdyIsImdldFRyYW5zbGF0ZSIsImF4aXMiLCJtYXRyaXgiLCJjdXJUcmFuc2Zvcm0iLCJ0cmFuc2Zvcm1NYXRyaXgiLCJjdXJTdHlsZSIsIldlYktpdENTU01hdHJpeCIsIndlYmtpdFRyYW5zZm9ybSIsInJlcGxhY2UiLCJqb2luIiwiTW96VHJhbnNmb3JtIiwiT1RyYW5zZm9ybSIsIk1zVHJhbnNmb3JtIiwibXNUcmFuc2Zvcm0iLCJtNDEiLCJtNDIiLCJpc09iamVjdCQxIiwiZXh0ZW5kJDEiLCJ0byIsIm5leHRTb3VyY2UiLCJrZXlzQXJyYXkiLCJuZXh0SW5kZXgiLCJsZW4iLCJuZXh0S2V5IiwiZGVzYyIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImJpbmRNb2R1bGVNZXRob2RzIiwic3ViS2V5IiwiZ2V0U3VwcG9ydCIsInRvdWNoIiwiRG9jdW1lbnRUb3VjaCIsInBvaW50ZXJFdmVudHMiLCJQb2ludGVyRXZlbnQiLCJtYXhUb3VjaFBvaW50cyIsIm9ic2VydmVyIiwicGFzc2l2ZUxpc3RlbmVyIiwic3VwcG9ydHNQYXNzaXZlIiwib3B0cyIsImdlc3R1cmVzIiwiZ2V0RGV2aWNlIiwib3ZlcnJpZGVzIiwiX3RlbXAiLCJwbGF0Zm9ybSIsInVhIiwic2NyZWVuV2lkdGgiLCJzY3JlZW5IZWlnaHQiLCJhbmRyb2lkIiwiaXBhZCIsImlwb2QiLCJpcGhvbmUiLCJ3aW5kb3dzIiwibWFjb3MiLCJpb3MiLCJ3aWR0aCIsImhlaWdodCIsIm1hdGNoIiwib3MiLCJnZXRCcm93c2VyIiwiaXNFZGdlIiwiaXNTYWZhcmkiLCJ0b0xvd2VyQ2FzZSIsImlzV2ViVmlldyIsInRlc3QiLCJtZXRob2ROYW1lIiwiUmVzaXplIiwibmFtZSIsInN3aXBlciIsInJlc2l6ZSIsInJlc2l6ZUhhbmRsZXIiLCJkZXN0cm95ZWQiLCJpbml0aWFsaXplZCIsImVtaXQiLCJvcmllbnRhdGlvbkNoYW5nZUhhbmRsZXIiLCJpbml0IiwiZGVzdHJveSIsIk9ic2VydmVyIiwiYXR0YWNoIiwib3B0aW9ucyIsIk11dGF0aW9uT2JzZXJ2ZXIiLCJXZWJraXRNdXRhdGlvbk9ic2VydmVyIiwibXV0YXRpb25zIiwib2JzZXJ2ZXJVcGRhdGUiLCJvYnNlcnZlIiwiYXR0cmlidXRlcyIsImNoaWxkTGlzdCIsImNoYXJhY3RlckRhdGEiLCJvYnNlcnZlcnMiLCJwYXJhbXMiLCJvYnNlcnZlUGFyZW50cyIsImNvbnRhaW5lclBhcmVudHMiLCIkZWwiLCJvYnNlcnZlU2xpZGVDaGlsZHJlbiIsIiR3cmFwcGVyRWwiLCJkaXNjb25uZWN0IiwiT2JzZXJ2ZXIkMSIsIm9uUmVzaXplIiwiYWxsb3dTbGlkZU5leHQiLCJhbGxvd1NsaWRlUHJldiIsInNuYXBHcmlkIiwiYnJlYWtwb2ludHMiLCJzZXRCcmVha3BvaW50IiwidXBkYXRlU2l6ZSIsInVwZGF0ZVNsaWRlcyIsInVwZGF0ZVNsaWRlc0NsYXNzZXMiLCJzbGlkZXNQZXJWaWV3IiwiaXNFbmQiLCJpc0JlZ2lubmluZyIsImNlbnRlcmVkU2xpZGVzIiwic2xpZGVUbyIsInNsaWRlcyIsImFjdGl2ZUluZGV4IiwiYXV0b3BsYXkiLCJydW5uaW5nIiwicGF1c2VkIiwicnVuIiwid2F0Y2hPdmVyZmxvdyIsImNoZWNrT3ZlcmZsb3ciLCJkdW1teUV2ZW50QXR0YWNoZWQiLCJkdW1teUV2ZW50TGlzdGVuZXIiLCJkZWZhdWx0cyIsImRpcmVjdGlvbiIsInRvdWNoRXZlbnRzVGFyZ2V0IiwiaW5pdGlhbFNsaWRlIiwic3BlZWQiLCJjc3NNb2RlIiwidXBkYXRlT25XaW5kb3dSZXNpemUiLCJwcmV2ZW50SW50ZXJhY3Rpb25PblRyYW5zaXRpb24iLCJ1cmwiLCJlZGdlU3dpcGVEZXRlY3Rpb24iLCJlZGdlU3dpcGVUaHJlc2hvbGQiLCJmcmVlTW9kZSIsImZyZWVNb2RlTW9tZW50dW0iLCJmcmVlTW9kZU1vbWVudHVtUmF0aW8iLCJmcmVlTW9kZU1vbWVudHVtQm91bmNlIiwiZnJlZU1vZGVNb21lbnR1bUJvdW5jZVJhdGlvIiwiZnJlZU1vZGVNb21lbnR1bVZlbG9jaXR5UmF0aW8iLCJmcmVlTW9kZVN0aWNreSIsImZyZWVNb2RlTWluaW11bVZlbG9jaXR5IiwiYXV0b0hlaWdodCIsInNldFdyYXBwZXJTaXplIiwidmlydHVhbFRyYW5zbGF0ZSIsImVmZmVjdCIsInNwYWNlQmV0d2VlbiIsInNsaWRlc1BlckNvbHVtbiIsInNsaWRlc1BlckNvbHVtbkZpbGwiLCJzbGlkZXNQZXJHcm91cCIsInNsaWRlc1Blckdyb3VwU2tpcCIsImNlbnRlcmVkU2xpZGVzQm91bmRzIiwic2xpZGVzT2Zmc2V0QmVmb3JlIiwic2xpZGVzT2Zmc2V0QWZ0ZXIiLCJub3JtYWxpemVTbGlkZUluZGV4IiwiY2VudGVySW5zdWZmaWNpZW50U2xpZGVzIiwicm91bmRMZW5ndGhzIiwidG91Y2hSYXRpbyIsInRvdWNoQW5nbGUiLCJzaW11bGF0ZVRvdWNoIiwic2hvcnRTd2lwZXMiLCJsb25nU3dpcGVzIiwibG9uZ1N3aXBlc1JhdGlvIiwibG9uZ1N3aXBlc01zIiwiZm9sbG93RmluZ2VyIiwiYWxsb3dUb3VjaE1vdmUiLCJ0aHJlc2hvbGQiLCJ0b3VjaE1vdmVTdG9wUHJvcGFnYXRpb24iLCJ0b3VjaFN0YXJ0UHJldmVudERlZmF1bHQiLCJ0b3VjaFN0YXJ0Rm9yY2VQcmV2ZW50RGVmYXVsdCIsInRvdWNoUmVsZWFzZU9uRWRnZXMiLCJ1bmlxdWVOYXZFbGVtZW50cyIsInJlc2lzdGFuY2UiLCJyZXNpc3RhbmNlUmF0aW8iLCJ3YXRjaFNsaWRlc1Byb2dyZXNzIiwid2F0Y2hTbGlkZXNWaXNpYmlsaXR5IiwiZ3JhYkN1cnNvciIsInByZXZlbnRDbGlja3MiLCJwcmV2ZW50Q2xpY2tzUHJvcGFnYXRpb24iLCJzbGlkZVRvQ2xpY2tlZFNsaWRlIiwicHJlbG9hZEltYWdlcyIsInVwZGF0ZU9uSW1hZ2VzUmVhZHkiLCJsb29wIiwibG9vcEFkZGl0aW9uYWxTbGlkZXMiLCJsb29wZWRTbGlkZXMiLCJsb29wRmlsbEdyb3VwV2l0aEJsYW5rIiwibG9vcFByZXZlbnRzU2xpZGUiLCJzd2lwZUhhbmRsZXIiLCJub1N3aXBpbmciLCJub1N3aXBpbmdDbGFzcyIsIm5vU3dpcGluZ1NlbGVjdG9yIiwicGFzc2l2ZUxpc3RlbmVycyIsImNvbnRhaW5lck1vZGlmaWVyQ2xhc3MiLCJzbGlkZUNsYXNzIiwic2xpZGVCbGFua0NsYXNzIiwic2xpZGVBY3RpdmVDbGFzcyIsInNsaWRlRHVwbGljYXRlQWN0aXZlQ2xhc3MiLCJzbGlkZVZpc2libGVDbGFzcyIsInNsaWRlRHVwbGljYXRlQ2xhc3MiLCJzbGlkZU5leHRDbGFzcyIsInNsaWRlRHVwbGljYXRlTmV4dENsYXNzIiwic2xpZGVQcmV2Q2xhc3MiLCJzbGlkZUR1cGxpY2F0ZVByZXZDbGFzcyIsIndyYXBwZXJDbGFzcyIsInJ1bkNhbGxiYWNrc09uSW5pdCIsIl9lbWl0Q2xhc3NlcyIsInByb3RvdHlwZXMiLCJtb2R1bGFyIiwidXNlUGFyYW1zIiwiaW5zdGFuY2VQYXJhbXMiLCJtb2R1bGVzIiwibW9kdWxlTmFtZSIsInVzZU1vZHVsZXMiLCJtb2R1bGVzUGFyYW1zIiwibW9kdWxlUGFyYW1zIiwibW9kdWxlRXZlbnROYW1lIiwiZXZlbnRzRW1pdHRlciIsInByaW9yaXR5IiwibWV0aG9kIiwiZXZlbnRzTGlzdGVuZXJzIiwib25jZSIsIm9uY2VIYW5kbGVyIiwiX19lbWl0dGVyUHJveHkiLCJvbkFueSIsImV2ZW50c0FueUxpc3RlbmVycyIsIm9mZkFueSIsImV2ZW50SGFuZGxlciIsInNsaWNlIiwidXBkYXRlIiwiY2xpZW50V2lkdGgiLCJjbGllbnRIZWlnaHQiLCJpc0hvcml6b250YWwiLCJpc1ZlcnRpY2FsIiwicGFyc2VJbnQiLCJOdW1iZXIiLCJpc05hTiIsInNpemUiLCJzd2lwZXJTaXplIiwicnRsIiwicnRsVHJhbnNsYXRlIiwid3JvbmdSVEwiLCJpc1ZpcnR1YWwiLCJ2aXJ0dWFsIiwiZW5hYmxlZCIsInByZXZpb3VzU2xpZGVzTGVuZ3RoIiwic2xpZGVzTGVuZ3RoIiwic2xpZGVzR3JpZCIsInNsaWRlc1NpemVzR3JpZCIsInNsaWRlc0Zvck1hcmdpbiIsInNsaWRlRWwiLCJzbGlkZUluZGV4Iiwib2Zmc2V0QmVmb3JlIiwib2Zmc2V0QWZ0ZXIiLCJzbGlkZXNOdW1iZXJFdmVuVG9Sb3dzIiwicHJldmlvdXNTbmFwR3JpZExlbmd0aCIsInByZXZpb3VzU2xpZGVzR3JpZExlbmd0aCIsInNsaWRlUG9zaXRpb24iLCJwcmV2U2xpZGVTaXplIiwidmlydHVhbFNpemUiLCJtYXJnaW5MZWZ0IiwibWFyZ2luVG9wIiwibWFyZ2luUmlnaHQiLCJtYXJnaW5Cb3R0b20iLCJNYXRoIiwiZmxvb3IiLCJjZWlsIiwibWF4IiwibmV3U2xpZGVzR3JpZCIsImFsbFNsaWRlc1NpemUiLCJtYXhTbmFwIiwiX2FsbFNsaWRlc1NpemUiLCJhbGxTbGlkZXNPZmZzZXQiLCJzbGlkZXNQZXJSb3ciLCJudW1GdWxsQ29sdW1ucyIsInNsaWRlU2l6ZSIsImdyb3VwSW5kZXgiLCJzbGlkZUluZGV4SW5Hcm91cCIsImNvbHVtbnNJbkdyb3VwIiwicm93IiwiY29sdW1uIiwibmV3U2xpZGVPcmRlckluZGV4Iiwic2xpZGVTdHlsZXMiLCJjdXJyZW50VHJhbnNmb3JtIiwiY3VycmVudFdlYktpdFRyYW5zZm9ybSIsInBhZGRpbmdMZWZ0IiwicGFkZGluZ1JpZ2h0IiwiYm94U2l6aW5nIiwicGFkZGluZ1RvcCIsInBhZGRpbmdCb3R0b20iLCJfYm94U2l6aW5nIiwic2xpZGUiLCJtaW4iLCItd2Via2l0LWJveC1vcmRpbmFsLWdyb3VwIiwiLW1vei1ib3gtb3JkaW5hbC1ncm91cCIsIi1tcy1mbGV4LW9yZGVyIiwiLXdlYmtpdC1vcmRlciIsIm9yZGVyIiwic3dpcGVyU2xpZGVTaXplIiwiYWJzIiwiX2kiLCJzbGlkZXNHcmlkSXRlbSIsIl9pMiIsIl9zbGlkZXNHcmlkSXRlbSIsInNsaWRlU2l6ZVZhbHVlIiwic25hcCIsInNuYXBJbmRleCIsInVwZGF0ZVNsaWRlc09mZnNldCIsInVwZGF0ZUF1dG9IZWlnaHQiLCJhY3RpdmVTbGlkZXMiLCJuZXdIZWlnaHQiLCJzZXRUcmFuc2l0aW9uIiwidmlzaWJsZVNsaWRlcyIsInN3aXBlclNsaWRlT2Zmc2V0Iiwib2Zmc2V0TGVmdCIsIm9mZnNldFRvcCIsInVwZGF0ZVNsaWRlc1Byb2dyZXNzIiwidHJhbnNsYXRlIiwib2Zmc2V0Q2VudGVyIiwidmlzaWJsZVNsaWRlc0luZGV4ZXMiLCJzbGlkZUJlZm9yZSIsInNsaWRlQWZ0ZXIiLCJzbGlkZVByb2dyZXNzIiwibWluVHJhbnNsYXRlIiwicHJvZ3Jlc3MiLCJ1cGRhdGVQcm9ncmVzcyIsIm11bHRpcGxpZXIiLCJ0cmFuc2xhdGVzRGlmZiIsIm1heFRyYW5zbGF0ZSIsIndhc0JlZ2lubmluZyIsIndhc0VuZCIsImFjdGl2ZVNsaWRlIiwicmVhbEluZGV4IiwibmV4dFNsaWRlIiwicHJldlNsaWRlIiwiZW1pdFNsaWRlc0NsYXNzZXMiLCJ1cGRhdGVBY3RpdmVJbmRleCIsIm5ld0FjdGl2ZUluZGV4Iiwic2tpcCIsInByZXZpb3VzSW5kZXgiLCJwcmV2aW91c1JlYWxJbmRleCIsInByZXZpb3VzU25hcEluZGV4IiwidXBkYXRlQ2xpY2tlZFNsaWRlIiwic2xpZGVGb3VuZCIsImNsaWNrZWRTbGlkZSIsImNsaWNrZWRJbmRleCIsImN1cnJlbnRUcmFuc2xhdGUiLCJzZXRUcmFuc2xhdGUiLCJieUNvbnRyb2xsZXIiLCJ3cmFwcGVyRWwiLCJ4IiwieSIsInByZXZpb3VzVHJhbnNsYXRlIiwidHJhbnNsYXRlVG8iLCJydW5DYWxsYmFja3MiLCJ0cmFuc2xhdGVCb3VuZHMiLCJpbnRlcm5hbCIsImFuaW1hdGluZyIsIm5ld1RyYW5zbGF0ZSIsIl93cmFwcGVyRWwkc2Nyb2xsVG8iLCJpc0giLCJzY3JvbGxUbyIsImJlaGF2aW9yIiwib25UcmFuc2xhdGVUb1dyYXBwZXJUcmFuc2l0aW9uRW5kIiwidHJhbnNpdGlvblN0YXJ0IiwiZGlyIiwidCIsInNjcm9sbFdpZHRoIiwib25TbGlkZVRvV3JhcHBlclRyYW5zaXRpb25FbmQiLCJzbGlkZVRvTG9vcCIsIm5ld0luZGV4Iiwic2xpZGVOZXh0IiwiaW5jcmVtZW50IiwibG9vcEZpeCIsIl9jbGllbnRMZWZ0Iiwic2xpZGVQcmV2Iiwibm9ybWFsaXplIiwidmFsIiwicHJldkluZGV4Iiwibm9ybWFsaXplZFRyYW5zbGF0ZSIsIm5vcm1hbGl6ZWRTbmFwR3JpZCIsInByZXZTbmFwIiwic2xpZGVSZXNldCIsInNsaWRlVG9DbG9zZXN0IiwiY3VycmVudFNuYXAiLCJzbGlkZXNQZXJWaWV3RHluYW1pYyIsInNsaWRlVG9JbmRleCIsImxvb3BDcmVhdGUiLCJibGFua1NsaWRlc051bSIsImJsYW5rTm9kZSIsInByZXBlbmRTbGlkZXMiLCJhcHBlbmRTbGlkZXMiLCJjbG9uZU5vZGUiLCJkaWZmIiwibG9vcERlc3Ryb3kiLCJzZXRHcmFiQ3Vyc29yIiwibW92aW5nIiwiaXNMb2NrZWQiLCJjdXJzb3IiLCJ1bnNldEdyYWJDdXJzb3IiLCJtYW5pcHVsYXRpb24iLCJhcHBlbmRTbGlkZSIsInByZXBlbmRTbGlkZSIsImFkZFNsaWRlIiwiYWN0aXZlSW5kZXhCdWZmZXIiLCJiYXNlTGVuZ3RoIiwic2xpZGVzQnVmZmVyIiwiY3VycmVudFNsaWRlIiwicmVtb3ZlU2xpZGUiLCJzbGlkZXNJbmRleGVzIiwiaW5kZXhUb1JlbW92ZSIsInJlbW92ZUFsbFNsaWRlcyIsImF0dGFjaEV2ZW50cyIsInRvdWNoRXZlbnRzIiwib25Ub3VjaFN0YXJ0IiwiJHRhcmdldEVsIiwic3RhcnRYIiwic3RhcnRZIiwicHJldmVudERlZmF1bHQiLCJzaG91bGRQcmV2ZW50RGVmYXVsdCIsInRvdWNoRXZlbnRzRGF0YSIsInRvdWNoZXMiLCJvcmlnaW5hbEV2ZW50IiwiaXNUb3VjaEV2ZW50IiwidHlwZSIsIndoaWNoIiwiYnV0dG9uIiwiaXNUb3VjaGVkIiwiaXNNb3ZlZCIsImFsbG93Q2xpY2siLCJjdXJyZW50WCIsInRhcmdldFRvdWNoZXMiLCJwYWdlWCIsImN1cnJlbnRZIiwicGFnZVkiLCJpT1NFZGdlU3dpcGVEZXRlY3Rpb24iLCJpT1NFZGdlU3dpcGVUaHJlc2hvbGQiLCJhbGxvd1RvdWNoQ2FsbGJhY2tzIiwiaXNTY3JvbGxpbmciLCJzdGFydE1vdmluZyIsInRvdWNoU3RhcnRUaW1lIiwic3dpcGVEaXJlY3Rpb24iLCJhbGxvd1RocmVzaG9sZE1vdmUiLCJmb3JtRWxlbWVudHMiLCJvblRvdWNoTW92ZSIsInRhcmdldFRvdWNoIiwiY2hhbmdlZFRvdWNoZXMiLCJwcmV2ZW50ZWRCeU5lc3RlZFN3aXBlciIsImRpZmZYIiwiZGlmZlkiLCJzcXJ0IiwicG93IiwiYXRhbjIiLCJQSSIsIm5lc3RlZCIsInN0b3BQcm9wYWdhdGlvbiIsInN0YXJ0VHJhbnNsYXRlIiwiYWxsb3dNb21lbnR1bUJvdW5jZSIsImRpc2FibGVQYXJlbnRTd2lwZXIiLCJ2ZWxvY2l0aWVzIiwicG9zaXRpb24iLCJ0aW1lIiwib25Ub3VjaEVuZCIsImN1cnJlbnRQb3MiLCJsYXN0TW92ZUV2ZW50IiwidmVsb2NpdHlFdmVudCIsImRpc3RhbmNlIiwidG91Y2hFbmRUaW1lIiwidGltZURpZmYiLCJsYXN0Q2xpY2tUaW1lIiwicG9wIiwidmVsb2NpdHkiLCJtb21lbnR1bUR1cmF0aW9uIiwibW9tZW50dW1EaXN0YW5jZSIsIm5ld1Bvc2l0aW9uIiwiYWZ0ZXJCb3VuY2VQb3NpdGlvbiIsIm5lZWRzTG9vcEZpeCIsIm1vdmVEaXN0YW5jZSIsImN1cnJlbnRTbGlkZVNpemUiLCJkb0JvdW5jZSIsImJvdW5jZUFtb3VudCIsInN0b3BJbmRleCIsImdyb3VwU2l6ZSIsIl9pbmNyZW1lbnQiLCJyYXRpbyIsIm5hdmlnYXRpb24iLCJuZXh0RWwiLCJwcmV2RWwiLCJvblNjcm9sbCIsIm9uQ2xpY2siLCJzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24iLCJzdGFydCIsIm1vdmUiLCJlbmQiLCJwYXNzaXZlIiwiY2FuY2VsIiwiZGV0YWNoRXZlbnRzIiwiYnJlYWtwb2ludCIsImJyZWFrcG9pbnRPbmx5UGFyYW1zIiwiYnJlYWtwb2ludFBhcmFtcyIsIndhc011bHRpUm93IiwiaXNNdWx0aVJvdyIsImRpcmVjdGlvbkNoYW5nZWQiLCJuZWVkc1JlTG9vcCIsIl9zd2lwZXIkbG9vcGVkU2xpZGVzIiwiZ2V0QnJlYWtwb2ludCIsImN1cnJlbnRCcmVha3BvaW50IiwicGFyYW0iLCJwYXJhbVZhbHVlIiwib3JpZ2luYWxQYXJhbXMiLCJlbWl0Q29udGFpbmVyQ2xhc3NlcyIsImNoYW5nZURpcmVjdGlvbiIsInBvaW50cyIsInBvaW50IiwibWluUmF0aW8iLCJzdWJzdHIiLCJpbm5lckhlaWdodCIsInNvcnQiLCJiIiwiX3BvaW50cyRpIiwiaW5uZXJXaWR0aCIsIndhc0xvY2tlZCIsImxhc3RTbGlkZVBvc2l0aW9uIiwiYWRkQ2xhc3NlcyIsInN1ZmZpeGVzIiwic3VmZml4IiwicmVtb3ZlQ2xhc3NlcyIsImltYWdlcyIsImxvYWRJbWFnZSIsImltYWdlRWwiLCJzcmNzZXQiLCJzaXplcyIsImNoZWNrRm9yQ29tcGxldGUiLCJpbWFnZSIsIm9uUmVhZHkiLCJjb21wbGV0ZSIsIm9ubG9hZCIsIm9uZXJyb3IiLCJpbWFnZXNMb2FkZWQiLCJpbWFnZXNUb0xvYWQiLCJjdXJyZW50U3JjIiwiZXh0ZW5kZWREZWZhdWx0cyIsIm1vZHVsZVBhcmFtTmFtZSIsInN3aXBlclBhcmFtcyIsInBhc3NlZFBhcmFtcyIsImV2ZW50TmFtZSIsImRlc2t0b3AiLCJzd2lwZXJzIiwiY29udGFpbmVyRWwiLCJuZXdQYXJhbXMiLCJzaGFkb3dSb290IiwidG91Y2hFdmVudHNUb3VjaCIsInRvdWNoRXZlbnRzRGVza3RvcCIsImNsaWNrVGltZW91dCIsIkNvbnN0cnVjdG9yIiwicHJvdG9Qcm9wcyIsInN0YXRpY1Byb3BzIiwiX3Byb3RvIiwic3B2IiwiYnJlYWtMb29wIiwidHJhbnNsYXRlVmFsdWUiLCJuZXdEaXJlY3Rpb24iLCJuZWVkVXBkYXRlIiwiY3VycmVudERpcmVjdGlvbiIsImRlbGV0ZUluc3RhbmNlIiwiY2xlYW5TdHlsZXMiLCJvYmplY3QiLCJleHRlbmREZWZhdWx0cyIsIm5ld0RlZmF1bHRzIiwiaW5zdGFsbE1vZHVsZSIsInVzZSIsIm0iLCJwcm90b3R5cGVHcm91cCIsInByb3RvTWV0aG9kIiwiVmlydHVhbCIsImZvcmNlIiwiX3N3aXBlciRwYXJhbXMiLCJfc3dpcGVyJHBhcmFtcyR2aXJ0dWEiLCJhZGRTbGlkZXNCZWZvcmUiLCJhZGRTbGlkZXNBZnRlciIsIl9zd2lwZXIkdmlydHVhbCIsInByZXZpb3VzRnJvbSIsImZyb20iLCJwcmV2aW91c1RvIiwicHJldmlvdXNTbGlkZXNHcmlkIiwicmVuZGVyU2xpZGUiLCJwcmV2aW91c09mZnNldCIsInNsaWRlc0FmdGVyIiwib2Zmc2V0UHJvcCIsInNsaWRlc0JlZm9yZSIsIm9uUmVuZGVyZWQiLCJsYXp5IiwibG9hZCIsInJlbmRlckV4dGVybmFsIiwic2xpZGVzVG9SZW5kZXIiLCJyZW5kZXJFeHRlcm5hbFVwZGF0ZSIsInByZXBlbmRJbmRleGVzIiwiYXBwZW5kSW5kZXhlcyIsImNhY2hlIiwiJHNsaWRlRWwiLCJuZXdDYWNoZSIsIm51bWJlck9mTmV3U2xpZGVzIiwiY2FjaGVkSW5kZXgiLCIkY2FjaGVkRWwiLCJjYWNoZWRFbEluZGV4IiwiVmlydHVhbCQxIiwiYmVmb3JlSW5pdCIsIm92ZXJ3cml0ZVBhcmFtcyIsIktleWJvYXJkIiwiaGFuZGxlIiwia2MiLCJrZXlDb2RlIiwiY2hhckNvZGUiLCJwYWdlVXBEb3duIiwia2V5Ym9hcmQiLCJpc1BhZ2VVcCIsImlzUGFnZURvd24iLCJpc0Fycm93TGVmdCIsImlzQXJyb3dSaWdodCIsImlzQXJyb3dVcCIsImlzQXJyb3dEb3duIiwic2hpZnRLZXkiLCJhbHRLZXkiLCJjdHJsS2V5IiwibWV0YUtleSIsIm9ubHlJblZpZXdwb3J0IiwiaW5WaWV3Iiwid2luZG93V2lkdGgiLCJ3aW5kb3dIZWlnaHQiLCJzd2lwZXJPZmZzZXQiLCJzd2lwZXJDb29yZCIsInJldHVyblZhbHVlIiwiZW5hYmxlIiwiZGlzYWJsZSIsIktleWJvYXJkJDEiLCJNb3VzZXdoZWVsIiwibGFzdFNjcm9sbFRpbWUiLCJsYXN0RXZlbnRCZWZvcmVTbmFwIiwicmVjZW50V2hlZWxFdmVudHMiLCJlbGVtZW50IiwiaXNTdXBwb3J0ZWQiLCJpbXBsZW1lbnRhdGlvbiIsImhhc0ZlYXR1cmUiLCJzWCIsInNZIiwicFgiLCJwWSIsIndoZWVsRGVsdGEiLCJ3aGVlbERlbHRhWSIsIndoZWVsRGVsdGFYIiwiSE9SSVpPTlRBTF9BWElTIiwiZGVsdGFZIiwiZGVsdGFYIiwiZGVsdGFNb2RlIiwic3BpblgiLCJzcGluWSIsInBpeGVsWCIsInBpeGVsWSIsImhhbmRsZU1vdXNlRW50ZXIiLCJtb3VzZUVudGVyZWQiLCJoYW5kbGVNb3VzZUxlYXZlIiwibW91c2V3aGVlbCIsImV2ZW50c1RhcmdldCIsInJlbGVhc2VPbkVkZ2VzIiwiZGVsdGEiLCJydGxGYWN0b3IiLCJmb3JjZVRvQXhpcyIsImludmVydCIsIl9uZXdFdmVudCIsInNpZ24iLCJpZ25vcmVXaGVlbEV2ZW50cyIsIl9yZWNlbnRXaGVlbEV2ZW50cyIsIl9wcmV2RXZlbnQiLCJmaXJzdEV2ZW50Iiwic25hcFRvVGhyZXNob2xkIiwic2Vuc2l0aXZpdHkiLCJ0aW1lb3V0Iiwic2hpZnQiLCJhdXRvcGxheURpc2FibGVPbkludGVyYWN0aW9uIiwic3RvcCIsIm5ld0V2ZW50IiwicmF3IiwicHJldkV2ZW50IiwiYW5pbWF0ZVNsaWRlciIsInJlbGVhc2VTY3JvbGwiLCJ0aHJlc2hvbGREZWx0YSIsInRocmVzaG9sZFRpbWUiLCJnZXRUaW1lIiwiTmF2aWdhdGlvbiIsIl9zd2lwZXIkbmF2aWdhdGlvbiIsIiRuZXh0RWwiLCIkcHJldkVsIiwiZGlzYWJsZWRDbGFzcyIsImxvY2tDbGFzcyIsIm9uUHJldkNsaWNrIiwib25OZXh0Q2xpY2siLCJfc3dpcGVyJG5hdmlnYXRpb24yIiwiUGFnaW5hdGlvbiIsInBhZ2luYXRpb24iLCJjdXJyZW50IiwicHJvZ3Jlc3NiYXJEaXJlY3Rpb24iLCJzY2FsZSIsInNjYWxlWCIsInNjYWxlWSIsInRvdGFsIiwicGFnaW5hdGlvblR5cGUiLCJidWxsZXRzIiwiZmlyc3RJbmRleCIsImxhc3RJbmRleCIsIm1pZEluZGV4IiwiZHluYW1pY0J1bGxldHNMZW5ndGgiLCJidWxsZXRzT2Zmc2V0IiwiZHluYW1pY0J1bGxldHMiLCJidWxsZXRTaXplIiwiZHluYW1pY01haW5CdWxsZXRzIiwiZHluYW1pY0J1bGxldEluZGV4IiwiYnVsbGV0QWN0aXZlQ2xhc3MiLCJidWxsZXQiLCIkYnVsbGV0IiwiYnVsbGV0SW5kZXgiLCIkZmlyc3REaXNwbGF5ZWRCdWxsZXQiLCIkbGFzdERpc3BsYXllZEJ1bGxldCIsImN1cnJlbnRDbGFzcyIsImZvcm1hdEZyYWN0aW9uQ3VycmVudCIsInRvdGFsQ2xhc3MiLCJmb3JtYXRGcmFjdGlvblRvdGFsIiwicHJvZ3Jlc3NiYXJPcHBvc2l0ZSIsInByb2dyZXNzYmFyRmlsbENsYXNzIiwicmVuZGVyQ3VzdG9tIiwicmVuZGVyIiwicGFnaW5hdGlvbkhUTUwiLCJudW1iZXJPZkJ1bGxldHMiLCJyZW5kZXJCdWxsZXQiLCJidWxsZXRDbGFzcyIsImJ1bGxldEVsZW1lbnQiLCJyZW5kZXJGcmFjdGlvbiIsInJlbmRlclByb2dyZXNzYmFyIiwiY2xpY2thYmxlIiwiY2xpY2thYmxlQ2xhc3MiLCJtb2RpZmllckNsYXNzIiwicHJvZ3Jlc3NiYXJPcHBvc2l0ZUNsYXNzIiwiaGlkZGVuQ2xhc3MiLCJTY3JvbGxiYXIiLCJzY3JvbGxiYXIiLCJkcmFnU2l6ZSIsInRyYWNrU2l6ZSIsIiRkcmFnRWwiLCJuZXdTaXplIiwibmV3UG9zIiwiaGlkZSIsIm9wYWNpdHkiLCJkaXZpZGVyIiwibW92ZURpdmlkZXIiLCJkaXNwbGF5IiwiZ2V0UG9pbnRlclBvc2l0aW9uIiwiY2xpZW50WCIsImNsaWVudFkiLCJzZXREcmFnUG9zaXRpb24iLCJkcmFnU3RhcnRQb3MiLCJwb3NpdGlvblJhdGlvIiwib25EcmFnU3RhcnQiLCJkcmFnVGltZW91dCIsIm9uRHJhZ01vdmUiLCJvbkRyYWdFbmQiLCJzbmFwT25SZWxlYXNlIiwiZW5hYmxlRHJhZ2dhYmxlIiwiYWN0aXZlTGlzdGVuZXIiLCJkaXNhYmxlRHJhZ2dhYmxlIiwiJHN3aXBlckVsIiwiZHJhZ0NsYXNzIiwiZHJhZ0VsIiwiZHJhZ2dhYmxlIiwiUGFyYWxsYXgiLCJzZXRUcmFuc2Zvcm0iLCJjdXJyZW50T3BhY2l0eSIsImN1cnJlbnRTY2FsZSIsInBhcmFsbGF4IiwicGFyYWxsYXhFbCIsIiRwYXJhbGxheEVsIiwicGFyYWxsYXhEdXJhdGlvbiIsIlpvb20iLCJnZXREaXN0YW5jZUJldHdlZW5Ub3VjaGVzIiwieDEiLCJ5MSIsIngyIiwieTIiLCJvbkdlc3R1cmVTdGFydCIsInpvb20iLCJnZXN0dXJlIiwiZmFrZUdlc3R1cmVUb3VjaGVkIiwiZmFrZUdlc3R1cmVNb3ZlZCIsInNjYWxlU3RhcnQiLCIkaW1hZ2VFbCIsIiRpbWFnZVdyYXBFbCIsImNvbnRhaW5lckNsYXNzIiwibWF4UmF0aW8iLCJpc1NjYWxpbmciLCJvbkdlc3R1cmVDaGFuZ2UiLCJzY2FsZU1vdmUiLCJvbkdlc3R1cmVFbmQiLCJ0b3VjaGVzU3RhcnQiLCJzbGlkZVdpZHRoIiwic2xpZGVIZWlnaHQiLCJzY2FsZWRXaWR0aCIsInNjYWxlZEhlaWdodCIsIm1pblgiLCJtYXhYIiwibWluWSIsIm1heFkiLCJ0b3VjaGVzQ3VycmVudCIsInByZXZQb3NpdGlvblgiLCJwcmV2UG9zaXRpb25ZIiwicHJldlRpbWUiLCJtb21lbnR1bUR1cmF0aW9uWCIsIm1vbWVudHVtRHVyYXRpb25ZIiwibW9tZW50dW1EaXN0YW5jZVgiLCJuZXdQb3NpdGlvblgiLCJtb21lbnR1bURpc3RhbmNlWSIsIm5ld1Bvc2l0aW9uWSIsIm9uVHJhbnNpdGlvbkVuZCIsIm91dCIsImluIiwidG91Y2hYIiwidG91Y2hZIiwidHJhbnNsYXRlWCIsInRyYW5zbGF0ZVkiLCJpbWFnZVdpZHRoIiwiaW1hZ2VIZWlnaHQiLCJ0cmFuc2xhdGVNaW5YIiwidHJhbnNsYXRlTWluWSIsInRyYW5zbGF0ZU1heFgiLCJ0cmFuc2xhdGVNYXhZIiwiem9vbWVkU2xpZGVDbGFzcyIsInRvZ2dsZUdlc3R1cmVzIiwic2xpZGVTZWxlY3RvciIsImVuYWJsZUdlc3R1cmVzIiwiZ2VzdHVyZXNFbmFibGVkIiwiZGlzYWJsZUdlc3R1cmVzIiwiYWN0aXZlTGlzdGVuZXJXaXRoQ2FwdHVyZSIsIkxhenkiLCJsb2FkSW5TbGlkZSIsImxvYWRJbkR1cGxpY2F0ZSIsIiRpbWFnZXMiLCJlbGVtZW50Q2xhc3MiLCJsb2FkZWRDbGFzcyIsImxvYWRpbmdDbGFzcyIsImJhY2tncm91bmQiLCIkcGljdHVyZUVsIiwic2xpZGVPcmlnaW5hbEluZGV4Iiwib3JpZ2luYWxTbGlkZSIsImR1cGxpY2F0ZWRTbGlkZSIsInNvdXJjZUVsIiwiJHNvdXJjZSIsInByZWxvYWRlckNsYXNzIiwic2xpZGVFeGlzdCIsImluaXRpYWxJbWFnZUxvYWRlZCIsImxvYWRQcmV2TmV4dCIsImxvYWRQcmV2TmV4dEFtb3VudCIsImFtb3VudCIsIm1heEluZGV4IiwibWluSW5kZXgiLCJDb250cm9sbGVyIiwiTGluZWFyU3BsaW5lIiwiZ3Vlc3MiLCJpMSIsImkzIiwiYmluYXJ5U2VhcmNoIiwiYXJyYXkiLCJpbnRlcnBvbGF0ZSIsImdldEludGVycG9sYXRlRnVuY3Rpb24iLCJjb250cm9sbGVyIiwic3BsaW5lIiwiX3NldFRyYW5zbGF0ZSIsImNvbnRyb2xsZWRUcmFuc2xhdGUiLCJjb250cm9sbGVkIiwiY29udHJvbCIsInNldENvbnRyb2xsZWRUcmFuc2xhdGUiLCJieSIsImludmVyc2UiLCJzZXRDb250cm9sbGVkVHJhbnNpdGlvbiIsIkExMXkiLCJnZXRSYW5kb21OdW1iZXIiLCJyZXBlYXQiLCJyb3VuZCIsInJhbmRvbSIsIm1ha2VFbEZvY3VzYWJsZSIsIm1ha2VFbE5vdEZvY3VzYWJsZSIsImFkZEVsUm9sZSIsInJvbGUiLCJhZGRFbFJvbGVEZXNjcmlwdGlvbiIsImRlc2NyaXB0aW9uIiwiYWRkRWxDb250cm9scyIsImNvbnRyb2xzIiwiYWRkRWxMYWJlbCIsImxhYmVsIiwiYWRkRWxJZCIsImFkZEVsTGl2ZSIsImxpdmUiLCJkaXNhYmxlRWwiLCJlbmFibGVFbCIsIm9uRW50ZXJLZXkiLCJhMTF5Iiwibm90aWZ5IiwibGFzdFNsaWRlTWVzc2FnZSIsIm5leHRTbGlkZU1lc3NhZ2UiLCJmaXJzdFNsaWRlTWVzc2FnZSIsInByZXZTbGlkZU1lc3NhZ2UiLCJjbGljayIsIm1lc3NhZ2UiLCJub3RpZmljYXRpb24iLCJsaXZlUmVnaW9uIiwidXBkYXRlTmF2aWdhdGlvbiIsInVwZGF0ZVBhZ2luYXRpb24iLCJidWxsZXRFbCIsIiRidWxsZXRFbCIsInBhZ2luYXRpb25CdWxsZXRNZXNzYWdlIiwiJGNvbnRhaW5lckVsIiwiY29udGFpbmVyUm9sZURlc2NyaXB0aW9uTWVzc2FnZSIsImNvbnRhaW5lck1lc3NhZ2UiLCJ3cmFwcGVySWQiLCJpdGVtUm9sZURlc2NyaXB0aW9uTWVzc2FnZSIsInRhZ05hbWUiLCJIaXN0b3J5IiwiaGFzaE5hdmlnYXRpb24iLCJwYXRocyIsImdldFBhdGhWYWx1ZXMiLCJzY3JvbGxUb1NsaWRlIiwic2V0SGlzdG9yeVBvcFN0YXRlIiwidXJsT3ZlcnJpZGUiLCJVUkwiLCJwYXRoQXJyYXkiLCJwYXJ0Iiwic2V0SGlzdG9yeSIsImN1cnJlbnRTdGF0ZSIsInNsdWdpZnkiLCJpbmNsdWRlcyIsInN0YXRlIiwiSGFzaE5hdmlnYXRpb24iLCJvbkhhc2hDYW5nZSIsIm5ld0hhc2giLCJzZXRIYXNoIiwid2F0Y2hTdGF0ZSIsIkF1dG9wbGF5IiwiJGFjdGl2ZVNsaWRlRWwiLCJyZXZlcnNlRGlyZWN0aW9uIiwic3RvcE9uTGFzdFNsaWRlIiwicGF1c2UiLCJ3YWl0Rm9yVHJhbnNpdGlvbiIsIm9uVmlzaWJpbGl0eUNoYW5nZSIsInZpc2liaWxpdHlTdGF0ZSIsIkZhZGUiLCJ0eCIsInR5Iiwic2xpZGVPcGFjaXR5IiwiZmFkZUVmZmVjdCIsImNyb3NzRmFkZSIsImV2ZW50VHJpZ2dlcmVkIiwidHJpZ2dlckV2ZW50cyIsIkN1YmUiLCIkY3ViZVNoYWRvd0VsIiwic3dpcGVyV2lkdGgiLCJzd2lwZXJIZWlnaHQiLCJjdWJlRWZmZWN0Iiwid3JhcHBlclJvdGF0ZSIsInNoYWRvdyIsInNoYWRvd0FuZ2xlIiwic2NhbGUxIiwic2NhbGUyIiwic2xpZGVBbmdsZSIsInR6Iiwic2hhZG93QmVmb3JlIiwic2hhZG93QWZ0ZXIiLCJzbGlkZVNoYWRvd3MiLCItd2Via2l0LXRyYW5zZm9ybS1vcmlnaW4iLCItbW96LXRyYW5zZm9ybS1vcmlnaW4iLCItbXMtdHJhbnNmb3JtLW9yaWdpbiIsInRyYW5zZm9ybS1vcmlnaW4iLCJzaGFkb3dPZmZzZXQiLCJzaGFkb3dTY2FsZSIsInNpbiIsImNvcyIsInpGYWN0b3IiLCJGbGlwIiwiZmxpcEVmZmVjdCIsImxpbWl0Um90YXRpb24iLCJyb3RhdGVZIiwicm90YXRlWCIsInpJbmRleCIsIkNvdmVyZmxvdyIsImNvdmVyZmxvd0VmZmVjdCIsImNlbnRlciIsInJvdGF0ZSIsImRlcHRoIiwib2Zmc2V0TXVsdGlwbGllciIsIm1vZGlmaWVyIiwidHJhbnNsYXRlWiIsInN0cmV0Y2giLCIkc2hhZG93QmVmb3JlRWwiLCIkc2hhZG93QWZ0ZXJFbCIsInNsaWRlVHJhbnNmb3JtIiwiVGh1bWJzIiwidGh1bWJzUGFyYW1zIiwidGh1bWJzIiwiU3dpcGVyQ2xhc3MiLCJzd2lwZXJDcmVhdGVkIiwidGh1bWJzQ29udGFpbmVyQ2xhc3MiLCJvblRodW1iQ2xpY2siLCJjdXJyZW50SW5kZXgiLCJ0aHVtYnNTd2lwZXIiLCJzbGlkZVRodW1iQWN0aXZlQ2xhc3MiLCJpbml0aWFsIiwiY3VycmVudFRodW1ic0luZGV4IiwicHJldlRodW1ic0luZGV4IiwibmV4dFRodW1ic0luZGV4IiwibmV3VGh1bWJzSW5kZXgiLCJhdXRvU2Nyb2xsT2Zmc2V0IiwidXNlT2Zmc2V0IiwidGh1bWJzVG9BY3RpdmF0ZSIsInRodW1iQWN0aXZlQ2xhc3MiLCJtdWx0aXBsZUFjdGl2ZVRodW1icyIsImNvbXBvbmVudHMiLCJoaWRlT25DbGljayIsInRvRWRnZSIsImZyb21FZGdlIiwiaXNIaWRkZW4iLCJfc3dpcGVyJG5hdmlnYXRpb24zIiwibnVtYmVyIiwiYWN0aXZlSW5kZXhDaGFuZ2UiLCJzbmFwSW5kZXhDaGFuZ2UiLCJzbGlkZXNMZW5ndGhDaGFuZ2UiLCJzbmFwR3JpZExlbmd0aENoYW5nZSIsInRvdWNoU3RhcnQiLCJ0b3VjaEVuZCIsImRvdWJsZVRhcCIsInNsaWRlQ2hhbmdlIiwibG9hZE9uVHJhbnNpdGlvblN0YXJ0Iiwic2Nyb2xsIiwic2Nyb2xsYmFyRHJhZ01vdmUiLCJub3RpZmljYXRpb25DbGFzcyIsInBhZ2luYXRpb25VcGRhdGUiLCJkaXNhYmxlT25JbnRlcmFjdGlvbiIsImJlZm9yZVRyYW5zaXRpb25TdGFydCIsInNsaWRlckZpcnN0TW92ZSIsImJlZm9yZURlc3Ryb3kiXSwibWFwcGluZ3MiOiJDQVlDLFNBQVVBLEVBQVFDLEdBQ0UsaUJBQVpDLFNBQTBDLG9CQUFYQyxPQUF5QkEsT0FBT0QsUUFBVUQsSUFDOUQsbUJBQVhHLFFBQXlCQSxPQUFPQyxJQUFNRCxPQUFPSCxJQUNuREQsRUFBU0EsR0FBVU0sTUFBYUMsT0FBU04sSUFINUMsQ0FJRU8sS0FB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
